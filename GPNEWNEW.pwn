/* 										/|       ____
                                       / |       |
									  /  |       |
					by                   |       \
|-------                                 |       /
|                                        |  () _/
|
|------|         -------    |---|    |  \    /            ______________________
       |            |       |   |    |   \  /            (_)______
	   |            |       |----    |    \/                     (
	   |            |       |\       |    /\                     (
--------            |       | \      |   /  \                    (
																 (
				      [sTrIx]                                    (
													              \_____________
*/




new vote1 = 0;
new vote2 = 0;
new intid = 0;
new startturf = 0;
new turfattackers = 0;
new turfdefenders = 0;
new balon1;
new balon2;
new balon3;
new balon4;
new Text3D:mylabelb1;
new Text3D:mylabelb2;
new Text3D:mylabelb3;
new Text3D:mylabelb4;
new szString[128];
#define MPH_KMH 1.609344
#define COLOR_CIVILIAN           0x47474796
#define COLOR_GSF          0x00990096
#define COLOR_BALAS           0xBC0EC096
#define COLOR_VAGOS           0xDFEF1F96
#define COLOR_VIP           0x47474796
#define COLOR_AZTEC           0x00E1FF96
#define COLOR_BOYZ           0xABA9A996
#define COLOR_GPD           0x47474796
#define COLOR_AB           0x00CC9996
#define COLOR_SOA           0xCC000096
#define COLOR_BLACKMAFIA          0x1A1A1A96
#define COLOR_MS13           0x0000FF96
#define COLOR_RIFA           0x00999996
#define COLOR_YAKUZA           0x33FF9996
#define COLOR_BGM           0xFF33FF96
#define COLOR_LATNKING           0xFFCC0096
#define COLOR_FBI           0x47474796
#define COLOR_BOYS           0x8F0B0B96
#define COLOR_THUGLIFE           0x0066CC96
#define COLOR_DPK           0xFF990096
new Text3D:mylabel1;
new Text3D:mylabel2;
new Text3D:mylabel3;
new Text3D:mylabel4;
new Text3D:mylabel5;
new Text3D:mylabel6;
new Text3D:mylabel7;
new Text3D:mylabel8;
new Text3D:mylabel9;
new Text3D:mylabel10;
new Text3D:mylabel11;
new Text3D:mylabel12;
new Text3D:mylabel13;
new Text3D:mylabel14;
new Text3D:mylabel15;
new Text3D:mylabel16;
new Text3D:mylabel17;
new Text3D:mylabel18;
new Text3D:mylabel19;
new Text3D:mylabel20;
new Actor1;
new Actor2;
new Actor3;
new Actor4;
new Actor5;
new Actor6;
new Actor7;
new Actor8;
new Actor9;
new Actor10;
new Actor11;
new Actor12;
new Actor13;
//
#if defined _Included_GetVehicleColor
        #endinput
#endif

#define _Included_GetVehicleColor

#define PROPERTY_OFFSET(%0) \
        ((((%0) * ((%0) << 1)) << 2) + 65536)
        //////getvehiclecolor
#define AKA_PATH "aka.ini"
#define RELEASED(%0) \
   (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
//;


#define MAXIMO_DECAMARAS 100
#define MAX_DERBY_SPAWN 2
forward AttackPl();
forward IsPlayerRangeOfArea(playerid, Float:minx, Float:miny, Float:maxx, Float:maxy);
forward houselevel(h);
forward settime(playerid);
forward houseinfor(playerid);
forward bizinfor(playerid);
forward DelayedKick(playerid);
forward DelayedKick2(playerid);
forward DelayedBan(playerid);
forward DB_OnPlayerKeyStateChange(playerid, newkeys, oldkeys);
forward Tazed(playerid);
forward Float:GetXYInFrontOfPlayer(playerid, &Float:q, &Float:w, Float:distance);
forward Float:GetXYBehindPlayer(playerid, &Float:q, &Float:w, Float:distance);
forward FlyTimer();
//
#define DEF_MAX_OBJECTS 500000
#define CIVILIAN_COLOR        0xFFFFFFFF
#define AZTECA_COLOR          0x33FFFFFF
#define YAKUZA_COLOR          0x6D0000FF
#define POLICE_COLOR          0x2641FEFF
#define CRIPZ_COLOR           0x000099FF
#define COLOR_FLASH           0xFF0000FF
#define COLOR_DF              0x626200FF
#define VAGOS_COLOR           0xF5BE18FF
#define BALLA_COLOR           0x9245ABFF
#define GROVE_COLOR           0x007D00FF
#define TRIAD_COLOR           0x000000FF
#define BADBOYS_COLOR         0xB4B5B7FF
#define DEF_COL_WHITE 	0xFFFFFFFF
#define DEF_COL_RED 	0xAE0000FF
//
#define MAX_SPIKESTRIPS 200
#include <F_streamer>
#include <eum>

new tombola = 100;
new or = 0;
new gmxtime = 0;
new startderby = 0;
new startctf = 0;
new vzetflag1 = 0;
new vzetflag2 = 0;
new reason = 0;
new riskcena = 50;
new maxskorost = 150;
new bturf;
new bturf3 = 0;
new iturf;
new chas = 0;
new minuti = 0;
new sekundi = 0;
new chas2 = 0;
new minuti2 = 0;
new sekundi2 = 0;
new chas3 = 0;
new minuti3 = 0;
new sekundi3 = 0;
new VoteText2[70];
new grider[MAX_PLAYERS][3];
new Float:bturf2;
new Float:iturf2;
new Float:Tur1, Float:Tur2, Float:Tur3, Float:Tur4;
new skins[] = {
  303,
  304,
  305
};
new vehiclePlate[MAX_VEHICLES][128];
new connect_timer[MAX_PLAYERS];
new connect_timer2[MAX_PLAYERS];
new connect_timer3[MAX_PLAYERS];
new Text:Foto;
//
//LIMITS
#define M_VEHICLES                      500             //maximum ammount of private vehicles
#define M_DEALERS                       100     //maximum ammount of vehicleDealers
#define M_DEALER_VEHICLES   15      //maximum vehicles per dealer
#define M_PLAYERS                       32      //Maximum playersin your server (should be equal to your ammount of serverslots)

//main settings
#define RESPAWN_DELAY       5000    //Respawn time in miliseconds
#define DIALOG_RANGE        0       //dialog range
#define DIALOG_STRING_SIZE  256     //string size of generated dialog
#define PICKUP_MODEL        1318    //ModelID for pickup
#define MAP_ICON            55      //mapicon for dealer
#define PICKUP_ANTISPAM     10000   //Antispam timer for OnPlayerPickupPickup (time in miliseconds)
#define USE_CP              false   //will use checkpoints instead of pickups
#define CP_SIZE             1

//sell vehicle settings
#define SELL_DIVIDE         5       //Original price / SELL_DIVIDE = sellback money you get

//streamer settings
#define STREAMER_DISTANCE       100     //Streamdistance for the build-in streamer
#define STREAMER_INTERVAL   1000    //Streamer tickratio (due to the loops, this shouldnt be really lower as 600-700 i think, i recommend setting it to 1000 though)

//FILEPATHS
#define VEHICLE_PATH            "vDealer_vehicles/%i.ini"

//SQL Settings:
#define USE_MYSQL_DATABASE  false
#define SQL_SERVER                      "localhost"
#define SQL_TABLE           "vDealer_vehicles"
#define SQL_USER            "root"
#define SQL_PASS            ""
#define vDEALER: new
#define DIALOG_SELL DIALOG_RANGE
#define DIALOG_DEALER_VEHICLES DIALOG_RANGE +1
#define DIALOG_DEALER_PRIMARY_COLOR DIALOG_RANGE +2
#define DIALOG_DEALER_SECONDARY_COLOR DIALOG_RANGE +3
#define COLOR_RED 0xFF1400FF
#define COLOR_YELLOW 0xFFFF00FF
#define COLOR_WHITE 0xFFFFFFFF
//dealer vehicleinfo per dealer
new lottowinner[MAX_PLAYER_NAME];
new adminin[MAX_PLAYER_NAME];
new raceplayers = 0;
new timed[MAX_PLAYERS];
new timed2[MAX_PLAYERS];
new timed3[MAX_PLAYERS];
new timed4[MAX_PLAYERS];
new adminin2[MAX_PLAYER_NAME];
new adminin3[MAX_PLAYER_NAME];
enum vehicler
{
        _name[32],
        _modelid,
        _price,
        bool:_active
}
new DealerVehicles[M_DEALERS][M_DEALER_VEHICLES][vehicler];

//Dealers
enum _dealer
{
        _dealername[64],
        Float:_x,
        Float:_y,
        Float:_z,
        bool:_active,
        _pickupid,
        _mapicon,
        Text3D:_3dtextlabel
}
new Dealers[M_DEALERS][_dealer];

//vehicles
enum PrivateVehicle
{
        _owner[MAX_PLAYER_NAME],
        _modelid,
        Float:_x,
        Float:_y,
        Float:_z,
        Float:_rot,
        _c1,
        _c2,
        _price,
        _vehicleid
}
new PrivateVehicles[M_VEHICLES][PrivateVehicle];
//CARSHOP
new LimiteSuperado[MAX_PLAYERS];
new VehRadarID [MAX_VEHICLES];
new Text: RadarHud;
new Text: SpeedAndModel [MAX_VEHICLES];
new CheckingSpeed [MAX_VEHICLES];
new OldVehID [MAX_PLAYERS];
#define Driver 0
#define Passanger 2

new Act[MAX_PLAYERS];
new InCar[MAX_PLAYERS];
new WhatCar[MAX_PLAYERS];
forward UpdateSpeed (vehid);
forward CheckValidTextDraws();
//HOUSESYS
#define MAX_HOUSES              700
#define PTP_RADIUS              3.0
#define PTP_RADIUSS              30.0
#define PTP_RADIUSSZ              45.0
enum hInfo
{
	hName[24],
	hOwner[24],
	hSellable,
	hSell,
	hRent,
	hLevel,
	hPickup,
	Float:hExitX,
	Float:hExitY,
	Float:hExitZ,
	hVirtualWorld,
	hLocked,
	Earnings,
	Bus,
	bPay,
	Fee,
	hVecModel, //The housecar's model
    Float:hVecX, //X location. En float too.
    Float:hVecY,
    Float:hVecZ,
    Float:hVecA,
    Heal,
    Armour
};
new HouseInfo[MAX_HOUSES][hInfo];
new HouseCar[MAX_HOUSES];

enum vhInfo
{
	vhOwner[24],
	vModel,
    Float:vCoordX,
    Float:vCoordY,
    Float:vCoordZ,
    Float:vCoordA,
    vPaintJob,
    vColor1,
    vColor2,
    vModSlot0,
    vModSlot1,
    vModSlot2,
    vModSlot3,
    vModSlot4,
    vModSlot5,
    vModSlot6,
    vModSlot7,
    vModSlot8,
    vModSlot9,
    vModSlot10,
    vModSlot11,
    vModSlot12,
    vModSlot13
};
new HouseVehInfo[MAX_HOUSES][vhInfo];
//BSYS
//BSYSSYS
//HOUSE
enum
{
    DIALOG_LOGIN,
    DIALOG_WELCOME,
    DIALOG_WEAPONS
}
#define DIALOG_LOGIN 1
#define DIALOG_WELCOME 2
#define DIALOG_WEAPONS 3

new VehicleModel[212][] ={
"Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial","Sentinel", "Dumper", "Firetruck", "Trashmaster", "Stretch", "Manana",
"Infernus", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance","Leviathan", "Moonbeam", "Esperanto", "Taxi",
"Washington", "Bobcat","Whoopee", "BF Injection", "Hunter", "Premier","Enforcer", "Securicar", "Banshee",
"Predator", "Bus", "Rhino", "Barracks", "Hotknife","Trailer 1", "Previon", "Coach", "Cabbie", "Stallion",
"Rumpo", "RC Bandit", "Romero", "Packer","Monster", "Admiral", "Squalo","Seasparrow", "Pizzaboy", "Tram", "Trailer 2",
"Turismo", "Speeder", "Reefer", "Tropic","Flatbed", "Yankee", "Caddy", "Solair","Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio",
"Freeway", "RC Baron", "RC Raider","Glendale", "Oceanic", "Sanchez", "Sparrow","Patriot", "Quad", "Coastguard", "Dinghy", "Hermes",
"Sabre", "Rustler", "ZR-350","Walton", "Regina", "Comet", "BMX", "Burrito","Camper", "Marquis", "Baggage", "Dozer", "Maverick",
"News Chopper", "Rancher","FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring","Sandking", "Blista Compact", "Police Maverick",
"Boxvillde", "Benson","Mesa", "RC Goblin", "Hotring Racer A", "Hotring Racer B","Bloodring Banger", "Rancher", "Super GT", "Elegant",
"Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster","Stunt",  "Tanker", "Roadtrain", "Nebula", "Majestic", "Buccaneer",
"Shamal", "Hydra","FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck", "Fortune","Cadrona", "FBI Truck", "Willard",
"Forklift", "Tractor", "Combine","Feltzer", "Remington", "Slamvan", "Blade", "Freight","Streak","Vortex", "Vincent", "Bullet",
"Clover", "Sadler", "Firetruck LA","Hustler", "Intruder", "Primo", "Cargobob", "Tampa","Sunrise", "Merit","Utility", "Nevada",
"Yosemite", "Windsor", "Monster A", "Monster B", "Uranus", "Jester", "Sultan","Stratum", "Elegy", "Raindance","RC Tiger",
"Flash", "Tahoma", "Savanna", "Bandito","Freight Flat", "Streak Carriage", "Kart","Mower", "Dune", "Sweeper", "Broadway",
"Tornado", "AT-400", "DFT-30", "Huntley", "Stafford","BF-400", "News Van", "Tug", "Trailer 3", "Emperor","Wayfarer", "Euros",
"Hotdog","Club", "Freight Carriage", "Trailer 4","Andromada", "Dodo", "RC Cam", "Launch", "Police Car (LSPD)","Police Car (SFPD)",
"Police Car (LVPD)", "Police Ranger", "Picador", "S.W.A.T", "Alpha","Phoenix", "Glendale", "Sadler", "Luggage Trailer A",
"Luggage Trailer B", "Stairs", "Boxville", "Tiller", "Utility Trailer" };

#tryinclude <foreach>

// defines
#if defined OPSP
        #endinput
#endif
#define OPSP

#if !defined foreach
        #define foreach(%1,%2) for (new %2 = 0; %2 < MAX_PLAYERS; %2++) if (IsPlayerConnected(%2))
        #define __SSCANF_FOREACH__
#endif
#if !defined PRESSED
        #define PRESSED(%0) \
                (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#endif
#if !defined RELEASED
        #define RELEASED(%0) \
                (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#endif
// variables
static
                Float:RL_phealth[MAX_PLAYERS],
                Float:RL_parmour[MAX_PLAYERS],
                bool:RL_Shooting[MAX_PLAYERS],
                bool:RL_UpdatedHealth[MAX_PLAYERS],
                RL_Released[MAX_PLAYERS];
// forwards
forward OnPlayerShootPlayer(Shooter,Target,Float:HealthLost,Float:ArmourLost);










#define WHITE 0xFFFFFFFF //Instead of writing "0xFFFFFFFF" we write WHITE

#define SCM SendClientMessage
#define GREY 0xAFAFAFAA
#define PURPLE 0xC2A2DAAA
new BigEar[MAX_PLAYERS],tazetimer[MAX_PLAYERS], pTazed[MAX_PLAYERS];
new pChannel[MAX_PLAYERS];
new fly[MAX_PLAYERS] = {0, 1};
new dragTimers[MAX_PLAYERS];

#define COLOR_GRAF1 0xFF0000FF
#define COLOR_GRAF2 0xFF8000FF
#define COLOR_GRAF3 0x0000FFFF
#define COLOR_GRAF4 0x00FF00FF
#define MAX_GRAFFITI 50
#define COLOR_DARKRED 0xAA3333FF
new graffity;
#define MAX_GRAFTEXT (64)
new GrafText[MAX_PLAYERS][MAX_GRAFTEXT];
new graf[MAX_PLAYERS];

new bool:CreatedRamp[MAX_PLAYERS];


new bool:pIgnoringPlayer[MAX_PLAYERS][MAX_PLAYERS];




#define TOTAL_ITEMS         300
#define SELECTION_ITEMS 	21
#define ITEMS_PER_LINE  	7

#define HEADER_TEXT "Skins"
#define NEXT_TEXT   "Next"
#define PREV_TEXT   "Prev"

#define DIALOG_BASE_X   	75.0
#define DIALOG_BASE_Y   	130.0
#define DIALOG_WIDTH    	550.0
#define DIALOG_HEIGHT   	180.0
#define SPRITE_DIM_X    	60.0
#define SPRITE_DIM_Y    	70.0

new gTotalItems = TOTAL_ITEMS;
new PlayerText:gCurrentPageTextDrawId[MAX_PLAYERS];
new PlayerText:gHeaderTextDrawId[MAX_PLAYERS];
new PlayerText:gBackgroundTextDrawId[MAX_PLAYERS];
new PlayerText:gNextButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gPrevButtonTextDrawId[MAX_PLAYERS];
new PlayerText:gSelectionItems[MAX_PLAYERS][SELECTION_ITEMS];
new gSelectionItemsTag[MAX_PLAYERS][SELECTION_ITEMS];
new gItemAt[MAX_PLAYERS];

new gItemList[TOTAL_ITEMS] = {
0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,
50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,
97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,
132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,
167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,
202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,
237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,
272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299
};

























#include <mxINI05>
// Car Parking by O.K.Style™
#define COLOR_BODY 0xFDE39DFF
//
#define DIALOG_SOE			1050
#define DIALOG_CREATE		DIALOG_SOE + 2
#define DIALOG_SELECT   	DIALOG_SOE + 1

enum SavedEnums {
	Float:foX,
	Float:foY,
	Float:foZ,
	Float:roX,
	Float:roY,
	Float:roZ
};


//
enum vInfo {
    vModel,
    Float:vCoordX,
    Float:vCoordY,
    Float:vCoordZ,
    Float:vCoordA,
    vPaintJob,
    vColor1,
    vColor2,
    vModSlot0,
    vModSlot1,
    vModSlot2,
    vModSlot3,
    vModSlot4,
    vModSlot5,
    vModSlot6,
    vModSlot7,
    vModSlot8,
    vModSlot9,
    vModSlot10,
    vModSlot11,
    vModSlot12,
    vModSlot13
};
new VehicleInfo[MAX_VEHICLES][vInfo];
//
#define COLOR_WHITE 			0xFFFFFFFF
#define COLOR_LIME		 		0x80FF00FF
//


//
new SpeedoTimer;
new cripz2;
new yakuzap;
new tporta1;
new tporta2;
forward SaveFactions();
forward SaveOffices();
forward SaveOffices2();
forward SaveOffices3();
forward LoadOffices();
forward LoadOffices2();
forward LoadOffices3();
forward OnIncomingConnection(playerid, ip_address[], port);
forward LoadFactions();
//==============================These functions in the Gamemode=================
forward OnGameModeInit_TWS();
forward OnPlayerConnect_TWS(playerid);
forward OnPlayerSpawn_TWS(playerid);
forward OnPlayerDeath_TWS(playerid, killerid, reason);
//------------------------------------------------------------------------------
forward isPlayerInArea( playerID, Float:data[ 4 ] );
forward IsPlayerInTurf( playerid, Float:min_x, Float:min_y, Float:max_x, Float:max_y );
forward CheckPlayers();
forward StartWar( turf, attacker );
forward StartWar2( turf, attacker, defender);
forward StartWar3( turf, attacker, defender);
forward EndWar( turf, attacker, defender );
forward TimeTextForPlayer( playerid, Text:text, time );
forward DelayTimeTextForPlayer( playerid, Text:text, time );
forward DestroyTextTimer( playerid, Text:text );



new Text:ClockData[MAX_PLAYERS];
new Text:SPEEDOS[MAX_PLAYERS];
forward OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ);
forward UpdateSpeedoMeter();
OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz);
forward OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z);
forward Speedometer(playerid);
new Text:SpeedBar[MAX_PLAYERS];
new Text:VehHealthBar[MAX_PLAYERS];
new fuel[MAX_VEHICLES]; //fuel per vehicle
forward timer_fuel_lower(); //timer for lowering the fuel value
forward timer_refuel(playerid); //timer to refuel vehicle
new isrefuelling[MAX_PLAYERS] = 0; //bool to check if player is already refuelling
new Text:td_fuel[MAX_PLAYERS]; //textdraw with fuel
//
forward FUNCTION_LoadObjects();

new DB:EDITOR_DATABASE;

enum OBJECT_INFO
{
	OBJ_ID,
	OBJ_DB_ID,
	OBJ_MODEL,
	Float:OBJ_X,
	Float:OBJ_Y,
	Float:OBJ_Z,
	Float:OBJ_RX,
	Float:OBJ_RY,
	Float:OBJ_RZ,
	OBJ_VW,
	OBJ_INTERIOR,
	Float:OBJ_STREAM_DISTANCE,
};

new EDITOR_OBJECT[DEF_MAX_OBJECTS][OBJECT_INFO];

new EDIT_OBJECT_ID[MAX_PLAYERS];

stock RandomEx(min, max)
{
	new output;
	output = max-min;
	output = random(output);
	output = min+output;
	return output;
}

stock StripText(text[])
{
    for(new i=0; i<strlen(text); i++)
    {
        if(text[i] == '(' && text[i+7] == ')')
        {
            text[i] = '{';
            text[i+7] = '}';
        }
    }
    return 1;
}


stock Numbers(const string[])
{
	for (new i = 0, z = strlen(string); i < z; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}
//
new bool:Rampa[MAX_PLAYERS];

new BC[MAX_PLAYERS];
new Jump[MAX_PLAYERS];
new Speed[MAX_PLAYERS];
new Enabled[MAX_PLAYERS];
new Ramp[MAX_PLAYERS];
new Pers[MAX_PLAYERS];
#include <a_samp>
#include <sscanf>
#include <Dini>
#define RANGEOFSTARTER 50
#include <streamer>
#pragma tabsize 0
#define CONSERVATIVE
#if defined _zones_included
#endinput
#endif
#define C_Rules
#define DIALOG_ATM 919
#define DIALOG_BANK 929
#define DIALOG_GPS 918
#define DIALOG_WEAPONS 3
#define DIALOG_FISHES 34
#define DIALOG_OFFICES 53
#define DIALOG_WELCOME 53
#define DIALOG_CLOTHES2 913
#define DIALOG_Police 917
#define DIALOG_CLOTHES3 914
#define DIALOG_CLOTHES4 915
#define DIALOG_CLOTHES5 916
//
#define DIALOG_Mask 922
#define DIALOG_HAT 933
#define DIALOG_CLOCK 934
#define DIALOG_SPECIAL 935

#define DIALOG_GLASSES 923
//
#define DIALOG_WEAPONSDF 4
#define DIALOG_GFC 90909
#define DIALOG_GFC2 556
#define DIALOG_ROB 559
#define _zones_included
#define MAX_ZONE_NAME 38
#define DESTROY_LOS 500
#define SPECIAL_ACTION_PISSING      68
#define SOUND_RACE_321 1056
#define SOUND_RACE_GO 1057
#undef MAX_PLAYERS
#define SPECIAL_ACTION_CUFFED      24
#define MAX_PLAYERS 50
#define DIALOG_RADIO
#if defined FOR_EACH
	Itter_Create(Victim, MAX_PLAYERS);
#endif
static gTeam[MAX_PLAYERS];
#include "../include/gl_common.inc" // for PlaySoundForPlayersInRange()
#define ELEVATOR_SPEED      (5.0)   // Movement speed of the elevator.
#define DOORS_SPEED         (5.0)   // Movement speed of the doors.
#define ELEVATOR_WAIT_TIME  (5000)  // Time in ms that the elevator will wait in each floor before continuing with the queue.
									// Be sure to give enough time for doors to open.
#define DIALOG_ID           (874)

#define X_DOOR_CLOSED       (1786.627685)
#define X_DOOR_R_OPENED     (1785.027685)
#define X_DOOR_L_OPENED     (1788.227685)
#define GROUND_Z_COORD      (14.511476)
#define ELEVATOR_OFFSET     (0.059523)

#define TEAM_RED 1
#define TEAM_BLUE 2

#define CHECKPOINT_NONE 0
#define CHECKPOINT_RED 1
#define CHECKPOINT_BLUE 2

static FloorNames[21][] =
{
	"Партер",
	"Първи етаж",
	"Втори етаж",
	"Трети етаж",
	"Четвърти етаж",
	"Пети етаж",
	"Шести етаж",
	"Седми етаж",
	"Осми етаж",
	"Девети етаж",
	"Десети етаж",
	"Единаисти етаж",
	"Дванаисти етаж",
	"Тринаисти етаж",
	"Четеринаисти етаж",
	"Петнаисти етаж",
	"Шеснаисти етаж",
	"Седемнаисти етаж",
	"Осемнаисти етаж",
	"Деветнаисти етаж",
	"Последен етаж"
};

static Float:FloorZOffsets[21] =
{
    0.0,		// 0.0,
    8.5479,		// 8.5479,
    13.99945,   // 8.5479 + (5.45155 * 1.0),
    19.45100,   // 8.5479 + (5.45155 * 2.0),
    24.90255,   // 8.5479 + (5.45155 * 3.0),
    30.35410,   // 8.5479 + (5.45155 * 4.0),
    35.80565,   // 8.5479 + (5.45155 * 5.0),
    41.25720,   // 8.5479 + (5.45155 * 6.0),
    46.70875,   // 8.5479 + (5.45155 * 7.0),
    52.16030,   // 8.5479 + (5.45155 * 8.0),
    57.61185,   // 8.5479 + (5.45155 * 9.0),
    63.06340,   // 8.5479 + (5.45155 * 10.0),
    68.51495,   // 8.5479 + (5.45155 * 11.0),
    73.96650,   // 8.5479 + (5.45155 * 12.0),
    79.41805,   // 8.5479 + (5.45155 * 13.0),
    84.86960,   // 8.5479 + (5.45155 * 14.0),
    90.32115,   // 8.5479 + (5.45155 * 15.0),
    95.77270,   // 8.5479 + (5.45155 * 16.0),
    101.22425,  // 8.5479 + (5.45155 * 17.0),
    106.67580,	// 8.5479 + (5.45155 * 18.0),
    112.12735	// 8.5479 + (5.45155 * 19.0)
};

new Obj_Elevator, Obj_ElevatorDoors[2],
	Obj_FloorDoors[21][2];

new Text3D:Label_Elevator, Text3D:Label_Floors[21];

enum sInfo
{
	sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};
new SpikeInfo[MAX_SPIKESTRIPS][sInfo];


#define ELEVATOR_STATE_IDLE     (0)
#define ELEVATOR_STATE_WAITING  (1)
#define ELEVATOR_STATE_MOVING   (2)
#define PLAYER_MUTE_TIME_MINUTES (3)

new ElevatorState,
	ElevatorFloor;  // If Idle or Waiting, this is the current floor. If Moving, the floor it's moving to.

#define INVALID_FLOOR           (-1)

new ElevatorQueue[21],  	// Floors in queue.
	FloorRequestedBy[21];

new ElevatorBoostTimer;     // Timer that makes the elevator move faster after players start surfing the object.

/* ------------------
*  Function forwards:
-------------------*/
forward mahni(playerid);
// Private:
forward Elevator_Initialize();
forward Elevator_Destroy();
forward CheckHeadShot();
forward Elevator_OpenDoors();
forward Elevator_CloseDoors();
forward Floor_OpenDoors(floorid);
forward Floor_CloseDoors(floorid);

forward Elevator_MoveToFloor(floorid);
forward Elevator_Boost(floorid);        	// Increases the elevator speed until it reaches 'floorid'.
forward Elevator_TurnToIdle();

forward ReadNextFloorInQueue();
forward RemoveFirstQueueFloor();
forward AddFloorToQueue(floorid);
forward IsFloorInQueue(floorid);
forward ResetElevatorQueue();

forward DidPlayerRequestElevator(playerid);

forward Float:GetElevatorZCoordForFloor(floorid);
forward Float:GetDoorsZCoordForFloor(floorid);

forward SPS_Remove_Messages_Limit(playerid);
forward SPS_Unmute_Player(playerid);
forward SPS_Reset_PVars();
// ------------------------ Callbacks ------------------------
//
new robmoneyn = 0;
new robmoneyb = 0;
new robmoney = 0;
new count = 0;
new Text3D:yeah1text;
new ob14;
new ob15;
new ob16;
new timer = 0;
new PlayerCuffed[MAX_PLAYERS];
new BANK1,BANK2;
new PRESPDUTY;
new PRESAHOUSE1,BGPRES1,BGPRES2,ASH11,PRESABIZ1,PRESAHOUSE2,PRESA2,PRESA1,GPRESDMB,RISK,RISKT,RIFADMB,RIFALS2,RIFALV,GPRESVZ, GPRESTOWT,GPRESCARSHOP2,GPRESKNIJKA,GPRESHILI,GPRESCEMENT,GPRESBUS,GPRESPIZZA,GPRES247,GPRESCALIG,GPRESBOINI,GPRESCAR,GPRESBIZ,GPRESBANK,GPRESSWEEP,GPRESSF,GPRESLV,GPRESBLV,GPRESBSF;
new ATMPRES,ATMPRES1,BPRES1,BPRES2,ATMPRES2,ATMPRES3,ATMPRES4,ATMPRES5,ATMPRES6;
new RIFA101,RIFA102;
new BANKA2,BANKAE2,BANKA3,BANKAE3;
new OFISPRES1,OFISPRES2;
new GPPRES1,GPPRES2,GPPRES3,GPPRES4,IKONKA1,IKONKA2,GPPRES5,GPPRES6,GPPRES7,GPPRES8,GPPRES9,GPPRES10, GPPRES11,GPPRES12,GPPRES13,GPPRES14,GPPRES15,GPPRES16,GPPRES17;
new PRES1,PRES2,PRES3,PRES4,PRES5,PRES6,PRES7,PRES8,PRES9,PRES10,PRES11,PRES12,PRESLX,PRESLX1,PRESBX1,PRESBX,PRESL,PRES12X,PRES13,PRES14,PRES15,PRES16,PRES17,LPRES18,RPRES18,PRES18,PRES19,PRES20,PRES21,PRES22,PRES24,PRES25,PRES26,PRES27,PRES28,PRES29,PRES30,PRES31,PRES32,PRES33,PRES34,PRES35,PRES36,PRES37,PRES38,PRES39,PRES40,PRES41,PRES42,PRES43,PRES44,PRES45,PRES47,PRES46,PRES48,PRES51,PRES52;
new BOYZPRES ,GPRESDRF2, DPRES1,DPRES2,DPRES3,DPRES4,DPRES5,DPRES6,DPRES7,DPRES8,OPRES,DPRES9,DPRES10,DPRES11,DPRES12,DPRES13,DPRES14,DPRES15,DPRES16,DPRES17,DPRES18,DPRES19,DPRES20,DPRES21,DPRES22,DPRES23,PRESKN,PRESBOYZ,PRESBOYZ2,PRESSOA,GROVEPRES1,GROVEPRES2,BANKA,BANKAE,DPRES24,DPRES25,DPRES26,DPRES27,DPRES28,DPRES29,DPRES30,DPRES31,DPRES32,DPRES33,DPRES34,DPRES35,DPRES36,DPRES37,DPRES38,DPRES39,DPRES40,DPRES41,DPRES42,DPRES43;
new ob17;
new RIFALS,RIFASF;
new APICK, S1PICK1, S1PICK2, S1PICK4, STPICK, BAPICK, DROGAPICK, DMVPICK, GYMPICK, BURPICK,WEAPICK, BPICK, CPICK, SPICK,DPICK, KPICK,ADVERTP,PRESROBLV,PRESROBLS,BANKROB,PRESROB1,PRESC;
new FUEL1,FUEL2,FUEL3,FUEL4;
new IsGateTeams = 0;
new IsGateTeams1 = 0;
new IsGateTeams2 = 0;
new IsGateTeams3 = 0;
new IsGateTeams4 = 0;
new IsGateTeams5 = 0;
new IsGateTeams6 = 0;
new IsGateTeams7 = 0;
new IsGateTeams8 = 0;
new IsGateTeamsDF = 0;
new IsGateTeamsDPK = 0;
new IsGateTeamsLVPD = 0;
new IsGateTeamsLSPD = 0;
new IsGateTeamsSFPD = 0;
new IsGateTeamsLS = 0;
native      IsValidVehicle(vehicleid);
new ShipObject[MAX_VEHICLES] = {INVALID_OBJECT_ID, ...};
new svetlinaobject1[MAX_VEHICLES] = {INVALID_OBJECT_ID, ...};
new svetlinaobject2[MAX_VEHICLES] = {INVALID_OBJECT_ID, ...};
new svetlinaobject3[MAX_VEHICLES] = {INVALID_OBJECT_ID, ...};
new ob18;
new Text:restime2[MAX_PLAYERS];
new Text:dmon1[MAX_PLAYERS];
new Text:rob[MAX_PLAYERS];
new Text:Text4[MAX_PLAYERS];
new Text:robn[MAX_PLAYERS];
new Text:robb[MAX_PLAYERS];
new Text:ColorData[MAX_PLAYERS];
new ob19;
new dcar1;
new dcar2;
new dcar3;
new dcar4;
new dcar5;
new dcar6;
new dcar7;
new dcar8;
new dcar9;
new dcar10;
new ob20;
new carstrix;
new rifas1;
new rifas2;
new rifas3;
new carstrix4;
new carholy;
new carflux;
new carflux2;
new carufo;
new carflux4;
new caro;
new carflux3;
new carforsale1;
new carforsale2;
new carforsale3;
new carforsale4;
new carforsale5;
new carmoto;
new caro2;
new carpedal;
new caro3;
new carstrix1;
new carstrix2;
new carstrix3;
//NEWWWSSSSSSSSSS 2 ORDDERSSSSSSS
new cardr;
new ob21;
new owner[MAX_VEHICLES];
new ownedcar[MAX_PLAYERS];
new lockedCar[MAX_VEHICLES];
new ob22;
new white;
new Count;
new white1;
new ne1;
new ne;
new car3;
new dancestyle;
new car4;
new car5;
//Работи
new pizza[MAX_PLAYERS];
new pilot[MAX_PLAYERS];
new coalmine[MAX_PLAYERS];
new sweep[MAX_PLAYERS];
new bus[MAX_PLAYERS];
//Коли
new carpizza[7];
new cargfc[7];
new carsweep[6];
new carpilot[6];
new carcoalmine[6];
new carbus[6];
//Разни
new ktimer;
new kubche;
new dialog_command;
new timerhack;
new Float:EvnTp[MAX_PLAYERS][3];

//=========================[Цветове на банди]========================================
#define TEAM_ZETAS_COLOR      0xC0C0C0FF
#define TEAM_AZTECAS_COLOR    0x0000FFFF
#define COLOR_LIGHTGREEN      0x9ACD32FF
#define TEAM_GREEN_COLOR      0xFFFFFFFF
#define COLOR_NICERED         0xFFFFFFFF
#define COLOR_LIGHTBLUE       0x33CCFFFF
#define COLOR_CHAT3           0x33CCFFFF
#define TEAM_CYAN_COLOR       0xE60000FF
#define COLOR_LIGHTRED        0xFF6347FF
#define TEAM_HIT_COLOR        0xFFFFFFFF
#define COLOR_ADMINCMD        0xa9c4e4FF
#define COLOR_YELLOW2         0xF5DEB3FF
#define COLOR_FLASH2          0xFFFFFFFF
#define COLOR_YELLOW          0xFFFF00FF
#define COLOR_CHAT1           0xFFFF00FF
#define COLOR_PURPLE          0xC2A2DAFF
#define COLOR_CHAT2           0xC2A2DAFF
#define COLOR_ORANGE          0xF97804FF
#define DANANGBOYS_COLOR      0xD3D3D3FF
#define POLICE_COLOR          0x2641FEFF
#define COLOR_CHAT4           0x2641FEFF
#define WestCoastBloodz_COLOR 0xEA0000FF
#define CRIPZ_COLOR           0x000099FF
#define COLOR_FLASH           0xFF0000FF
#define COLOR_BLUE            0x0000BBFF
#define COLOR_BL1             0x0066FFFF
#define BALLA_COLOR           0x9245ABFF
#define COLOR_GREEN3          0x16FFA3FF
#define COLOR_RIFA            0x1682D9FF
#define COLOR_GRAD1           0xB4B5B7FF
#define COLOR_GRAD2           0xBFC0C2FF
#define COLOR_GRAD3           0xBFC0C2FF
#define COLOR_WHITE           0xFFFFFFFF
#define COLOR_DBLUE           0x2641FEFF
#define COLOR_GREEN           0x2CB838FF
#define COLOR_GREY            0xAFAFAFFF
#define COLOR_RED             0xE60000FF
#define COLOR_RD2             0xCF0000FF
#define COLOR_ADMIN           0x00FFFFFF
#define COLOR_DARKGREEN 	  0x006400FF
#define COLOR_AFK             0x16FFA3FF
#define COLOR_GREEN1          0x16FFA3FF
#define COLOR_GREENS1         0x16FFA3FF
#define COLOR_GREENS          0x16FFA3FF
#define COLOR_PINK 			  0xFB81FEFF
#define COLOR_LIGHTPINK       0xF629BBFF
#define COLOR_INVISIBLE       0xFFFFFFFF
#define COLOR_YAKUZA          0x00CCCCFF
#define COLOR_MS13            0x005295FF
#define COLOR_CYAN            0x00FFFFFF
#define COLOR_RussianMafia    0x33CCFFAA
#define COLOR_BlackStreet     0x8B8BC8FF
#define COLOR_NZ              0x5E7AC6FF
#define COLOR_Thugs           0x24FF3AFF
#define COLOR_DPK             0xFF9900FF
#define COLOR_EVENT           0x00FF00FF
#define COLOR_CHAT5           0x00FF00FF
#define COLOR_JOB             0xD8844DFF
//NK

#if defined FOR_EACH
	#include <foreach>
#endif

#define KEY_AIMFIRE 132

#define PRESSED(%0) \
	(((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#if defined DEBUG
	new count1, count2;
#endif


#define MB1 -2547.9727,1227.5621,37.4219
#define MB2 1815.1161,2505.2517,6.8193
#define DM 2394.4321,1015.5179,10.8203
#define DM2 2394.4321,1015.5179,10.8203
#define DM3 2394.4321,1015.5179,10.8203

#define Racestart2 1808.7675,829.7299,10.3949
#define Racestart 1808.7675,829.7299,10.3949
#define Racestart3 1808.7675,829.7299,10.3949

#define Race1p 1656.8408,261.3558,29.9947
#define Race2p 1620.8412,51.6549,37.1348
#define Race3p 1680.1793,-334.1801,45.0637
#define Race4p 1718.3459,-575.8248,36.8643

#define Fuel1 2149.8328,2748.2905,10.5474
#define Fuel2 1944.1652,-1769.8917,13.1157
#define Fuel3 2116.6611,922.4604,10.5474
#define Fuel4 2204.3835,2473.3994,10.5474

#define Carshop 1413.6938,-1700.8470,13.5395
#define Coalmine 837.0814,824.6852,12.6124
#define Pilot 1598.1884,1448.5465,10.8281
#define Knijki 1939.8036,2184.1448,10.820
#define lsbank 1480.8029,-1768.9452,18.7958
#define piza 1366.8253,249.5992,19.5669
#define bizn 2179.9873,1976.2169,10.8203
#define bus2 -551.9988,2593.7229,53.9348
#define swep 582.9918,1224.6924,11.7113
#define ofis 1786.6548,-1294.7537,13.4818
#define trucks 2133.3237,961.4839,10.8203
#define boini 1969.1005,2294.6567,16.4559
#define lv 1699.2638,1434.6378,10.7004
#define ls 1538.8336,-1691.1599,13.5469
#define sf -1417.0000,-295.8000,14.1484
#define risk2 1042.6071,1010.7285,11.0000


#define GFC1 2149.8328,2748.2905,10.5474
#define GFC2 1944.1652,-1769.8917,13.1157
#define GFC3 2116.6611,922.4604,10.5474
#define GFC4 2204.3835,2473.3994,10.5474

#define ROB1 2463.1233,-1957.5519,16.7929
#define ROB2 1965.7695,1623.1764,12.8623
#define ROB3 2017.6198,1912.9371,12.3274


#define PizzaCheckPoint1 1349.4271,226.0932,19.0015
#define PizzaCheckPoint2 1323.7760,324.6964,19.0078
#define PizzaCheckPoint3 1245.0232,347.4536,19.0026
#define PizzaCheckPoint4 1048.1787,462.9197,19.9716
#define PizzaCheckPoint5 803.2993,334.3653,19.4793
#define PizzaCheckPoint6 519.4211,190.5904,17.9874
#define PizzaCheckPoint7 505.9104,-139.8062,36.5683
#define PizzaCheckPoint8 360.4146,-143.4705,1.5309
#define PizzaCheckPoint9 306.5201,-75.4465,1.0276
#define PizzaCheckPoint10 743.6173,-160.8216,18.6864
#define PizzaCheckPoint11 1267.8527,-25.4196,29.7826
#define PizzaTakePoint 1360.0302,259.5258,19.1673
//----[Коалмаин]----//
#define CoalmineCheckPoint1 809.2472,842.9479,9.8030
#define CoalmineCheckPoint2 764.9946,889.3522,-1.2541
#define CoalmineCheckPoint3 683.7329,971.1793,-12.7109
#define CoalmineCheckPoint4 724.9157,884.9314,-26.4536
#define CoalmineCheckPoint5 616.0866,906.8915,-44.5193
#define CoalmineCheckPoint6 497.2571,891.3735,-32.0035
#define CoalmineCheckPoint7 535.6892,790.3248,-20.1947
#define CoalmineCheckPoint8 688.4577,748.3844,-5.5390
#define CoalmineTakePoint 849.5752,856.4982,13.3516
//----[Такси]----//
#define SweepCheckPoint1 572.2471,1197.0688,12.5318
#define SweepCheckPoint2 371.9492,1047.3577,25.5347
#define SweepCheckPoint3 656.1166,1087.8350,28.1258
#define SweepCheckPoint4 770.1292,1387.3280,19.6801
#define SweepCheckPoint5 784.5916,1830.6031,4.9020
#define SweepCheckPoint6 326.9138,1330.7482,9.4448
#define SweepTakePoint 644.5229,1213.0182,11.4458
//---[Чистач]---//
#define pilotCheckPoint1 1379.0500,2087.9038,88.6568
#define pilotCheckPoint2 753.0629,2714.5898,81.8752
#define pilotCheckPoint3 140.3123,2494.6482,17.4028
#define pilotCheckPoint4 -491.5468,2505.2107,135.8665
#define pilotCheckPoint5 -1764.1219,2654.5706,153.7935
#define pilotCheckPoint6 -741.7295,1694.7032,151.5511
#define pilotCheckPoint7 1044.9075,1576.7545,78.6092
#define pilotTakePoint 1480.4420,1223.4127,11.7393
//---[бус]---//
#define busCheckPoint1 -498.4799,2593.1475,53.2546
#define busCheckPoint2 -466.3619,2593.3589,50.5782
#define busCheckPoint3 -368.0056,2549.9414,37.5918
#define busCheckPoint4 -289.2402,2519.1929,34.0896
#define busCheckPoint5 -84.7533,2394.6294,16.1968
#define busCheckPoint6 107.8625,2294.5774,19.7972
#define busCheckPoint7 559.7805,2286.4646,33.8574
#define busCheckPoint8 567.3085,1779.1766,12.5296
#define busCheckPoint9 495.8424,1656.5313,13.6520
#define busCheckPoint10 159.7531,1158.9231,14.3524
#define busCheckPoint11 -72.6429,1282.0905,11.6395
#define busCheckPoint12 -109.2153,1757.2048,20.1947
#define busCheckPoint13 137.5369,2008.4158,18.7260
#define busCheckPoint14 125.6147,2289.9126,20.1863
#define busCheckPoint15 -24.9105,2303.9634,24.6508
#define busCheckPoint16 -158.1425,2478.8467,19.4096
#define busCheckPoint17 -445.1805,2447.7939,46.8334,98
#define busCheckPoint18 -467.8040,2592.9399,50.7876
//ОФИСИ//
#define OFFICE_1 0
#define OFFICE_2 1
#define OFFICE_3 2
#define OFFICE_4 3
#define OFFICE_5 4
#define OFFICE_6 5
#define OFFICE_7 6
#define OFFICE_8 7
#define OFFICE_9 8
#define OFFICE_10 9
#define OFFICE_11 10
#define OFFICE_12 11
#define OFFICE_13 12
#define OFFICE_14 13
#define OFFICE_15 14
#define OFFICE_16 15
#define OFFICE_17 16
#define OFFICE_18 17
#define OFFICE_19 18
#define OFFICE_20 19
//==============================[Банди]=========================================
#define TEAM_CIVILIAN 0
#define TEAM_GROVE 1
#define TEAM_BALLAS 2
#define TEAM_VAGOS 3
#define TEAM_VIP 4
#define TEAM_TRIADS 5
#define TEAM_BOYZ 6
#define TEAM_CRIPZ 7
#define TEAM_GPD 8
#define TEAM_AsianBoyz 9
#define TEAM_SoA 10
#define TEAM_ZETAS 11
#define TEAM_MS13 12
#define TEAM_RIFA 13
#define TEAM_BulgarianMafia 15
#define TEAM_LatinKing 16
#define TEAM_FBI 17
#define TEAM_NZ 18
#define TEAM_Thugs 19
#define TEAM_DPK 20
#define TEAM_YAKUZA 14
//==========================[Анти мъни хак]===================================
#define UpdateMoneyBar   GivePlayerMoney
#define ResetMoneyBar    ResetPlayerMoney
//=============================[R]==========================================
#define MAX_TEAMS        21
#define MAX_OFFICES        1
#define CAR_COST 50000
//------------------------------------------------------------------------------

forward split(const strsrc[], strdest[][], delimiter);
forward AnnounceMSG();
forward CheckTune(playerid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward OpenGate(playerid);
forward AttachWeaponCorrectly(playerid, gun);
forward OnPlayerRegister(playerid, password[]);
forward OnPlayerDropCashBox(playerid);
forward SaveRanks();
forward AttachWeaponCorrectly(playerid, gun);
forward OnPlayerLogin(playerid,password[]);
forward HornA(playerid);
forward HornB(playerid);
forward STime(playerid);
forward RobBank(playerid);
forward RaceCheckpointReset();
forward SaveRace (playerid,name[]);
forward CallElevator(playerid, floorid);    // You can use INVALID_PLAYER_ID too.
forward ShowElevatorDialog(playerid);
forward RaceDebug (playerid);
forward LoadRace (playerid,name[]);
forward LoadRaceList (playerid,name[]);
forward SaveRaceList (playerid,name[]);
forward RaceSpec (playerid);
forward RaceDelayg();
forward ResetElevatorQueue();
forward RaceEnd ();
forward ResetCount(playerid);
#define SpamLimit (3000)
forward OnPlayerDataSave(playerid);
forward OnPlayerDataSave1(playerid);
forward SetAllPlayerRaceCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SendAdminMessage(color, string[]);
forward SendTestMessage(color, string[]);
forward test(playerid);
forward ResetPlayerWeaponsEx(playerid);
forward OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]);
forward RestoreWeapons(playerid);
forward HaveWeapon(playerid, weaponid);
forward IsModelAPlane(carid);
forward RemovePlayerWeapon(playerid, weaponid);
forward ABroadCast(color,const string[],level);
forward GivePlayerGun(playerid, weaponid);
forward AntiHackCheat();
forward Counting(playerid);
forward Counting2(playerid);
forward Counting1(playerid);
forward CountingGO(playerid);
forward ECounting(playerid);
forward ECounting2(playerid);
forward ECounting1(playerid);
forward ECountingGO(playerid);
forward ABroadCast(color,const string[],level);
forward ShowStats(playerid, targetid);
forward IsPlayerInInvalidNosVehicle(playerid);
forward SaveAccounts();
forward GeneralTimer();
forward SetPlayerToTeamColor(playerid);
forward ResetStats(playerid);
forward SendTeamMessage(team, color, string[]);
forward SetPlayerSpawn(playerid);
forward LoadUser_data(playerid,name[],value[]);
forward UpdateTimer();
forward SendLeaderMessage(color, string[]);
forward SendFactionMessage(faction, color, string[]);
forward SetPlayerSpawn(playerid);
forward SetPlayerToTeamColor(playerid);
forward GeneralTimer();
forward Payday(playerid);
forward TimeTextForPlayer(playerid, Text:text, time);
forward PickupDestroy(playerid);
forward TipBot();
forward DMWEP();
forward GameBot();
forward FastestReaction(playerid);
forward StartLotto();
forward BanLog(string[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward GetClosestPlayer(p1);
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward ClearCrime(playerid);
forward CrimInRange(Float:radi, playerid,copid);
forward IsACopCar(carid);
forward VehicleOccupied(vehicleid);
forward SpeedoUpdate();
forward ReportLog(string[]);
forward RconLog(string[]);
forward ScoreUpdate();
forward InfiniteNitro();
forward CheckVeh(playerid);
//==========================[Заключени коли]=======================================
new ABcars[120];
new Dpkcars[999];
new yakuzacars[30];
new grovecars[90];
new ballascars[41];
new rockcars[30];
new vagoscars[150];
new vipcars[60];
new azteccars[30];
new vcripzcars[100];
new boyzcars[30];
new killazcars[30];
new atcars[30];
new gpcars[999];
new dfcars[999];
new rifacars[30];
new ecoastcars[30];
new latincars[130];
new fbicars[30];
new cbkcars[30];
new sbcars[100];
//==============================================================================
new dstring[26];

//===========================[Turf System]======================================
#define STANDINTURF_TIME 120000
#define MEMBERS_NEEDED   1
#define ATTACK_KILLS     1
#define ATTACK_TIME      1000
#define MAX_TURFS        89
#define TEAMSCORE        8700
forward StartWar(turf, attacker);
forward IsPlayerInTurf(playerid, Float:min_x, Float:min_y, Float:max_x, Float:max_y);
//==============================================================================
new TimerStarted[MAX_TURFS];
//remember that if you have 4 5 6..etc or more zones capturables you must change #define MAX_ZONES 3 this
new gPlayerAccount[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new BladeKill[MAX_PLAYERS];
new PlayerSpectating[MAX_PLAYERS];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
new Float:C4P[MAX_PLAYERS][3];
new CreatedCars[200];
new CreatedCar = 20;
new PlayerKilled[MAX_PLAYERS];
new gRaceGuy[MAX_PLAYERS];
new HitID[MAX_PLAYERS];
new SpecPlayerReturnPos[MAX_PLAYERS];
new gDropPickup[MAX_PLAYERS];
new gPickupID[MAX_PLAYERS];
new realchat = 1;
new CalculateStarted;
new CalculateEvent;
new BetRace[MAX_PLAYERS][2];
new reactiontimer[MAX_PLAYERS];
new PlayerInEvent[MAX_PLAYERS];
new AntiCFired[MAX_PLAYERS];
new Jackpot;
new EventPlayers;
new IsInBus[MAX_PLAYERS];
new Timer1[MAX_PLAYERS];
new Timer2[MAX_PLAYERS];
new Timer3[MAX_PLAYERS];
new IsHitman[MAX_PLAYERS];
new PlayerCar[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new FactionRequest[MAX_PLAYERS];
new VehicleWindows[MAX_VEHICLES] = 0;
new pammo;
new ScoreOld;
new levelexp = 3;
new Checkveh[MAX_PLAYERS];
new Text:Text[MAX_PLAYERS];
new Text:Text1[MAX_PLAYERS];
new Text3D:PlayerLabel;
new VIPLabel[MAX_PLAYERS];
new TogChat[MAX_PLAYERS];
new VIPLabel4[MAX_PLAYERS];
new REDTA[MAX_PLAYERS];
new Hide21[MAX_PLAYERS];
new Hide22[MAX_PLAYERS];
new Tspec2[MAX_PLAYERS];
new Tgoto2[MAX_PLAYERS];
new RifaCam[MAX_PLAYERS];
new BombC[MAX_PLAYERS];
new VIPLaser[MAX_PLAYERS];
new Mph[MAX_PLAYERS];
new Text:CD;
new fbi1;
new fbi2;
new lsk1;
new lsk2;
new msgate;
new dpk1;
new dpk2;
new novab6;
new novab5;
new novab4;
new novab3;
new novab2;
new novab1;
new lvpdb;
new lspdb;
new lsb;
new sfpdb;
new lvpdb1;
new lspdb1;
new dfb1;
new sfpdb1;
new ctfp = 0;
new ctfp110;
new ctfp111;
new ctfp112;
new ctfp113;
new ctfp114;
new ctfp115;
new ctfp116;
new flag1;
new flag2;
new flag3;
new flag4;
new ctfp117;
new ctfp118;
new ctfp119;
new ctfp200;
new ctfp201;
new ctfp202;
new ctfp203;
new RedPoints = 0;
new BluePoints = 0;
new ctfp204;
new ctfp205;
new ctfp206;
new lvpdb2;
new lspdb2;
new sfpdb2;
new sendername[MAX_PLAYERS];
new hp1, hp2, hp3, hp5, hp6, hp7, hp8,hp9, hp10,hp11,hp12,hp13,hp14,hp15,hp16,hp18,hp19,hp20,hp21,hp22,hp23,hp24,hp25;
new Text:Intro[12];
new Menu:TuningMenu;
new Menu:Paintjobs;
new Menu:Colors;
new Menu:Colors1;
new Menu:Exhausts;
new Menu:Frontbumper;
new Menu:Rearbumper;
new Menu:Roof;
new Menu:Spoilers;
new Menu:Sideskirts;
new Menu:Wheels;
new Menu:Wheels1;
new Menu:Nitro;
new Menu:Others;
new Float:hp[MAX_PLAYERS];
new Float:armour[MAX_PLAYERS];
new Gate;
new Tuning[MAX_PLAYERS];
new TuneArea[MAX_PLAYERS];

forward AnnounceMSG();
forward CheckTune(playerid);
forward OpenGate(playerid);
//==========================[Полиця]=====================================
new OnDuty[MAX_PLAYERS];
new DFDuty[MAX_PLAYERS];
new Func[MAX_PLAYERS];
new WantedLevel[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new Moneybox = 1;
new Kufar = 0;
new Death = 0;
new Death2 = 0;
new Death3 = 0;
new Race = 0;
new Race2 = 0;
new Race3 = 0;
new ctfpl = 0;
new derbypl = 0;
new sabrani = 0;
new svpl = 0;
new ctfpl1 = 0;
new ctfpl2 = 0;
new ctfred = 1;
new ctfblue = 0;
new F1 = 500;
new F2 = 500;
new F3 = 500;
new F4 = 500;
//
#define TIMER_INTERVAL 150

new maxPlayers;

new pTazer[MAX_PLAYERS];
//
//==========================[Текстове]========================================
new Text:txtSpec;
//=========================[Световно време]=========================================
//==============================================================================

forward SavePlayerHouse(houseid);
forward ReadPlayerHouseData(playerid);
forward SavePlayerBus(houseid);
forward ReadPlayerBusData(playerid);

new Timer[1];



enum rInfo
{
	Float:rStartx,
	Float:rStarty,
	Float:rStartz,
	Float:rMidx,
	Float:rMidy,
	Float:rMidz,
	Float:rMid2x,
	Float:rMid2y,
	Float:rMid2z,
	Float:rEndx,
	Float:rEndy,
	Float:rEndz,
	rName[MAX_PLAYER_NAME],
	rBest[MAX_PLAYER_NAME],
	rBestm,
	rBests,
	rBestms,
	rLaps,
		Float:rX,
	Float:rY,
	Float:rZ,
	Float:rRX,
	Float:rRY,
	Float:rRZ,
	Float:rRadio,
	rVelMax,
	rCreado
};
//
new RadarInfo[MAXIMO_DECAMARAS][rInfo];
enum pInfo
{
pVreme,
pBalon1,
pBalon2,
pBalon3,
pBalon4,
pInCTF,
pInDerby,
pRedCTF,
pBlueCTF,
pCTFTimer,
pDerbyTimer,
pADMINMUTE,
pHouse1,
pNRob2,
pNTime,
pTuba,
pTuba2,
pVremeMin,
pBankaTi,
pATMTime,
pATMRob2,
pRespawncars1,
VoteText[70],
pVturf,
Float:pHouse2,
Float:pHouse3,
pBiz1,
Float:pBiz2,
Float:pBiz3,
pSpawnHouse,
pSpawnBiz,
pBizInfor,
pHouseInfor,
pEarnings,
pInHouseID,
pFlakche1,
pBizPayday,
pVudica,
pInHouse,
pInBiz,
pStruv,
pFlakche2,
SpawnataKola,
pRedTa,
pTogCB,
pTspec,
pTgoto,
pTogSuspect,
pTogWasted,
pStrip,
pTimerG,
pTimerB,
pIgnore1,
pRa1,
pRa2,
pIntId,
pKolelo1,
pKolelo2,
pCBC,
pTText1,
pTText2,
pTText3,
pTText4,
pTText5,
pTText6,
pCB,
pCMN1Kill,
pCMN1,
pCMN1T,
pCou1,
pCou2,
pCou3,
pCou4,
pCou5,
pCMN1T2,
pCMN1T3,
pCMN1T4,
pCMN1T5,
pMon,
pSt,
pDea,
pBombs,
pPlacedB,
pMuteReason,
pActivatedB,
pMutedTime, //Тук ще се запише времето за което е заглушен
	pTest,
	pSkin,
	pKey[256],
	ExpS,
	pTazerBullets,
	pIP[21],
	pO,
	pO4,
	pZabrana,
	pO5,
    pO6,
   	pJobTimer,
   	plPhousekey,
    plPbiskey,
	pAdmin,
	pOfis1,
	pBizO,
	pHouseO,
	pOfis2,
	pOfis3,
	pOfis4,
	pOfis5,
	pOfis6,
	pOfis7,
	pOfis8,
	pOfis9,
	pOfis10,
	pOfis11,
	pOfis12,
	pOfis13,
	pOfis,
	pOfis14,
	pOfis15,
	pOfis16,
	pOfis17,
	pOfis18,
	pOfis19,
	pOfis20,
	pStunt,
	pTick,
	pNroB,
	pRob1,
	pRobB,
	pRobN,
	pZarche,
	pRegister44,
	pRober,
 pRoberN2,
	pRoberN,
	pRoberB,
	LockPick,
	RobberyTime,
	pGD,
	pGFCDuty,
	pLimit,
	pHora,
	pNameO,
	//
	pFight,
	pEnter,
	//
	pHitman,
	pHM,
	pR,
	pMUTE1,
	pMUTE2,
	pKK1,
	pKK2,
 pMUTE3,
	pWK,
	pWIK,
	pCoc,
	pMoonshine,
	pWeed,
	pHeroin,
	pCok,
	pSR,
	pChovek,

	pEU,
	pEventOn,
	pEventOn2,
	pZvezda1,
	pRB,
	pRB2,
	pKickT,
	pCarPos1,
	pCarPos2,
	pCarPos3,
	pCarPos4,
	pCarPos5,
	pCarPos6,
	pCarPos7,
	pCarPos8,
	pCarPos9,
	pCarPos10,
	pCarPos11,
		pCarPos12,
	pCar1,
	pCar2,
	pCar3,
	pCar4,
	pCar5,
	pCar6,
	pCar7,
    pCar8,
    pCar9,
    pCar10,
    pCar11,
	pCar12,
 p4anti,
 pGranati,
 pPrefix,
 pPrefix2,
 pHouse,
    pBenzinka1,
    pBenzinka2,
    pBenzinka3,
    pBenzinka4,
	pCnos,
	pParrot,
	pSanta,
	pNPM,
	pCivilS,
	pGFCS,
	pOfficeS,
	pDuel,
	pDuelH,
	pDD,
	pDuelMoney,
	pDuelMoney2,
	pVote,
	pVote2,
	pVoteT1,
	pVoteT2,
	pVoteTime,
	pRT,
	pDa,
	pDa2,
	pNe2,
	pResTime,
	pMonTime,
	pDeaTime,
	pCMTime,
	pStTime,
	pResTime2,
	pResTime3,
	pResTime4,
	pDa4,
    pDa3,
    pNe3,
    pNe4,
	pNe,
	pNone,
	pBoxing,
	pKungfu,
	pElblow,
	pGrabKick,
	pGFC,
	pOffice,
	pIgnor,
	pMoneybox,
	pKufar,
	pHili,
	pSamolet,
	pTowT,
	pVlak,
	pBoat,
	pCoalmine1,
	pPiza1,
	pBus1,
	pPilot1,
	pSweep1,
    pDeath,
	pCuffed,
	pCig,
    pPhousekey,
    pPbiskey,
	pSilenSkill,
	pDrugPerk,
	pRadio,
	pInEvent,
	pInEventAdmin,
	pDis,
	pEvent,
	pAccount,
	pManage,
	aDuty,
	DutyG,
	aTog,
	pRank,
	pMember,
	pBanned,
	pBReason,
	pBlock,
	pDonateRank,
	pDeltaForce,
	pTimeVip,
	pBV,
	pO2,
	pO3,
	pWarns,
	pAWarns,
	pFWarns,
	pReg,
	pReg2,
	pCash,
	pKills,
	pDeaths,
	pGun0,
	pGun1,
	pGun2,
	pGun3,
	pGun4,
	pGun5,
	pGun6,
	pGun7,
	pGun8,
	pGun9,
	pGun10,
	pGun11,
	pGun12,
	pModel,
	pMuted,
	prMuted,
	ptrMuted,
	ptMuted,
	pvMuted,
	paMuted,
	pvtMuted,
	patMuted,
	pfMuted,
	pftMuted,
	pSpree,
	Float:pCalcSec,
	pCWons,
	pLotto,
	pHide,
	pHide2,
	pHide3,
	pHide4,
    pIgnorePM,
    pJailed,
	pCrimes,
	pWantedLevel,
	pWantedDeaths,
	pJail,
	pHealme,
	pRefuel9,
	pFixme,
	pRes,
	pResP1,
	pResP2,
	pResPA,
	pResPB,
	pResLVPD,
	pResLSPD,
	pResLS,
	pResDF,
	pResDPK,
	pResSFPD,
	pRobTime1,
	pAtm,
	pResP3,
	pMoneyG,
	pRegi,
	pSave,
	pTimeVip2,
	pGmxTime,
	pTimer1,
	pTimer2,
	pTimer3,
	pTimer4,
	pTimer5,
	pTimer6,
	pTimer7,
	pTimer8,
	pTimer9,
	pTimer10,
	pTimer11,
	pTimeAdmin,
	pMoney,
	pDMF,
	pDMF2,
	pInDMF,
	pDMFK,
	pDM,
	pPilot,
	pBus,
	pPizza,
	pSweep,
	pCoalmine,
	pResP4,
	pResP5,
	pResP6,
	pNN,
	pKill,
	pArmourme,
	AFKstatus,
	Level,
	Exp,
	pJailTime,
	WsSkill,
    pDmon,
    pAcuffed,
    pPP,
	pPayD,
	pYear,
	pMounth,
	pDay,
	p4as,
	pMinuti,
	pSekundi,
	pGL,
    pDP,
	pVHouse,
    pV,
   	EpSkill,
   	LevelSkill,
   	pDMKills2,
   	plDa,
	MoneySkill
};
new PlayerInfo[MAX_PLAYERS][pInfo];

enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];
//==============================================================================
//==============================================================================
enum SAZONE_MAIN
{
		SAZONE_NAME[38],
		Float:SAZONE_AREA[6]
};

enum dmInfo
{
	Kills,
	Rekord[64]
}




enum oInfo
{
	Office1,
	Office2,
	Office3,
	Office4,
	Office5,
	Office6,
	Office7,
	Office8,
	Office9,
	Office10,
	Office11,
	Office12,
	Office13,
	Office14,
	Office15,
	Office16,
	Office17,
	Office18,
	Office19,
	Office20,
	OfficeOwner1[64],
	OfficeOwner2[64],
	OfficeOwner3[64],
	OfficeOwner4[64],
	OfficeOwner5[64],
	OfficeOwner6[64],
	OfficeOwner7[64],
	OfficeOwner8[64],
	OfficeOwner9[64],
	OfficeOwner10[64],
	OfficeOwner11[64],
	OfficeOwner12[64],
	OfficeOwner13[64],
	OfficeOwner14[64],
	OfficeOwner15[64],
	OfficeOwner16[64],
	OfficeOwner17[64],
	OfficeOwner18[64],
	OfficeOwner19[64],
	OfficeOwner20[64],
	RestartTime
}


enum gInfo
{
    TeamName[64],
	TeamColor,
	TurfWarsWon,
	TurfWarsLost,
	RivalsKilled,
	HomiesDied,
	TeamScore,
	fRank1[255],
	fRank2[255],
	fRank3[255],
	fRank4[255],
	fRank5[255],
	fRank6[255],
  	fRank7[255],
  	fRank8[255]
}




enum tinfo
{
	 turfID,
 	 turfName[ 40 ],
 	 cityName[ 40 ],
	 Float:zMinX,
	 Float:zMinY,
	 Float:zMaxX,
	 Float:zMaxY,
	 TurfColor,
	 TurfOwner,
	 TurfAttacker,
	 TurfKills,
	 TurfAttackKills,
	 TurfWarStarted,
	 MIT
}




#define C_CIVIL          0x47474796
#define C_GSF          0x00990096
#define C_BALAS          0xBC0EC096
#define C_VAGOS          0xDFEF1F96
#define C_VIP          0x47474796
#define C_AZTEC          0x00E1FF96
#define C_BOYZ          0xABA9A996
#define C_GPD          0x47474796
#define C_AB          0x00CC9996
#define C_SOA          0xCC000096
#define C_BLM          0x1A1A1A96
#define C_MS13          0x0000FF96
#define C_RIFA          0x00999996
#define C_YAKUZA          0x33FF9996
#define C_BGM          0xFF33FF96
#define C_LK          0xFFCC0096
#define C_FBI          0x47474796
#define C_BOYS          0x8F0B0B96
#define C_TLIFE          0x0066CC96
#define C_DPK          0xFF990096


new turfs[MAX_TURFS][tinfo] = {
{  0, "Grove Street",      "LS", 2440.60, -1629.70, 2540.90, -1723.70, 0x00990096,   TEAM_GROVE,   -1, 0, 0, 0, 0},
{  1, "Ganton",            "LS", 2440.60, -1629.70, 2226.30, -1723.70, 0x00990096,   TEAM_GROVE,   -1, 0, 0, 0, 0},
{  2, "Idlewood",          "LS", 1812.60, -1852.80, 1971.60, -1742.30, 0x47474796,  TEAM_CIVILIAN,  -1, 0, 0, 0, 0},
{  3, "Idlewood",          "LS", 1951.60, -1742.30, 2124.60, -1602.30, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{  4, "Idlewood",          "LS", 1812.60, -1602.30, 2124.60, -1449.60, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{  5, "Idlewood",          "LS", 2124.60, -1742.30, 2222.50, -1494.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{  6, "Idlewood",          "LS", 1971.60, -1852.80, 2222.50, -1742.30, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{  7, "Idlewood",          "LS", 1812.60, -1742.30, 1951.60, -1602.30, 0x47474796,  TEAM_CIVILIAN,  -1, 0, 0, 0, 0},
{  8, "Willow Field",      "LS", 1970.60, -2179.20, 2089.00, -1852.80, 0x47474796,  TEAM_CIVILIAN,  -1, 0, 0, 0, 0},
{  9, "Willow Field",      "LS", 2089.00, -1989.90, 2324.00, -1852.80, 0x47474796,  TEAM_CIVILIAN,  -1, 0, 0, 0, 0},
{ 10, "Willow Field",      "LS", 2089.00, -2235.80, 2201.80, -1989.90, 0x47474796,  TEAM_CIVILIAN,  -1, 0, 0, 0, 0},
{ 11, "Jefferson",         "LS", 2056.80, -1372.00, 2281.40, -1210.70, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 12, "Jefferson",         "LS", 2056.80, -1210.70, 2185.30, -1126.30, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 13, "Jefferson",         "LS", 2056.80, -1449.60, 2266.20, -1372.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 14, "East Los Santos",   "LS", 2421.00, -1628.50, 2632.80, -1454.30, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 15, "East Los Santos",   "LS", 2222.50, -1628.50, 2421.00, -1494.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 16, "East Los Santos",   "LS", 2266.20, -1494.00, 2381.60, -1372.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 17, "East Los Santos",   "LS", 2281.60, -1372.00, 2381.60, -1135.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 18, "East Los Santos",   "LS", 2381.60, -1454.30, 2462.10, -1135.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 19, "East Los Santos",   "LS", 2462.10, -1454.30, 2581.70, -1135.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 20, "El Corona",         "LS", 1812.60, -2179.20, 1970.60, -1852.80, 0x47474796,  TEAM_CIVILIAN,  -1, 0, 0, 0, 0},
{ 21, "El Corona",         "LS", 1692.60, -2179.20, 1812.60, -1842.20, 0x47474796,  TEAM_CIVILIAN,  -1, 0, 0, 0, 0},
{ 22, "Glen Park",         "LS", 1812.60, -1350.70, 2056.80, -1100.80, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 23, "Los Flores",        "LS", 2581.70, -1393.40, 2747.70, -1135.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 24, "Las Colinas",       "LS", 1994.30, -1100.80, 2056.80,  -920.80, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 25, "Las Colinas",       "LS", 2056.80, -1126.30, 2126.80,  -920.80, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 26, "Las Colinas",       "LS", 2185.30, -1154.50, 2281.40,  -934.40, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 27, "Las Colinas",       "LS", 2126.80, -1126.30, 2185.30,  -934.40, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 28, "Las Colinas",       "LS", 2632.70, -1135.00, 2747.70,  -945.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 29, "Las Colinas",       "LS", 2281.40, -1135.00, 2632.70,  -945.00, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 30, "Temple",       "LS", 1153.92, -1158.21, 1344.07, -1025.30, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 31, "Temple",       "LS", 954.83, -1158.21, 1153.92, -1025.30, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 32, "Vinewood",       "LS", 789.10, -1158.21, 954.83, -936.29, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 33, "Temple",       "LS", 954.75, -1025.30, 1152.46, -936.29, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 34, "Temple",       "LS", 1049.42, -1289.62, 1221.19, -1158.21, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 35, "Temple",       "LS", 1221.19, -1289.62, 1341.26, -1158.21, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 36, "Vinewood",       "LS", 1153.92, -1025.30, 1341.26, -862.01, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 37, "Verona Beach",       "LS", 1145.10, -1718.26, 1292.30, -1565.49, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 38, "Verona Beach",       "LS", 1041.96, -1718.26, 1145.10, -1565.49, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 39, "Conference Center",       "LS", 1041.96, -1860.83, 1177.37, -1718.26, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 40, "Conference Center",       "LS", 1177.37, -1860.83, 1292.30, -1718.26, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 41, "Verona Beach",       "LS", 910.96, -1860.83, 1041.96, -1718.26, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 42, "Verona Beach",       "LS", 910.96, -1718.26, 1041.96, -1410.60, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 43, "Market",       "LS", 1041.96, -1565.49, 1347.25, -1410.60, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 44, "Santa Maria Beach",       "LS", 349.85, -2088.68, 622.75,-1684.52, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 45, "Santa Maria Beach",       "LS", 622.75, -2088.68, 804.95, -1684.52, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 46, "Verona Beach",       "LS", 804.95, -2088.68, 912.48, -1684.52, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 46, "Rodeo",       "LS", 359.47, -1684.52, 522.61, -1410.60, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 47, "Rodeo",       "LS", 522.61, -1684.52, 629.04, -1410.60, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 48, "Marina",       "LS", 629.04, -1684.52, 792.07, -1410.60, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 49, "Verona Beach",       "LS", 792.07, -1684.52, 910.96, -1410.60, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 50, "Verona Beach",       "LS", 912.48, -2088.68, 1057.43, -1860.83, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 51, "LV",       "LV", 1576.171875,890.625,1740.234375,1130.859375, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 52, "LV",       "LV", 2226.5625,1207.03125,2414.0625,1365.234375, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 53, "LV",       "LV", 1007.8125,1394.53125,1212.890625,1804.6875, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 54, "LV",       "LV", 2425.78125,1253.90625,2607.421875,1593.75, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 55, "LV",       "LV", 2724.609375,2285.15625,2906.25,2630.859375, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 56, "LV",       "LV", 1119.140625,2724.609375,1535.15625,2853.515625, 0x47474796,   TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 57, "LV",       "LV", -369.140625,2630.859375,-123.046875,2812.5, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 58, "LV",       "LV", 1787.109375,1453.125,2044.921875,1710.9375, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 59, "LV",       "LV", 1224.609375,2068.359375,1517.578125,2291.015625, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 60, "LV",       "LV", 1687.5,2712.890625,1892.578125,2871.09375, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 61, "LV",       "LV", 884.765625,1863.28125,1007.8125,2490.234375, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 62, "LV",       "LV", 2285.15625,1992.1875,2501.953125,2408.203125, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 63, "LV",       "LV", -363.28125,1031.25,58.59375,1230.46875, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 64, "LV",       "LV", 1828.125,1277.34375,2050.78125,1441.40625, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 65, "LV",       "LV", 1839.84375,1095.703125,2044.921875,1259.765625, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 66, "LV",       "LV", 1751.953125,1160.15625,1751.953125,1160.15625, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 67, "LV",       "LV", 1294.921875,1892.578125,1705.078125,2044.921875, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 68, "LV",       "LV", 2156.25,650.390625,2408.203125,714.84375, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 69, "LV",       "LV", -134.765625,2414.0625,509.765625,2619.140625, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 70, "LV",       "LV", -1658.203125,2496.09375,-1376.953125,2748.046875, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 71, "LV",       "LV", -2238.28125,925.78125,-2138.671875,1154.296875, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 72, "LV",       "LV", -2748.046875,580.078125,-2531.25,691.40625, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 73, "LV",       "LV", -2841.796875,298.828125,-2619.140625,445.3125, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 74, "LV",       "LV", -2138.671875,123.046875,-2003.90625,298.828125, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 75, "LV",       "LV", -2232.421875,-281.25,-2003.90625,-87.890625, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 76, "LV",       "LV", -2794.921875,-205.078125,-2707.03125,275.390625, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 77, "LV",       "LV", -2994.140625,-2144.53125,-2355.46875,-832.03125, 0x47474796,  TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 78, "LV",       "LV", -2513.671875,-2630.859375,-1857.421875,-2226.5625, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 79, "LV",       "LV", -1863.28125,943.359375,-1576.171875,1248.046875, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 80, "LV",       "LV", -1880.859375,744.140625,-1564.453125,820.3125, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 81, "LV",       "LV", 64.453125,-281.25,333.984375,58.59375, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 82, "LV",       "LV", 603.515625,-650.390625,884.765625,-386.71875, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 83, "LV",       "LV", -1693.359375,-685.546875,-1189.453125,193.359375, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 84, "LV",       "LV", -626.953125,-216.796875,-369.140625,5.859375, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 85, "LV",       "LV", 2789.0625,1539.0625,2914.0625,1695.3125, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 86, "LV",       "LV", 2773.4375,1968.75,2843.75,2296.875, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0},
{ 87, "LV",       "LV", -2976.5625,109.375,-2843.75,414.0625, 0x47474796, TEAM_CIVILIAN,   -1, 0, 0, 0, 0}
};
new TurfInfo[MAX_TURFS][MAX_TEAMS][tinfo];
new TrInfo[MAX_TURFS][tinfo];

new OfInfo[MAX_OFFICES][oInfo];
new OfficeInfo[MAX_OFFICES][oInfo]= {
{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик","Няма собственик"}
};

new DmInfo[MAX_OFFICES][dmInfo];
new DmonInfo[MAX_OFFICES][dmInfo]= {
{0,"Nickname"}
};

new TeamInfo[MAX_TEAMS][gInfo]= {
{"Civilian", 0x474747FF, 0, 0, 0, 0, 0, "Няма име","Няма име","Няма име","Няма име","Няма име","Няма име","Няма име"},
{"Grove Street Families", 0x009900FF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Rolling Heights Ballas", 0xBC0EC0FF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Los Santos Vagos", 0xDFEF1FFF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"VIP", 0x474747FF, 0, 0, 0, 0, 0, "Новак","Напредващ","Добър","Много добър","Master VIP","Master Boss","Master VIP"},
{"Varrios Los Aztecas", 0x00E1FFFF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Boyz N The Hood", 0xABA9A9FF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Vinewood Cripz", CRIPZ_COLOR, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Gold Play Police Department", 0x474747FF, 0, 0, 0, 0, 0, "Полицай","Главен Полицай","Сержант","Комисар","Пом.Секретар","Гл.Секретар","Пом.Секретар"},
{"Asian Boyz", 0x00CC99FF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Sons of Anarchy", 0xCC0000FF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Black Mafia", 0x1A1A1AFF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Mara Salvatrucha 13", 0x0000FFFF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"San Fierro Rifa", 0x009999FF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Yakuza", 0x33FF99FF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Bulgarian Mafia", 0xFF33FFFF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Latin King", 0xFFCC00FF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Federal Bureau Of Investigation", 0x474747FF, 0, 0, 0, 0, 0, "Агент","Разследващ","Гл.Разследващ","Комисар","Пом.Секретар","Секретар","Пом.Секретар"},
{"Da Nang Boys", 0x8F0B0BFF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Thug Life", 0x0066CCFF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"},
{"Dark Professional Killers", 0xFF9900FF, 0, 0, 0, 0, 0, "Gangsta","Original Gangsta","Double OG","Left Hand","Right Hand","Boss","Right Hand"}
};
new rtimer = 0;
//--------------------------------------------------------------------------
//----------------------------------------RACES------------------------------------[location]--[-]---
//===========================[Спаунове]=====================================


//

new Float:gDarkSP[5][4] = {
{2595.3203,2790.6309,10.8203},//Spawn1
{2595.3203,2790.6309,10.8203},//Spawn2
{2595.3203,2790.6309,10.8203},//Spawn3
{2595.3203,2790.6309,10.8203},//Spawn4
{2595.3203,2790.6309,10.8203}//Spawn5
};

new Float:gYAKUZASP[5][4] = {
{1653.1796,-1657.5548,22.5156},//Spawn1
{1653.1796,-1657.5548,22.5156},//Spawn1
{1653.1796,-1657.5548,22.5156},//Spawn1
{1653.1796,-1657.5548,22.5156},//Spawn1
{1653.1796,-1657.5548,22.5156}//Spawn1
};

new Float:gRIFASP[5][4] = {
{2448.8928,-1689.2142,1013.5078},//Spawn1
{2448.8928,-1689.2142,1013.5078},//Spawn2
{2448.8928,-1689.2142,1013.5078},//Spawn3
{2448.8928,-1689.2142,1013.5078},//Spawn4
{2448.8928,-1689.2142,1013.5078}//Spawn5
};

new Float:gBallasSP[5][4] = {
{319.9264,1121.5272,1083.8828},//Spawn1
{319.9264,1121.5272,1083.8828},//Spawn2
{319.9264,1121.5272,1083.8828},//Spawn3
{319.9264,1121.5272,1083.8828},//Spawn4
{319.9264,1121.5272,1083.8828}//Spawn5
};

new Float:gVagosSP[5][4] = {
{2561.9292,-1034.1796,69.8692},//Spawn5
{2561.9292,-1034.1796,69.8692},//Spawn5
{2561.9292,-1034.1796,69.8692},//Spawn5
{2561.9292,-1034.1796,69.8692},//Spawn5
{2561.9292,-1034.1796,69.8692}//Spawn5
};

new Float:gVIPSP[5][4] = {
{1240.9114,-1994.8860,75.1484},//Spawn1
{1197.7469,-2007.2761,85.0184},//Spawn2
{1199.1018,-2069.4387,85.0184},//Spawn3
{1139.7769,-2065.7366,85.0184},//Spawn4
{1240.7010,-2067.4319,75.9784} //Spawn5
};
new Float:gTriadsSP[5][4] = {
{260.5778,1246.5238,1084.2578},//Spawn1
{260.5778,1246.5238,1084.2578},//Spawn2
{260.5778,1246.5238,1084.2578},//Spawn3
{260.5778,1246.5238,1084.2578},//Spawn4
{260.5778,1246.5238,1084.2578} //Spawn5
};

new Float:gBoyzSP[5][4] = {
{2000.0938,-1117.2380,26.7813,177.9984},//Spawn1
{2000.0938,-1117.2380,26.7813,177.9984},//Spawn2
{2000.0938,-1117.2380,26.7813,177.9984},//Spawn3
{2000.0938,-1117.2380,26.7813,177.9984},//Spawn4
{2000.0938,-1117.2380,26.7813,177.9984} //Spawn5
};

new Float:gCripzSP[3][4] = {
{140.1997,1378.8831,1088.3672},
{140.1997,1378.8831,1088.3672},
{140.1997,1378.8831,1088.3672}
};

new Float:CivilSP[5][4] = {
{2178.6616,1285.8413,10.8203},//Spawn1
{2178.6616,1285.8413,10.8203},//Spawn2
{2551.8525,2244.3210,10.8203},//Spawn3
{2551.8525,2244.3210,10.8203},//Spawn4
{1742.7982,-1860.4419,13.5787}//Spawn5
};

new Float:GPDSP[5][4] = {
{246.4222,68.3082,1003.6406},//Spawn1
{239.0824,75.6765,1005.0391},//Spawn2
{257.1103,74.3868,1003.6406},//Spawn3
{255.1870,87.5600,1002.4453},//Spawn4
{246.4578,82.4245,1003.6406} //Spawn5
};

new Float:ZETAS[5][4] = {
{1118.6508,-972.1447,42.7656},//Spawn1
{1118.6508,-972.1447,42.7656},//Spawn2
{1110.1964,-969.0804,42.7648},//Spawn3
{1110.1964,-969.0804,42.7648},//Spawn4
{1105.0461,-963.6760,42.6176} //Spawn5
};
new Float:SoA[5][4] = {
{-759.4400,2761.6636,47.2002},//Spawn1
{-775.5325,2761.6631,47.2002},//Spawn2
{-785.9677,2764.1980,47.2006},//Spawn3
{-785.9679,2748.5845,47.2006},//Spawn4
{-781.7305,2741.9326,45.8556} //Spawn5
};
new Float:MS13 [5][4] = {
{-209.3824,2706.2913,62.6875},//Spawn1
{-225.7985,2695.5142,62.6875},//Spawn2
{-243.5033,2709.2351,62.6875},//Spawn3
{-249.5094,2714.4771,62.6875},//Spawn4
{-206.3429,2711.1960,62.8294}//Spawn5
};
new Float:BulgarianMafia [5][4] = {
{1264.4801,-779.1598,1091.9063},//Spawn1
{1264.4801,-779.1598,1091.9063},//Spawn2
{1264.4801,-779.1598,1091.9063},//Spawn3
{1264.4801,-779.1598,1091.9063},//Spawn4
{1264.4801,-779.1598,1091.9063}//Spawn5
};
new Float:RussianMafia [5][4] = {
{1118.0685,-1022.0148,34.9922},//Spawn1
{1118.0685,-1022.0148,34.9922},//Spawn1
{1118.0685,-1022.0148,34.9922},//Spawn1
{1118.0685,-1022.0148,34.9922},//Spawn1
{1118.0685,-1022.0148,34.9922}//Spawn5
};
new Float:BlackStreet [5][4] = {
{946.7731,1731.7408,8.8516,279.9705},//Spawn1
{946.7731,1731.7408,8.8516,279.9705},//Spawn2
{946.7731,1731.7408,8.8516,279.9705},//Spawn3
{946.7731,1731.7408,8.8516,279.9705},//Spawn4
{946.7731,1731.7408,8.8516,279.9705}//Spawn5
};
new Float:NZ [5][4] = {
{2621.4243,1824.9431,11.0234},//Spawn1
{2596.9932,1887.0588,11.0234},//Spawn2
{2558.8975,1790.5900,11.0234},//Spawn3
{2621.4243,1824.9431,11.0234},//Spawn4
{2558.8975,1790.5900,11.0234}//Spawn5
};
new Float:SB [5][4] = {
{140.1997,1378.8831,1088.3672},
{140.1997,1378.8831,1088.3672},
{140.1997,1378.8831,1088.3672},
{140.1997,1378.8831,1088.3672},
{140.1997,1378.8831,1088.3672}
};
//==============================================================================
enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	Float:sAngle,
	sVw,
	sCam,
};
new Unspec[MAX_PLAYERS][pSpec];
//==============================================================================
main()
{
    print("GTA");
    print("GOLD-PLAY");
    print("GOLD PLAY 1.6");
}
//==============================================================================
stock GivePlayerArmour(playerid,Float:Armour)
{
new Float:armour; GetPlayerHealth(playerid,armour);
SetPlayerArmour(playerid,armour+Armour);
}

stock GivePlayerHealth(playerid,Float:Health)
{
new Float:health; GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+Health);
}

stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetPlayerPos(playerid, x22, y22, z22);
 	for(new i = 0; i != sizeof(gSANZones); i++ )
 	{
		if(x22 >= gSANZones[i][SAZONE_AREA][0] && x22 <= gSANZones[i][SAZONE_AREA][3] && y22 >= gSANZones[i][SAZONE_AREA][1] && y22 <= gSANZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSANZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetPlayer2DRadarZone(playerid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetPlayerPos(playerid, x22, y22, z22);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x22 >= gSAZones[i][SAZONE_AREA][0] && x22 <= gSAZones[i][SAZONE_AREA][3] && y22 >= gSAZones[i][SAZONE_AREA][1] && y22 <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetVehicle2DZone(vehicleid, zone[], len)
{
	new Float:x22, Float:y22, Float:z22;
	GetVehiclePos(vehicleid, x22, y22, z22);
 	for(new i = 0; i != sizeof(gSANZones); i++ )
 	{
		if(x22 >= gSANZones[i][SAZONE_AREA][0] && x22 <= gSANZones[i][SAZONE_AREA][3] && y22 >= gSANZones[i][SAZONE_AREA][1] && y22 <= gSANZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSANZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}

stock GetPlayer3DZone(playerid, zone[], len)
{
	new Float:x33, Float:y33, Float:z33;
	GetPlayerPos(playerid, x33, y33, z33);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x33 >= gSAZones[i][SANZONE_AREA][0] && x33 <= gSAZones[i][SANZONE_AREA][3] && y33 >= gSANZones[i][SAZONE_AREA][1] && y33 <= gSANZones[i][SAZONE_AREA][4] && z33 >= gSAZones[i][SANZONE_AREA][2] && z33 <= gSANZones[i][SAZONE_AREA][5])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}




stock strvalEx( const string[] )
{
	if( strlen( string ) >= 50 ) return 0;
	return strval(string);
}
IsPlayerInArea(playerid, Float:MinX, Float:MinY, Float:MaxX, Float:MaxY)
{
	new Float:X, Float:Y, Float:Z;

	GetPlayerPos(playerid, X, Y, Z);
	if(X >= MinX && X <= MaxX && Y >= MinY && Y <= MaxY) {
		return 1;
	}
	return 0;
}

stock IsPlayerInWater( playerid )
{
        new Float[ 3 ];

        GetPlayerPos( playerid, Float[ 0 ], Float[ 1 ], Float[ 2 ] );
        if(
        (IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && Float[ 2 ] <= 9.0484) //lv piratenschiff
        || (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && Float[ 2 ] <= 10.0792) //lv visage
        || (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && Float[ 2 ] <= 41.06) //lv staucamm
        || (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && Float[ 2 ] <= 4.24) //sf sьdwesten kleiner teich
        || (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && Float[ 2 ] <= 5.72) //sf gammel teich
        || (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && Float[ 2 ] <= 9.3145) //ls neben dem airport
        || (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && Float[ 2 ] <= 18.45) //ls mitte teich
        || (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && Float[ 2 ] <= 22.615) //ls weiter sьdцstlich
        || (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && Float[ 2 ] <= 9.4171) //lv pool цstlich
        || (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && Float[ 2 ] <= 112.45) //ls pool nordwestlich
        || (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && Float[ 2 ] <= 87.123) //pool bei maddog's haus oben
        || (Float[ 2 ] < 1.5)
        )
        {
                return ( 1 );
        }
        return ( 0 );
}

stock IsPlayerAiming(playerid) {
	    new anim = GetPlayerAnimationIndex(playerid);
	    if (((anim >= 1160) && (anim <= 1163)) || (anim == 1167) || (anim == 1365) ||
	    (anim == 1643) || (anim == 1453) || (anim == 220)) return 1;
        return 0;
}
stock ToggleEngine(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, toggle, lights, alarm, doors, bonnet, boot, objective);
}
stock ToggleAlarm(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, toggle, doors, bonnet, boot, objective);
}
stock ToggleBonnet(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, toggle, boot, objective);
}
stock ToggleLights(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, toggle, alarm, doors, bonnet, boot, objective);
}
stock ToggleBoot(vehicleid, toggle)
{
	new engine, lights, alarm, doors, bonnet, boot, objective;
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, toggle, objective);
}
//==============================================================================
/*
strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}

	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
*/
//////////////////////////////

// ===============================================================[Stocklar]==//
//////////////////////////////
new Text:Txt1;
//==============================================================================
  new const PossibleRandomWeapons[][] =
{
     {9, 999999999}, //DEagle
     {16, 999999999}, //Shotgun
    {22, 999999999}, //Molotov
     {23, 999999999}, //Grenade
         {24, 999999999}, //DEagle
     {26, 999999999}, //Shotgun
     {25, 999999999}, //Molotov
     {28, 999999999}, //Grenade
         {30, 999999999}, //DEagle
     {31, 999999999}, //Shotgun
     {32, 999999999}, //Molotov
     {34, 999999999} //Grenade
    };



new RK2[][] =
{
{"Твоят кон победи"},
{"Твоят кон не спечели"}
};

new RK[][] =
{
{"Колелото се завъртя и се падна удвояване на печалбата"},
{"Колелото се завъртя и се падна утрояване на печалбата"},
{"Колелото се завъртя и се падна премахване на 1/5 от печалбата"},
{"Колелото се завъртя и се падна премахване на 1/6 от печалбата"},
{"Колелото се завъртя и се падна премахване на печалбата от играта"},
{"Колелото се завъртя и се падна +100 000 0$"},
{"Колелото се завъртя и се падна -100 000 0$"},
{"Колелото се завъртя и се падна -110 000 0$"},
{"Колелото се завъртя и се падна -120 000 0$"},
{"Колелото се завъртя и се падна +150 000 0$"},
{"Колелото се завъртя и се падна -200 000 0$"},
{"Колелото се завъртя и се падна +200 000 0$"},
{"Колелото се завъртя и се падна +100 0$"},
{"Колелото се завъртя и се падна -100 00$"},
{"Колелото се завъртя и се падна премахване на 1/2 от печалбата"},
{"Колелото се завъртя и се падна премахване на 1/3 от печалбата"},
{"Колелото се завъртя и се падна премахване на 1/4 от печалбата"},
{"Колелото се завъртя и се падна +100 000"},
{"Колелото се завъртя и се падна -100 000"},
{"Колелото се завъртя и се падна +100 000 0"},
{"Колелото се завъртя и се падна -100 000 0"},
{"Колелото се завъртя и се падна +200 000"},
{"Колелото се завъртя и се падна -200 000"}
};

new RS[][] =
{
{"http://gta.telnet.bg/samp/intro2.mp3"},
{"http://gta.telnet.bg/samp/intro3.mp3"},
{"http://gta.telnet.bg/samp/intro4.mp3"},
{"http://gta.telnet.bg/samp/intro5.mp3"},
{"http://gta.telnet.bg/samp/intro8.mp3"},
{"http://gta.telnet.bg/samp/intro7.mp3"},
{"http://gta.telnet.bg/samp/intro9.mp3"},
{"http://gta.telnet.bg/samp/intro10.mp3"},
{"http://gta.telnet.bg/samp/intro11.mp3"},
{"http://gta.telnet.bg/samp/intro12.mp3"},
{"http://gta.telnet.bg/samp/intro13.mp3"},
{"http://gta.telnet.bg/samp/intro14.mp3"},
{"http://gta.telnet.bg/samp/intro15.mp3"},
{"http://gta.telnet.bg/samp/intro16.mp3"},
{"http://gta.telnet.bg/samp/intro17.mp3"},
{"http://gta.telnet.bg/samp/intro18.mp3"},
{"http://gta.telnet.bg/samp/intro19.mp3"},
{"http://gta.telnet.bg/samp/intro20.mp3"},
{"http://gta.telnet.bg/samp/intro21.mp3"}
};
//
//




public OnGameModeInit()
{
LoadFactions();
LoadDMonTop();
	for(new h; h<MAX_HOUSES; h++) // Player Homes
	{
	    LoadPlayerHouse(h);
	    LoadPlayerBiz(h);
	}
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
	}
	
				for(new cars=0; cars<MAX_VEHICLES; cars++)
				{
					if(!VehicleOccupied(cars))
					{
				    {
						SetVehicleToRespawn(cars);
					}
				}
			    }
    new string[256];
ctfp119 = CreateObject(980, -980.092773, 1072.358398, 1346.458496, 0.000000, 0.000000, 88.399978);
ctfp200 = CreateObject(980, -979.771911, 1083.853515, 1346.458496, 0.000000, 0.000000, 88.399978);
ctfp201 = CreateObject(980, -979.451599, 1095.319580, 1346.458496, 0.000000, 0.000000, 88.399978);
ctfp202 = CreateObject(980, -980.579956, 1049.202636, 1346.458496, 0.000000, 0.000000, 88.399978);
ctfp203 = CreateObject(980, -980.898925, 1037.786254, 1346.458496, 0.000000, 0.000000, 88.399978);
ctfp204 = CreateObject(980, -981.218750, 1026.340332, 1346.458496, 0.000000, 0.000000, 88.399978);
ctfp205 = CreateObject(980, -981.540344, 1014.825073, 1346.458496, 0.000000, 0.000000, 88.399978);
ctfp206 = CreateObject(980, -980.416503, 1060.773315, 1340.355224, 0.000000, 0.000000, 88.399978);
ctfp110 = CreateObject(980, -1124.956176, 1057.738769, 1346.458496, 0.000000, 0.000000, 93.899948);
ctfp111 = CreateObject(980, -1124.169433, 1046.195068, 1346.458496, 0.000000, 0.000000, 93.899948);
ctfp112 = CreateObject(980, -1123.388671, 1034.741821, 1346.458496, 0.000000, 0.000000, 93.899948);
ctfp113 = CreateObject(980, -1122.601074, 1023.188293, 1346.458496, 0.000000, 0.000000, 93.899948);
ctfp114 = CreateObject(980, -1125.739624, 1069.221679, 1346.458496, 0.000000, 0.000000, 93.899948);
ctfp115 = CreateObject(980, -1125.479858, 1080.794433, 1346.458496, 0.000000, 0.000000, 82.299942);
ctfp116 = CreateObject(980, -1124.460449, 1092.237915, 1346.458496, -0.700000, -0.700000, 84.899948);
ctfp117 = CreateObject(980, -1123.437988, 1103.711791, 1346.458496, -0.700000, -0.700000, 84.899948);
ctfp118 = CreateObject(980, -980.416503, 1060.773315, 1346.468383, 0.000000, 0.000000, 88.399978);

SetTimer("FotoMultaON", 100, 1);
CrearFotoMulta(1476.9470,-1737.6896,13.5469,0,0,88.5490,15,maxskorost);
CrearFotoMulta(1707.6173,-1807.9862,13.3632,0,0,88.5490,15,maxskorost);
CrearFotoMulta(1734.9584,-1592.3029,13.3835,0,0,88.5490,15,maxskorost);
CrearFotoMulta(1937.2900,-1522.1754,3.3098,0,0,88.5490,15,maxskorost);
CrearFotoMulta(1856.8542,-1331.4075,13.3989,0,0,88.5490,15,maxskorost);
CrearFotoMulta(1772.1825,-1053.7264,42.6216,0,0,88.5490,15,maxskorost);
CrearFotoMulta(1650.4893,-935.4035,62.6043,0,0,88.5490,15,maxskorost);
CrearFotoMulta(1638.8320,267.3455,30.1589,0,0,88.5490,15,maxskorost);
CrearFotoMulta(1674.6486,300.4432,30.0763,0,0,88.5490,15,maxskorost);
CrearFotoMulta(1797.9141,831.0632,10.6643,0,0,88.5490,15,maxskorost);

                

Actor1 = CreateActor(300, 1544.7427,-1678.9276,13.5590, 88.70);
Actor2 = CreateActor(300, 1543.6855,-1672.8059,13.5569, 88.70);
Actor3 = CreateActor(300, 1543.9725,-1632.0413,13.3828, 91.33);
Actor4 = CreateActor(164, 1789.6075,-1300.1080,13.4497, 357.86);
Actor5 = CreateActor(282, 2284.2949,2431.3718,10.8203, 175.12);
Actor6 = CreateActor(282, 2238.2151,2449.3491,11.0372, 86.49);
Actor7 = CreateActor(281, -1600.9269,713.4275,13.4977, 358.32);
Actor8 = CreateActor(281, -1572.4325,657.7199,7.1875, 270.73);

//
Actor9 = CreateActor(105, 2510.7813,-1667.8630,13.5651,9.6971);
Actor10 = CreateActor(106, 2510.5188,-1667.1881,13.5663,201.5155);
    ApplyActorAnimation(Actor9, "PED","IDLE_CHAT",4.0,1,0,0,1,1);
    ApplyActorAnimation(Actor10, "PED","IDLE_CHAT",4.0,1,0,0,1,1);
     Actor11 = CreateActor(107, 2528.4082,-1667.4185,15.1687,269.2022);
    ApplyActorAnimation(Actor11, "BSKTBALL","BBALL_idleloop",4.0,1,0,0,0,0);
    Actor12 = CreateActor(106, 2529.3406,-1667.4746,15.1687,92.9382);
    ApplyActorAnimation(Actor12, "BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
//

SetTimer("FlyTimer",100,1);



    for (new t=0; t<MAX_TURFS; t++)
	{
         GangZoneCreate( turfs[ t ][zMinX], turfs[ t ][zMinY], turfs[ t ][zMaxX], turfs[ t ][zMaxY] );
         for (new teams=0; teams<MAX_TEAMS; teams++) TurfInfo[ t ][ teams ][ MIT ]=0;
    }
    
	        for(new i; i<MAX_PLAYERS; i++)
			{
			
			
			
	
			new vehicleid,Float:speed_x,Float:speed_y,Float:speed_z,Float:final_speed,final_speed_int;
vehicleid = GetPlayerVehicleID(i);
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+ (speed_z*speed_z))*136.666667;
final_speed_int = floatround(final_speed,floatround_round);
			if (final_speed_int >= 200)
{
					PlayerInfo[i][pWantedLevel] += 1;
					if(PlayerInfo[i][pWantedLevel] == 0)
					{
SetPlayerWantedLevel(i,0);
					}
										if(PlayerInfo[i][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(i,1);
					}
										if(PlayerInfo[i][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(i,2);
					}
										if(PlayerInfo[i][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(i,3);
					}
										if(PlayerInfo[i][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(i,4);
					}
										if(PlayerInfo[i][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(i,5);
					}
										if(PlayerInfo[i][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(i,6);
					}
}
			
new playerid;
new string[256];
				    		if(IsPlayerInRangeOfPoint(playerid, 10.0, 2149.8328,2748.2905,10.5474)) //
		{
        format(string, sizeof(string),"~w~FUEL~w~:%d",F1);
        GameTextForPlayer(playerid, string, 5000, 3);
		}
							    		if(IsPlayerInRangeOfPoint(playerid, 10.0, 1944.1652,-1769.8917,13.1157)) //
		{
		        format(string, sizeof(string),"~w~FUEL~w~:%d",F2);
        GameTextForPlayer(playerid, string, 5000, 3);
		}
			    		if(IsPlayerInRangeOfPoint(playerid, 10.0, 2116.6611,922.4604,10.5474)) //
		{
		        format(string, sizeof(string),"~w~FUEL~w~:%d",F3);
        GameTextForPlayer(playerid, string, 5000, 3);
		}
			    		if(IsPlayerInRangeOfPoint(playerid, 10.0, 2204.3835,2473.3994,10.5474)) //
		{
		        format(string, sizeof(string),"~w~FUEL~w~:%d",F4);
        GameTextForPlayer(playerid, string, 5000, 3);
		}
		}
    
	TuningMenu = CreateMenu("TuneMenu",1,20,120,150,40);
    AddMenuItem(TuningMenu,0,"Paint Jobs");
    AddMenuItem(TuningMenu,0,"Colors");
    AddMenuItem(TuningMenu,0,"Exhausts");
    AddMenuItem(TuningMenu,0,"Front Bumper");
    AddMenuItem(TuningMenu,0,"Rear Bumper");
    AddMenuItem(TuningMenu,0,"Roof");
    AddMenuItem(TuningMenu,0,"Spoilers");
    AddMenuItem(TuningMenu,0,"Side Skirts");
    AddMenuItem(TuningMenu,0,"Wheels");
    AddMenuItem(TuningMenu,0,"Others");

    // Paintjobs
    Paintjobs = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Paintjobs,0,"PaintJobs");
	AddMenuItem(Paintjobs,0,"Paintjob 1");
	AddMenuItem(Paintjobs,0,"Paintjob 2");
	AddMenuItem(Paintjobs,0,"Paintjob 3");
	AddMenuItem(Paintjobs,0,"Paintjob 4");
	AddMenuItem(Paintjobs,0,"Paintjob 5");
	AddMenuItem(Paintjobs,0,"Main Menu");

	// Colors
	Colors = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Colors,0,"Colors");
	AddMenuItem(Colors,0,"Black");
	AddMenuItem(Colors,0,"White");
	AddMenuItem(Colors,0,"Red");
	AddMenuItem(Colors,0,"Blue");
	AddMenuItem(Colors,0,"Green");
	AddMenuItem(Colors,0,"Yellow");
	AddMenuItem(Colors,0,"Pink");
	AddMenuItem(Colors,0,"Brown");
	AddMenuItem(Colors,0,"Next Page");
	

	// Colors 2
	Colors1 = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Colors1,0,"Colors");
    AddMenuItem(Colors1,0,"Grey");
	AddMenuItem(Colors1,0,"Gold");
	AddMenuItem(Colors1,0,"Dark Blue");
	AddMenuItem(Colors1,0,"Light Blue");
	AddMenuItem(Colors1,0,"Green");
	AddMenuItem(Colors1,0,"Light Grey");
	AddMenuItem(Colors1,0,"Dark Red");
	AddMenuItem(Colors1,0,"Dark Brown");
	AddMenuItem(Colors1,0,"Main Menu");

	// Exhausts
	Exhausts = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Exhausts,0,"Exhausts");
	AddMenuItem(Exhausts,0,"Wheel Arch Alien Exhaust");
	AddMenuItem(Exhausts,0,"Wheel Arch X-Flow Exhaust");
	AddMenuItem(Exhausts,0,"Loco Low-Co Chromer Exhaust");
	AddMenuItem(Exhausts,0,"Loco Low-Co Slamin Exhaust");
	AddMenuItem(Exhausts,0,"Main Menu");

	// Front bumpers
	Frontbumper = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Frontbumper,0,"Frontbumpers");
	AddMenuItem(Frontbumper,0,"Wheel Arch Alien bumper");
	AddMenuItem(Frontbumper,0,"Wheel Arch X-Flow bumper");
	AddMenuItem(Frontbumper,0,"Loco Low-Co Chromer bumper");
	AddMenuItem(Frontbumper,0,"Loco Low-Co Slamin bumper");
	AddMenuItem(Frontbumper,0,"Main Menu");

	// Rear bumpers
	Rearbumper = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Rearbumper,0,"Rearbumpers");
	AddMenuItem(Rearbumper,0,"Wheel Arch Alien bumper");
	AddMenuItem(Rearbumper,0,"Wheel Arch X-Flow bumper");
	AddMenuItem(Rearbumper,0,"Loco Low-Co Chromer bumper");
	AddMenuItem(Rearbumper,0,"Loco Low-Co Slamin bumper");
	AddMenuItem(Rearbumper,0,"Main Menu");

	// Roof
	Roof = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Roof,0,"Roof");
	AddMenuItem(Roof,0,"Wheel Arch Alien Roof Vent");
	AddMenuItem(Roof,0,"Wheel Arch X-Flow Roof Vent");
	AddMenuItem(Roof,0,"Loco Low-Co Hardtop Roof");
	AddMenuItem(Roof,0,"Loco Low-Co Softtop Roof");
	AddMenuItem(Roof,0,"Main Menu");

	// Spoilers
	Spoilers = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Spoilers,0,"Spoliers");
	AddMenuItem(Spoilers,0,"Alien Spoiler");
	AddMenuItem(Spoilers,0,"X-Flow Spoiler");
	AddMenuItem(Spoilers,0,"Main Menu");

	// Side skirts
	Sideskirts = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Sideskirts,0,"SideSkirts");
	AddMenuItem(Sideskirts,0,"Wheel Arch Alien Side Skirts");
	AddMenuItem(Sideskirts,0,"Wheel Arch X-Flow Side Skirts");
    AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Strip");
    AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Flames");
    AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Arches");
    AddMenuItem(Sideskirts,0,"Loco Low-Co Chrome Trim");
    AddMenuItem(Sideskirts,0,"Loco Low-Co Wheelcovers");
	AddMenuItem(Sideskirts,0,"Main Menu");







	// Wheels
	Wheels = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Wheels,0,"Wheels");
	AddMenuItem(Wheels,0,"Offroad");
	AddMenuItem(Wheels,0,"Mega");
	AddMenuItem(Wheels,0,"Wires");
	AddMenuItem(Wheels,0,"Twist");
	AddMenuItem(Wheels,0,"Grove");
	AddMenuItem(Wheels,0,"Import");
	AddMenuItem(Wheels,0,"Atomic");
	AddMenuItem(Wheels,0,"Ahab");
	AddMenuItem(Wheels,0,"Virtual");
	AddMenuItem(Wheels,0,"Access");
	AddMenuItem(Wheels,0,"Next Page");
	AddMenuItem(Wheels,0,"Main Menu");

	// wheels 2
	Wheels1 = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Wheels1,0,"Wheels");
	AddMenuItem(Wheels1,0,"Trance");
	AddMenuItem(Wheels1,0,"Shadow");
	AddMenuItem(Wheels1,0,"Rimshine");
	AddMenuItem(Wheels1,0,"Classic");
	AddMenuItem(Wheels1,0,"Cutter");
	AddMenuItem(Wheels1,0,"Switch");
	AddMenuItem(Wheels1,0,"Dollar");
	AddMenuItem(Wheels1,0,"Main Menu");

	// Nitro
	Nitro = CreateMenu("TuningMenu",1,20,120,150,40);
	SetMenuColumnHeader(Nitro,0,"Nitro");
	AddMenuItem(Nitro,0,"2x Nitrous");
	AddMenuItem(Nitro,0,"5x Nitrous");
	AddMenuItem(Nitro,0,"10x Nitrous");
	AddMenuItem(Nitro,0,"Main Menu");

	// Others
	Others = CreateMenu("TuneMenu",1,20,120,150,40);
	SetMenuColumnHeader(Others,0, "Other addons");
	AddMenuItem(Others,0,"Hydraulics");
	AddMenuItem(Others,0,"Car Stereo");
	AddMenuItem(Others,0,"Nitro");
	AddMenuItem(Others,0,"Main Menu");
	
	        for(new i; i<MAX_PLAYERS; i++)
			{

								PlayerInfo[i][pMoney] = 1;
								                 GameTextForPlayer(i, "~w~Mission~n~~g~Moneybox2", 1000, 1);
							}
								
SetTimer("Speedometer", 100, true);
//
//
//


    for(new i=0;i<MAX_VEHICLES;i++) {
        fuel[i] = 100; //sets every car's fuel to 100 in a loop
    }
    SetTimer("timer_fuel_lower",7500,true); //sets the timer to drop the fuel
    
    
    
        Intro[0] = TextDrawCreate(642.0, 1.0, "~n~");
        TextDrawLetterSize(Intro[0], 0.5, 49.5);
        TextDrawUseBox(Intro[0], 1);
        TextDrawBoxColor(Intro[0], 0x000000FF);
        TextDrawTextSize(Intro[0], -2.0, 0.0);

        Intro[0] = TextDrawCreate(642.0, 1.0, "~n~");
        TextDrawLetterSize(Intro[0], 0.5, 49.5);
        TextDrawUseBox(Intro[0], 1);
        TextDrawBoxColor(Intro[0], 0x000000FF);
        TextDrawTextSize(Intro[0], -2.0, 0.0);
        
        Intro[1] = TextDrawCreate(190.000000, 190.000000, "~w~gold ~g~play");
        TextDrawFont(Intro[1], 2);
        TextDrawLetterSize(Intro[1], 0.570000, 1.799999);

        Intro[2] = TextDrawCreate(320.000000, 190.000000, "~r~present...");
        TextDrawFont(Intro[2], 2);
        TextDrawColor(Intro[2], 0xFFFFFF22);
        TextDrawLetterSize(Intro[2], 0.570000, 1.799999);

        Intro[3] = TextDrawCreate(320.000000, 190.000000, "~r~present...");
        TextDrawFont(Intro[3], 2);
        TextDrawColor(Intro[3], 0xFFFFFF44);
        TextDrawLetterSize(Intro[3], 0.570000, 1.799999);

        Intro[4] = TextDrawCreate(320.000000, 190.000000, "~r~present...");
        TextDrawFont(Intro[4], 2);
        TextDrawColor(Intro[4], 0xFFFFFF66);
        TextDrawLetterSize(Intro[4], 0.570000, 1.799999);

        Intro[5] = TextDrawCreate(320.000000, 190.000000, "~r~present...");
        TextDrawFont(Intro[5], 2);
        TextDrawColor(Intro[5], 0xFFFFFF88);
        TextDrawLetterSize(Intro[5], 0.570000, 1.799999);

        Intro[6] = TextDrawCreate(320.000000, 190.000000, "~r~present...");
        TextDrawFont(Intro[6], 2);
        TextDrawColor(Intro[6], 0xFFFFFFAA);
        TextDrawLetterSize(Intro[6], 0.570000, 1.799999);

        Intro[7] = TextDrawCreate(320.000000, 190.000000, "~r~present...");
        TextDrawFont(Intro[7], 2);
        TextDrawColor(Intro[7], 0xFFFFFFCC);
        TextDrawLetterSize(Intro[7], 0.570000, 1.799999);

        Intro[8] = TextDrawCreate(320.000000, 190.000000, "~r~present...");
        TextDrawFont(Intro[8], 2);
        TextDrawColor(Intro[8], 0xFFFFFFFF);
        TextDrawLetterSize(Intro[8], 0.570000, 1.799999);

        Intro[9] = TextDrawCreate(190.0, 202.0, ".");
        TextDrawFont(Intro[9], 1);
        TextDrawLetterSize(Intro[9], 23.250051, 1.099999);

        Intro[10] = TextDrawCreate(304.00, 223.0, "~w~G-T-A ~g~G-O-L-D ~r~P-L-A-Y");
        TextDrawFont(Intro[10], 2);
        TextDrawLetterSize(Intro[10], 0.340000, 1.099999);

        Intro[11] = TextDrawCreate(331.0, 235.0, "~w~gta ~g~gold ~r~play");
        TextDrawFont(Intro[11], 2);
        TextDrawLetterSize(Intro[11], 0.340000, 1.099999);
   
    maxPlayers = GetMaxPlayers();
new playerid;
PlayerInfo[playerid][pSave] = 60*60;
	ResetElevatorQueue();
	Elevator_Initialize();
	SetTimer("AnnounceMSG", 100000, true);
	SetTimer("CheckTune", 100, true);

	
 timerhack = SetTimer("AntyVehHack", 3000, 1);
	DisableInteriorEnterExits();
	
	
	    for (new t=0; t<MAX_TURFS; t++)
	{
         GangZoneCreate(turfs[t][zMinX], turfs[t][zMinY], turfs[t][zMaxX], turfs[t][zMaxY]);
         for(new teams=0; teams < MAX_TEAMS; teams++) TurfInfo[t][teams][MIT] = 0;
    }
	
	
	
	
	
//---------------------------------

AddStaticVehicle(481,2002.7710,-2391.5547,13.0276,93.2258,131,131); // stuntcar1
AddStaticVehicle(510,2002.7378,-2389.1687,13.1273,93.1519,153,153); // stuntcar2
AddStaticVehicle(468,2003.1128,-2386.8157,13.2046,88.2713,6,6); // stuntcar3
AddStaticVehicle(522,2002.9944,-2384.5215,13.1158,91.4216,44,44); // stuntcar4
AddStaticVehicle(522,2003.0187,-2382.2634,13.1114,92.5009,3,3); // stuntcar5
AddStaticVehicle(522,2003.1952,-2380.2119,13.1162,93.5034,15,15); // stuntcar6
AddStaticVehicle(522,2003.2887,-2377.7271,13.1101,92.6790,4,4); // stuntcar7
AddStaticVehicle(471,-1212.6128,-22.9167,13.6343,45.3575,13,13); // stunssledgreshka1
AddStaticVehicle(471,-1210.9779,-21.3021,13.6368,44.4364,10,10); // stunssledgreshka1
AddStaticVehicle(481,-1216.4908,-26.3840,13.6652,35.0711,1,1); // newveh1
AddStaticVehicle(481,-1215.3354,-24.9084,13.6647,42.1340,2,2); // scar
AddStaticVehicle(481,-1216.0509,-25.3398,13.6637,37.9933,3,3); // scar
AddStaticVehicle(468,-1209.1731,-19.3961,13.8171,42.7468,1,1); // scar1
AddStaticVehicle(468,-1208.0529,-18.0603,13.8179,39.0619,2,2); // scar2
AddStaticVehicle(468,-1206.8918,-16.7079,13.8165,45.8031,3,3); // scar2
AddStaticVehicle(468,-1205.2145,-15.1728,13.8166,48.1343,4,4); // scar2
AddStaticVehicle(468,-1202.7554,-12.8312,13.8169,37.7975,5,5); // scar2
AddStaticVehicle(510,396.4814,2532.2041,16.1529,178.4032,1,1); // car
AddStaticVehicle(510,395.0979,2532.1404,16.1516,175.5314,2,2); // car
AddStaticVehicle(510,393.7427,2532.4712,16.1512,181.3403,3,3); // car4
AddStaticVehicle(522,392.2717,2532.8025,16.1144,181.1588,1,1); // car4
AddStaticVehicle(522,390.8047,2532.6729,16.1093,180.4528,2,2); // car
AddStaticVehicle(522,389.3396,2532.9424,16.1099,175.9359,4,4); // car
AddStaticVehicle(522,387.6095,2533.3311,16.1105,181.7348,3,3); // car
AddStaticVehicle(522,385.0084,2533.2007,16.1109,189.7062,5,5); // car
AddStaticVehicle(522,386.4304,2533.3770,16.1018,179.3423,6,6); // car
AddStaticVehicle(411,381.6253,2534.6506,16.2793,180.5182,1,1); // car
AddStaticVehicle(411,377.2253,2534.6960,16.3067,181.9542,2,2); // car
AddStaticVehicle(411,371.8541,2534.2861,16.3583,178.8195,3,3); // car

AddStaticVehicle(525,2118.0283,950.7761,10.7019,274.0820,0,0); // 525 1
AddStaticVehicle(525,2117.9714,956.7290,10.6773,271.6529,0,0); // 525 2
AddStaticVehicle(525,2133.4429,941.9583,10.7027,355.2080,0,0); // 525 3
AddStaticVehicle(525,2133.3184,932.8561,10.6978,358.9569,0,0); // 525 4
AddStaticVehicle(525,2133.2100,924.4854,10.6996,359.7969,0,0); // 525 5
//--------------------------------
dcar1 = AddStaticVehicle(411,1364.8284,1473.1023,10.5474,264.8388,3,3); // dcar1
dcar2 = AddStaticVehicle(402,1365.3323,1478.5801,10.6520,274.7873,1,1); // dcar2
dcar3 = AddStaticVehicle(405,1364.3685,1483.6731,10.6953,269.9508,2,2); // dcar3
dcar4 = AddStaticVehicle(404,1364.6149,1487.8988,10.5520,272.1919,6,6); // dcar4
dcar5 = AddStaticVehicle(410,1363.9789,1492.0140,10.4735,273.0110,6,6); // dcar5
dcar6 = AddStaticVehicle(412,1362.9451,1496.4756,10.6581,270.2061,2,2); // dcar6
dcar7 = AddStaticVehicle(419,1363.1151,1501.5441,10.6180,269.0264,1,1); // dcar7
dcar8 = AddStaticVehicle(421,1363.2971,1506.2057,10.7027,265.5603,5,5); // dcar8
dcar9 = AddStaticVehicle(429,1363.3253,1510.6138,10.5000,263.7546,3,3); // dcar9
dcar10 = AddStaticVehicle(436,1362.9177,1514.9170,10.5897,263.9502,2,2); // dcar10

//------------------------

   //DRCAR
    car3 = vipcars[21] = AddStaticVehicle(565,1317.0059,-2020.4424,56.7348,269.6635,1,1); // vipcar1
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    ChangeVehiclePaintjob(car3, 3);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
   //DRCAR
    car3 = vipcars[22] = AddStaticVehicle(565,1316.8521,-2013.5801,56.8423,270.4739,1,1); // vipcar2
    AddVehicleComponent(car3, 1034);
    ChangeVehiclePaintjob(car3, 2);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
    	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[23] = AddStaticVehicle(560,1316.4828,-2007.3545,57.0229,271.3939,1,1); // vipcar3
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    ChangeVehiclePaintjob(car3, 3);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[24] = AddStaticVehicle(561,1316.7133,-2000.9943,57.2304,270.6276,1,1); // vipcar4
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    ChangeVehiclePaintjob(car3, 1);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[25] = AddStaticVehicle(560,1328.3159,-2019.9653,56.8205,89.9314,1,1); // vipcar5
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    ChangeVehiclePaintjob(car3, 2);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[26] = AddStaticVehicle(561,1327.4401,-2003.9965,57.1804,90.0969,1,1); // vipcar6
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    ChangeVehiclePaintjob(car3, 3);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[27] = AddStaticVehicle(558,1326.7051,-2010.3622,56.8972,91.8958,1,1); // vipcar
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    ChangeVehiclePaintjob(car3, 1);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[28] = AddStaticVehicle(559,1316.0518,-1994.1974,57.2037,271.0681,1,1); // vipcar8
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    ChangeVehiclePaintjob(car3, 2);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[29] = AddStaticVehicle(559,1328.7404,-2014.6858,56.8540,91.0491,1,1); // vipcar9
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    ChangeVehiclePaintjob(car3, 3);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[30] = AddStaticVehicle(562,1339.8215,-1974.0125,57.4913,89.3334,1,1); // vipcar10
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    ChangeVehiclePaintjob(car3, 1);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[31] = AddStaticVehicle(562,1326.5132,-1974.3134,57.4918,93.1665,1,1); // vipcar11
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    ChangeVehiclePaintjob(car3, 2);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
//-------------
//---------
//-------
//----
//=============================[Коли]===========================================

   //DRCAR
    cardr = AddStaticVehicle(562,2545.8228,-1062.9319,69.2254,1.9198,79,2); // car1
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(cardr, 1034);
    AddVehicleComponent(cardr, 1035);
    AddVehicleComponent(cardr, 1037);
    AddVehicleComponent(cardr, 1039);
    AddVehicleComponent(cardr, 1015);
     AttachObjectToVehicle(white, cardr, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, cardr, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
//==============================================================================
    //Rifa1
    car3 = vcripzcars[14] = AddStaticVehicle(541,286.3650,-1155.3209,80.5358,223.2573,0,0); // cripz
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
     ob14 = CreateObject(1003,0,0,-1000,0,0,0,100);
     ob15 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob16 = CreateObject(1149,0,0,-1000,0,0,0,100);
     ob17 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob18 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob19 = CreateObject(1166,0,0,-1000,0,0,0,100);
     ob20 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob21 = CreateObject(1026,0,0,-1000,0,0,0,100);
     ob22 = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(ob14, car3, 0.000000,-2.025000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob15, car3, -0.375000,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob16, car3, 1.049999,-1.500000,0.075000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob17, car3, 0.374999,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob18, car3, 0.000000,0.224999,0.600000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob19, car3, 1.049999,1.575000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob20, car3, -0.075000,1.200000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob21, car3, 1.049999,-0.899999,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob22, car3, -1.049999,-0.974999,-0.449999,0.000000,0.000000,0.000000);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    //RIFA
    car3 = dfcars[27] =AddStaticVehicle(519,289.9356,1989.2524,18.5628,270.3958,120,120);
        yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
    
    car3 = sbcars[3] = AddStaticVehicle(508,493.7591,-1538.8427,19.0929,17.6852,210,210); // karavana thug
        yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
    
car3 = sbcars[2] = AddStaticVehicle(508,485.8115,-1542.0068,19.2100,20.4917,210,210); // karavana thug
    yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
    
    car3 = sbcars[1] = AddStaticVehicle(483,477.1057,-1507.3564,20.5770,245.5782,210,210); // thugcar NOV INTERIOR - BUS
    yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
	
    car3 = rifacars[15] = AddStaticVehicle(508,-2180.8206,972.9745,80.3750,4.1075,7,7); // 508 rifa2
    yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
	white = CreateObject(18646,0,0,0,0,0,0);
	
	
			    car3 = ABcars[45] = AddStaticVehicle(451,1760.7292,-2122.2312,13.2588,299.1930,153,153); // Asian Boys Special N3
    yeah1text = Create3DTextLabel( "Special car - Asian Boyz", 0x3CDEB0FF, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
   	white = CreateObject(18648,0,0,0,0,0,0);
     white1 = CreateObject(18648,0,0,0,0,0,0);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);



	    car3 = ABcars[44] = AddStaticVehicle(451,1762.3304,-2105.1299,13.2522,239.3147,153,153); // Asian Boys Special N3
    yeah1text = Create3DTextLabel( "Special Car - Asian Boyz", 0x3CDEB0FF, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
    	white = CreateObject(18647,0,0,0,0,0,0);
    white1 = CreateObject(18647,0,0,0,0,0,0);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	
	
	
	
	
	//
		    car3 = ABcars[43] = AddStaticVehicle(496,1758.3181,-2120.6528,13.2706,298.3906,153,153); // Asian Boys Special N2 2
    yeah1text = Create3DTextLabel( "Special car - Asian Boyz", 0x3CDEB0FF, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
   	white = CreateObject(18648,0,0,0,0,0,0);
     white1 = CreateObject(18648,0,0,0,0,0,0);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);



	    car3 = ABcars[42] = AddStaticVehicle(496,1757.5645,-2104.7903,13.2663,241.4448,153,153); // Asian Boys Special N2
    yeah1text = Create3DTextLabel( "Special Car - Asian Boyz", 0x3CDEB0FF, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
    	white = CreateObject(18647,0,0,0,0,0,0);
    white1 = CreateObject(18647,0,0,0,0,0,0);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	
	//
		    car3 = ABcars[41] = AddStaticVehicle(480,1754.6794,-2119.6191,13.3273,299.2832,153,153); // speccar1 neon
    yeah1text = Create3DTextLabel( "Special car - Asian Boyz", 0x3CDEB0FF, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
   	white = CreateObject(18648,0,0,0,0,0,0);
     white1 = CreateObject(18648,0,0,0,0,0,0);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	
	
	
	    car3 = ABcars[40] = AddStaticVehicle(480,1753.3331,-2105.8247,13.3184,246.0838,153,153); // speccar
    yeah1text = Create3DTextLabel( "Special Car - Asian Boyz", 0x3CDEB0FF, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
    	white = CreateObject(18647,0,0,0,0,0,0);
    white1 = CreateObject(18647,0,0,0,0,0,0);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
	
	
	

//MOTOCAR
new ob1;
new ob2;
new ob3;
new ob4;
new ob5;
new ob6;
carpedal = AddStaticVehicle(415,2040.2714,1552.8806,10.4406,180.6486,0,0); // For Sell
    yeah1text = Create3DTextLabel( "{FF0000}Headshot", COLOR_RED, 1.6, 0.0, 0.0, 40.0, 0, 1 );
    Attach3DTextLabelToVehicle( carpedal, yeah1text, 0.0, 0.0, 0.0);
 ne = CreateObject(18648,0,0,0,0,0,0);
 ob1 = CreateObject(19620,0,0,0,0,0,0);
 ob2 = CreateObject(1001,0,0,0,0,0,0);
 ob4 = CreateObject(19797,0,0,0,0,0,0);
 ob5 = CreateObject(19797,0,0,0,0,0,0);
 ob6 = CreateObject(19797,0,0,0,0,0,0);
    AttachObjectToVehicle(ne, carpedal, 0.0, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(ob1, carpedal, -0.00399, -0.15104, 0.62200, 0.00000, 0.00000, 0.00000);
    AttachObjectToVehicle(ob2, carpedal, 0.00290, -2.32670, 0.19490, 0.00000, 0.00000, 0.02000);
    AttachObjectToVehicle(ob4, carpedal, -0.06788, 2.69757, -0.37970, 178.00000, 0.00000, -6.00000);
    AttachObjectToVehicle(ob5, carpedal, -0.80332, -2.27399, -0.39620, 32.00000, -1.00000, 357.47775);
    AttachObjectToVehicle(ob6, carpedal, 0.79921, -2.28254, -0.39620, 32.00000, -1.00000, 2.11422);
//
	    caro3 = AddStaticVehicle(411,1774.6106,-1290.0391,13.1958,293.4586,0,0); // anonimen
     AttachObjectToVehicle(white, caro2, -0.0, -0.0, 0.69, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "  Text  ", COLOR_RED, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, caro3, 0.0, 0.0, 0.0);
//
//FORSALE1
    carforsale1 = AddStaticVehicle(541,-1478.9692,918.8439,1040.4115,13.3829,0,0); // bullet1
     ob14 = CreateObject(1003,0,0,-1000,0,0,0,100);
     ob15 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob16 = CreateObject(1149,0,0,-1000,0,0,0,100);
     ob17 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob18 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob19 = CreateObject(1166,0,0,-1000,0,0,0,100);
     ob20 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob21 = CreateObject(1026,0,0,-1000,0,0,0,100);
     ob22 = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(ob14, carforsale1, 0.000000,-2.025000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob15, carforsale1, -0.375000,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob16, carforsale1, 1.049999,-1.500000,0.075000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob17, carforsale1, 0.374999,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob18, carforsale1, 0.000000,0.224999,0.600000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob19, carforsale1, 1.049999,1.575000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob20, carforsale1, -0.075000,1.200000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob21, carforsale1, 1.049999,-0.899999,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob22, carforsale1, -1.049999,-0.974999,-0.449999,0.000000,0.000000,0.000000);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
//
    carforsale2 = AddStaticVehicle(411,-1483.3955,919.7199,1040.6492,358.8608,0,0); // infernussirena
     ob14 = CreateObject(1003,0,0,-1000,0,0,0,100);
     ob15 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob16 = CreateObject(1149,0,0,-1000,0,0,0,100);
     ob17 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob18 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob19 = CreateObject(1166,0,0,-1000,0,0,0,100);
     ob20 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob21 = CreateObject(1026,0,0,-1000,0,0,0,100);
     ob22 = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(ob14, carforsale2, 0.000000,-2.025000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob15, carforsale2, -0.375000,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob16, carforsale2, 1.049999,-1.500000,0.075000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob17, carforsale2, 0.374999,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob18, carforsale2, 0.000000,0.224999,0.600000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob19, carforsale2, 1.049999,1.575000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob20, carforsale2, -0.075000,1.200000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob21, carforsale2, 1.049999,-0.899999,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob22, carforsale2, -1.049999,-0.974999,-0.449999,0.000000,0.000000,0.000000);
    carforsale3 = AddStaticVehicle(411,-1488.2174,921.2958,1040.6914,1.3236,0,0); // infernustune
    	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, carforsale3, -0.0, -0.0, 0.69, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, carforsale3, 0.0, 0.0, 0.0);
//
    carforsale4 = AddStaticVehicle(541,-1472.3065,918.9933,1040.0156,335.9342,0,0); // buletsirena
    	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, carforsale4, -0.0, -0.0, 0.69, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, carforsale4, 0.0, 0.0, 0.0);
     
         carforsale5 = AddStaticVehicle(508,-1467.5868,918.2323,1040.6707,2.0377,0,0); // karavana
         
//O

    caro = AddStaticVehicle(411,1540.7963,-1684.9613,13.2781,349.6227,0,0); // carnaonq
	white = CreateObject(18646,0,0,0,0,0,0);
	    yeah1text = Create3DTextLabel( "»»» Speed", COLOR_GREEN, 0.0, 0.0, 0.0, 50.0, 0, 1 );
     AttachObjectToVehicle(white, caro, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
         Attach3DTextLabelToVehicle( yeah1text, caro, 0.0, 0.0, 0.0);
//FLUX
///





    carflux4 = AddStaticVehicle(541,2400.1921,1022.4407,10.4436,357.6977,135,0); // carflux5
	white = CreateObject(18646,0,0,0,0,0,0);
	    yeah1text = Create3DTextLabel( "<+_+> Respect My Penis Bitch <+_+>", COLOR_GREEN, 1.0, 0.0, 0.0, 40.0, 0, 1 );
     AttachObjectToVehicle(white, carflux4, -0.0, -0.6, 0.60, 0.0, 0.0, 0.0);
         Attach3DTextLabelToVehicle( yeah1text, carflux4, 0.0, 0.0, 0.0);
         
         
//UFO//
carufo = AddStaticVehicle(501,1825.4424,-1298.6687,131.3429,357.8745,0,0); // ufo
                ShipObject[carufo] = CreateObject(18846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(ShipObject[carufo], carufo, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
//UFO//
         
         ///
    carflux = AddStaticVehicle(411,349.4702,-1185.6073,76.4856,309.6840,123,0); // carflux
	white = CreateObject(18646,0,0,0,0,0,0);
	    yeah1text = Create3DTextLabel( "<+_+> Respect My Penis Bitch <+_+>", COLOR_BLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
     AttachObjectToVehicle(white, carflux, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
         Attach3DTextLabelToVehicle( yeah1text, carflux, 0.0, 0.0, 0.0);
             carflux2 = AddStaticVehicle(411,2408.3359,1022.3577,10.5474,358.5451,0,0); // carflux2
	white = CreateObject(18646,0,0,0,0,0,0);
	    yeah1text = Create3DTextLabel( "<+_+> Respect My Penis Bitch <+_+>", COLOR_BLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
     AttachObjectToVehicle(white, carflux2, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
         Attach3DTextLabelToVehicle( yeah1text, carflux2, 0.0, 0.0, 0.0);
             carflux3 = AddStaticVehicle(480,2404.5698,1022.3464,10.5930,359.6649,226,0); // carflux3
	white = CreateObject(18646,0,0,0,0,0,0);
	    yeah1text = Create3DTextLabel( "<+_+> Respect My Penis Bitch <+_+>", COLOR_BLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
     AttachObjectToVehicle(white, carflux3, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
         Attach3DTextLabelToVehicle( yeah1text, carflux3, 0.0, 0.0, 0.0);
 //STRIXCAR
    carstrix3 = AddStaticVehicle(411,1921.2889,2347.1111,10.5095,145.6984,0,0); // car
	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, carstrix3, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "GPD", COLOR_BLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, carstrix3, 0.0, 0.0, 0.0);
	ne = CreateObject(18648,0,0,0,0,0,0);
    ne1 = CreateObject(18648,0,0,0,0,0,0);
     AttachObjectToVehicle(ne, carstrix3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(ne1, carstrix3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);




    rifacars[24] = rifas1 = AddStaticVehicle(411,-2190.0886,1029.5671,79.7349,236.2002,152,152); // rifaspec1
	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, rifas1, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "San Fierro Rifa", COLOR_LIGHTBLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, rifas1, 0.0, 0.0, 0.0);
	ne = CreateObject(18647,0,0,0,0,0,0);
    ne1 = CreateObject(18648,0,0,0,0,0,0);
     AttachObjectToVehicle(ne, rifas1, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(ne1, rifas1, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);


    rifacars[25] = rifas2 = AddStaticVehicle(541,-2193.5759,1027.0458,79.6328,233.2844,152,152); // rifaspec2
	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, rifas2, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "San Fierro Rifa", COLOR_LIGHTBLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, rifas2, 0.0, 0.0, 0.0);
	ne = CreateObject(18649,0,0,0,0,0,0);
    ne1 = CreateObject(18647,0,0,0,0,0,0);
     AttachObjectToVehicle(ne, rifas2, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(ne1, rifas2, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);



	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, rifas3, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "San Fierro Rifa", COLOR_LIGHTBLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, rifas3, 0.0, 0.0, 0.0);
	ne = CreateObject(18652,0,0,0,0,0,0);
    ne1 = CreateObject(18652,0,0,0,0,0,0);
     AttachObjectToVehicle(ne, rifas3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(ne1, rifas3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);

    carstrix4 = AddStaticVehicle(451,1809.7229,-1270.8784,13.3419,114.2209,0,0); // strix
	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, carstrix4, -0.0, -0.6, 0.60, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "Wath?", COLOR_GREEN, 1.6, 0.0, 0.0, 40.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, carstrix4, 0.0, 0.0, 0.0);
	ne = CreateObject(18648,0,0,0,0,0,0);
    ne1 = CreateObject(18648,0,0,0,0,0,0);
     AttachObjectToVehicle(ne, carstrix4, -0.8, 0.0, -0.85, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(ne1, carstrix4, 0.8, 0.0, -0.85, 0.0, 0.0, 0.0);
 //CARHOLLY
    carholy = AddStaticVehicle(411,1803.0679,-1295.6976,13.2100,14.7849,0,0); // holy
	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, carholy, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "Holly", COLOR_RED, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, carholy, 0.0, 0.0, 0.0);
	ne = CreateObject(18648,0,0,0,0,0,0);
    ne1 = CreateObject(18648,0,0,0,0,0,0);
     AttachObjectToVehicle(ne, carholy, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(ne1, carholy, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    //strixcar
    carstrix2 = AddStaticVehicle(411,1548.5491,-1680.9750,13.2841,93.2912,0,0); // GPDCAR2
	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, carstrix2, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "GPD", COLOR_BLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, carstrix2, 0.0, 0.0, 0.0);
	ne = CreateObject(18648,0,0,0,0,0,0);
    ne1 = CreateObject(18648,0,0,0,0,0,0);
     AttachObjectToVehicle(ne, carstrix2, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(ne1, carstrix2, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
 //STRIXCAR
    carstrix1 = AddStaticVehicle(411,1548.4552,-1669.7429,13.2921,87.3592,0,0); // GPDCAR
	white = CreateObject(18646,0,0,0,0,0,0);
     AttachObjectToVehicle(white, carstrix1, -0.0, -0.0, 0.74, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "Не пипай :)", COLOR_BLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
     AttachObjectToVehicle(ne, carstrix1, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(ne1, carstrix1, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, carstrix1, 0.0, 0.0, 0.0);
	ne = CreateObject(18648,0,0,0,0,0,0);
    ne1 = CreateObject(18648,0,0,0,0,0,0);
 //STRIXCAR
    carstrix = AddStaticVehicle(541,-2170.7168,1012.3856,79.6328,90.8822,0,0); // carstrix
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
     ob14 = CreateObject(1003,0,0,-1000,0,0,0,100);
     ob15 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob16 = CreateObject(1149,0,0,-1000,0,0,0,100);
     ob17 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob18 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob19 = CreateObject(1166,0,0,-1000,0,0,0,100);
     ob20 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob21 = CreateObject(1026,0,0,-1000,0,0,0,100);
     ob22 = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(ob14, carstrix, 0.000000,-2.025000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob15, carstrix, -0.375000,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob16, carstrix, 1.049999,-1.500000,0.075000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob17, carstrix, 0.374999,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob18, carstrix, 0.000000,0.224999,0.600000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob19, carstrix, 1.049999,1.575000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob20, carstrix, -0.075000,1.200000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob21, carstrix, 1.049999,-0.899999,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob22, carstrix, -1.049999,-0.974999,-0.449999,0.000000,0.000000,0.000000);
     AttachObjectToVehicle(white, carstrix, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, carstrix, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    yeah1text = Create3DTextLabel( "San Fierro Rifa - Leaders's vehicle", COLOR_BLUE, 0.0, 0.0, 0.0, 50.0, 0, 1 );
    Attach3DTextLabelToVehicle( yeah1text, carstrix, 0.0, 0.0, 0.0);
//RIFA
    car3 = rifacars[14] = AddStaticVehicle(508,-2179.8782,992.9335,80.3767,358.1215,7,7); // 508 rifa1
    yeah1text = yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
//YAKUZA

car3 = Dpkcars[5] = AddStaticVehicle(508,2506.5947,2723.2756,11.1953,268.0320,0,0); // dpkkaravana
    yeah1text = yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);




car3 = ABcars[39] = AddStaticVehicle(508,1685.7997,-2131.6167,13.9218,358.8118,153,153); // CARN1
    yeah1text = yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);



car3 = ABcars[39] = rockcars[11] = AddStaticVehicle(508,-753.2174,2749.1765,46.1482,179.3001,3,3); //
    yeah1text = yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
    
    car3 = rockcars[12] = AddStaticVehicle(508,-756.0956,2749.2024,46.1483,179.7096,3,3); //
    yeah1text = yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);


	car3 = AddStaticVehicle(508,156.8062,-1764.2191,4.9555,182.8497,74,0); // car75
    yeah1text = yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
    
    car3 = yakuzacars[1] = AddStaticVehicle(508,1647.4963,-1702.9093,15.9772,359.7786,55,50); //
    yeah1text = yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);
    //Rifa2
    car3 = rifacars[13] = AddStaticVehicle(411,-2179.4607,964.7631,79.7271,0.0126,152,152); // veh3
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
     ob14 = CreateObject(1003,0,0,-1000,0,0,0,100);
     ob15 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob16 = CreateObject(1149,0,0,-1000,0,0,0,100);
     ob17 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob18 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob19 = CreateObject(1166,0,0,-1000,0,0,0,100);
     ob20 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob21 = CreateObject(1026,0,0,-1000,0,0,0,100);
     ob22 = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(ob14, car3, 0.000000,-2.025000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob15, car3, -0.375000,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob16, car3, 1.049999,-1.500000,0.075000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob17, car3, 0.374999,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob18, car3, 0.000000,0.224999,0.600000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob19, car3, 1.049999,1.575000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob20, car3, -0.075000,1.200000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob21, car3, 1.049999,-0.899999,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob22, car3, -1.049999,-0.974999,-0.449999,0.000000,0.000000,0.000000);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    
    //Cripz One Kamion
        car3 = vagoscars[9] = AddStaticVehicle(573,2551.5957,-1030.8154,70.2200,177.3607,6,6); //
            yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car5, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car5, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car5, 0.0, 0.0, 0.0);
    
    car5 = vcripzcars[15] = AddStaticVehicle(573,283.4029,-1200.7059,81.2054,332.8540,204,0); // vcripzkamion
    yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car5, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car5, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car5, 0.0, 0.0, 0.0);


    car3 = vcripzcars[17] = AddStaticVehicle(508,280.9088,-1198.2747,80.8259,333.4181,204,1); // vcripznew karavana
    yeah1text = Create3DTextLabel( "Това превозно средство е с интериор,\n за да влезеш натисни {FF0000}G", 0x08FF08FF, 0.0, 0.0, 0.0, 15.0, 0, 1 );
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    Attach3DTextLabelToVehicle( yeah1text, car3, 0.0, 0.0, 0.0);

    //Rifa3
    car4 = vcripzcars[16] = AddStaticVehicle(541,282.1867,-1159.4695,80.5395,221.9272,0,0); // cripz
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
     ob14 = CreateObject(1003,0,0,-1000,0,0,0,100);
     ob15 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob16 = CreateObject(1149,0,0,-1000,0,0,0,100);
     ob17 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob18 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob19 = CreateObject(1166,0,0,-1000,0,0,0,100);
     ob20 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob21 = CreateObject(1026,0,0,-1000,0,0,0,100);
     ob22 = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(ob14, car4, 0.000000,-2.025000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob15, car4, -0.375000,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob16, car4, 1.049999,-1.500000,0.075000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob17, car4, 0.374999,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob18, car4, 0.000000,0.224999,0.600000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob19, car4, 1.049999,1.575000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob20, car4, -0.075000,1.200000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob21, car4, 1.049999,-0.899999,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob22, car4, -1.049999,-0.974999,-0.449999,0.000000,0.000000,0.000000);
     AttachObjectToVehicle(white, car4, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car4, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    //Cripz1
    car3 = rifacars[12] = AddStaticVehicle(411,-2179.4180,982.0811,79.7271,355.7355,152,152); // veh2
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
     ob14 = CreateObject(1003,0,0,-1000,0,0,0,100);
     ob15 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob16 = CreateObject(1149,0,0,-1000,0,0,0,100);
     ob17 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob18 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob19 = CreateObject(1166,0,0,-1000,0,0,0,100);
     ob20 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob21 = CreateObject(1026,0,0,-1000,0,0,0,100);
     ob22 = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(ob14, car3, 0.000000,-2.025000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob15, car3, -0.375000,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob16, car3, 1.049999,-1.500000,0.075000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob17, car3, 0.374999,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob18, car3, 0.000000,0.224999,0.600000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob19, car3, 1.049999,1.575000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob20, car3, -0.075000,1.200000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob21, car3, 1.049999,-0.899999,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob22, car3, -1.049999,-0.974999,-0.449999,0.000000,0.000000,0.000000);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);

    //Cripz2
    car4 = rifacars[15] = AddStaticVehicle(411,-2179.8599,1003.4576,79.7271,3.4210,152,152);
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    ob14 = CreateObject(1003,0,0,-1000,0,0,0,100);
    ob15 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob16 = CreateObject(1149,0,0,-1000,0,0,0,100);
     ob17 = CreateObject(1018,0,0,-1000,0,0,0,100);
     ob18 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob19 = CreateObject(1166,0,0,-1000,0,0,0,100);
     ob20 = CreateObject(1006,0,0,-1000,0,0,0,100);
     ob21 = CreateObject(1026,0,0,-1000,0,0,0,100);
     ob22 = CreateObject(1027,0,0,-1000,0,0,0,100);
AttachObjectToVehicle(ob14, car4, 0.000000,-2.025000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob15, car4, -0.375000,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob16, car4, 1.049999,-1.500000,0.075000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob17, car4, 0.374999,-1.275000,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob18, car4, 0.000000,0.224999,0.600000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob19, car4, 1.049999,1.575000,0.000000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob20, car4, -0.075000,1.200000,0.300000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob21, car4, 1.049999,-0.899999,-0.375000,0.000000,0.000000,0.000000);
AttachObjectToVehicle(ob22, car4, -1.049999,-0.974999,-0.449999,0.000000,0.000000,0.000000);
    AttachObjectToVehicle(white, car4, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car4, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
//==============================================================================
    AntiDeAMX();
    SetGameModeText("GOLD PLAY 1.6");
	SendRconCommand("mapname  Las Venturas");
	SendRconCommand("hostname [-Gold-Play-][0.3.7]");
	SendRconCommand("rcon_password 0994142daniel2015z");
	//
new hours,minutes,seconds;
gettime(hours, minutes, seconds);
	//
		if (hours == 0)
	{
		SetWorldTime(0);
	}
		if (hours == 1)
	{
		SetWorldTime(0);
	}
		if (hours == 2)
	{
		SetWorldTime(0);
	}
		if (hours == 3)
	{
		SetWorldTime(0);
	}
		if (hours == 4)
	{
		SetWorldTime(0);
	}
		if (hours == 5)
	{
		SetWorldTime(6);
	}
		if (hours == 6)
	{
		SetWorldTime(6);
	}
		if (hours == 7)
	{
		SetWorldTime(13);
	}
		if (hours == 8)
	{
		SetWorldTime(13);
	}
		if (hours == 9)
	{
		SetWorldTime(13);
	}
		if (hours == 10)
	{
		SetWorldTime(13);
	}
		if (hours == 11)
	{
		SetWorldTime(13);
	}
		if (hours == 12)
	{
		SetWorldTime(13);
	}
		if (hours == 13)
	{
		SetWorldTime(13);
	}
		if (hours == 14)
	{
		SetWorldTime(13);
	}
		if (hours == 15)
	{
		SetWorldTime(13);
	}
		if (hours == 16)
	{
		SetWorldTime(13);
	}
		if (hours == 17)
	{
		SetWorldTime(13);
	}
		if (hours == 18)
	{
		SetWorldTime(13);
	}
		if (hours == 19)
	{
		SetWorldTime(23);
	}
		if (hours == 20)
	{
		SetWorldTime(23);
	}
		if (hours == 21)
	{
		SetWorldTime(23);
	}
		if (hours == 22)
	{
		SetWorldTime(0);
	}
			if (hours == 23)
	{
		SetWorldTime(0);
	}
	AllowInteriorWeapons(1);
	EnableStuntBonusForAll(0);
	SetNameTagDrawDistance(60.0);
	CalculateStarted = 0;
    CalculateEvent = 0;
    Jackpot = 557000;
    EventPlayers = 0;
	AllowInteriorWeapons(1);
	EnableStuntBonusForAll(0);
	SetNameTagDrawDistance(60.0);
	CalculateStarted = 0;
    CalculateEvent = 0;
    EventPlayers = 0;
    LoadOffices();
LoadOffices2();
LoadOffices3();
	//LoadFactions();
	print("Factions Loaded\n");
//===============================[Класове]=================================
    flag1 = CreateObject(2914, -976.5959,1045.8835,1352.6603, 0.000000, 0.000000, 88.399978);
flag2 = CreateObject(2914, -1130.3170,1075.4589,1353.4221, 0.000000, 0.000000, 88.399978);
//
CreateObject(17031, -2007.917968, -3295.053466, 1.094185, 0.000000, 0.000000, -147.399948);
CreateObject(17031, -2024.424682, -3348.700683, -1.388107, 6.100003, -15.600001, 165.300094);
CreateObject(17031, -2002.817016, -3337.011718, -8.218165, 6.100003, -15.600001, 165.300094);
CreateObject(17031, -2014.439208, -3256.784912, 0.788749, 6.100003, -15.600001, 165.300094);
CreateObject(17031, -2020.074218, -3240.432373, -2.046857, 5.499996, -21.100006, -150.699890);
CreateObject(11695, -2110.124023, -3273.781982, -22.335533, 0.000000, 0.000000, 0.000000);
CreateObject(11695, -2298.365478, -3381.520507, -22.335533, 0.000000, 0.000000, 0.000000);
CreateObject(11695, -2364.435791, -3076.497802, -22.335533, 0.000000, 0.000000, 0.000000);
CreateObject(11703, -2181.260742, -3348.318359, 14.077147, -13.300001, 28.799997, -37.099994);
CreateObject(11715, -2154.667480, -3323.524414, 10.271260, -24.900003, 0.000000, -20.399999);
CreateObject(19916, -2146.281982, -3327.996337, 9.925792, -15.700002, 76.499984, 158.999954);
CreateObject(19632, -2157.143310, -3323.224853, 10.165398, 0.000000, 0.000000, 0.000000);
CreateObject(19593, -2101.713867, -3289.292968, -43.189605, -34.600006, 45.699993, 0.000000);
CreateObject(18963, -2136.855468, -3307.566894, 10.274321, 0.000000, 0.000000, 0.000000);
CreateObject(9324, -2155.603515, -3289.306640, 7.426598, 0.000000, -20.500005, 0.000000);
CreateObject(9324, -2167.762207, -3300.982177, 1.883574, 145.900024, -20.500005, 0.000000);
CreateObject(3252, -2083.766113, -3337.479003, 9.978619, 0.000000, 0.000000, 0.000000);
CreateObject(3252, -2088.218505, -3337.479003, 9.936658, 0.000000, 0.000000, 0.000000);
CreateObject(3252, -2092.358886, -3337.479003, 9.936658, 0.000000, 0.000000, 0.000000);
CreateObject(1683, -2142.820800, -3282.421630, 14.681938, -0.000001, 29.200004, -73.700004);
CreateObject(3509, -2149.119140, -3215.415283, 9.202932, 0.000000, 0.000000, 0.000000);
CreateObject(3509, -2141.789794, -3215.415283, 9.202932, 0.000000, 0.000000, 0.000000);
CreateObject(3509, -2135.942382, -3209.053955, 9.202932, 0.000000, 0.000000, 0.000000);
CreateObject(3509, -2128.392089, -3223.943359, 9.202932, 0.000000, 0.000000, 0.000000);
CreateObject(3509, -2105.071289, -3233.006347, 13.242500, 112.599998, 0.000000, -60.799991);
CreateObject(3509, -2101.847656, -3249.783691, 13.368206, 112.599998, 0.000000, -60.799991);
CreateObject(18248, -2146.619140, -3327.550048, 8.606574, -1.799998, -48.500003, 0.000000);
CreateObject(853, -2156.446044, -3306.390136, 10.540991, 0.000000, 0.000000, 0.000000);
CreateObject(853, -2154.716552, -3304.328369, 10.540991, 0.000000, 0.000000, 0.000000);
CreateObject(2780, -2154.037353, -3272.822998, 8.692585, 0.000000, 0.000000, 0.000000);
CreateObject(2780, -2154.037353, -3280.433593, 8.692585, 0.000000, 0.000000, 0.000000);
CreateObject(1812, -2089.051757, -3239.417480, 10.157706, -9.300003, 32.500000, 0.000000);
CreateObject(3437, -2073.500244, -3345.119628, 15.118992, 0.000000, 0.000000, 0.000000);
CreateObject(3437, -2073.500244, -3345.119628, 26.279003, 0.000000, 0.000000, 0.000000);
CreateObject(3437, -2073.500244, -3345.119628, 37.428997, 0.000000, 0.000000, 0.000000);
CreateObject(3437, -2073.500244, -3345.119628, 47.999000, 0.000000, 0.000000, 0.000000);
CreateObject(7236, -2152.999511, -3239.493408, -1.907473, 45.699989, 0.000000, -41.200000);
CreateObject(11697, -2213.489746, -3354.949462, 4.358477, 0.000000, 0.000000, 91.199996);
CreateObject(11697, -2218.572021, -3355.056152, 3.928476, 0.000000, 0.000000, 91.199996);
CreateObject(1612, -2141.477050, -3149.364501, 3.997734, 0.000000, 0.000000, 0.000000);
CreateObject(3781, -2050.164306, -3303.690429, -0.562211, 14.000012, 0.000000, 29.799999);
//stulbi
CreateObject(3399, -974.204406, 1025.699584, 1346.069702, -0.199998, -0.099999, 90.199974);
CreateObject(3399, -974.276428, 1034.270507, 1349.874755, -0.199998, -0.099999, 90.199974);
CreateObject(3399, -1132.625122, 1094.899658, 1346.301025, 0.000000, 0.000000, -89.700019);
CreateObject(3399, -1132.582153, 1086.748901, 1350.129760, 0.000000, 0.000000, -89.700019);
	//porti
	CreateObject(19303, 320.901336, 312.923309, 999.404968, 0.000000, 0.000000, -89.600006);
	CreateObject(19303, 320.873474, 316.903106, 999.404968, 0.000000, 0.000000, -89.600006);
	fbi1 = CreateObject(19303, 320.901336, 312.923309, 999.404968, 0.000000, 0.000000, -89.600006);
	fbi2 = CreateObject(19303, 320.873474, 316.903106, 999.404968, 0.000000, 0.000000, -89.600006);
	lsk1 = CreateObject(19303, 266.282501, 80.981002, 1001.280395, 0.000000, 0.000000, -91.799995);
	lsk2 = CreateObject(19303, 266.431854, 85.738708, 1001.280395, 0.000000, 0.000000, -91.799995);
    //thuglife
    cripz2 = CreateObject(971, 321.455444, -1187.909057, 76.277015, 0.000000, 0.000000, 39.699989); // thuglife porta 2
    yakuzap = CreateObject(971, 1642.983398, -1715.314453, 14.662660, 0.000000, 0.000000, -92.799942); // thuglife porta 2
    tporta1 = CreateObject(16773, 497.792083, -1456.461303, 18.088388, 0.000000, 0.000000, -29.799993);
    tporta2 = CreateObject(16773, 501.706787, -1559.498657, 19.324882, 0.000000, 0.000000, 43.500022);
	//MS 13 stulba
	CreateObject(5821, 2496.8999023438, 2328.5, 11.60000038147, 0, 0, 82);
	//MS 13 Gate1
	msgate = CreateObject(971, 2517.3000488281, 2346.1999511719, 13.39999961853, 0, 0, 90);
	lvpdb1 = CreateObject(968, 2238.241455, 2450.430908, 10.405052, -88.199996, 0.000000, 0.000000);
	lspdb1 = CreateObject(968, 1544.517822, -1630.802856, 12.942745, -88.800003, 0.000000, 0.000000);
	lsb = CreateObject(16773, 1589.457153, -1638.095458, 13.576784, 0.000000, 0.000000, 0.000000);
	dfb1 = CreateObject(980, 345.396636, 1797.919677, 18.384870, 0.000000, 0.000000, 31.499996);
	sfpdb1 = CreateObject(968, -1572.117431, 658.834045, 6.778139, -90.500000, 0.000000, 0.000000);
	novab1 = CreateObject(968, 1784.755981, 680.666503, 15.909406, 0.000000, 0.000000, -18.199996);
	novab2 = CreateObject(968, 1792.837768, 679.821350, 15.889406, 0.000000, 0.000000, -18.199996);
CreateObject(9623, 1785.744018, 690.311584, 17.500352, 2.100001, -0.299993, 169.099975);
CreateObject(9623, 1734.380249, 536.972045, 28.569505, -5.500000, 0.000000, -17.499996);
CreateObject(3399, 1775.384521, 681.517822, 18.510810, 0.000000, 0.000000, 79.699958);
CreateObject(9623, 1751.629638, 531.526794, 28.509784, -5.500000, 0.000000, -17.499996);
//drug dealer
	AddPlayerClass(28, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
    AddPlayerClass(29, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
    AddPlayerClass(30, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
    //drug maker
   AddPlayerClass(143, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(144, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(145, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(146, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   //normal pedman
   AddPlayerClass(101, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(98, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(60, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(59, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   //normal pedwoman
   AddPlayerClass(55, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(56, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   //busman
   AddPlayerClass(17, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   //buswoman
   AddPlayerClass(141, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   //prostitute
   AddPlayerClass(237, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(244, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(246, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   
   //woman
   AddPlayerClass(93, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(91, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
   AddPlayerClass(90, 1481.2080,	-1770.6204,	18.7958,	359.4039, -1, -1, -1, -1, -1, -1);
//
//================================[Коли]====================================
AddStaticVehicle(522,-539.3033,2638.8208,52.9787,268.9741,1,1); // new
AddStaticVehicle(522,-539.3802,2638.0767,52.9863,272.8333,16,16); // nrg
AddStaticVehicle(522,-539.3641,2637.3164,52.9832,269.9728,3,3); // nrg
AddStaticVehicle(522,-539.4026,2636.6860,52.9833,271.9874,5,5); // nrg
AddStaticVehicle(522,-539.4039,2635.8770,52.9749,264.9111,6,6); // nrg
AddStaticVehicle(522,-539.3517,2635.1975,52.9751,273.2340,7,7); // nrg
AddStaticVehicle(411,-538.3934,2631.7476,53.1408,266.9783,1,1); // infern1
AddStaticVehicle(411,-538.5110,2629.4072,53.1412,264.4561,3,3); // infer2
AddStaticVehicle(411,-538.3316,2627.0771,53.1411,268.3180,16,16); // infer
AddStaticVehicle(411,-538.5216,2624.8494,53.1412,265.1067,7,7); // infer
AddPlayerClass(107,-537.7892,2619.9944,53.4141,201.3100,0,0,0,0,0,0); // infer 6 6
AddPlayerClass(107,-537.2875,2616.5786,53.4141,6.0431,0,0,0,0,0,0); // infer 3 3
AddStaticVehicle(411,-538.6360,2622.6777,53.1412,269.4552,6,6); // infer
//==========================/// --- Работи --- ///================================
//Такси
    carsweep[1] = AddStaticVehicle(574,570.7686,1217.6624,11.5150,212.5410,1,1); // sweepcar
    carsweep[2] = AddStaticVehicle(574,572.4439,1218.8262,11.4516,211.8157,1,1); // sweepcar2
    carsweep[3] = AddStaticVehicle(574,577.4621,1220.9525,11.4364,212.9591,1,1); // sweepcar3
    carsweep[4] = AddStaticVehicle(574,578.9632,1221.9869,11.4364,212.8099,1,1); // sweepcar4
    ToggleEngine(carsweep[1], VEHICLE_PARAMS_OFF);
    ToggleEngine(carsweep[2], VEHICLE_PARAMS_OFF);
    ToggleEngine(carsweep[3], VEHICLE_PARAMS_OFF);
    ToggleEngine(carsweep[4], VEHICLE_PARAMS_OFF);
//Коалмаин
    carcoalmine[1] = AddStaticVehicleEx(406,858.2269,879.6721,14.7627,201.0449,1,1,5); //
    ToggleEngine(carcoalmine[1], VEHICLE_PARAMS_OFF);
    carcoalmine[2] = AddStaticVehicleEx(406,850.8806,876.3572,14.9247,202.1210,1,1,5); //
    ToggleEngine(carcoalmine[2], VEHICLE_PARAMS_OFF);
    carcoalmine[3] = AddStaticVehicleEx(406,843.9622,873.7372,14.7720,202.0721,1,1,5); //
    ToggleEngine(carcoalmine[3], VEHICLE_PARAMS_OFF);
    carcoalmine[4] = AddStaticVehicleEx(406,837.6867,870.4841,14.7916,201.2635,1,1,5); //
    ToggleEngine(carcoalmine[4], VEHICLE_PARAMS_OFF);
//Цемент
    carbus[1] = AddStaticVehicle(431,-521.3267,2569.4219,53.5132,358.5933,1,1); // bus
    ToggleEngine(carbus[1], VEHICLE_PARAMS_OFF);
    carbus[2] = AddStaticVehicle(431,-512.0872,2553.7710,53.5170,88.0071,1,1); // bus
    ToggleEngine(carbus[2], VEHICLE_PARAMS_OFF);
    carbus[3] = AddStaticVehicle(431,-513.0065,2548.9106,53.5151,88.9376,1,1); // bus
    ToggleEngine(carbus[3], VEHICLE_PARAMS_OFF);
    carbus[4] = AddStaticVehicle(431,-510.6169,2579.8213,53.5219,87.5477,1,1); // bus
    ToggleEngine(carbus[4], VEHICLE_PARAMS_OFF);
    carbus[5] = AddStaticVehicle(431,-511.0210,2582.8525,53.5136,86.0736,1,1); // bus
    ToggleEngine(carbus[5], VEHICLE_PARAMS_OFF);
//Пица
    carpizza[1] = AddStaticVehicle(448,1356.7051,243.4740,19.1688,65.4089,3,6); // piza
    ToggleEngine(carpizza[1], VEHICLE_PARAMS_OFF);
    carpizza[2] = AddStaticVehicle(448,1355.9683,241.1347,19.1421,62.2654,3,6); // piza2
    ToggleEngine(carpizza[2], VEHICLE_PARAMS_OFF);
    carpizza[3] = AddStaticVehicle(448,1356.5350,242.4410,19.1596,63.2474,3,6); // piza3
    ToggleEngine(carpizza[3], VEHICLE_PARAMS_OFF);
    carpizza[4] = AddStaticVehicle(448,1363.1876,259.8902,19.1605,69.1960,3,6); // piza4
    ToggleEngine(carpizza[4], VEHICLE_PARAMS_OFF);
    carpizza[5] = AddStaticVehicle(448,1364.0146,260.9592,19.1494,63.5487,3,6); // piza5
    ToggleEngine(carpizza[5], VEHICLE_PARAMS_OFF);
    carpizza[6] = AddStaticVehicle(448,1364.0315,262.2966,19.1587,61.9309,3,6); // piza6
    ToggleEngine(carpizza[6], VEHICLE_PARAMS_OFF);
//==============================================================================
    AddStaticVehicle(487,1689.6726,1630.2578,11.0281,179.3936,0,6); // LV Air
	AddStaticVehicle(487,1672.0811,1633.2742,10.9822,179.8734,55,0); // LV Air
	AddStaticVehicle(487,1631.8373,1530.0778,10.9203,346.6641,0,1); // LV Air
	AddStaticVehicle(592,1477.3231,1802.0819,12.0092,181.3932,0,1); // LV Air
	AddStaticVehicle(476,1279.1200,1361.3596,11.5255,268.4269,1,1); // LV Air
	AddStaticVehicle(476,1278.7672,1324.4603,11.5250,269.8998,1,1); // LV Air
	AddStaticVehicle(519,1595.7944,1295.7587,11.7417,86.7384,1,1); // LV Air
	AddStaticVehicle(519,1597.7126,1325.5767,11.7689,85.3098,1,1); // LV Air
    carpilot[1] = 	AddStaticVehicle(513,1600.9099,1415.7191,11.3812,45.0762,1,1); // LV Air
    carpilot[2] = 	AddStaticVehicle(513,1599.3466,1430.3838,11.3802,47.1757,1,1); // LV Air
    carpilot[3] = 	AddStaticVehicle(513,1599.5551,1464.4163,11.3730,102.1147,1,1); // LV Air
    carpilot[4] = 	AddStaticVehicle(513,1602.9673,1475.9381,11.3922,105.6606,1,1); // LV Air
	AddStaticVehicle(563,1323.7098,1582.0463,11.5122,280.1686,0,3); // LV Air
	AddStaticVehicle(417,1319.5837,1605.4038,10.8623,275.0157,1,1); // LV AIr
	AddStaticVehicle(469,1286.7177,1428.3390,10.8435,267.2042,1,1); // LV Air
	AddStaticVehicle(469,1287.1091,1441.6194,10.8320,267.2814,1,1); // LV Air
	AddStaticVehicle(522,1332.8013,1532.0873,10.3827,266.3350,39,106); // LV Air
	AddStaticVehicle(593,1280.7061,1300.4634,11.2954,270.7480,1,1); // LV Air
	AddStaticVehicle(593,1280.5283,1287.7107,11.3150,268.2381,1,1); // LV Air
	AddStaticVehicle(553,1609.5132,1632.6133,12.1158,179.4524,1,1); // LV Air
	AddStaticVehicle(469,365.2750,2538.6499,16.6631,178.1778,1,1); // Desert Air
	AddStaticVehicle(476,325.8850,2543.3804,17.5202,176.2494,1,1); // Desert Air
	AddStaticVehicle(476,290.5971,2541.3606,17.5247,178.2231,1,1); // Desert Air
    AddStaticVehicle(525,1447.4535,-1622.4762,13.9203,359.0535,0,0); //
    //Grove cars
    //

        cargfc[1] = AddStaticVehicle(403,260.5476,1389.5717,11.1678,272.5406,1,1); // gfc1
        cargfc[2] = AddStaticVehicle(403,260.7739,1406.2845,11.1063,266.6288,1,1); // gfc2
        cargfc[3] = AddStaticVehicle(403,260.5461,1433.1976,11.1527,268.5580,1,1); // gfc3
        cargfc[4] = AddStaticVehicle(403,261.0636,1359.6429,11.1910,267.0951,1,1); // gfc4

    //
grovecars[54] = AddStaticVehicle(522,2482.3757,-1652.5487,13.0282,142.6509,86,86); // grovecar2
grovecars[53] = AddStaticVehicle(566,2498.3342,-1649.1823,13.3081,157.4072,86,86); // grovecar3
grovecars[52] = AddStaticVehicle(492,2515.5366,-1665.1935,13.5741,91.9201,86,86); // grovecar4
grovecars[51] = AddStaticVehicle(429,2516.7124,-1672.0027,13.6131,60.6237,86,0); // grovecar5
grovecars[50] = AddStaticVehicle(411,2509.9509,-1686.9349,13.2954,50.8308,86,86); // grovecar6
grovecars[49] = AddStaticVehicle(567,2488.0681,-1682.6639,13.1949,92.3377,86,86); // grovecar7
grovecars[48] = AddStaticVehicle(560,2473.2893,-1695.6903,13.1662,0.0001,86,86); // grovecar8
grovecars[47] = AddStaticVehicle(560,2473.2490,-1704.8604,13.1925,359.8790,86,86); // grovecar9
grovecars[46] = AddStaticVehicle(482,2466.2520,-1688.1406,13.6778,267.1897,86,86); // grovecar10
grovecars[45] = AddStaticVehicle(579,2470.4138,-1670.1687,13.2181,11.2582,86,86); // grovecar11
grovecars[44] = AddStaticVehicle(409,2443.2847,-1644.2251,13.3183,181.7236,86,86); // grovecar12
grovecars[43] = AddStaticVehicle(562,2425.2075,-1636.3978,13.0753,180.8151,86,86); // grovecar13

grovecars[24] = AddStaticVehicle(411,2159.9136,2351.3975,10.4708,73.0638,86,86); // grovelv
grovecars[25] = AddStaticVehicle(411,2096.3596,2347.1494,10.4360,295.2914,86,86); // grovelv2
grovecars[26] = AddStaticVehicle(522,2117.7148,2362.3904,10.3917,182.3605,86,86); // grovelv3
grovecars[27] = AddStaticVehicle(522,2137.4260,2362.7366,10.3895,180.9432,86,86); // grovelv4
grovecars[28] = AddStaticVehicle(522,2118.4011,2362.5464,10.3872,182.1824,86,86); // grovelv5
grovecars[29] = AddStaticVehicle(522,2136.7153,2362.6479,10.3897,180.2349,86,86); // grovelv6
grovecars[31] = AddStaticVehicle(560,2102.6448,2350.6680,10.3776,296.0741,86,86); // grovelv7
grovecars[32] = AddStaticVehicle(560,2153.9421,2352.8083,10.3767,71.4780,86,86); // grovelv8
grovecars[33] = AddStaticVehicle(429,2148.2656,2354.6208,10.3516,73.6116,86,86); // grovelv9
grovecars[34] = AddStaticVehicle(429,2108.1665,2353.0830,10.3516,295.7684,86,86); // grovelv10
grovecars[35] = AddStaticVehicle(441,2112.0903,2355.3997,9.7906,287.6649,86,86); // grovelv11
grovecars[36] = AddStaticVehicle(441,2114.2156,2356.0950,9.7909,291.0024,86,86); // grovelv12
grovecars[37] = AddStaticVehicle(441,2144.0823,2356.6165,9.7912,69.9248,86,86); // grovelv13
grovecars[38] = AddStaticVehicle(441,2141.6719,2357.1204,9.7984,73.1099,86,86); // grovelv14
grovecars[39] = AddStaticVehicle(447,2080.2769,2342.3716,11.2211,274.1635,86,86); // grove
grovecars[40] = AddStaticVehicle(447,2167.1736,2358.4333,11.2474,95.7698,86,86); // grove
grovecars[41] = AddStaticVehicle(451,2106.4805,2338.9722,10.3776,270.2685,86,86); // grove
grovecars[42] = AddStaticVehicle(451,2180.9644,2338.9385,10.3789,87.6418,86,86); // grove

 	
	//Aztec
    azteccars[1] = AddStaticVehicle(560,752.4326,-512.5208,16.4520,183.2481,2,2); //
    azteccars[2] = AddStaticVehicle(522,748.1166,-523.2762,15.8809,132.6110,2,2); //
    azteccars[3] = AddStaticVehicle(522,746.0215,-523.0245,15.9113,121.3136,2,2); //
    azteccars[4] = AddStaticVehicle(487,742.8655,-543.1096,16.7490,356.3798,2,2); //
    azteccars[5] = AddStaticVehicle(562,750.7712,-546.8819,16.5155,358.9240,2,2); //
    azteccars[6] = AddStaticVehicle(559,727.5143,-545.2380,15.8987,0.6706,2,2); //
    azteccars[7] = AddStaticVehicle(579,786.1733,-503.7809,17.1116,180.6751,2,2); //
    azteccars[8] = AddStaticVehicle(579,786.2695,-515.4025,16.5161,172.4532,2,2); //
    azteccars[9] = AddStaticVehicle(567,772.0239,-544.2796,16.5394,359.3162,2,2); //
    azteccars[10] = AddStaticVehicle(411,757.0272,-1676.9424,3.6760,3.9922,2,2); // aztec1
    azteccars[11] = AddStaticVehicle(411,749.6729,-1677.4177,3.6743,5.1889,2,2); // aztec2
    azteccars[12] = AddStaticVehicle(413,758.1807,-1686.2389,4.2242,0.3813,2,2); // aztec3
    azteccars[13] = AddStaticVehicle(413,750.2381,-1686.0203,4.0977,359.9787,2,2); // aztec4
    azteccars[14] = AddStaticVehicle(429,757.9120,-1693.6150,4.1556,2.2872,2,2); // aztec5
    azteccars[15] = AddStaticVehicle(429,750.3662,-1693.8856,4.1516,1.6421,2,2); // aztec6
    azteccars[16] = AddStaticVehicle(441,758.7546,-1698.3320,3.8649,1.2731,2,2); // aztec7
    azteccars[17] = AddStaticVehicle(441,750.0665,-1700.1217,3.9862,359.4348,2,2); // aztec8
    azteccars[18] = AddStaticVehicle(411,757.8372,-1704.3976,5.2181,359.6634,2,2); // aztec9
    azteccars[19] = AddStaticVehicle(411,757.9177,-1712.3195,6.3062,3.8238,2,2); // aztec10
    azteccars[20] = AddStaticVehicle(411,751.0815,-1705.3043,5.3200,3.7702,2,2); // aztec11
    azteccars[21] = AddStaticVehicle(411,750.3416,-1712.1902,6.3550,358.9619,2,2); // aztec12

	// <+_+ Vinewood Cripz +_+>
		// <+_+ Vinewood Cripz +_+>
			// <+_+ Vinewood Cripz +_+>
				// <+_+ Vinewood Cripz +_+>
					// <+_+ Vinewood Cripz +_+>
						// <+_+ Vinewood Cripz +_+>
							// <+_+ Vinewood Cripz +_+>
								// <+_+ Vinewood Cripz +_+>
									// <+_+ Vinewood Cripz +_+>	//
    vcripzcars[1] = AddStaticVehicle(429,300.0050,-1191.0557,80.5949,42.2361,204,1); // vcripznew
    vcripzcars[2] = AddStaticVehicle(480,301.9891,-1188.6215,80.6858,44.5623,204,1); // vcripznew
    vcripzcars[3] = AddStaticVehicle(541,304.2138,-1186.6772,80.5390,43.5146,204,1); // vcripznew
    vcripzcars[4] = AddStaticVehicle(522,307.4609,-1160.0873,80.4846,126.3257,204,204); // vcripznew
    vcripzcars[5] = AddStaticVehicle(522,307.1654,-1159.3845,80.4838,123.9142,204,204); // vcripznew
    vcripzcars[6] = AddStaticVehicle(522,307.7709,-1160.6404,80.4812,126.1973,204,204); // vcripznew
    vcripzcars[7] = AddStaticVehicle(560,276.2808,-1165.7593,80.6186,224.0951,204,204); // vcripznew
    vcripzcars[8] = AddStaticVehicle(562,280.9922,-1170.3744,80.5727,221.4612,204,204); // vcripznew
    vcripzcars[9] = AddStaticVehicle(411,286.5661,-1175.8085,80.6411,221.4839,204,204); // vcripznew
    vcripzcars[10] = AddStaticVehicle(578,325.6148,-1169.3254,81.5387,45.5454,204,204); // vcripznew
    vcripzcars[11] = AddStaticVehicle(481,296.9448,-1148.9381,80.4268,133.3231,204,204); // vcripznew
    vcripzcars[12] = AddStaticVehicle(481,296.1373,-1148.5446,80.4292,131.1679,204,204); // vcripznew
    vcripzcars[13] = AddStaticVehicle(481,295.4231,-1147.8206,80.4257,137.6041,204,204); // vcripznew
vcripzcars[18] = AddStaticVehicle(579,320.4511,-1173.0035,80.8479,49.0566,204,204); // cripzcar11
vcripzcars[19] = AddStaticVehicle(579,322.2138,-1170.8135,80.8480,49.3291,204,204); // cripzcar11
vcripzcars[20] = AddStaticVehicle(578,328.3809,-1166.4380,81.5397,45.9834,204,204); // cripzcar11
    
    
    
    
    
    
    
vcripzcars[21] = AddStaticVehicle(411,2833.6367,939.5524,10.4771,182.1469,204,204); // ccar1
vcripzcars[22] = AddStaticVehicle(480,2830.3635,939.5722,10.5237,178.5493,204,204); // ccar1
vcripzcars[23] = AddStaticVehicle(451,2827.2031,939.3166,10.4573,179.8680,204,204); // ccar1
vcripzcars[24] = AddStaticVehicle(429,2823.9199,940.1716,10.4297,177.7485,204,204); // ccar1
vcripzcars[25] = AddStaticVehicle(451,2820.8965,940.5597,10.4557,179.4350,204,204); // ccar1
vcripzcars[26] = AddStaticVehicle(451,2817.4927,940.4404,10.4574,177.4827,204,204); // ccar1
vcripzcars[27] = AddStaticVehicle(429,2814.3350,940.2708,10.4297,178.5037,204,204); // ccar1
vcripzcars[28] = AddStaticVehicle(429,2811.3892,940.6787,10.4297,180.2132,204,204); // ccar1
vcripzcars[29] = AddStaticVehicle(429,2833.7373,928.2239,10.4297,0.1792,204,204); // ccar1
vcripzcars[30] = AddStaticVehicle(429,2824.1152,927.6332,10.4297,0.5575,204,204); // ccar1
vcripzcars[31] = AddStaticVehicle(411,2813.9927,926.9877,10.4771,358.3877,204,204); // ccar1
vcripzcars[32] = AddStaticVehicle(413,2827.2664,897.4938,10.3556,2.5486,204,204); // ccar1
vcripzcars[33] = AddStaticVehicle(413,2818.3474,897.4207,10.3499,358.5782,204,204); // ccar1
vcripzcars[34] = AddStaticVehicle(447,2874.0583,901.8616,10.7486,355.8492,204,204); // ccar1
vcripzcars[35] = AddStaticVehicle(451,2854.7795,898.1840,10.0324,357.1300,204,204); // ccar1





vcripzcars[36] = AddStaticVehicle(409,1882.4063,957.1909,10.6205,89.3130,204,204); // car3
vcripzcars[37] = AddStaticVehicle(429,1881.9514,963.4163,10.5000,86.7256,204,204); // car3
vcripzcars[38] = AddStaticVehicle(429,1882.0219,966.7243,10.5000,90.6140,204,204); // car3
vcripzcars[39] = AddStaticVehicle(447,1916.9440,958.8959,10.9150,104.6115,204,204); // car3
vcripzcars[40] = AddStaticVehicle(468,1937.4814,944.9630,10.4892,176.3105,204,204); // car3
vcripzcars[41] = AddStaticVehicle(468,1938.2479,944.9478,10.4892,179.5223,204,204); // car3
vcripzcars[42] = AddStaticVehicle(468,1939.0081,944.9523,10.4895,176.9426,204,204); // car3
vcripzcars[43] = AddStaticVehicle(480,1973.3890,946.6736,10.5907,177.9615,204,1); // car3
vcripzcars[44] = AddStaticVehicle(480,1946.5424,947.8005,10.5951,177.8544,204,1); // car3
vcripzcars[45] = AddStaticVehicle(468,1983.4259,943.6871,10.4817,172.3581,204,204); // car3
vcripzcars[46] = AddStaticVehicle(468,1982.6434,943.6734,10.4817,169.3602,204,204); // car3
vcripzcars[47] = AddStaticVehicle(468,1981.8976,943.6672,10.4817,172.8378,204,204); // car3



	//Russian Mafia
    latincars[1] =AddStaticVehicle(411,1108.6958,-1023.7096,31.6252,180.9074,6,6); // latincar1
    latincars[2] =AddStaticVehicle(541,1096.3483,-1025.0756,31.7324,180.4798,6,6); // latincar1
    latincars[3] =AddStaticVehicle(560,1097.7249,-1035.5841,31.4898,269.8673,6,6); // latin
    latincars[4] =AddStaticVehicle(560,1103.3057,-1035.5074,31.4381,270.7772,6,6); // latin
    latincars[5] =AddStaticVehicle(589,1123.0183,-1026.5474,31.2085,180.0563,6,6); // latin
    latincars[6] =AddStaticVehicle(602,1137.9236,-1025.0894,31.7053,178.7688,6,6); // latin
    latincars[7] =AddStaticVehicle(602,1149.6908,-1025.3075,31.8057,181.6572,6,6); // latin
    latincars[8] =AddStaticVehicle(587,1132.3240,-1035.7805,31.4235,267.6832,6,6); // latin
    latincars[9] =AddStaticVehicle(587,1137.7360,-1035.7349,31.4594,270.1492,6,6); // latin
    latincars[10] =AddStaticVehicle(565,1142.5156,-1035.5402,31.4173,273.0019,6,6); // latin
    latincars[11] =AddStaticVehicle(565,1147.2855,-1035.6000,31.4751,270.5367,6,6); // latin
    latincars[12] =AddStaticVehicle(555,1092.7560,-1028.0990,32.2775,181.2573,6,6); // latin
    latincars[13] =AddStaticVehicle(533,1092.5947,-1021.9917,33.2303,182.5562,6,6); // latin

	//Thug Life
    sbcars[4] = AddPlayerClass(166,500.7381,-1546.7222,17.8246,33.6087,0,0,0,0,0,0); // car1
    sbcars[5] =AddStaticVehicle(536,499.1353,-1546.9138,17.6004,33.6026,210,210); // car1
    sbcars[6] =AddStaticVehicle(411,484.7022,-1538.8474,18.8513,23.5399,210,210); // car1
    sbcars[7] =AddStaticVehicle(566,489.4933,-1524.2977,19.7925,16.1943,210,210); // car1
    sbcars[8] =AddStaticVehicle(482,474.8501,-1511.5087,20.6526,305.0338,210,210); // car1
    sbcars[9] =AddStaticVehicle(567,488.0786,-1501.9819,20.3090,353.0443,210,210); // car1
    sbcars[10] =AddStaticVehicle(522,476.4594,-1488.7264,19.7806,279.6104,210,0); // car1
    sbcars[11] =AddStaticVehicle(522,475.9096,-1487.0114,19.7075,287.6581,210,0); // car1
    sbcars[12] =AddStaticVehicle(566,491.3945,-1482.8320,19.4348,15.3997,210,210); // car1
    sbcars[13] =AddStaticVehicle(517,487.2245,-1467.0896,18.4881,338.8649,210,0); // car1
    sbcars[14] =AddStaticVehicle(560,496.0072,-1470.9349,18.3100,332.8391,210,210);

	//Boyz N The Hood
    boyzcars[1] = AddStaticVehicle(541,1991.7847,-1130.2009,25.2594,90.5343,248,248); // boyz 1
    boyzcars[2] = AddStaticVehicle(451,1984.9685,-1130.2455,25.5082,91.6026,248,248); // boyz 2
    boyzcars[3] = AddStaticVehicle(411,2000.3381,-1141.5209,25.1471,91.0964,248,248); // boyz 3
    boyzcars[5] = AddStaticVehicle(522,2007.1355,-1119.0255,26.1142,225.6193,248,248); // boyz 5
    boyzcars[6] = AddStaticVehicle(522,2005.2887,-1118.7101,26.3505,227.9829,248,248); // boyz 6
    boyzcars[7] = AddStaticVehicle(522,2003.9143,-1118.7136,26.3456,224.6821,248,248); // boyz 7
    boyzcars[8] = AddStaticVehicle(560,2027.9780,-1130.3556,24.3099,89.4153,248,248); // boyz 8
    boyzcars[9] = AddStaticVehicle(439,2027.1467,-1141.3113,24.5444,90.3703,248,248); // boyz 9
    boyzcars[10] = AddStaticVehicle(560,2036.6818,-1130.4760,24.0752,91.5789,248,248); // boyz 10
    boyzcars[11] = AddStaticVehicle(482,2051.7749,-1121.0881,24.7231,181.1716,248,248); // boyz 11
    boyzcars[12] = AddStaticVehicle(475,1977.5115,-1117.1357,25.5939,351.4551,248,248); // boyz 12
    boyzcars[13] = AddStaticVehicle(475,1978.3180,-1109.2174,25.4636,354.8942,248,248); // boyz 13
    //VipGang
        CreateObject(3279, 1197.826293, -2007.362426, 67.940269, 0.000000, 0.000000, 0.000000); //VIP
    CreateObject(3279, 1197.826293, -2068.962890, 67.940269, 0.000000, 0.000000, 0.000000); //VIP
    CreateObject(3279, 1240.976806, -2067.363281, 58.900264, 0.000000, 0.000000, 0.000000); //VIP
    CreateObject(3279, 1240.976806, -1994.414550, 58.070278, 0.000000, 0.000000, 0.000000); //VIP
    CreateObject(3279, 1139.205444, -2005.390258, 67.940269, 0.000000, 0.000000, 0.000000); //VIP
    CreateObject(3279, 1139.205444, -2066.080322, 67.940269, 0.000000, 0.000000, 0.000000); //VIP
    CreateObject(3279, 1139.205444, -2066.080322, 67.940269, 0.000000, 0.000000, 0.000000); //VIP
    CreateObject(3279, 1139.205444, -2066.080322, 67.940269, 0.000000, 0.000000, 0.000000); //VIP
    CreateObject(3279, 1139.205444, -2066.080322, 67.940269, 0.000000, 0.000000, 0.000000); //VIP
    
    vipcars[1] = AddStaticVehicle(579,1140.7024,-2030.0927,68.9443,271.9881,181,181); // vipcar1
    vipcars[2] = AddStaticVehicle(409,1243.9410,-2021.2043,59.7309,177.9704,181,181); // vipcar2
    vipcars[3] = AddStaticVehicle(409,1243.9419,-2037.4746,59.7307,181.8856,181,181); // vipcar3
    vipcars[4] = AddStaticVehicle(468,1274.2704,-2048.9709,58.9283,178.9933,181,181); // vipcar4
    vipcars[5] = AddStaticVehicle(468,1276.4502,-2048.5881,58.8944,193.5808,181,181); // vipcar5
    vipcars[6] = AddStaticVehicle(468,1279.2736,-2048.9507,58.8003,190.0562,181,181); // vipcar6
    vipcars[7] = AddStaticVehicle(560,1277.1289,-2042.6338,58.7295,92.2990,181,181); // vipcar7
    vipcars[8] = AddStaticVehicle(560,1277.3984,-2031.0327,58.6496,83.0665,181,181); // vipcar8
    vipcars[9] = AddStaticVehicle(560,1277.5686,-2024.5355,58.6122,80.3641,181,181); // vipcar9
    vipcars[10] = AddStaticVehicle(411,1277.0298,-2010.4761,58.6602,183.4705,181,181); // vipcar10
    vipcars[11] = AddStaticVehicle(411,1270.0671,-2010.0409,58.8562,177.6457,181,181); // vipcar11
    vipcars[12] = AddStaticVehicle(411,1244.2449,-2009.8389,59.6042,181.7225,181,181); // vipcar12
    vipcars[13] = AddStaticVehicle(522,1237.1691,-2007.3179,59.4209,261.3344,181,181); // vipcar13
    vipcars[14] = AddStaticVehicle(522,1237.4316,-2030.3452,60.5957,269.5838,181,181); // vipcar14
    vipcars[15] = AddStaticVehicle(522,1237.6796,-2042.7904,60.5584,271.8774,181,181); // vipcar15
    vipcars[16] = AddStaticVehicle(522,1175.1260,-2041.3722,68.5540,185.4893,181,181); // vipcar16
    vipcars[17] = AddStaticVehicle(522,1175.0313,-2032.8108,68.5775,0.9233,181,181); // vipcar17
    vipcars[18] = AddStaticVehicle(579,1140.4346,-2041.7124,69.0015,270.5126,181,181); // vipcar18
    vipcars[19] = AddStaticVehicle(562,1138.6312,-2063.9949,68.6584,2.5424,181,181); // vipcar19
    vipcars[20] = AddStaticVehicle(559,1138.4088,-2010.0665,68.6807,181.0400,181,181); // vipcar20
//
    vipcars[31] = AddStaticVehicle(513,1262.9017,-2009.7896,59.9353,175.8336,3,3); // 513new1
    vipcars[32] = AddStaticVehicle(513,1253.9182,-2009.5710,60.1854,184.4787,3,3); // 513new2
//
        vipcars[33] = AddStaticVehicle(487,1115.2109,-2053.2561,74.6057,264.8268,3,3); // heli1
        vipcars[34] = AddStaticVehicle(487,1117.4790,-2025.7090,74.6067,272.2302,3,3); // heli2
	//NZ
    cbkcars[1] = AddStaticVehicle(411,2561.1687,1752.9089,10.5474,1.2114,21,21); // car1
    cbkcars[2] = AddStaticVehicle(411,2560.8967,1765.4512,10.5967,358.0388,21,21); // car2
    cbkcars[3] = AddStaticVehicle(411,2561.3918,1773.8210,10.5474,0.6083,21,21); // car3
    cbkcars[4] = AddStaticVehicle(541,2538.5232,1841.7687,10.4453,87.8434,21,21); // car4
    cbkcars[5] = AddStaticVehicle(541,2550.5530,1841.9116,10.4451,90.1793,21,21); // car5
    cbkcars[6] = AddStaticVehicle(541,2557.8169,1841.7324,10.4453,92.7404,21,21); // car6
    cbkcars[7] = AddStaticVehicle(409,2561.0278,1857.4078,10.6198,0.3483,21,21); // car7
    cbkcars[8] = AddStaticVehicle(409,2561.0410,1875.3303,10.6222,0.5204,21,21); // car8
    cbkcars[9] = AddStaticVehicle(424,2570.1406,1898.8602,10.6047,269.0882,21,21); // car8
    cbkcars[10] = AddStaticVehicle(424,2574.0029,1898.8427,10.6065,268.0857,21,21); // car10
    cbkcars[11] = AddStaticVehicle(424,2578.5308,1898.6508,10.6035,270.9728,21,21); // car11
    cbkcars[12] = AddStaticVehicle(429,2613.0295,1898.9210,10.5000,269.1097,21,21); // car12
    cbkcars[13] = AddStaticVehicle(429,2619.7173,1899.0369,10.5000,268.8808,21,21); // car13
    cbkcars[14] = AddStaticVehicle(429,2625.5139,1899.1538,10.5000,268.7036,21,21); // car14
    cbkcars[15] = AddStaticVehicle(451,2633.0474,1839.7532,10.5262,181.5512,21,21); // car15
    cbkcars[16] = AddStaticVehicle(451,2632.8650,1846.1080,10.5266,179.6148,21,21); // car16
    cbkcars[17] = AddStaticVehicle(451,2632.8855,1852.2469,10.5274,179.0462,21,21); // car17
    cbkcars[18] = AddStaticVehicle(468,2632.8872,1811.0450,10.4895,88.4720,21,21); // car18
    cbkcars[19] = AddStaticVehicle(468,2633.0085,1807.8474,10.4895,89.7854,21,21); // car19
    cbkcars[20] = AddStaticVehicle(468,2633.0181,1804.2598,10.4895,94.0818,21,21); // car20
    cbkcars[21] = AddStaticVehicle(468,2632.5664,1730.4679,10.4895,87.6669,21,21); // car21
    cbkcars[22] = AddStaticVehicle(468,2632.5071,1703.3910,10.4895,86.8126,21,21); // car22
    //
    fbicars[1] = AddStaticVehicle(427,953.2872,1759.0680,8.7804,269.0486,1,1); // fbi2
    fbicars[1] = AddStaticVehicle(427,966.1349,1758.6544,8.7798,268.2539,1,1); // fbi3
    fbicars[5] = AddStaticVehicle(427,969.5053,1706.9961,8.8309,268.1061,1,1); // fbi4
    fbicars[5] = AddStaticVehicle(490,972.7727,1765.9753,8.7744,356.1538,0,0); // fbi5
    fbicars[5] = AddStaticVehicle(490,972.8573,1795.8600,8.7775,355.6718,0,0); // fbi6
    fbicars[2] = AddStaticVehicle(490,973.1412,1698.1117,8.7751,179.2052,0,0); // fbi7
    fbicars[2] = AddStaticVehicle(490,972.8488,1676.8936,8.7771,179.2431,0,0); // fbi8
    fbicars[3] = AddStaticVehicle(601,949.2803,1709.4644,8.5025,359.7587,1,1); // fbi9
    fbicars[3] = AddStaticVehicle(601,948.8649,1756.9572,8.5011,178.3031,1,1); // fbi10
    fbicars[3] = AddStaticVehicle(528,948.8482,1750.9205,8.7842,1.6269,1,1); // fbi11
    fbicars[4] = AddStaticVehicle(528,949.9341,1725.8097,8.7385,2.1512,1,1); // fbi12
    fbicars[4] = AddStaticVehicle(528,985.0446,1719.5142,8.6988,266.1887,1,1); // fbi13
    fbicars[4] = AddStaticVehicle(528,984.9782,1747.3228,8.6906,271.8328,1,1); // fbi14
    fbicars[5] = AddStaticVehicle(468,987.4377,1743.9633,8.3240,178.7673,1,1); // fbi15
    fbicars[13] = AddStaticVehicle(468,987.2703,1736.1405,8.3218,178.7690,1,1); // fbi16
    fbicars[10] = AddStaticVehicle(468,987.1481,1730.3961,8.3240,178.7725,1,1); // fbi17
    fbicars[9] = AddStaticVehicle(415,981.4029,1654.8668,8.4196,359.9992,1,1); // nov1
    fbicars[12] = AddStaticVehicle(415,981.4029,1668.3252,8.4205,359.9991,1,1); // nov2
    fbicars[11] = AddStaticVehicle(415,981.4029,1687.1968,8.4198,359.9990,1,1); // nov3
    fbicars[12] = AddStaticVehicle(415,981.4029,1699.5829,8.4206,359.9987,1,1); // nov4
    fbicars[1] = AddStaticVehicle(415,981.1421,1763.8647,8.4193,359.3910,1,1); // nov5
    fbicars[7] = AddStaticVehicle(415,981.2465,1773.6901,8.4213,359.3900,1,1); // nov6
    fbicars[7] = AddStaticVehicle(415,981.3798,1786.2031,8.4206,359.3903,1,1); // nov7
    fbicars[8] = AddStaticVehicle(415,981.4143,1795.7184,8.4726,359.0634,1,1); // nov8
    fbicars[1] = AddStaticVehicle(427,953.5403,1707.0554,8.7467,261.3798,1,1); // FBI1
    
	//ZETASCARS
    atcars[1] = AddStaticVehicle(480,1112.0160,-939.9430,42.6601,122.6500,0,0); // blackmaf1
    atcars[2] = AddStaticVehicle(411,1099.8015,-964.2724,42.1809,319.5271,0,0); // blackmaf2
    atcars[3] = AddStaticVehicle(522,1111.7222,-968.4125,42.3229,358.5601,0,0); // blackmaf3
    atcars[4] = AddStaticVehicle(522,1107.9667,-968.5505,42.2675,5.0715,0,0); // blackmaf4
    atcars[5] = AddStaticVehicle(560,1115.6658,-963.5401,42.4060,320.6462,0,0); // blackmaf5
    atcars[6] = AddStaticVehicle(562,1120.3278,-963.2891,42.4408,316.8895,0,0); // blackmaf6
    atcars[7] = AddStaticVehicle(543,1126.2748,-962.7534,42.5680,322.2206,0,0); // blackmaf7
    atcars[8] = AddStaticVehicle(542,1130.9393,-962.3121,42.4931,323.0698,0,0); // blackmaf8


	//MS 13
    ecoastcars[1] = AddStaticVehicle(481,-239.8120,2711.7317,62.2028,180.5926,201,201); // ms13
    ecoastcars[2] = AddStaticVehicle(481,-240.5456,2711.6721,62.2042,185.0197,201,201); // ms13
    ecoastcars[3] = AddStaticVehicle(541,-253.2044,2713.1506,62.1561,180.4396,201,201); // ms13
    ecoastcars[4] = AddStaticVehicle(541,-253.1628,2718.0222,62.1584,178.6510,201,201); // ms13
    ecoastcars[5] = AddStaticVehicle(541,-253.2281,2722.9692,62.1618,176.4298,201,201); // ms13
    ecoastcars[6] = AddStaticVehicle(411,-244.5400,2705.1733,62.2553,269.7695,201,201); // ms13
    ecoastcars[7] = AddStaticVehicle(411,-238.9908,2705.3962,62.3321,269.6313,201,201); // ms13
    ecoastcars[8] = AddStaticVehicle(411,-231.9812,2704.9922,62.2661,271.0737,201,201); // ms13
    ecoastcars[9] = AddStaticVehicle(562,-212.9549,2714.1868,62.3470,177.9119,201,201); // ms13
    ecoastcars[10] = AddStaticVehicle(562,-213.1330,2719.7219,62.3467,180.0284,201,201); // ms13
    ecoastcars[11] = AddStaticVehicle(559,-203.4787,2714.1917,62.3438,177.6992,201,201); // ms13
    ecoastcars[12] = AddStaticVehicle(559,-203.3725,2719.9478,62.3438,179.9544,201,201); // ms13
    ecoastcars[13] = AddStaticVehicle(541,-222.3002,2705.8977,62.2357,268.8381,201,201); // ms13
    ecoastcars[14] = AddStaticVehicle(541,-216.7234,2705.6667,62.2360,267.8195,201,201); // ms13
    //BALLAS
ballascars[1] = AddStaticVehicle(481,2125.7087,-1497.2717,23.4951,163.8269,242,242); // ballascar1
ballascars[2] = AddStaticVehicle(481,2123.1636,-1496.7358,23.4953,158.0820,242,242); // ballascar2
ballascars[3] = AddStaticVehicle(412,2142.9238,-1496.6710,23.8792,83.1937,242,242); // ballascar3
ballascars[4] = AddStaticVehicle(411,2130.9314,-1490.6461,23.5455,359.6128,242,242); // ballascar4
ballascars[5] = AddStaticVehicle(567,2139.0205,-1437.1112,24.0286,87.0643,242,242); // ballascar5
ballascars[6] = AddStaticVehicle(536,2140.6333,-1429.4114,24.0281,89.5042,242,242); // ballascar6
ballascars[7] = AddStaticVehicle(411,2141.2190,-1418.9821,24.1873,89.3494,242,242); // ballascar7
ballascars[8] = AddStaticVehicle(411,2141.2100,-1414.6378,24.1930,89.4645,242,242); // ballascar8
ballascars[9] = AddStaticVehicle(522,2150.4785,-1416.4913,25.4944,180.3405,242,0); // ballascar9
ballascars[10] = AddStaticVehicle(522,2150.4158,-1412.9871,25.4925,181.1305,242,0); // ballascar10
ballascars[11] = AddStaticVehicle(560,2157.7712,-1423.7252,25.1941,89.1600,242,242); // ballascar11
ballascars[12] = AddStaticVehicle(415,2145.5723,-1408.3550,24.4137,90.3430,242,242); // ballascar12
ballascars[13] = AddStaticVehicle(451,1953.1752,1784.0172,12.4219,180.9426,242,242); // balas1
ballascars[14] = AddStaticVehicle(411,1949.1655,1783.5634,12.4415,180.3435,242,242); // balas2
ballascars[15] = AddStaticVehicle(522,1953.1862,1760.2499,12.2878,356.8732,242,242); // balas3
ballascars[16] = AddStaticVehicle(522,1948.8420,1761.5774,12.2871,3.1982,242,242); // balas4
ballascars[17] = AddStaticVehicle(481,1967.2363,1773.7057,12.2589,90.9262,242,242); // balas5
ballascars[18] = AddStaticVehicle(489,1946.4363,1782.9606,12.8891,183.1544,242,242); // carbalas
ballascars[19] = AddStaticVehicle(489,1942.0240,1784.0316,12.8584,178.7621,242,242); // carbalas
ballascars[20] = AddStaticVehicle(500,1967.0563,1799.0352,12.8506,179.6555,242,242); // carbalas
ballascars[21] = AddStaticVehicle(500,1964.5001,1800.0411,12.8556,180.4217,242,242); // carbalas

    //GPD CARS

   //YAKUZACARS
    yakuzacars[2] = AddStaticVehicle(560,1669.6804,-1693.0356,15.3184,90.5221,55,50); //
    yakuzacars[3] = AddStaticVehicle(560,1669.3191,-1718.9243,15.3160,91.7020,55,50); //
    yakuzacars[4] = AddStaticVehicle(522,1643.5737,-1693.3635,20.0379,191.5710,55,50); //
    yakuzacars[5] = AddStaticVehicle(522,1645.0184,-1693.2192,20.0040,197.4200,55,50); //
    yakuzacars[6] = AddStaticVehicle(559,1659.4801,-1693.6482,20.1118,91.9871,55,50); //
    yakuzacars[7] = AddStaticVehicle(522,1673.6301,-1693.2065,20.0466,154.0311,55,50); //
    yakuzacars[8] = AddStaticVehicle(522,1674.3824,-1693.1830,20.0293,153.1697,55,50); //
    yakuzacars[9] = AddStaticVehicle(411,1646.5920,-1719.8007,20.2101,1.6572,55,50); //
    yakuzacars[10] = AddStaticVehicle(411,1655.6212,-1720.2711,20.2089,0.0001,55,50); //
    yakuzacars[11] = AddStaticVehicle(411,1668.5732,-1720.2074,20.2116,2.5757,55,50); //
    yakuzacars[12] = AddStaticVehicle(451,1658.4491,-1685.2834,21.1384,268.4994,55,50); //
    yakuzacars[13] = AddStaticVehicle(447,1652.5360,-1652.4711,28.1783,0.0008,55,50); //
    yakuzacars[14] = AddStaticVehicle(451,1644.0691,-1674.1304,21.1369,179.2701,55,50); //
    yakuzacars[15] = AddStaticVehicle(451,1671.2777,-1673.5511,21.1441,181.0771,55,50); //
   
   //DPKCARS
    Dpkcars[1] = AddStaticVehicle(470,929.0278,563.8003,-29.9395,90.5169,1,1); // dpk1
    Dpkcars[2] = AddStaticVehicle(409,2506.1855,2715.5291,10.6203,266.3269,0,0); // dpk1
    Dpkcars[3] = AddStaticVehicle(409,2506.2854,2711.4326,10.6203,268.7421,0,0); // dpk2
    Dpkcars[4] = AddStaticVehicle(409,2506.4666,2719.4856,10.6203,268.6781,0,0); // dpk3
    Dpkcars[6] = AddStaticVehicle(415,2506.2615,2727.7422,10.5870,270.0035,0,0); // dpk5
    Dpkcars[7] = AddStaticVehicle(415,2520.5532,2747.0684,10.5915,1.8904,0,0); // dpk6
    Dpkcars[8] = AddStaticVehicle(415,2528.7996,2747.9768,10.5922,359.1019,0,0); // dpk7
    Dpkcars[9] = AddStaticVehicle(415,2537.1353,2747.1790,10.5919,358.8234,0,0); // dpk8
    Dpkcars[10] = AddStaticVehicle(411,2520.2532,2760.1047,10.5474,180.0129,0,0); // dpk9
    Dpkcars[11] = AddStaticVehicle(411,2528.7976,2759.5107,10.5474,180.5207,0,0); // dpk10
    Dpkcars[12] = AddStaticVehicle(411,2537.0352,2759.4006,10.5474,179.8947,0,0); // dpk11
    Dpkcars[13] = AddStaticVehicle(411,2506.2444,2731.8457,10.5400,272.4844,0,0); // dpk12
    Dpkcars[14] = AddStaticVehicle(429,2542.0603,2759.1216,10.5000,178.9363,0,0); // dpk13
    Dpkcars[15] = AddStaticVehicle(429,2541.4531,2746.7637,10.5000,359.1137,0,0); // dpk14
    Dpkcars[16] = AddStaticVehicle(429,2549.6653,2760.2288,10.5000,180.3987,0,0); // dpk15
    Dpkcars[17] = AddStaticVehicle(429,2549.8267,2747.1667,10.5000,0.5053,0,0); // dpk16
    Dpkcars[18] = AddStaticVehicle(429,2505.2478,2736.0178,10.4926,269.4140,0,0); // dpk17
    Dpkcars[19] = AddStaticVehicle(451,2520.2939,2770.2678,10.5274,1.5387,0,0); // dpk18
    Dpkcars[20] = AddStaticVehicle(451,2529.1602,2769.9973,10.5268,359.6061,0,0); // dpk19
    Dpkcars[21] = AddStaticVehicle(451,2537.1155,2770.0212,10.5261,359.3938,0,0); // dpk20
    Dpkcars[22] = AddStaticVehicle(451,2541.7820,2770.0056,10.5274,0.9490,0,0); // dpk21
    Dpkcars[23] = AddStaticVehicle(451,2549.4937,2770.3350,10.5283,359.8930,0,0); // dpk22
    Dpkcars[24] = AddStaticVehicle(451,2505.4341,2740.3127,10.5197,270.2942,0,0); // dpk23
    Dpkcars[25] = AddStaticVehicle(541,2505.1343,2744.0994,10.4431,271.9955,0,0); // dpk24
    Dpkcars[26] = AddStaticVehicle(541,2541.4063,2792.9834,10.4453,179.4962,0,0); // dpk25
    Dpkcars[27] = AddStaticVehicle(541,2549.3728,2792.8721,10.4452,179.1992,0,0); // dpk26
    Dpkcars[28] = AddStaticVehicle(541,2557.4985,2792.0225,10.4453,181.8651,0,0); // dpk27
    Dpkcars[29] = AddStaticVehicle(468,2588.5142,2780.6067,10.4931,89.8416,0,0); // dpk28
    Dpkcars[30] = AddStaticVehicle(468,2588.4180,2776.6484,10.4894,90.8979,0,0); // dpk29
    Dpkcars[31] = AddStaticVehicle(468,2588.3601,2768.8369,10.4896,91.8182,0,0); // dpk30
    Dpkcars[32] = AddStaticVehicle(468,2588.3523,2772.7397,10.4895,89.5940,0,0); // dpk31


   
    //AB Cars
	ABcars[1] = AddStaticVehicle(411,1683.2992,-2117.0015,13.2224,266.6464,153,153); // Asian Gang Car 1
	ABcars[2] = AddStaticVehicle(411,1684.1808,-2108.4329,13.1889,269.8461,153,153); // 2
	ABcars[3] = AddStaticVehicle(409,1663.1664,-2115.1270,13.3468,270.1768,153,153); // car
	ABcars[4] = AddStaticVehicle(409,1663.3708,-2111.7126,13.3468,267.0134,153,153); // car
	ABcars[5] = AddStaticVehicle(413,1679.9960,-2127.3086,13.6389,349.1241,153,153); // car
	ABcars[6] = AddStaticVehicle(429,1698.5271,-2101.0613,13.2292,177.2243,153,153); // car
	ABcars[7] = AddStaticVehicle(429,1698.7119,-2095.4314,13.2266,177.5199,153,153); // car
	ABcars[8] = AddStaticVehicle(451,1704.8901,-2125.7456,13.2540,359.6649,153,153); // car
	ABcars[9] = AddStaticVehicle(451,1724.7855,-2097.9148,13.2540,179.3670,153,153); // car
	ABcars[10] = AddStaticVehicle(461,1671.5125,-2111.8481,13.1332,272.8860,153,153); // car
	ABcars[11] = AddStaticVehicle(461,1671.3567,-2115.3523,13.1329,278.0494,153,153); // car
	ABcars[12] = AddStaticVehicle(496,1695.2955,-2108.8711,13.0991,272.0525,153,153); // car
	ABcars[13] = AddStaticVehicle(496,1696.8462,-2116.8059,13.0994,270.0916,153,153); // car
	ABcars[14] = AddStaticVehicle(496,1703.3822,-2109.1824,13.0993,271.3833,153,153); // car
	ABcars[15] = AddStaticVehicle(496,1703.5586,-2116.7263,13.0976,267.4625,153,153); // car
	ABcars[16] = AddStaticVehicle(518,1711.5183,-2108.7786,13.0538,270.5740,153,153); // car
	ABcars[17] = AddStaticVehicle(518,1711.3951,-2116.8113,13.0519,269.4899,153,153); // car
	ABcars[18] = AddStaticVehicle(480,1747.8159,-2100.1917,13.3199,181.4609,153,153); // car
	ABcars[19] = AddStaticVehicle(480,1724.9257,-2125.7327,13.3285,359.4210,153,153); // car
	ABcars[20] = AddStaticVehicle(429,1718.7256,-2108.9678,13.0625,269.3117,153,153); // bonuscar
	ABcars[21] = AddStaticVehicle(429,1719.1093,-2116.7659,13.0625,269.5382,153,153); // bonuscar
	ABcars[22] = AddStaticVehicle(480,1725.4175,-2116.5591,13.1550,267.4875,153,153); // bonuscar
	ABcars[23] = AddStaticVehicle(480,1726.1787,-2108.7141,13.1960,266.9900,153,153); // bonuscar
	ABcars[24] = AddStaticVehicle(441,1729.7510,-2117.2908,12.5013,267.8097,153,153); // carN1
	ABcars[25] = AddStaticVehicle(441,1731.8882,-2117.3210,12.5016,266.6783,153,153); // carN1
	ABcars[26] = AddStaticVehicle(441,1730.3401,-2108.3787,12.5016,268.2935,153,153); // carN1
	ABcars[27] = AddStaticVehicle(441,1732.2935,-2108.3503,12.5015,274.0100,153,153); // carN1
	ABcars[28] = AddStaticVehicle(447,1699.2938,-2083.1350,17.5577,183.4871,0,0); // carN1
	ABcars[29] = AddStaticVehicle(447,1666.7754,-2087.2214,17.3076,272.1883,0,0); // CARN1
	ABcars[30] = AddStaticVehicle(468,1736.2520,-2107.8367,13.0520,269.4704,153,153); // CARN1
	ABcars[31] = AddStaticVehicle(468,1738.8126,-2108.1563,13.0520,267.8259,153,153); // CARN1
	ABcars[32] = AddStaticVehicle(468,1734.8984,-2117.4446,13.0520,269.0681,153,153); // CARN1
	ABcars[33] = AddStaticVehicle(468,1737.9509,-2117.4709,13.0517,271.7350,153,153); // CARN1
	ABcars[34] = AddStaticVehicle(471,1744.9642,-2123.2903,13.0324,2.2913,153,153); // CARN1
	ABcars[35] = AddStaticVehicle(471,1744.8669,-2129.6206,13.0282,357.7357,153,153); // CARN1
    ABcars[36] = AddStaticVehicle(471,1744.8975,-2134.0647,13.0285,2.4439,153,153); // CARN1
	ABcars[37] = AddStaticVehicle(506,1772.6572,-2124.9414,13.2514,359.1592,153,153); // CARN1
	ABcars[38] = AddStaticVehicle(507,1772.9493,-2099.3618,13.3713,178.1115,153,153); // CARN1
	//VAGOS
    vagoscars[0] = AddStaticVehicle(541,2570.8398,-1035.7428,69.2045,179.4556,6,6); // Vagos Cars
    vagoscars[1] = AddStaticVehicle(541,2565.3708,-1043.9298,69.0388,91.2354,6,6); //
    vagoscars[2] = AddStaticVehicle(541,2570.9233,-1044.0496,69.0390,89.5632,6,6); //
    vagoscars[3] = AddStaticVehicle(468,2542.6455,-1055.0842,69.2692,28.4942,6,6); //
    vagoscars[4] = AddStaticVehicle(468,2543.8540,-1054.7488,69.2750,27.7454,6,6); //
    vagoscars[5] = AddStaticVehicle(468,2545.1758,-1053.9840,69.2842,35.2369,6,6); //
    vagoscars[6] = AddStaticVehicle(468,2541.7625,-1055.9258,69.2637,32.9022,6,6); //
    vagoscars[7] = AddStaticVehicle(487,2538.6814,-1067.2908,73.0448,95.9946,6,6); //
    vagoscars[8] = AddStaticVehicle(495,2604.4575,-1062.6572,69.9440,2.6137,6,6); //
    vagoscars[10] = AddStaticVehicle(411,2559.0884,-1043.8722,69.1411,89.5015,6,6); //
    vagoscars[11] = AddStaticVehicle(536,2564.9709,-1072.9559,68.8119,344.3560,6,6); //
    vagoscars[12] = AddStaticVehicle(536,2566.4211,-1064.3088,69.0399,350.5391,6,6); //
    vagoscars[13] = AddStaticVehicle(560,2535.3811,-1026.2162,69.2856,178.9091,6,6); //
    vagoscars[14] = AddStaticVehicle(560,2535.0183,-1032.6520,69.2859,176.9194,6,6); //
    vagoscars[15] = AddStaticVehicle(419,2534.5032,-1051.3210,69.2116,90.1013,6,6); //
    vagoscars[16] = AddStaticVehicle(466,2592.2495,-1052.5557,69.2383,89.4376,6,6); //
    vagoscars[17] = AddStaticVehicle(411,2552.3628,-1044.0275,69.1411,89.1961,6,6); //
    vagoscars[18] = AddStaticVehicle(521,2534.9417,-1056.3958,69.1494,42.5195,6,6); //
    vagoscars[19] = AddStaticVehicle(521,2533.7300,-1057.3228,69.1470,52.4288,6,6); //
    vagoscars[20] = AddStaticVehicle(521,2536.2429,-1055.8555,69.1389,43.1860,6,6); //
    vagoscars[21] = AddStaticVehicle(521,2537.5356,-1055.5225,69.1476,38.3785,6,6); //
    vagoscars[22] = AddStaticVehicle(562,2586.9092,-1027.8090,69.2286,177.0920,6,6); //
    vagoscars[23] = AddStaticVehicle(562,2586.3757,-1034.4319,69.2413,178.0345,6,6); //
    vagoscars[24] = AddStaticVehicle(579,2530.7156,-1067.8937,69.4981,1.6438,6,6); //
    vagoscars[25] = AddStaticVehicle(579,2530.3782,-1061.0427,69.5004,0.8695,6,6); //
    vagoscars[26] = AddStaticVehicle(565,2541.8689,-1034.2876,69.2039,210.4386,6,6); //
    vagoscars[27] = AddStaticVehicle(409,2596.9041,-1060.9047,69.3795,3.1434,6,6); //
    vagoscars[28] = AddStaticVehicle(415,2555.0562,-1069.5985,68.7352,345.5181,6,6); //
    vagoscars[29] = AddStaticVehicle(415,2557.4563,-1061.2526,69.0386,348.9857,6,6); //
    vagoscars[30] = AddStaticVehicle(506,1840.9463,2359.3416,10.6843,268.7744,6,6); //
    vagoscars[31] = AddStaticVehicle(541,1841.0300,2363.2771,10.5876,266.1362,6,6); //
    vagoscars[32] = AddStaticVehicle(541,1840.8295,2366.8259,10.6004,267.2433,6,6); //
    vagoscars[33] = AddStaticVehicle(541,1840.5585,2370.4656,10.5992,266.3925,6,6); //
    vagoscars[34] = AddStaticVehicle(541,1840.1930,2374.4243,10.6035,265.9769,6,6); //
    vagoscars[35] = AddStaticVehicle(411,1841.5557,2383.9429,10.7081,179.6827,6,6); //
    vagoscars[36] = AddStaticVehicle(411,1846.3737,2384.2725,10.7071,178.4684,6,6); //
    vagoscars[37] = AddStaticVehicle(411,1850.7454,2383.5056,10.6975,177.2505,6,6); //
    vagoscars[38] = AddStaticVehicle(411,1854.9736,2383.4717,10.7079,179.8139,6,6); //
    vagoscars[39] = AddStaticVehicle(461,1851.7784,2344.8909,10.5716,359.7233,6,6); //
    vagoscars[40] = AddStaticVehicle(461,1850.5486,2344.6877,10.5656,10.8650,6,6); //
    vagoscars[41] = AddStaticVehicle(461,1848.5881,2344.3054,10.5763,7.6615,6,6); //
    vagoscars[42] = AddStaticVehicle(461,1847.0966,2344.4182,10.5622,0.2573,6,6); //
    vagoscars[43] = AddStaticVehicle(468,1845.6843,2341.8242,10.6620,82.1299,6,6); //
    vagoscars[44] = AddStaticVehicle(468,1845.2452,2339.3464,10.6407,72.4892,6,6); //
    vagoscars[45] = AddStaticVehicle(468,1845.6128,2340.7231,10.6356,62.5359,6,6); //
    vagoscars[46] = AddStaticVehicle(468,1844.5984,2338.0100,10.6576,70.4531,6,6); //
    vagoscars[47] = AddStaticVehicle(409,1844.4727,2333.1638,10.7770,1.2779,6,6); //
    vagoscars[48] = AddStaticVehicle(506,1841.1411,2355.9260,10.6843,270.2860,6,6); //
    vagoscars[49] = AddStaticVehicle(506,1840.7375,2352.6218,10.6843,272.0504,6,6); //
    vagoscars[50] = AddStaticVehicle(506,1840.5693,2348.4063,10.6844,270.2628,6,6); //
    vagoscars[51] = AddStaticVehicle(487,1869.9376,2374.5317,15.0313,0.0001,6,6); //
    vagoscars[52] = AddStaticVehicle(487,1881.1099,2373.1821,14.9602,0.5919,6,6); //
    vagoscars[53] = AddStaticVehicle(487,1888.7461,2367.9705,15.0152,2.6025,6,6); //
    vagoscars[54] = AddStaticVehicle(487,1902.0746,2362.7708,14.9395,359.4509,6,6); //
    vagoscars[57] = AddStaticVehicle(535,1853.8143,2374.3479,10.7440,93.0159,6,6); //
    vagoscars[58] = AddStaticVehicle(535,1853.6432,2370.0979,10.7435,94.0602,6,6); //
    vagoscars[59] = AddStaticVehicle(535,1853.3768,2365.6956,10.7422,91.6735,6,6); //
    vagoscars[60] = AddStaticVehicle(535,1853.3361,2361.7539,10.7446,95.5497,6,6); //
    vagoscars[61] = AddStaticVehicle(535,1853.4073,2357.7097,10.7426,93.9279,6,6); //
    vagoscars[62] = AddStaticVehicle(560,1910.1853,2290.0063,10.5258,359.3511,6,6); //
    vagoscars[63] = AddStaticVehicle(560,1907.0538,2290.3247,10.5299,0.1209,6,6); //
    vagoscars[64] = AddStaticVehicle(560,1903.4663,2290.2283,10.5251,0.0859,6,6); //
    vagoscars[65] = AddStaticVehicle(560,1899.7012,2290.4492,10.5253,0.9817,6,6); //
    vagoscars[66] = AddStaticVehicle(562,1910.8436,2299.7061,10.4791,93.4234,6,6); //
    vagoscars[67] = AddStaticVehicle(562,1910.7368,2303.0784,10.4791,92.0920,6,6); //
    vagoscars[68] = AddStaticVehicle(562,1910.7200,2306.8162,10.4798,87.9506,6,6); //
    vagoscars[69] = AddStaticVehicle(562,1911.0043,2310.4690,10.4804,88.4184,6,6); //
    vagoscars[70] = AddStaticVehicle(565,1890.3956,2294.8252,10.4440,358.0448,6,6); //
    vagoscars[71] = AddStaticVehicle(565,1890.1819,2299.6753,10.4437,1.1274,6,6); //
	//Sons of Anarchy
    rockcars[1] = AddStaticVehicle(560,-781.8414,2769.7310,45.3702,177.9397,3,3); // car1
    rockcars[2] = AddStaticVehicle(560,-784.2142,2769.6270,45.3528,181.8141,3,3); // car2
    rockcars[3] = AddStaticVehicle(554,-753.3641,2772.6802,45.9106,179.0758,0,3); // rockcar
    rockcars[4] = AddStaticVehicle(554,-753.4922,2766.8633,45.8636,178.5598,0,3); // rockcar2
    rockcars[5] = AddStaticVehicle(411,-787.5941,2753.1057,45.4663,359.2906,3,3); // car
    rockcars[6] = AddStaticVehicle(411,-787.9474,2761.9397,45.4716,0.5849,3,3); // car
    rockcars[7] = AddStaticVehicle(562,-762.1619,2764.1272,45.4731,268.0800,3,3); // car
    rockcars[8] = AddStaticVehicle(562,-771.6171,2763.9768,45.4539,269.2065,3,3); // car
    rockcars[9] = AddStaticVehicle(471,-789.0852,2758.4658,45.3546,269.1021,0,3); //
    rockcars[10] = AddStaticVehicle(471,-789.0790,2756.3220,45.3475,274.7945,0,3); //
    rockcars[13] = AddStaticVehicle(487,-773.7722,2769.3149,50.9543,174.7242,3,3); // hili
    rockcars[14] = AddStaticVehicle(487,-758.1005,2768.0110,51.0151,164.5385,3,3); // hili
    rockcars[15] = AddStaticVehicle(487,-794.2101,2746.7344,50.9239,275.9755,3,3); // hili
    rockcars[16] = AddStaticVehicle(487,-793.9021,2766.3518,50.9370,268.8784,3,3); // hili
    rockcars[17] = AddStaticVehicle(560,-797.3915,2746.7354,45.4817,178.2560,3,3); // car
    rockcars[18] = AddStaticVehicle(560,-797.2022,2755.7483,45.4909,179.9829,3,3); // car
    rockcars[19] = AddStaticVehicle(560,-797.2364,2766.9565,45.5024,180.3208,3,3); // car
    rockcars[20] = AddStaticVehicle(411,-777.4560,2772.9412,45.5008,269.0463,3,3); // car
    rockcars[21] = AddStaticVehicle(411,-764.6940,2772.9163,45.5409,270.0148,3,3); // car

//LV NEW CARS
AddStaticVehicle(420,2200.7366,1293.8013,10.5950,88.9774,6,6); // newcar1
AddStaticVehicle(559,2201.0156,1285.6399,10.4841,90.2617,11,11); // newcar2
AddStaticVehicle(420,2200.8247,1277.5787,10.5958,90.6983,6,6); // newcar3
AddPlayerClass(28,2551.8525,2244.3210,10.8203,172.9663,0,0,0,0,0,0); // spawn2
AddStaticVehicle(522,2564.6843,2270.9473,10.3895,269.0268,125,125); // car3
AddStaticVehicle(560,2504.1946,2239.0391,10.4179,88.9918,0,5); // car4
AddStaticVehicle(481,2496.8730,2320.6733,10.3217,96.2531,1,1); // car5
AddStaticVehicle(549,2531.2766,2511.3635,10.4212,91.4351,2,4); // car6
AddStaticVehicle(589,2507.5662,2508.8557,10.4780,270.5804,4,1); // car7
AddStaticVehicle(535,2460.6541,2528.2327,10.6070,1.5184,3,3); // car8
AddStaticVehicle(477,2402.5557,2557.0559,10.6129,270.3062,1,1); // car9
AddStaticVehicle(475,2402.0903,2561.9016,21.7243,269.9669,5,5); // car10
AddStaticVehicle(411,2421.2522,2569.9277,21.6071,164.8822,3,3); // car11
AddStaticVehicle(411,2425.7266,2568.5466,21.6168,164.8672,16,16); // car12
AddStaticVehicle(411,2430.2427,2567.5786,21.6101,164.3033,65,65); // car13
AddStaticVehicle(522,2434.7405,2566.1077,21.4356,165.3230,123,123); // car14
AddStaticVehicle(522,2438.9951,2565.0786,21.4470,163.8940,170,111); // car15
AddStaticVehicle(522,2443.1321,2564.1472,21.4484,163.8794,140,150); // car16
AddStaticVehicle(522,2471.4763,2527.6257,21.4463,3.5717,4,4); // car17
AddStaticVehicle(434,2815.4480,2338.1438,10.7924,90.3220,2,5); // car18
AddStaticVehicle(477,2853.3132,2409.5063,10.6097,224.2180,1,1); // car19
AddStaticVehicle(458,2860.6514,2309.3816,10.7258,0.3678,1,1); // car20
AddStaticVehicle(411,2776.1238,2223.6633,10.3388,179.2583,1,1); // car21
AddStaticVehicle(463,2830.7266,2026.7825,10.3587,357.7064,0,86); // car22
AddStaticVehicle(589,2631.5906,1807.6902,10.4490,89.3768,6,6); // car23
AddStaticVehicle(494,2611.9548,1898.2383,10.6779,182.5202,53,53); // car24
AddStaticVehicle(560,2584.1150,1658.7318,10.5542,271.1224,75,75); // car25
AddStaticVehicle(581,2510.9636,1667.9617,10.4195,92.3179,65,4); // car26
AddStaticVehicle(579,2498.0706,1418.8843,10.8148,177.8091,1,1); // car27
AddStaticVehicle(422,2604.6587,1378.2994,10.7409,89.8951,56,4); // car28
AddStaticVehicle(560,2556.6375,1308.7657,10.3974,90.8241,1,1); // car29
AddStaticVehicle(541,2611.3630,1265.3463,10.3613,182.6914,12,33); // car30
AddStaticVehicle(429,2551.1931,1236.7615,10.5448,1.4747,0,86); // car31
AddStaticVehicle(603,2464.9141,1336.5865,10.5753,179.0450,0,89); // car33
AddStaticVehicle(558,2442.1018,1159.4540,10.3839,89.6647,2,2); // car34
AddStaticVehicle(411,2432.5415,1031.3132,10.4260,0.2568,16,16); // car35
AddStaticVehicle(562,2436.5620,948.0956,10.4028,84.0255,210,210); // car36
AddStaticVehicle(578,2647.7473,813.0166,5.8790,90.5862,4,4); // car37
AddStaticVehicle(551,2647.5745,744.8443,10.6467,181.4264,67,67); // car38
AddStaticVehicle(461,2540.3376,741.3383,10.4019,272.2442,25,25); // car39
AddStaticVehicle(415,2360.5730,717.3699,10.5179,90.9413,3,3); // car40
AddStaticVehicle(549,2314.5027,718.5865,10.3576,90.2979,3,73); // car41
AddStaticVehicle(565,1938.8585,698.3154,10.4489,180.7950,77,77); // car42
AddStaticVehicle(475,1913.2343,708.6703,10.6245,0.2620,65,65); // car43
AddStaticVehicle(484,2241.6304,533.0043,0.1769,110.6867,0,6); // car44
AddStaticVehicle(452,2282.2969,528.3171,-0.4448,88.3434,2,3); // car45
AddStaticVehicle(452,2280.7148,536.5986,-0.4654,89.7184,5,154); // car46
AddStaticVehicle(446,2290.2695,516.3633,-0.6678,180.0207,6,6); // car47
AddStaticVehicle(446,2297.4563,516.1211,-0.6393,181.2759,16,16); // car48
AddStaticVehicle(453,2352.5503,514.9590,-0.3038,181.2007,1,1); // car49
AddStaticVehicle(473,2358.7168,516.9803,-0.2881,180.0359,84,85); // car50
AddStaticVehicle(454,2366.2295,515.0735,0.2781,180.2130,1,3); // car51
AddStaticVehicle(493,2377.9177,528.1384,-0.1998,270.1912,144,144); // car52
AddStaticVehicle(493,2377.6992,538.4858,-0.2561,271.4184,11,11); // car53
AddStaticVehicle(426,2384.1599,638.6618,10.5029,89.8111,90,90); // car54
AddStaticVehicle(603,1866.7584,1179.1794,10.6903,179.8086,0,1); // car55
AddStaticVehicle(451,1941.8850,1348.6361,8.9272,181.1320,0,1); // car56
AddStaticVehicle(541,2037.2368,1067.4728,10.3688,182.6708,1,1); // car57
AddStaticVehicle(562,2038.8638,1074.8801,10.3206,181.2267,3,4); // car58
AddStaticVehicle(567,2075.1011,1138.3247,10.5810,0.5812,3,3); // car59
AddStaticVehicle(463,2075.6753,1308.5433,10.2122,0.4994,4,6); // car60
AddStaticVehicle(411,2039.1511,1410.0649,10.4086,180.7643,0,3); // car61
AddStaticVehicle(445,2039.1290,1545.6003,10.4920,180.4905,4,5); // car62
AddStaticVehicle(560,2075.8101,1518.3138,10.3321,0.3480,7,2); // car63
AddStaticVehicle(411,2148.8230,1397.3738,10.5499,179.1120,75,1); // car64
AddStaticVehicle(565,2142.3933,1398.2778,10.3946,179.4189,4,3); // car65
AddStaticVehicle(521,2116.7051,1397.9070,10.3862,178.5000,3,4); // car66
AddStaticVehicle(411,2136.0188,1408.3407,10.5739,1.0652,3,3); // car67
AddStaticVehicle(560,2148.8218,1408.5496,10.4785,0.8450,6,6); // car68
AddStaticVehicle(481,2180.4363,1421.0896,10.3224,91.4613,0,0); // car69
AddStaticVehicle(587,2333.4199,1429.9547,10.4729,270.0540,85,4); // car70
AddStaticVehicle(541,2301.5098,1426.4272,42.3714,269.5419,45,4); // car71
AddStaticVehicle(415,2302.5808,1518.7562,42.5524,179.1033,4,5); // car72
AddStaticVehicle(534,2076.0625,1675.7705,10.3941,353.4432,4,5); // car73
AddStaticVehicle(545,2083.6292,1791.8817,10.4164,154.1013,0,1); // car74
AddStaticVehicle(411,2186.5762,1974.9690,10.4943,89.0564,158,158); // car75
AddStaticVehicle(411,2169.5056,1981.6057,10.5474,267.6167,2,1); // car76
AddStaticVehicle(451,2185.2644,1996.1682,10.5436,88.8502,1,1); // car77
AddStaticVehicle(522,2213.1067,2012.6522,10.3682,269.8872,1,2); // car78
AddStaticVehicle(411,2241.3184,2007.3229,10.4906,359.2658,89,2); // car79
AddStaticVehicle(482,2284.9268,2050.2498,10.9812,89.6943,34,6); // car80
AddStaticVehicle(522,2441.2786,2013.2446,10.3922,268.6646,66,66); // car81
AddStaticVehicle(536,2486.2170,1991.3276,10.6045,0.2534,6,7); // car82
AddStaticVehicle(562,2239.5947,2235.8625,10.4363,269.8813,3,0); // car83
AddStaticVehicle(533,1470.1699,2839.4609,10.5608,180.2007,12,12); // car84
AddStaticVehicle(603,1495.9585,2878.6868,10.5689,180.0241,125,0); // car85
AddStaticVehicle(415,1529.5569,2827.1646,10.5414,89.7495,6,6); // car87
AddStaticVehicle(409,2621.5229,2792.5093,10.5872,89.0237,1,1); // car86
//LS NEW CARS
AddStaticVehicle(451,1778.0751,-1890.6227,13.1150,91.1341,37,0); // lscar1
AddStaticVehicle(560,1860.4681,-1926.4509,13.1575,262.9893,1,1); // lscar2
AddStaticVehicle(422,2059.1572,-1904.3773,13.4670,180.1997,19,0); // lscar3
AddStaticVehicle(415,2052.3896,-1903.9752,13.2881,179.3947,211,1); // lscar4
AddStaticVehicle(426,2077.9165,-1937.5199,13.1460,270.6591,2,8); // lscar5
AddStaticVehicle(420,2239.4961,-2015.7126,13.3595,90.0280,17,0); // lscar6
AddStaticVehicle(418,2729.5247,-1999.2274,13.5678,91.5877,15,0); // lscar7
AddStaticVehicle(415,2776.6963,-1840.6035,9.5149,20.5501,14,0); // lscar8
AddStaticVehicle(405,2658.0615,-1707.1688,9.2279,89.5591,7,0); // lscar9
AddStaticVehicle(424,2120.9915,-1778.4247,13.2243,271.2826,21,0); // lscar10
AddStaticVehicle(444,1944.9940,-1800.9492,13.9605,269.8197,33,0); // lscar11
AddStaticVehicle(461,1555.7219,-1776.7422,13.1197,102.3582,43,0); // lscar12
AddStaticVehicle(411,1548.0323,-1809.9698,13.2815,269.6306,0,0); // lscar13
AddStaticVehicle(487,1533.3687,-1839.4639,13.7581,179.9973,1,1); // lscar14
AddStaticVehicle(462,1553.8926,-1471.9465,13.1485,3.9153,44,0); // lscar15
AddStaticVehicle(462,1551.4670,-1472.2695,13.1498,346.7338,45,0); // lscar16
AddStaticVehicle(463,1419.7726,-1323.8895,13.0998,85.9353,46,0); // lscar17
AddStaticVehicle(411,1435.6604,-1030.3828,23.3833,90.1779,0,1); // lscar18
AddStaticVehicle(467,1376.5444,-990.8283,29.5064,358.5219,48,0); // lscar19
AddStaticVehicle(559,1436.0461,-959.7134,35.8633,263.2377,1,1); // lscar20
AddStaticVehicle(559,1068.2865,-1109.4155,24.0559,270.6709,234,234); // lscar21
AddStaticVehicle(411,1003.6246,-1055.4772,30.5349,2.8097,0,86); // lscar22
AddStaticVehicle(525,1013.3885,-1024.2672,31.9391,179.4380,86,86); // lscar23
AddStaticVehicle(525,1013.4324,-1016.7371,31.9254,179.6836,3,3); // lscar24
AddStaticVehicle(525,1013.4572,-1009.1957,31.9283,179.9074,2,2); // lscar25
AddStaticVehicle(487,969.0146,-921.4969,45.9319,179.9836,1,1); // lscar26
AddStaticVehicle(589,1141.7316,-918.3638,42.8324,177.6196,2,0); // lscar27
AddStaticVehicle(411,1268.6797,-910.3604,42.6099,187.8881,0,0); // lscar28
AddStaticVehicle(482,898.9029,-1358.6680,13.7337,89.7385,58,0); // lscar29
AddStaticVehicle(424,981.2144,-1332.3004,13.2201,272.4878,22,22); // lscar30
AddStaticVehicle(434,1016.5021,-1360.9589,13.2527,90.3658,100,100); // lscar31
AddStaticVehicle(416,1177.8420,-1338.6519,13.9402,270.3317,1,3); // lscar32
AddStaticVehicle(416,1177.6877,-1308.3793,14.0525,269.5482,1,3); // lscar33
AddStaticVehicle(411,1175.1208,-1275.6884,13.1783,278.8867,210,210); // lscar34
AddStaticVehicle(418,1183.5455,-1224.3086,18.6774,1.2504,1,1); // lscar35
AddStaticVehicle(470,1245.8909,-1108.2515,25.5153,89.8596,50,50); // lscar36
AddStaticVehicle(411,544.9989,-1401.8408,15.1925,283.2061,0,0); // lscar37
AddStaticVehicle(409,543.9153,-1474.3005,14.4386,1.7278,1,1); // lscar38
AddStaticVehicle(518,437.6645,-1295.1909,14.8744,31.9243,79,0); // lscar39
AddStaticVehicle(521,367.5633,-1340.2684,14.1092,119.6696,80,0); // lscar40
AddStaticVehicle(463,294.5537,-1513.2679,24.1338,237.1296,0,206); // lscar41
AddStaticVehicle(510,183.6432,-1582.0439,13.2030,70.1281,76,0); // lscar42
AddStaticVehicle(474,311.5998,-1789.3501,4.4161,183.3434,1,1); // lscar43
AddStaticVehicle(522,315.0326,-1789.4286,4.1682,185.7804,126,126); // lscar44
AddStaticVehicle(507,343.8065,-1808.6826,4.3983,179.5374,73,0); // lscar45
AddStaticVehicle(454,340.8030,-1917.2079,0.1049,180.7908,210,75); // lscar46
AddStaticVehicle(560,374.7796,-2014.7827,7.4001,359.4431,3,3); // lscar47
AddStaticVehicle(411,374.8407,-2024.6841,7.4159,359.3502,50,50); // lscar48
AddStaticVehicle(462,361.6711,-2033.1227,7.4250,310.4388,33,33); // lscar49
AddStaticVehicle(522,361.6630,-2029.4878,7.3897,307.3206,43,43); // lscar50
AddStaticVehicle(506,442.9023,-1802.7012,5.2142,354.2763,72,0); // lscar51
AddStaticVehicle(411,773.3254,-1788.2076,12.7401,265.5856,0,0); // lscar52
AddStaticVehicle(503,732.0468,-1590.5548,14.1406,94.1578,0,0); // lscar53
AddStaticVehicle(446,727.8850,-1494.3374,-0.5810,178.9309,98,98); // lscar54
AddStaticVehicle(411,893.5159,-1668.3282,13.2778,179.0579,0,1); // lscar55
AddStaticVehicle(560,884.0527,-1678.2488,13.1961,179.1539,3,3); // lscar56
AddStaticVehicle(541,874.5870,-1678.8964,13.1718,0.1307,0,1); // lscar57
AddStaticVehicle(411,879.3958,-1678.0005,13.2832,174.4838,0,0); // lscar58
AddStaticVehicle(555,1006.0007,-1812.1960,13.8098,255.4249,9,9); // lscar59
AddStaticVehicle(560,1042.9207,-1863.4774,13.0813,352.6981,1,1); // lscar60
AddStaticVehicle(415,1901.4084,-1129.9396,24.1952,91.2164,86,86); // lscar61
AddStaticVehicle(439,1999.4980,-1274.9227,23.7378,359.4623,29,0); // lscar62
AddStaticVehicle(438,2008.4399,-1275.0809,23.6980,179.3903,28,0); // lscar63
AddStaticVehicle(416,2038.8208,-1422.2589,17.1230,143.5543,1,3); // lscar64
AddStaticVehicle(416,2038.4155,-1429.0442,17.1288,146.0251,1,3); // lscar65
AddStaticVehicle(481,1954.0377,-1372.2323,19.1456,68.7683,152,152); // lscar66
AddStaticVehicle(503,2088.7131,-1555.8325,12.9936,179.6050,1,1); // lscar67
AddStaticVehicle(411,2089.1624,-1596.5752,13.0495,181.8910,0,0); // lscar68
AddStaticVehicle(541,2245.6770,-1244.4810,25.0688,1.2307,86,0); // lscar
AddStaticVehicle(600,2228.2590,-1142.0594,25.4531,259.1595,0,0); // lscar
AddStaticVehicle(461,2227.9275,-1162.8529,25.3402,91.1477,20,20); // lscar
AddStaticVehicle(429,2217.3433,-1157.2732,25.4421,269.8499,1,1); // lscar
AddStaticVehicle(545,2228.5642,-1173.7842,25.5499,89.7133,31,31); // lscar
AddStaticVehicle(561,2206.0564,-1169.0209,25.4954,88.7217,56,56); // lscar
AddStaticVehicle(519,1544.6288,-2454.4377,14.4779,179.1310,1,1); // novals
AddStaticVehicle(519,1600.5936,-2455.9407,14.4173,177.4412,1,1); // novals
AddStaticVehicle(563,1992.8256,-2383.4185,14.2050,90.7408,3,3); // novals
AddStaticVehicle(487,1992.1488,-2331.0894,13.6720,88.9374,6,6); // novals
AddStaticVehicle(488,1993.2766,-2315.8354,13.7547,91.5819,1,2); // novals
AddStaticVehicle(487,1993.2145,-2301.2998,13.6990,93.2218,53,53); // novals
AddStaticVehicle(417,1921.6552,-2256.6230,13.6073,181.3331,1,1); // novals
AddStaticVehicle(469,1993.2616,-2261.5046,13.4944,94.9572,1,1); // novals
AddStaticVehicle(469,1992.8936,-2243.5718,13.5742,90.6578,1,1); // novals
AddStaticVehicle(593,1967.0399,-2644.5798,13.9592,357.6524,1,1); // novals
AddStaticVehicle(593,1946.7727,-2643.8950,13.9603,358.4382,1,1); // novals
AddStaticVehicle(511,1466.5282,-2643.5476,14.8788,0.1085,65,169); // novals
AddStaticVehicle(511,1500.9991,-2643.4075,14.8772,0.1508,2,0); // novals
//LS NEW CARS
	//CIVILIAN CARS
	//Bulgarian Mafia
    killazcars[1] = AddStaticVehicle(560,1292.7848,-828.8040,82.8445,359.9994,233,233); //
    killazcars[2] = AddStaticVehicle(560,1287.1696,-828.8729,82.8450,357.7379,233,233); //
    killazcars[3] = AddStaticVehicle(560,1282.2723,-828.7433,82.7815,0.1670,233,233); //
    killazcars[4] = AddStaticVehicle(560,1278.2327,-828.8680,82.8485,357.1735,233,233); //
    killazcars[5] = AddStaticVehicle(560,1273.8206,-828.6299,82.8449,3.4859,233,233); //
    killazcars[6] = AddStaticVehicle(411,1242.8322,-804.0825,83.8677,180.8696,233,233); //
    killazcars[7] = AddStaticVehicle(411,1255.1931,-803.9788,83.8677,179.1704,233,233); //
    killazcars[8] = AddStaticVehicle(411,1242.9792,-811.1400,83.8714,179.2915,233,233); //
    killazcars[9] = AddStaticVehicle(411,1255.1725,-809.6790,83.8677,177.0758,233,233); //
    killazcars[10] = AddStaticVehicle(409,1248.8077,-805.4478,83.9406,180.5662,233,233); //
    killazcars[11] = AddStaticVehicle(522,1248.1554,-822.8226,83.6970,132.9798,233,233); //
    killazcars[12] = AddStaticVehicle(522,1249.4575,-824.3000,83.6979,129.4149,233,233); //
    killazcars[13] = AddStaticVehicle(522,1248.2905,-823.7558,83.6878,157.1496,233,233); //
    killazcars[14] = AddStaticVehicle(522,1236.9398,-827.3733,83.7077,104.4137,233,233); //
    killazcars[15] = AddStaticVehicle(522,1236.7272,-826.3958,83.7157,108.6375,233,233); //
    killazcars[16] = AddStaticVehicle(522,1235.8853,-825.8865,83.7075,118.9458,233,233); //
    killazcars[17] = AddStaticVehicle(559,1250.3046,-784.4963,90.0370,359.6805,233,233); //
    killazcars[18] = AddStaticVehicle(559,1250.3268,-778.0082,90.6524,358.2607,233,233); //
    killazcars[19] = AddStaticVehicle(559,1240.8361,-778.1804,90.6352,0.5344,233,233); //
    killazcars[20] = AddStaticVehicle(559,1240.8651,-784.7886,90.0093,359.6520,233,233); //
    
    
    
//DF CARS
dfcars[1] =AddStaticVehicle(520,330.1985,1823.2595,18.5732,100.4614,0,0); // hidra1
dfcars[2] =AddStaticVehicle(520,330.5229,1842.0887,18.3642,86.0958,0,0); // hidra
dfcars[3] =AddStaticVehicle(470,294.5775,1814.6425,17.6358,277.0992,0,0); // djip1
dfcars[4] =AddStaticVehicle(470,294.8195,1809.5286,17.6345,268.6466,0,0); // djip2
dfcars[5] =AddStaticVehicle(470,295.2057,1803.5889,17.6396,274.0068,0,0); // djip2
dfcars[6] =AddStaticVehicle(470,294.9793,1798.5293,17.6356,269.2413,0,0); // djip3
dfcars[7] =AddStaticVehicle(470,294.7609,1793.6522,17.6335,270.4687,0,0); // djip4
dfcars[8] =AddStaticVehicle(520,330.1041,1862.6323,18.4510,93.0016,1,1); // hidra--
dfcars[9] =AddStaticVehicle(425,326.8470,1878.5598,18.1873,100.2761,0,0); // heli 1
dfcars[10] =AddStaticVehicle(425,328.2083,1896.0977,18.1806,101.7742,1,1); // heli 2
dfcars[11] =AddStaticVehicle(425,330.6170,1919.6134,18.2126,101.5579,1,1); // hili3
dfcars[12] =AddStaticVehicle(432,385.1636,1927.8258,17.6523,84.4203,0,0); // tank1
dfcars[13] =AddStaticVehicle(432,385.4187,1916.1744,17.6621,90.8079,1,1); // tank2
dfcars[14] =AddStaticVehicle(432,385.4432,1907.8527,17.6093,89.9892,0,0); // tank3
dfcars[15] =AddStaticVehicle(432,385.4331,1937.3391,17.6412,89.2096,0,0); // tank4
dfcars[16] =AddStaticVehicle(432,385.4144,1944.0114,17.6338,87.6963,0,0); // tank5
dfcars[17] =AddStaticVehicle(432,385.2762,1950.0592,17.6205,81.2982,0,0); // tank6
dfcars[18] =AddStaticVehicle(447,358.8727,1968.4592,17.6600,89.3739,0,0); // hili1
dfcars[19] =AddStaticVehicle(447,357.9221,1979.4791,17.6745,81.7223,0,0); // hili2
dfcars[20] =AddStaticVehicle(447,359.0941,1987.4917,18.3275,88.5564,0,0); // hili2
dfcars[21] =AddStaticVehicle(455,283.4998,1961.1588,18.0763,269.0667,120,120); // kamion1
dfcars[22] =AddStaticVehicle(455,285.3535,1949.4858,18.0773,272.5787,120,120); // kamion2
dfcars[23] =AddStaticVehicle(455,285.4825,1954.6948,18.0773,272.8464,120,120); // kamion3
dfcars[24] =AddStaticVehicle(487,325.8565,1970.4243,17.8173,95.3850,120,120); // hili1
dfcars[25] =AddStaticVehicle(487,322.2999,1978.7515,17.8172,96.1665,120,120); // hili1
dfcars[26] =AddStaticVehicle(487,321.0127,1989.1082,17.7841,91.9413,120,120); // hili
dfcars[28] =AddStaticVehicle(601,285.6362,2016.9946,17.3994,275.0342,120,120); // swat1
dfcars[29] =AddStaticVehicle(601,284.4478,2021.6348,17.3994,268.2248,120,120); // swat2
dfcars[30] =AddStaticVehicle(601,284.7347,2025.6781,17.3994,266.3577,120,120); // swat3
dfcars[31] =AddStaticVehicle(609,284.8653,2029.7720,17.7093,271.6387,120,120); // kamion
dfcars[32] =AddStaticVehicle(593,292.6227,1850.5432,18.1002,278.3638,120,120); // samoletdf1
dfcars[33] =AddStaticVehicle(593,292.3923,1863.6865,18.1043,269.1595,120,120); // samoletdf2
dfcars[34] =AddStaticVehicle(586,287.2446,1874.3721,17.1609,261.1524,120,120); // motor1
dfcars[35] =AddStaticVehicle(586,287.7965,1876.4424,17.1605,276.5327,120,120); // motor2
dfcars[36] =AddStaticVehicle(586,287.0294,1878.3141,17.1608,279.3047,120,120); // motor3
dfcars[37] =AddStaticVehicle(530,287.2961,1888.5565,17.4062,276.4915,120,120); // kola
dfcars[38] =AddStaticVehicle(530,287.1822,1891.7783,17.4047,269.3364,120,120); // kola
dfcars[39] =AddStaticVehicle(530,286.9659,1895.1188,17.4103,267.9124,120,120); // kola
dfcars[40] =AddStaticVehicle(505,288.5142,1900.4742,17.7823,268.5080,120,120); // kola
dfcars[41] =AddStaticVehicle(505,289.0280,1909.2083,17.7839,273.7659,120,120); // kola
dfcars[42] =AddStaticVehicle(505,288.5133,1904.4833,17.7828,267.7601,120,120); // kola
dfcars[43] = AddStaticVehicle(548,299.3055,2046.1487,19.2917,185.5962,0,0,600);


//*** GPD CARS ***

gpcars[1] = AddStaticVehicle(411,-1613.0360,724.3668,12.9873,270.4621,0,0); // gpdcar
gpcars[2] = AddStaticVehicle(411,-1603.1971,724.6565,11.2070,268.1429,0,0); // gpdcar2
gpcars[3] = AddStaticVehicle(411,-1595.0343,724.8344,9.6587,269.3527,0,0); // gpdcar3
gpcars[4] = AddStaticVehicle(411,2296.1807,2416.8706,10.4272,87.9250,0,0); // gpcar1
gpcars[5] = AddStaticVehicle(411,2285.2510,2417.2412,10.4825,87.8539,0,0); // gpcar2
gpcars[6] = AddStaticVehicle(411,2267.2317,2417.3889,10.4720,88.9942,0,0); // gpcar3
gpcars[7] = AddStaticVehicle(411,1533.6414,-1686.6520,13.1884,2.1697,0,0); // gpcar4
gpcars[8] = AddStaticVehicle(411,1536.5665,-1679.2335,13.1512,358.3762,0,0); // gpcar5
gpcars[9] = AddStaticVehicle(411,1536.6696,-1667.0228,13.1884,357.5737,0,0); // gpcar6
gpcars[10] = AddStaticVehicle(411,1533.8899,-1660.3986,13.1802,2.6884,0,0); // gpcar7












gpcars[11] = AddStaticVehicle(427,1551.2432,-1606.7604,13.5152,177.7115,0,1); // kamion gpd rank2
gpcars[12] = AddStaticVehicle(427,1557.9990,-1606.8044,13.5146,176.0391,0,1); // kamion gpd rank2
gpcars[13] = AddStaticVehicle(427,1563.9548,-1607.2627,13.5147,177.7428,0,1); // kamion gpd rank2
gpcars[14] = AddStaticVehicle(427,1569.7651,-1607.1272,13.5144,173.9070,0,1); // kamion gpd rank2
gpcars[15] = AddStaticVehicle(599,1604.9391,-1630.6023,13.7108,91.4561,0,1); // 3rank
gpcars[16] = AddStaticVehicle(599,1604.9598,-1618.4329,13.7081,88.7421,0,1); // 3rank
gpcars[17] = AddStaticVehicle(599,1604.9850,-1624.6432,13.7205,89.9982,0,1); // 3rank
gpcars[18] = AddStaticVehicle(599,1604.9851,-1611.9663,13.7207,89.9600,0,1); // 3rank
gpcars[19] = AddStaticVehicle(596,1602.3000,-1667.5835,5.6068,88.7239,0,1); // rank1
gpcars[20] = AddStaticVehicle(596,1585.7556,-1667.2458,5.6138,270.0741,0,1); // rank1
gpcars[21] = AddStaticVehicle(596,1602.4496,-1671.4109,5.6138,91.2290,0,1); // rank1
gpcars[22] = AddStaticVehicle(596,1585.6929,-1671.8516,5.6160,267.8195,0,1); // rank1
gpcars[23] = AddStaticVehicle(468,1587.1726,-1680.9028,5.5661,268.6649,0,1); // rank2
gpcars[24] = AddStaticVehicle(468,1587.4301,-1679.0577,5.5662,271.0680,0,1); // rank2
gpcars[25] = AddStaticVehicle(468,1587.2875,-1675.5409,5.5652,266.8878,0,1); // rank2
gpcars[26] = AddStaticVehicle(468,1587.4661,-1677.1958,5.5597,274.3511,0,1); // rank2
gpcars[27] = AddStaticVehicle(490,1602.6079,-1683.8319,6.0192,88.7076,0,0); // rank 4
gpcars[28] = AddStaticVehicle(490,1602.5791,-1688.1696,6.0223,89.4994,0,0); // rank 4
gpcars[29] = AddStaticVehicle(490,1602.3597,-1692.5709,6.0173,88.9707,0,0); // rank 4
gpcars[30] = AddStaticVehicle(490,1602.3224,-1695.9243,6.0186,89.2460,0,0); // rank 4
gpcars[31] = AddStaticVehicle(528,1595.3916,-1711.6917,5.9339,359.5319,0,1); // rank 3
gpcars[32] = AddStaticVehicle(528,1591.8875,-1711.3610,5.9334,359.6587,0,1); // rank 3
gpcars[33] = AddStaticVehicle(528,1587.5554,-1711.5094,5.9347,0.1815,0,1); // rank 3
gpcars[34] = AddStaticVehicle(528,1583.5521,-1711.3608,5.9357,359.6253,0,1); // rank 3
gpcars[35] = AddStaticVehicle(601,1570.5145,-1695.8790,5.6494,184.3461,0,0); // 5rank
gpcars[36] = AddStaticVehicle(601,1566.4185,-1696.2295,5.6492,182.6444,0,0); // 5rank
gpcars[37] = AddStaticVehicle(601,1562.5752,-1696.0371,5.6558,179.7531,0,0); // 5rank
gpcars[38] = AddStaticVehicle(497,1562.8684,-1656.1934,28.5573,87.1655,0,1); // hili 2 rank
gpcars[39] = AddStaticVehicle(497,1562.3817,-1695.5923,28.5728,76.1057,0,1); // hili 2 rank
gpcars[40] = AddStaticVehicle(598,2251.7175,2443.4695,10.5676,0.0855,0,1); // 1rank
gpcars[41] = AddStaticVehicle(598,2260.9902,2443.7920,10.5697,1.0319,0,1); // 1rank
gpcars[42] = AddStaticVehicle(598,2256.1306,2443.6797,10.5394,0.7663,0,1); // 1rank
gpcars[43] = AddStaticVehicle(598,2251.6279,2459.7129,10.5631,182.0229,0,1); // 1rank
gpcars[44] = AddStaticVehicle(598,2256.3015,2459.9028,10.6185,181.5830,0,1); // 1rank
gpcars[45] = AddStaticVehicle(598,2260.6511,2459.9841,10.5660,180.5377,0,1); // 1rank
gpcars[46] = AddStaticVehicle(599,2282.1084,2443.5742,11.0053,357.6304,0,1); // rank3
gpcars[47] = AddStaticVehicle(599,2272.8591,2442.4006,11.0139,359.7198,0,1); // rank3
gpcars[48] = AddStaticVehicle(599,2277.7837,2443.2637,11.0182,1.6467,0,1); // rank3
gpcars[49] = AddStaticVehicle(599,2269.2078,2442.2168,11.0200,2.1178,0,1); // rank3
gpcars[50] = AddStaticVehicle(599,2267.5225,2458.7568,11.0093,178.8476,0,1); // rank3
gpcars[51] = AddStaticVehicle(599,2277.6624,2457.8853,11.0046,178.7436,0,1); // rank3
gpcars[52] = AddStaticVehicle(599,2273.4758,2458.7253,11.0487,180.3345,0,1); // rank3
gpcars[53] = AddStaticVehicle(599,2282.4602,2458.8057,11.0211,179.8376,0,1); // rank3
gpcars[54] = AddStaticVehicle(601,2291.7212,2469.6533,10.5791,88.3000,0,1); // rank 5
gpcars[55] = AddStaticVehicle(601,2292.1890,2449.8284,10.5791,93.2719,0,1); // rank5
gpcars[56] = AddStaticVehicle(523,2282.4885,2473.9956,10.3756,178.2006,0,1); // rank2
gpcars[57] = AddStaticVehicle(523,2278.0186,2474.3267,10.3909,183.4391,0,1); // rank2
gpcars[58] = AddStaticVehicle(523,2272.5801,2474.2808,10.3893,173.9944,0,1); // rank2
gpcars[59] = AddStaticVehicle(523,2269.2764,2474.4766,10.3838,178.7526,0,1); // rank2
gpcars[60] = AddStaticVehicle(528,2260.7004,2478.1487,10.8636,178.8038,0,1); // rank4
gpcars[61] = AddStaticVehicle(528,2256.2966,2477.0427,10.8650,179.5344,0,1); // rank4
gpcars[62] = AddStaticVehicle(528,2251.7710,2478.3474,10.8664,177.6685,0,1); // rank4
gpcars[63] = AddStaticVehicle(597,-1576.3577,651.7255,6.9569,358.8842,0,1); // rank1
gpcars[64] = AddStaticVehicle(597,-1582.0731,651.9191,6.9479,359.1539,0,1); // rank2
gpcars[65] = AddStaticVehicle(597,-1587.5861,651.9089,6.9900,359.4998,0,1); // rank3
gpcars[66] = AddStaticVehicle(597,-1593.6393,651.8932,6.9763,0.8855,0,1); // rank3
gpcars[67] = AddStaticVehicle(599,-1598.6521,652.6617,7.3798,358.9781,0,1); // 3rank
gpcars[68] = AddStaticVehicle(599,-1604.8877,651.5467,7.3829,0.7292,0,1); // 3rank
gpcars[69] = AddStaticVehicle(599,-1610.9081,651.7188,7.3729,355.5522,0,1); // 3rank
gpcars[70] = AddStaticVehicle(599,-1616.6001,651.5180,7.3831,358.8541,0,1); // 3rank
gpcars[71] = AddStaticVehicle(523,-1622.9481,653.3630,6.7548,0.7678,0,1); // rank2
gpcars[72] = AddStaticVehicle(523,-1633.9408,651.9010,6.7584,355.9734,0,1); // rank2
gpcars[73] = AddStaticVehicle(523,-1628.6726,652.9140,6.7580,1.8865,0,1); // rank2
gpcars[74] = AddStaticVehicle(523,-1639.2074,651.8892,6.7586,359.5583,0,1); // rank2
gpcars[75] = AddStaticVehicle(490,-1576.4343,673.7061,7.3189,180.5135,0,0); // rank 4
gpcars[76] = AddStaticVehicle(490,-1582.3855,674.0720,7.3151,178.1803,0,0); // rank 4
gpcars[77] = AddStaticVehicle(490,-1588.1498,674.0544,7.3160,175.4429,0,0); // rank 4
gpcars[78] = AddStaticVehicle(490,-1593.8865,673.2925,7.3152,179.3261,0,0); // rank 4
gpcars[79] = AddStaticVehicle(528,-1600.0288,673.5164,7.2331,180.4787,0,0); // rank 3
gpcars[80] = AddStaticVehicle(528,-1606.2139,673.7519,7.2311,176.7826,0,1); // rank 3
gpcars[81] = AddStaticVehicle(528,-1612.0792,673.4699,7.2299,175.8647,0,1); // rank 3
gpcars[82] = AddStaticVehicle(497,-1680.7318,707.2939,30.7776,93.3371,0,1); // heli 2rank
gpcars[83] = AddStaticVehicle(447,2093.6169,2414.9387,74.5900,93.0183,0,0); // hiligpd





       //LosSantosRifa
    rifacars[1] = AddStaticVehicle(496,-2197.5461,965.4709,79.7530,270.4769,152,152); // rifacar
    rifacars[2] = AddStaticVehicle(560,-2197.2048,971.6678,79.6639,271.0227,152,152); // rifacar
    rifacars[3] = AddStaticVehicle(560,-2197.3442,977.9351,79.6632,271.3475,152,152); // rifacar
    rifacars[4] = AddStaticVehicle(411,-2197.3025,983.6387,79.7338,269.3553,152,152); // rifacar
    rifacars[5] = AddStaticVehicle(567,-2196.9644,989.8078,79.8977,269.2165,152,152); // rifacar
    rifacars[6] = AddStaticVehicle(541,-2197.5020,996.1154,79.6346,270.3678,152,152); // rifacar
    rifacars[7] = AddStaticVehicle(495,-2197.2754,1002.1566,80.2880,270.2743,152,152); // rifacar
    rifacars[8] = AddStaticVehicle(522,-2198.6465,1007.2259,79.5743,270.2843,152,152); // rifacar
    rifacars[9] = AddStaticVehicle(522,-2198.4402,1008.5887,79.5686,269.3019,152,152); // rifacar
    rifacars[10] = AddStaticVehicle(487,-2214.6382,1049.4929,80.1886,180.5292,152,152); // rifacar
    rifacars[11] = AddStaticVehicle(513,-2205.5764,973.1305,85.4048,2.3496,0,152); // rifacar
    
    rifacars[11] = AddStaticVehicle(411,853.7181,-1527.9460,12.8905,267.5328,152,152); // Rifacar1
    rifacars[12] = AddStaticVehicle(411,853.8183,-1512.4891,12.7701,266.1780,152,152); // Rifacar2
    rifacars[13] = AddStaticVehicle(451,872.5884,-1504.4686,12.7243,84.9799,152,152); // Rifacar3
    rifacars[14] = AddStaticVehicle(451,893.6010,-1517.8127,12.6783,180.5947,152,152); // Rifacar4
    rifacars[15] = AddStaticVehicle(522,856.9406,-1518.8127,13.1220,265.6322,152,152); // Rifacar5
    rifacars[16] = AddStaticVehicle(522,856.4202,-1521.8572,13.1203,268.0969,152,152); // Rifacar6
    
    
rifacars[17] = AddStaticVehicle(411,1524.4214,730.4711,10.5474,182.5960,152,152); // rifacar1
rifacars[18] = AddStaticVehicle(411,1515.3517,730.5519,10.5502,182.3141,152,152); // rifacar2
rifacars[19] = AddStaticVehicle(411,1463.9503,729.5157,10.5474,177.9096,152,152); // rifacar3
rifacars[20] = AddStaticVehicle(411,1472.3872,729.9474,10.5474,180.2837,152,152); // rifacar4
rifacars[21] = AddStaticVehicle(411,1482.6870,702.6238,10.4711,283.3770,152,152); // rifacar5
rifacars[22] = AddStaticVehicle(411,1462.0720,689.4529,10.4752,315.5835,152,152); // rifacar6
rifacars[23] = AddStaticVehicle(411,1511.5671,694.5424,10.4708,224.2223,152,152); // rifacar7
    
    rifacars[26] = rifas3 = AddStaticVehicle(560,-2199.2000,1026.3392,79.7132,228.5584,152,152); // rifaspec3

    //BALON
    balon1 = CreateObject(19333, 1773.957763, -1309.305664, 130.781982, 0.000000, 0.000000, 0.000000);
    balon2 = CreateObject(19333, 1804.557617, -1308.696289, 130.781982, 0.000000, 0.000000, 0.000000);
    balon3 = CreateObject(19332, 1833.617431, -1315.398071, 130.797775, 0.000000, 0.000000, 0.000000);
    balon4 = CreateObject(19332, 1833.617431, -1272.388427, 130.797775, 0.000000, 0.000000, 0.000000);



    //BALON
	CreateObject(3437, 1797.560180, -1294.442626, 30.180311, 0.000000, 0.000000, 0.000000);
	CreateObject(3437, 1797.560180, -1294.442626, 61.730312, 0.000000, 0.000000, 0.000000);
	CreateObject(3437, 1797.560180, -1294.442626, 97.870315, 0.000000, 0.000000, 0.000000);
	CreateObject(3437, 1797.560180, -1294.442626, 124.950325, 0.000000, 0.000000, 0.000000);
	CreateObject(3437, 1784.694946, -1294.502563, 127.416130, 0.000000, -89.799942, 0.000000);
	CreateObject(3437, 1806.328979, -1288.361083, 127.036003, -7.300000, -89.799926, 40.400001);
	CreateObject(3437, 1815.800170, -1269.722290, 121.370323, 0.000000, 0.000000, 0.000000);
	CreateObject(3437, 1815.800170, -1269.722290, 86.640327, 0.000000, 0.000000, 0.000000);
	CreateObject(3437, 1815.800170, -1269.722290, 53.510334, 0.000000, 0.000000, 0.000000);
	CreateObject(3437, 1774.890014, -1293.202514, 53.510334, 0.000000, 0.000000, 0.000000);
	CreateObject(3437, 1774.890014, -1293.202514, 89.220329, 0.000000, 0.000000, 0.000000);
	CreateObject(3437, 1774.890014, -1293.202514, 115.041221, 0.000000, 0.000000, 0.000000);
	CreateObject(1942, 1795.800659, -1308.190307, 15.310667, 0.000000, 0.000000, 0.000000);
	CreateObject(1942, 1778.280395, -1308.190307, 15.310667, 0.000000, 0.000000, 0.000000);
	CreateObject(2531, 1799.684326, -1298.789306, 12.574745, 0.000000, 0.000000, -89.999992);
	CreateObject(2531, 1799.604248, -1300.839233, 12.574745, 0.000000, 0.000000, -89.999992);
	CreateObject(2531, 1799.534179, -1302.819458, 12.574745, 0.000000, 0.000000, -89.999992);
	CreateObject(2133, 1799.261352, -1308.187011, 12.692923, 0.000000, 0.000000, -179.899978);
	CreateObject(2133, 1798.260742, -1308.188598, 12.702911, 0.000000, 0.000000, -179.899978);
	CreateObject(2133, 1797.250488, -1308.190673, 12.702911, 0.000000, 0.000000, -179.899978);
	CreateObject(1661, 1793.570434, -1302.956176, 16.338169, 0.000000, 0.000000, 0.000000);
	CreateObject(1661, 1797.390380, -1302.956176, 16.338169, 0.000000, 0.000000, 0.000000);
	CreateObject(1661, 1780.509399, -1302.956176, 16.338169, 0.000000, 0.000000, 0.000000);
	CreateObject(1661, 1777.118652, -1302.956176, 16.338169, 0.000000, 0.000000, 0.000000);
	CreateObject(1518, 1794.814575, -1308.351806, 15.787599, 0.000000, 0.000000, -177.500030);
	CreateObject(1518, 1796.722778, -1308.268554, 15.787599, 0.000000, 0.000000, -177.500030);
	CreateObject(1808, 1796.460937, -1308.079711, 12.426966, 0.000000, 0.000000, -179.899948);
	CreateObject(1808, 1795.980957, -1308.080810, 12.426966, 0.000000, 0.000000, -179.899948);
	CreateObject(1808, 1795.520996, -1308.081665, 12.426966, 0.000000, 0.000000, -179.899948);
	CreateObject(2099, 1799.904785, -1303.894897, 12.604828, 0.000000, 0.000000, -85.800071);
	CreateObject(2099, 1800.007324, -1307.076416, 12.604828, 0.000000, 0.000000, -85.800071);
	CreateObject(2224, 1794.335693, -1307.483764, 12.717352, 0.000000, 0.000000, 148.599975);
	CreateObject(1723, 1796.852905, -1302.340698, 12.550634, 0.300000, 1.399999, -91.999992);
	CreateObject(1723, 1793.665893, -1304.282714, 12.532959, 0.300000, 1.399999, 88.700019);
	CreateObject(1433, 1795.363037, -1303.313720, 12.739903, 0.000000, 0.000000, 0.000000);
	CreateObject(1670, 1795.334472, -1303.226806, 13.280175, 0.000000, 0.000000, 0.000000);
	CreateObject(2229, 1791.846191, -1308.417724, 12.578559, 0.000000, 0.000000, 179.800018);
	CreateObject(2229, 1791.055541, -1308.415039, 12.578559, 0.000000, 0.000000, 179.800018);
	CreateObject(2229, 1792.725952, -1308.420776, 12.578559, 0.000000, 0.000000, 179.800018);
	CreateObject(1828, 1795.467529, -1303.656494, 12.643457, 0.000000, 0.000000, 0.000000);
	CreateObject(2344, 1795.396484, -1303.610595, 13.262832, 0.000000, 0.000000, -30.899997);
	CreateObject(2028, 1777.941528, -1306.132690, 12.654211, 0.000000, 0.000000, 0.000000);
	CreateObject(2297, 1779.584228, -1307.944702, 12.630556, 0.000000, 0.000000, 140.000015);
	CreateObject(1704, 1779.189453, -1303.755004, 12.485740, 0.000000, 0.000000, 0.000000);
	CreateObject(1704, 1777.218994, -1303.755004, 12.485740, 0.000000, 0.000000, 0.000000);
	CreateObject(1827, 1778.591796, -1305.173706, 12.384881, 0.000000, 0.000000, 0.000000);
	CreateObject(1209, 1775.148193, -1301.620239, 12.486356, 0.000000, 0.000000, 88.200004);
	CreateObject(1209, 1775.184448, -1300.470581, 12.486356, 0.000000, 0.000000, 88.200004);
	CreateObject(1775, 1775.091308, -1302.926269, 13.563966, 0.000000, 0.000000, 87.099945);
	CreateObject(1775, 1775.031616, -1304.114746, 13.563966, 0.000000, 0.000000, 87.099945);
	CreateObject(1829, 1781.863037, -1307.474853, 13.165104, 0.000000, 0.000000, 177.799942);
	CreateObject(1829, 1781.043334, -1307.443725, 13.165104, 0.000000, 0.000000, 177.799942);
	CreateObject(2815, 1786.233276, -1299.861083, 12.677602, 0.000000, 0.000000, -88.700027);
	CreateObject(2815, 1786.188232, -1297.910766, 12.667604, 0.000000, 0.000000, -88.700027);
	CreateObject(2815, 1786.143188, -1295.921386, 12.667604, 0.000000, 0.000000, -88.700027);
	CreateObject(2230, 1776.870849, -1308.222656, 12.499815, 0.000000, 0.000000, 175.600036);
	CreateObject(2230, 1776.492309, -1308.193115, 12.499815, 0.000000, 0.000000, 175.600036);
	CreateObject(2230, 1776.123535, -1308.164550, 12.499815, 0.000000, 0.000000, 175.600036);
	CreateObject(2035, 1778.508544, -1308.220214, 14.487439, 98.500053, -2.099995, 2.399999);
	CreateObject(2035, 1779.518432, -1308.089965, 14.520953, 104.000038, 2.800004, -2.399999);
	CreateObject(2690, 1775.006958, -1305.060058, 14.742744, 0.000000, 0.000000, 88.800003);
	CreateObject(2690, 1799.782836, -1305.979858, 14.742744, 0.000000, 0.000000, -91.199958);
	CreateObject(1360, 1782.236328, -1302.763916, 13.190021, 0.000000, 0.000000, 0.000000);
	CreateObject(1360, 1782.236328, -1305.123901, 13.190021, 0.000000, 0.000000, 0.000000);
	CreateObject(1360, 1791.246337, -1304.903686, 13.410020, 0.000000, 0.000000, 0.000000);
	CreateObject(1360, 1791.246337, -1302.393432, 13.410020, 0.000000, 0.000000, 0.000000);
	CreateObject(2814, 1778.588134, -1304.726928, 12.823404, 0.000000, 0.000000, 0.000000);
	CreateObject(2222, 1778.900146, -1305.411865, 12.906023, -0.799999, 0.900001, -47.799999);
//ofis
	CreateObject(17950, 1247.632202, -2055.559570, 61.146465, 0.000000, 0.000000, -90.099983);//247atm
	CreateObject(8040, 1331.917114, -2011.698486, 57.009132, 0.000000, 0.900000, -88.699974);//247atm
	CreateObject(3437, 1192.222778, -2116.032470, 109.500671, 0.000000, 0.000000, 0.000000);//247atm
	CreateObject(3437, 1192.222778, -2116.047119, 98.710609, 0.000000, 0.000000, 0.000000);//247atm
	CreateObject(3437, 1192.222778, -2115.766601, 120.600608, 0.000000, 0.000000, 0.000000);//247atm
	CreateObject(3437, 1192.054931, -2115.766601, 125.377761, 0.000000, -92.000053, 0.000000);//247atm
	CreateObject(3437, 1196.831665, -2115.766601, 125.544578, 0.000000, -92.000053, 0.000000);//247atm
	CreateObject(3437, 1186.757690, -2115.766601, 125.192787, 0.000000, -92.000053, 0.000000);//247atm
	CreateObject(3437, 1225.761840, -2116.047119, 98.710609, 0.000000, 0.000000, 0.000000);//247atm
	CreateObject(3437, 1225.761840, -2116.047119, 110.420578, 0.000000, 0.000000, 0.000000);//247atm
	CreateObject(3437, 1225.761840, -2116.047119, 121.760581, 0.000000, 0.000000, 0.000000);//247atm
	CreateObject(3437, 1220.147460, -2116.017089, 127.309425, 0.000000, -88.799995, 0.000000);//247atm
	CreateObject(3437, 1213.509033, -2116.017089, 127.448486, 0.000000, -88.799995, 0.000000);//247atm
	CreateObject(3437, 1221.181274, -2116.414062, 94.020454, 0.000000, -88.799995, 0.000000);//247atm
	CreateObject(3437, 1214.282592, -2116.414062, 94.165023, 0.000000, -88.799995, 0.000000);//247atm
	CreateObject(3437, 1209.791015, -2116.414062, 99.146194, 0.000000, 0.900007, 0.000000);//247atm
	CreateObject(3437, 1214.806762, -2116.414062, 103.750900, 0.000000, 91.800033, 0.000000);//247atm
	CreateObject(3437, 1177.174682, -2116.047119, 99.254241, 0.000000, -10.099999, 0.000000);//247atm
	CreateObject(3437, 1175.135009, -2116.047119, 110.704010, 0.000000, -10.099999, 0.000000);//247atm
	CreateObject(3437, 1173.140625, -2116.047119, 121.907592, 0.000000, -10.099999, 0.000000);//247atm
	CreateObject(3437, 1169.678466, -2116.049316, 122.599822, 0.200000, 28.099998, 0.000000);//247atm
	CreateObject(3437, 1164.276367, -2116.013916, 112.481887, 0.200000, 28.099998, 0.000000);//247atm
	CreateObject(3437, 1159.151611, -2115.980468, 102.884384, 0.200000, 28.099998, 0.000000);//247atm
	CreateObject(3437, 1169.995483, -2116.015625, 112.746620, 0.200000, -89.000030, 0.000000);//247atm
	CreateObject(3437, 1147.639770, -2116.138671, 105.540412, -0.899998, -1.100020, 0.000000);//247atm
	CreateObject(3437, 1147.414550, -2115.954345, 117.256774, -0.899998, -1.100020, 0.000000);//247atm
	CreateObject(3437, 1147.265502, -2115.831054, 125.014366, -0.899998, -1.100020, 0.000000);//247atm
	CreateObject(3437, 1142.546630, -2115.753417, 129.982101, -0.899998, -88.699996, 0.000000);//247atm
	CreateObject(3437, 1141.045654, -2116.254882, 101.224205, -0.899998, -88.699996, 0.000000);//247atm
	CreateObject(3437, 1136.818969, -2115.749023, 130.112991, -0.899998, -88.699996, 0.000000);//247atm
	CreateObject(3437, 1135.237304, -2116.254882, 101.355972, -0.899998, -88.699996, 0.000000);//247atm
	CreateObject(3437, 1131.369140, -2116.150634, 108.006095, -0.899998, -176.199966, 0.000000);//247atm
	CreateObject(3437, 1136.302490, -2115.960693, 114.158546, -0.899998, -88.399955, 0.000000);//247atm
	CreateObject(3437, 1121.914428, -2115.424560, 104.958381, 2.199991, 0.900027, 1.700010);//247atm
	CreateObject(3437, 1122.111083, -2115.866943, 116.638313, 2.199991, 0.900027, 1.700010);//247atm
	CreateObject(3437, 1122.254882, -2116.189453, 125.160972, 2.199991, 0.900027, 1.700010);//247atm
	CreateObject(3437, 1116.313964, -2116.542480, 129.735565, 2.199991, -90.599983, 1.700010);//247atm
	CreateObject(3437, 1111.502197, -2116.494873, 124.798568, 2.199991, 179.400070, 1.700010);//247atm
	CreateObject(3437, 1116.334960, -2116.161865, 119.951087, 2.199991, -88.699890, 1.700010);//247atm
    	//------------------------[ATM Objects]--------------------------------------
CreateObject(2942, 1239.078491, -2041.735717, 59.533451, 0.000000, 0.000000, 90.799972);
CreateObject(2942, 1539.176025, -1616.590820, 13.192373, 0.000000, 0.000000, -88.200012);
CreateObject(2942, 2139.400878, -1158.210815, 23.626991, 0.000000, 0.000000, 88.399971);
CreateObject(2942, 2194.706298, 1986.093872, 11.936907, 0.000000, 0.000000, -93.500007);
CreateObject(2942, 1717.788696, 1315.464233, 10.416258, 0.000000, 0.000000, 88.800003);
CreateObject(2942, 257.512756, 67.323997, 1003.289611, 0.000000, 0.000000, -90.000000);
//================================[GUNMACHINE]=====================================
CreateObject(2165, 1720.115356, -1672.026489, 19.220451, 0.000000, 0.000000, 0.899939);
CreateObject(1714, 1720.568481, -1672.813476, 19.240139, 0.000000, 0.000000, -166.100021);
CreateObject(18885,2497.943115, -1702.737426, 1014.742187, 0.000000, 0.000000, -95.699981); //object(sw_bridge03) (1)
CreateObject(18885,315.992095, 1119.608276, 1083.892578, 0.000000, 0.000000, 92.900032); //object(sw_bridge03) (1)
CreateObject(18885, 252.25920, 70.95690, 1003.72852,   0.00000, 0.00000, 0.00000);
CreateObject(18885,1997.787109, -1114.611694, 26.795547, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)
CreateObject(18885,1690.143798, -2125.745849, 13.546875, 0.000000, 0.000000, -177.800003); //object(sw_bridge03) (1)
CreateObject(18885,1236.334594, -2004.627319, 59.857730, 0.000000, 0.000000, 90.399978); //object(sw_bridge03) (1)
CreateObject(18885,294189, 2341.325195, 10.983367, 0.000000, 0.000000, 93.800010); //object(sw_bridge03) (1)
CreateObject(18885,1655.6469,-1654.7567,22.5156, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)
CreateObject(18885,134.6863,1381.5865,1088.3672, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)
CreateObject(18885,2450.6108,-1696.2198,1013.5078, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)
CreateObject(18885,2544.5273,-1031.2401,69.5779, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)
CreateObject(18885,-209.2619,2713.0957,62.9794, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)
CreateObject(18885,-767.8986,2765.4028,45.8556, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)
CreateObject(18885,2597.7771,1900.6121,11.0312, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)
//ALIEN OBJECT
CreateObject(10831, 2707.764160, -2882.665527, 86.314689, 0.000000, 0.000000, 0.000000);
CreateObject(10831, 2712.178222, -2908.812500, 86.314689, 0.000000, 0.000000, 0.000000);
CreateObject(11145, 2709.825195, -2876.128173, 82.927764, 0.000000, 0.000000, 93.699981);
CreateObject(10828, 2707.039306, -2842.157958, 84.446441, 0.000000, 0.000000, 0.000000);
CreateObject(10828, 2707.195800, -2873.223876, 80.242973, 88.599990, -0.099998, 0.000000);
CreateObject(10828, 2707.195800, -2873.218750, 80.452865, 88.599990, -0.099998, 0.000000);
CreateObject(17049, 2694.916748, -2866.309570, 83.334785, -89.600021, -4.199997, 0.000000);
CreateObject(1348, 2695.377441, -2843.567382, 81.386192, 0.000000, 0.000000, 0.000000);
CreateObject(2669, 2697.977050, -2850.262695, 81.984474, 0.000000, 0.000000, 132.500000);
CreateObject(919, 2720.459716, -2843.759521, 86.247604, 0.000000, 0.000000, 88.000022);
CreateObject(5422, 2721.027343, -2844.999511, 82.436920, 0.000000, 0.000000, 3.099999);
CreateObject(5422, 2721.462890, -2852.479492, 82.436920, 0.000000, 0.000000, 3.099999);
CreateObject(1780, 2720.816406, -2848.931396, 81.834732, 0.000000, 0.000000, -87.999984);
CreateObject(5422, 2719.120361, -2847.124755, 82.430892, 0.000000, 0.000000, -90.299942);
CreateObject(5422, 2719.080322, -2854.438720, 82.430892, 0.000000, 0.000000, -90.299942);
CreateObject(5422, 2719.121337, -2852.478027, 84.443519, -0.700000, -91.099960, -90.299942);
CreateObject(5422, 2719.136962, -2849.108154, 84.378814, -0.700000, -91.099960, -90.299942);
CreateObject(1780, 2721.050292, -2853.237548, 81.893676, 0.000000, 0.000000, -86.500045);
CreateObject(5422, 2721.828857, -2850.394287, 82.361625, 0.000000, 0.000000, 89.400001);
CreateObject(1518, 2699.622802, -2848.977783, 83.559707, 0.000000, 0.000000, 89.599990);
CreateObject(2866, 2700.076660, -2849.454101, 83.312469, 0.000000, 0.000000, 0.000000);
CreateObject(1428, 2699.178710, -2851.912353, 81.713272, 0.000000, 0.000000, 46.800003);
CreateObject(3797, 2707.532226, -2848.139648, 86.683174, 0.000000, 0.000000, 97.500022);
CreateObject(3057, 2696.003662, -2844.938476, 80.980468, 0.000000, 0.000000, 47.099998);
CreateObject(2792, 2709.993408, -2868.784423, 86.041847, 0.000000, 0.000000, 0.000000);
CreateObject(1685, 2697.639404, -2850.628662, 80.752059, 0.000000, 0.000000, 0.000000);
CreateObject(1617, 2694.135253, -2843.600341, 85.950256, 0.000000, 0.000000, 173.200012);
CreateObject(18694, 2695.967529, -2851.229492, 83.126327, 31.800001, 0.000000, 49.200000);
CreateObject(1817, 2705.066894, -2851.103759, 80.712661, 0.000000, 0.000000, 0.000000);
CreateObject(2232, 2718.534667, -2856.018066, 81.366119, 0.000000, 0.000000, -120.399955);
CreateObject(2165, 2710.478515, -2850.843994, 80.801727, 0.000000, 0.000000, 164.300048);
CreateObject(1969, 2697.813232, -2871.286376, 81.719940, 0.000000, 0.000000, -0.399999);
CreateObject(1969, 2697.796875, -2873.576416, 81.719940, 0.000000, 0.000000, -0.399999);
CreateObject(1969, 2701.129394, -2873.600830, 81.719940, 0.000000, 0.000000, -0.399999);
CreateObject(1969, 2701.145019, -2871.360107, 81.719940, 0.000000, 0.000000, -0.399999);
CreateObject(1969, 2704.506591, -2871.384521, 81.719940, 0.000000, 0.000000, -0.399999);
CreateObject(1969, 2704.491210, -2873.635742, 81.719940, 0.000000, 0.000000, -0.399999);
CreateObject(2356, 2709.656005, -2849.611816, 80.710144, 0.000000, 0.000000, -162.099975);
CreateObject(2212, 2701.089599, -2873.823730, 82.044639, -24.600009, 19.000003, -19.700002);
CreateObject(2420, 2696.874755, -2869.112548, 81.111145, 0.000000, 0.000000, 0.000000);
CreateObject(1571, 2720.086914, -2872.300781, 82.508552, 0.000000, 0.000000, -87.800003);
CreateObject(1215, 2721.568359, -2870.051513, 81.624916, 0.000000, 0.000000, 0.000000);
CreateObject(1215, 2720.427490, -2870.051513, 81.624916, 0.000000, 0.000000, 0.000000);
CreateObject(1215, 2719.146240, -2870.051513, 81.624916, 0.000000, 0.000000, 0.000000);
CreateObject(1775, 2717.806640, -2869.520996, 82.278633, 0.000000, 0.000000, 0.000000);
CreateObject(2867, 2718.772705, -2871.941406, 82.225700, 0.000000, 0.000000, 34.499992);
CreateObject(3528, 2720.754394, -2872.194580, 86.486328, 0.000000, 0.000000, 177.999969);
CreateObject(13687, 2699.204833, -2889.093505, 77.036827, 0.000000, 0.000000, -85.600021);
CreateObject(13687, 2722.819580, -2885.049804, 77.006835, 0.000000, 0.000000, 94.399948);
CreateObject(18864, 2701.502441, -2967.645751, 81.438735, 0.000000, 0.000000, 0.000000);
CreateObject(19171, 2710.068603, -2878.205078, 83.342903, 89.900001, 2.199998, 1.799999);
CreateObject(19339, 2700.815673, -2879.187744, 81.114738, 0.000000, 0.000000, 1.899999);
CreateObject(19608, 2712.289794, -2905.287353, 80.687889, 0.000000, 0.000000, -175.299880);
CreateObject(19711, 2703.135498, -2901.415039, 80.251007, 0.000000, 0.000000, 0.000000);
CreateObject(19834, 2716.083740, -2901.695068, 81.321678, 0.000000, 0.000000, 94.499984);
CreateObject(19834, 2715.902343, -2899.382812, 81.321678, 0.000000, 0.000000, 94.499984);
CreateObject(19834, 2715.729248, -2897.145263, 81.321678, 0.000000, 0.000000, 94.499984);
CreateObject(19841, 2712.111083, -2915.704101, 68.252548, 0.000000, 0.000000, 0.000000);
CreateObject(19893, 2705.463134, -2850.523437, 80.821296, 0.000000, 0.000000, 157.199996);
CreateObject(11697, 2712.012451, -2910.486083, 82.553337, 0.000000, 0.000000, 0.000000);
CreateObject(19322, 2711.637451, -2918.955566, 92.358154, 0.000000, 0.000000, 0.000000);
CreateObject(19315, 2707.931884, -2915.480224, 81.780784, 0.000000, 0.000000, 26.899995);
CreateObject(19315, 2706.368896, -2916.274169, 81.780784, 0.000000, 0.000000, 26.899995);
CreateObject(19315, 2705.470947, -2914.506347, 81.780784, 0.000000, 0.000000, 26.899995);
CreateObject(19315, 2707.290283, -2913.583496, 81.780784, 0.000000, 0.000000, 26.899995);
CreateObject(18998, 2715.496826, -3022.310791, 80.051315, 0.000000, 91.500007, -88.099998);
CreateObject(18749, 2717.118652, -3045.394775, 79.499649, 0.000000, 0.000000, 0.000000);
CreateObject(18750, 2738.227294, -3035.114501, 65.809562, -83.800033, 0.000000, 5.100000);
CreateObject(18846, 2712.664550, -2996.536621, 82.079200, 0.000000, 0.000000, 0.000000);
CreateObject(18846, 2716.565673, -3006.377685, 82.079200, -30.799995, 25.599996, 52.100002);
CreateObject(18846, 2714.033447, -2985.390869, 83.539077, 0.000000, 0.000000, 0.000000);
CreateObject(18846, 2716.343994, -2993.430664, 81.139091, 0.000000, 0.000000, 0.000000);
CreateObject(18843, 2714.080322, -3031.998046, 87.090675, 0.000000, 0.000000, 0.000000);

//BIZ OBJECT

CreateObject(18885,1273.3644,-782.1863,1089.9375, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)
CreateObject(18885,259.1709,1243.1801,1084.2653, 0.000000, 0.000000, 0.000000); //object(sw_bridge03) (1)

//RIFA CAMERA OBJECT
CreateObject(1622, -2179.135009, 956.567687, 94.668434, 0.000000, 0.000000, -68.999954);



//DERBY
CreateObject(3458, 2905.6232910156, 526.63354492188, 0, 0, 0, 0);
CreateObject(3458, 2905.6025390625, 530.4169921875, -0.0048000039532781, 0, 0, 0);
CreateObject(3458, 2944.9853515625, 528.5712890625, 5.1498885154724, 359.80224609375, 344.84985351563, 359.94506835938);
CreateObject(3458, 3010.220703125, 529.02734375, 15.768574714661, 0, 0, 0);
CreateObject(3458, 3032.95703125, 511.412109375, 15.756739616394, 0, 0, 90.016479492188);
CreateObject(3458, 2887.95703125, 504.4990234375, -0.0048000002279878, 0, 0, 90.016479492188);
CreateObject(3458, 2910.23828125, 486.8623046875, 5.3028321266174, 359.80224609375, 344.84985351563, 359.94506835938);
CreateObject(3458, 2931.8735351563, 469.23333740234, 10.528656959534, 0, 0, 90.016479492188);
CreateObject(3458, 3012.33984375, 500.201171875, 15.747231483459, 0, 0, 182.01599121094);
CreateObject(3458, 2978.7727050781, 486.61026000977, 15.742523193359, 0, 0, 222.01525878906);
CreateObject(3458, 3032.6376953125, 446.0927734375, 18.806739807129, 0, 0, 90.016479492188);
CreateObject(1634, 2968.6843261719, 528.62017822266, 13.708859443665, 8.9899291992188, 359.79547119141, 270.25402832031);
CreateObject(3458, 2936.80859375, 469.224609375, 10.509533882141, 0, 0, 90.016479492188);
CreateObject(1634, 3032.89453125, 487.470703125, 17.89395904541, 356.98425292969, 359.79125976563, 180.2087097168);
CreateObject(3458, 3011.3359375, 428.2666015625, 27.87279510498, 359.48913574219, 333.79211425781, 180.36804199219);
CreateObject(3458, 2921.798828125, 437.076171875, 10.512455940247, 0, 0, 54.0087890625);
CreateObject(3458, 2991.3251953125, 429.6279296875, 36.642044067383, 0, 359.59350585938, 90.016479492188);
CreateObject(3458, 2933.2841796875, 406.9228515625, 15.815288543701, 359.80224609375, 344.84985351563, 323.94287109375);
CreateObject(3458, 2955.7353515625, 400.9970703125, 21.039793014526, 0, 0, 54.014282226563);
CreateObject(1634, 2960.1787109375, 470.013671875, 17.150701522827, 346.47583007813, 359.7802734375, 131.95678710938);
CreateObject(3458, 2925.5217285156, 434.36926269531, 10.501629829407, 0, 0, 54.014282226563);
CreateObject(3458, 2991.46484375, 469.34454345703, 43.428016662598, 359.97839355469, 341.0319519043, 89.584686279297);
CreateObject(3865, 2991.564453125, 491.71484375, 44.946826934814, 289.9951171875, 0, 0);
CreateObject(3865, 2990.6010742188, 495.30215454102, 36.755283355713, 60.407043457031, 332.02578735352, 203.18821716309);
CreateObject(3865, 2988.5358886719, 499.41772460938, 29.555341720581, 306.62658691406, 23.922607421875, 35.798614501953);
CreateObject(1634, 2985.8149414063, 503.09912109375, 22.11661529541, 4.4757080078125, 359.78570556641, 218.02491760254);
CreateObject(3458, 3010.9853515625, 448.1806640625, 13.590411186218, 359.80224609375, 344.84985351563, 359.91760253906);
CreateObject(3458, 2991.1911621094, 446.5837097168, 20.629842758179, 0, 0, 50.016479492188);
CreateObject(3458, 2974.8823242188, 513.80017089844, 19.497829437256, 0, 0, 138.01644897461);
CreateObject(3458, 2941.3779296875, 526.65234375, 19.487678527832, 0, 0, 180.01098632813);
CreateObject(3458, 2920.5322265625, 509.0068359375, 19.496044158936, 0, 0, 270.01098632813);
CreateObject(3458, 3014.2436523438, 477.06478881836, 29.532670974731, 359.48913574219, 333.79211425781, 55.782012939453);
CreateObject(3859, 2934.4189453125, 453.92037963867, 14.968811035156, 0, 0, 285.99609375);
CreateObject(3859, 2934.6020507813, 459.61099243164, 14.949687957764, 0, 0, 285.99609375);
CreateObject(3859, 2934.5014648438, 465.22213745117, 14.949687957764, 0, 0, 285.99609375);
CreateObject(3859, 2934.4489746094, 470.31365966797, 14.949687957764, 0, 0, 285.99609375);
CreateObject(3859, 2934.6672363281, 475.95669555664, 14.949687957764, 0, 0, 285.99609375);
CreateObject(3859, 2934.9460449219, 481.34683227539, 14.949687957764, 0, 0, 285.99609375);
CreateObject(2918, 2932.396484375, 478.966796875, 14.080653190613, 0, 0, 0);
CreateObject(2918, 2937.1318359375, 468.15838623047, 13.927134513855, 0, 0, 0);
CreateObject(2918, 2932.3293457031, 456.56649780273, 13.946257591248, 0, 0, 0);
CreateObject(2918, 2934.509765625, 462.79840087891, 13.946257591248, 0, 0, 0);
CreateObject(2918, 2934.8754882813, 473.43701171875, 13.927134513855, 0, 0, 0);
CreateObject(9831, 2917.1726074219, 529.818359375, 0.0052695171907544, 7.0299987792969, 0, 271.3740234375);
CreateObject(9831, 2917.6569824219, 528.35015869141, -0.34447330236435, 7.0257568359375, 0, 271.37329101563);
CreateObject(9831, 2934.8151855469, 528.42687988281, -0.090407609939575, 7.0257568359375, 0, 271.37329101563);
CreateObject(9831, 2928.17578125, 532.12957763672, -0.25261616706848, 7.0257568359375, 0, 271.37329101563);
CreateObject(3515, 3032.544921875, 448.19763183594, 19.403005599976, 0, 0, 0);
CreateObject(3515, 2991.6318359375, 428.134765625, 37.204132080078, 0, 0, 0);
CreateObject(3515, 3032.564453125, 500.8310546875, 15.98471736908, 0, 0, 0);
CreateObject(3515, 2950.8120117188, 394.22924804688, 21.439912796021, 0, 0, 0);
CreateObject(3374, 2933.0007324219, 443.75009155273, 13.524076461792, 0, 0, 324);
CreateObject(3374, 2923.0063476563, 439.42825317383, 13.534902572632, 0, 0, 323.99780273438);
CreateObject(3374, 2921.2934570313, 428.10900878906, 13.524076461792, 0, 0, 323.99780273438);
CreateObject(3374, 2911.7302246094, 423.71725463867, 13.534902572632, 0, 0, 323.99780273438);
CreateObject(1225, 2991.4541015625, 492.0908203125, 50.269744873047, 0, 0, 0);
CreateObject(1225, 2991.4702148438, 492.0908203125, 51.3909034729, 0, 0, 0);
CreateObject(3458, 2988.6018066406, 447.85025024414, 8.2677593231201, 0, 0, 90.016479492188);
CreateObject(3458, 2942.5319824219, 501.69863891602, 19.509210586548, 0, 0, 180.01098632813);
CreateObject(3458, 2980.1203613281, 501.61508178711, 10.72523021698, 359.48913574219, 333.79211425781, 179.39831542969);
CreateObject(3458, 2966.4228515625, 430.20965576172, 8.2617321014404, 0, 0, 180.01098632813);
CreateObject(3458, 2965.8547363281, 465.49041748047, 8.2678346633911, 0, 0, 180.01100158691);
CreateObject(3458, 2943.7556152344, 447.85614013672, 8.2720594406128, 0, 0, 90.016479492188);
CreateObject(3458, 2940.3544921875, 458.00201416016, 9.2214422225952, 39.793884277344, 0, 90.016479492188);
CreateObject(3458, 2968.2448730469, 447.86233520508, 8.2557058334351, 0, 0, 90.016479492188);
CreateObject(3458, 2966.4619140625, 448.05551147461, 8.2621250152588, 0, 0, 180.01100158691);
CreateObject(1634, 2966.9052734375, 416.34219360352, 22.316301345825, 346.47583007813, 359.7802734375, 321.95678710938);
CreateObject(3458, 3035.2731933594, 508.27307128906, 38.2956199646, 359.59606933594, 0, 56.015991210938);
CreateObject(1634, 2978.64453125, 431.51162719727, 21.920753479004, 346.47583007813, 359.7802734375, 141.95434570313);
CreateObject(3458, 3047.4099121094, 526.38555908203, 38.258811950684, 359.59350585938, 359.59594726563, 325.80889892578);
CreateObject(3458, 3074.7136230469, 535.30163574219, 38.395023345947, 359.59350585938, 0, 56.013793945313);
CreateObject(3458, 3045.326171875, 554.83068847656, 38.150722503662, 359.59350585938, 0, 56.013793945313);
CreateObject(3458, 3072.6313476563, 563.76684570313, 38.247100830078, 359.59350585938, 359.59350585938, 325.80505371094);
CreateObject(3458, 3060.5166015625, 545.83471679688, 38.247592926025, 359.59350585938, 359.59350585938, 325.80505371094);
CreateObject(3458, 3059.6733398438, 545.22973632813, 38.207054138184, 359.59350585938, 0, 56.013793945313);
CreateObject(3515, 2968.6169433594, 448.12661743164, 7.9736557006836, 0, 0, 0);
CreateObject(3515, 3060.005859375, 546.00463867188, 38.211036682129, 0, 0, 0);
CreateObject(3515, 2920.2622070313, 501.69161987305, 19.551879882813, 0, 0, 0);
CreateObject(3458, 3000.9992675781, 501.38302612305, 1.8407719135284, 0, 0, 90.016479492188);
CreateObject(3458, 3018.6218261719, 524.08874511719, 1.8203424215317, 0, 0, 0);
CreateObject(3458, 3018.6467285156, 478.85021972656, 1.8628829717636, 0, 0, 0);
CreateObject(3458, 3036.2648925781, 501.34024047852, 1.8424533605576, 0, 0, 90.016479492188);
CreateObject(3458, 3018.6520996094, 501.39562988281, 1.8305146694183, 0, 0, 0);
CreateObject(1225, 2999.2199707031, 476.90634155273, 3.7971076965332, 0, 0, 0);
CreateObject(1225, 3038.3803710938, 526.28485107422, 3.7545671463013, 0, 0, 0);
CreateObject(1225, 2941.6911621094, 428.03582763672, 10.20628452301, 0, 0, 0);
CreateObject(1225, 2990.7670898438, 467.71231079102, 10.201983451843, 0, 0, 0);
CreateObject(1225, 3057.4807128906, 576.51257324219, 40.027294158936, 0, 0, 0);
CreateObject(1225, 3062.5935058594, 513.54675292969, 40.3473777771, 0, 0, 0);
CreateObject(1225, 2991.255859375, 411.03073120117, 38.444362640381, 0, 0, 0);
CreateObject(1225, 2993.0161132813, 411.01727294922, 38.444263458252, 0, 0, 0);
CreateObject(1225, 2989.4379882813, 411.16763305664, 38.445339202881, 0, 0, 0);
CreateObject(1225, 2943.1335449219, 386.453125, 22.974016189575, 0, 0, 0);
CreateObject(1225, 2944.5041503906, 385.35876464844, 22.974016189575, 0, 0, 0);
CreateObject(1225, 2945.9560546875, 384.35552978516, 22.974016189575, 0, 0, 0);
CreateObject(1225, 2922.3176269531, 490.22885131836, 21.430267333984, 0, 0, 0);
CreateObject(1225, 2918.8654785156, 490.15396118164, 21.430267333984, 0, 0, 0);
CreateObject(1225, 2920.4865722656, 490.09826660156, 21.430267333984, 0, 0, 0);
CreateObject(3515, 3035.78125, 501.11273193359, 1.7261278629303, 0, 0, 0);
CreateObject(3515, 3000.9294433594, 501.36450195313, 1.8965889215469, 0, 0, 0);

//derby
CreateObject(17950, 2199.891357, 939.109558, 12.079811, 0.000000, 0.000000, -90.599998);
CreateObject(17950, 2199.769042, 927.040588, 12.079811, 0.000000, 0.000000, -90.599998);
CreateObject(3461, 2196.332275, 935.138366, 10.308668, 0.000000, 0.000000, 0.000000);
CreateObject(3461, 2196.332275, 930.977844, 10.308668, 0.000000, 0.000000, 0.000000);
CreateObject(3666, 2204.706787, 930.316101, 10.333226, 0.000000, 0.000000, 0.000000);
CreateObject(3666, 2204.706787, 923.686157, 10.333226, 0.000000, 0.000000, 0.000000);
CreateObject(3666, 2204.706787, 935.656494, 10.333226, 0.000000, 0.000000, 0.000000);
CreateObject(3666, 2204.706787, 942.406982, 10.333226, 0.000000, 0.000000, 0.000000);
CreateObject(1232, 2199.335205, 932.972412, 10.840268, 0.000000, 0.000000, 0.000000);

        CreateObject(8558,2583.55273438,-2921.90820312,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2623.75903320,-2921.92407227,1001.35871506,0.00000000,0.00000000,0.00000000); // 2)
        CreateObject(8558,2663.91845703,-2921.92724609,1001.35871506,0.00000000,0.00000000,0.00000000); // 3)
        CreateObject(8558,2681.58496094,-2943.59521484,1001.35871506,0.00000000,0.00000000,90.00000000); // 4)
        CreateObject(8558,2681.58984375,-2983.88793945,1001.35871506,0.00000000,0.00000000,90.00000000); // 5)
        CreateObject(8558,2681.56201172,-3024.05273438,1001.35871506,0.00000000,0.00000000,90.00000000); // 6)
        CreateObject(8558,2658.91650391,-3041.70947266,1001.35871506,0.00000000,0.00000000,180.00000000); // 7)
        CreateObject(8558,2618.93896484,-3041.70922852,1001.35871506,0.00000000,0.00000000,179.99450684); // 8)
        CreateObject(8558,2579.22973633,-3041.67895508,1001.35871506,0.00000000,0.00000000,179.99450684); // 9)
        CreateObject(8558,2561.60351562,-3019.28930664,1001.35871506,0.00000000,0.00000000,90.00000000); // 10)
        CreateObject(8558,2561.60791016,-2979.25610352,1001.35871506,0.00000000,0.00000000,90.00000000); // 11)
        CreateObject(8558,2561.60058594,-2939.54589844,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2561.60351562,-3019.28906250,1001.35871506,0.00000000,0.00000000,90.00000000); // 13)
        CreateObject(8558,2583.98046875,-2978.90551758,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2658.91259766,-2978.71704102,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2622.16528320,-3019.43432617,1001.35871506,0.00000000,0.00000000,90.00000000); // 13)
        CreateObject(8558,2622.04321289,-2941.63378906,1001.35871506,0.00000000,0.00000000,90.00000000); // 13)
        CreateObject(1634,2621.95776367,-2959.33129883,1003.68449116,0.00000000,0.00000000,180.00000000); // 1)
        CreateObject(1634,2600.51269531,-2978.81298828,1003.68449116,0.00000000,0.00000000,270.00000000); // 2)
        CreateObject(1634,2622.16284180,-3003.88330078,1003.68449116,0.00000000,0.00000000,0.00000000); // 3)
        CreateObject(1634,2643.73681641,-2978.61230469,1003.68449116,0.00000000,0.00000000,90.00000000); // 4)
        CreateObject(8558,2581.15527344,-2958.77563477,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2581.12744141,-2942.96484375,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2583.78588867,-2960.45166016,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2582.97290039,-2940.23608398,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2601.40527344,-2942.78515625,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2613.96875000,-2972.66796875,1001.35871506,0.00000000,0.00000000,136.00000000); // 12)
        CreateObject(8558,2627.50952148,-2985.75268555,1001.35871506,0.00000000,0.00000000,136.00003052); // 12)
        CreateObject(8558,2662.98852539,-2997.44946289,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2662.98754883,-3020.35913086,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2660.61303711,-3000.07495117,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2660.71166992,-3021.18383789,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2642.74194336,-3020.76025391,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2617.92700195,-2982.91992188,1001.35871506,0.00000000,0.00000000,226.25000000); // 12)
        CreateObject(8558,2581.16992188,-2996.62011719,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2581.16650391,-3020.93725586,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2583.53076172,-2997.95751953,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2583.85302734,-3021.10888672,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2603.62939453,-3017.48510742,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2603.62231445,-3021.84985352,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2662.96679688,-2963.67480469,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2662.94287109,-2939.53588867,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2660.06127930,-2960.21826172,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2659.75219727,-2940.42773438,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2625.03808594,-2975.54052734,1001.35871506,0.00000000,0.00000000,226.24694824); // 12)
        CreateObject(8558,2639.40380859,-2941.73388672,1001.35871506,0.00000000,0.00000000,90.00000000); // 12)
        CreateObject(8558,2621.37939453,-2940.33618164,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,2621.35986328,-3021.18725586,1001.35871506,0.00000000,0.00000000,0.00000000); // 1)

        CreateObject(8558,3795.19995117,-2472.10009766,48.00000000+952,0.00000000,0.00000000,0.00000000); // 1)
        CreateObject(8558,3830.60009766,-2472.10009766,48.00000000+952,0.00000000,0.00000000,0.00000000); // 2)
        CreateObject(8558,3828.19995117,-2454.30004883,48.00000000+952,0.00000000,0.00000000,90.00000000); // 3)
        CreateObject(8558,3797.60009766,-2454.30004883,48.00000000+952,0.00000000,0.00000000,90.00000000); // 4)
        CreateObject(8558,3795.19995117,-2436.80004883,48.00000000+952,0.00000000,0.00000000,0.00000000); // 5)
        CreateObject(8558,3830.60009766,-2436.80004883,48.00000000+952,0.00000000,0.00000000,0.00000000); // 6)
        CreateObject(8558,3849.30004883,-2454.30004883,48.00000000+952,0.00000000,0.00000000,90.00000000); // 7)
        CreateObject(8558,3777.69995117,-2454.30004883,48.00000000+952,0.00000000,0.00000000,90.00000000); // 8)
        CreateObject(8558,3770.00000000,-2454.30004883,61.00000000+952,0.00000000,0.00000000,90.00000000); // 9)
        CreateObject(8558,3789.30004883,-2453.50000000,51.09999847+952,0.00000000,30.00000000,0.00000000); // 10)
        CreateObject(8558,3810.50000000,-2453.50000000,48.00000000+952,0.00000000,0.00000000,0.00000000); // 11)
        CreateObject(8558,3836.50000000,-2453.50000000,51.09999847+952,0.00000000,30.00000000,180.00000000); // 12)
        CreateObject(8558,3855.30004883,-2454.30004883,61.00000000+952,0.00000000,0.00000000,90.00000000); // 14)
        CreateObject(8558,3832.55004883,-2472.00000000,61.00000000+952,0.00000000,0.00000000,0.00000000); // 15)
        CreateObject(8558,3792.30004883,-2472.00000000,61.00000000+952,0.00000000,0.00000000,0.00000000); // 16)
        CreateObject(8558,3832.55004883,-2436.66992188,61.00000000+952,0.00000000,0.00000000,0.00000000); // 17)
        CreateObject(8558,3792.30004883,-2436.66992188,61.00000000+952,0.00000000,0.00000000,0.00000000); // 18)
        CreateObject(8558,3797.60009766,-2454.30004883,61.00000000+952,0.00000000,0.00000000,90.00000000); // 19)
        CreateObject(8558,3828.19995117,-2454.30004883,61.00000000+952,0.00000000,0.00000000,90.00000000); //20)
//Thug Life Objects
CreateObject(3749, 496.734954, -1457.560058, 21.934152, 0.000000, 0.000000, -29.000000);
CreateObject(3749, 500.687622, -1557.921630, 20.911884, 0.000000, 0.299994, 43.100006);
CreateObject(1504, 475.429046, -1499.745727, 19.483835, 0.000000, 0.000000, 84.600044);
//RISK INTERIOR

CreateObject(10871, 2232.215332, 1711.710815, 1011.542419, 0.000000, 0.000000, 58.599990);
CreateObject(10871, 2215.754150, 1607.141235, 1011.622497, 0.000000, 0.000000, 115.999916);
CreateObject(1569, 2234.480224, 1639.249267, 1007.200378, 0.000000, 0.000000, -1.500000);
CreateObject(19273, 2233.900634, 1639.429321, 1008.461730, 0.000000, 0.000000, 0.000000);
CreateObject(19304, 2245.090820, 1663.284667, 1007.986389, 0.000000, 0.000000, -133.899932);
CreateObject(19304, 2226.417480, 1664.139160, 1007.986389, 0.000000, 0.000000, -37.899982);
CreateObject(19304, 2223.617919, 1666.319335, 1007.986389, 0.000000, 0.000000, -37.899982);
CreateObject(19304, 2221.161621, 1668.809448, 1007.986389, 0.000000, 0.000000, -51.699928);
CreateObject(19304, 2219.341552, 1671.762939, 1007.986389, 0.000000, 0.000000, -64.699897);
CreateObject(19304, 2218.211669, 1675.028076, 1007.986389, 0.000000, 0.000000, -79.099822);
CreateObject(19304, 2218.256835, 1678.361450, 1007.986389, 0.000000, 0.000000, -99.799812);
CreateObject(19304, 2219.140625, 1681.730834, 1007.986389, 0.000000, 0.000000, -107.399765);
CreateObject(19304, 2220.491455, 1684.854858, 1007.986389, 0.000000, 0.000000, -123.899696);
CreateObject(19304, 2222.450439, 1687.768432, 1007.986389, 0.000000, 0.000000, -123.899696);
CreateObject(19304, 2247.541503, 1665.722290, 1007.986389, 0.000000, 0.000000, -133.899932);
CreateObject(19304, 2249.793212, 1668.364868, 1007.986389, 0.000000, 0.000000, -130.399856);
CreateObject(19304, 2251.472900, 1671.351318, 1007.986389, 0.000000, 0.000000, -109.099884);
CreateObject(19304, 2252.367431, 1674.688354, 1007.986389, 0.000000, 0.000000, -101.199981);
CreateObject(19304, 2252.623535, 1678.090454, 1007.986389, 0.000000, 0.000000, -88.400047);
CreateObject(19304, 2252.075195, 1681.486328, 1007.946472, 0.000000, 0.000000, -72.500076);
CreateObject(19304, 2251.061767, 1684.700683, 1007.946472, 0.000000, 0.000000, -72.500076);
CreateObject(19304, 2237.615722, 1643.654174, 1007.946472, 0.000000, 0.000000, -90.300018);
CreateObject(19304, 2233.234619, 1643.676513, 1007.946472, 0.000000, 0.000000, -90.300018);
CreateObject(19304, 2233.251953, 1647.166503, 1007.946472, 0.000000, 0.000000, -90.300018);
CreateObject(19304, 2237.793212, 1647.112426, 1007.986389, 0.000000, 0.000000, -93.399932);
CreateObject(19304, 2238.025146, 1650.603393, 1007.986389, 0.000000, 0.000000, -93.599906);
CreateObject(19304, 2238.203613, 1653.989379, 1007.986389, 0.000000, 0.000000, -93.399932);
CreateObject(19304, 2238.409423, 1657.493164, 1007.986389, 0.000000, 0.000000, -93.399932);
CreateObject(19304, 2233.317871, 1650.643676, 1007.986389, 0.000000, 0.000000, -93.399932);
CreateObject(19304, 2233.477050, 1653.277709, 1007.986389, 0.000000, 0.000000, -93.399932);
CreateObject(19304, 2233.678222, 1656.703125, 1007.986389, 0.000000, 0.000000, -93.399932);
CreateObject(19304, 2233.802246, 1657.665649, 1007.986389, 0.000000, 0.000000, -91.299896);
CreateObject(8168, 2241.116699, 1644.794799, 1008.923095, 0.000000, 0.000000, -74.999961);
CreateObject(2099, 2241.727294, 1656.779052, 1007.360839, 0.000000, 0.000000, -90.099822);
CreateObject(2099, 2230.075927, 1656.763305, 1007.360839, 0.000000, 0.000000, 94.700202);
CreateObject(2233, 2243.601318, 1659.631713, 1007.366271, 0.000000, 0.000000, -140.900009);
CreateObject(2233, 2228.406250, 1659.947753, 1007.366271, 0.000000, 0.000000, 139.299972);
CreateObject(19355, 2244.450683, 1677.426391, 1009.001281, 0.000000, 0.000000, 0.000000);
CreateObject(1895, 2244.247314, 1677.354370, 1009.140563, -0.899999, 57.600006, -92.900016);
CreateObject(2332, 2238.850097, 1684.479125, 1007.770385, 0.000000, 0.000000, -35.400001);
CreateObject(2332, 2233.083740, 1684.750000, 1007.770385, 0.000000, 0.000000, 31.300012);
CreateObject(2224, 2239.528320, 1683.331665, 1007.329895, 0.000000, 0.000000, -58.199993);
CreateObject(2224, 2231.197509, 1682.983032, 1007.329895, 0.000000, 0.000000, 1.400019);
CreateObject(1886, 2229.600341, 1669.609375, 1015.966308, 0.000000, 0.000000, -160.399993);
CreateObject(1886, 2239.785644, 1673.232910, 1015.966308, 0.000000, 0.000000, -160.399993);
CreateObject(1886, 2242.786376, 1659.769653, 1011.385742, 0.000000, 0.000000, -160.399993);
CreateObject(2366, 2235.395263, 1677.429565, 1007.359802, 0.000000, 0.000000, 0.000000);
//KUBCHE
kubche = CreateObject(18764, 2246.451416, 1669.666381, 1009.864318, 0.000000, 0.000000, -32.500000);

//INTERIOR BANKA
CreateObject(3851, 253.382431, 117.636245, 1005.285034, 0.000000, -1.099999, -176.499938);
CreateObject(3851, 247.746627, 119.647674, 1006.178283, 0.000000, 0.000000, -88.199989);
CreateObject(2634, 256.276458, 115.929992, 1003.558654, 0.000000, 0.000000, 0.000000);
CreateObject(2634, 254.316452, 115.929992, 1003.558654, 0.000000, 0.000000, 0.000000);
CreateObject(3851, 245.427856, 119.574829, 1006.178283, 0.000000, 0.000000, -88.199989);
CreateObject(1569, 225.158142, 115.989219, 1002.032043, 0.000000, 0.000000, 0.000000);
CreateObject(1569, 223.708312, 115.989219, 1002.032043, 0.000000, 0.000000, 0.000000);
CreateObject(1569, 223.708312, 115.989219, 1004.472351, 0.000000, 0.000000, 0.000000);
CreateObject(1569, 225.168350, 115.989219, 1004.492370, 0.000000, 0.000000, 0.000000);
CreateObject(1569, 221.338348, 115.989219, 1004.492370, 0.000000, 0.000000, 0.000000);
CreateObject(1569, 219.848312, 115.989219, 1004.492370, 0.000000, 0.000000, 0.000000);
CreateObject(1569, 221.387786, 116.022041, 1002.141967, 0.000000, 0.000000, -178.799957);
CreateObject(1569, 221.298339, 115.989219, 1002.141967, 0.000000, 0.000000, 0.000000);
CreateObject(3851, 239.801208, 108.465080, 1004.267150, 0.000000, 0.000000, 2.399999);
CreateObject(2634, 237.624893, 119.318008, 1003.696044, 0.000000, 0.000000, 0.000000);
CreateObject(1569, 233.015136, 119.132301, 1002.234252, 0.000000, 0.000000, 1.299999);
CreateObject(1569, 234.504760, 119.166091, 1002.234252, 0.000000, 0.000000, 1.299999);
CreateObject(2634, 220.993667, 118.058105, 1010.522460, 0.000000, 0.000000, -89.599990);
CreateObject(2634, 221.063629, 118.058586, 1012.982360, 0.000000, 0.000000, -89.599990);
CreateObject(11416, 260.333648, 113.394027, 1004.999511, -89.999938, 0.699999, 0.000000);
CreateObject(2634, 253.226196, 126.140579, 1003.481079, 0.000000, 0.000000, -89.300086);
CreateObject(2634, 253.250122, 124.180747, 1003.481079, 0.000000, 0.000000, -89.300086);
CreateObject(2634, 237.419998, 115.833419, 1003.477294, 0.000000, 0.000000, 179.700119);
CreateObject(1518, 252.906539, 117.950408, 1007.312316, 0.000000, 0.000000, -55.399993);
CreateObject(1521, 222.591873, 115.454658, 999.499755, 0.000000, 0.000000, -176.800003);
CreateObject(1521, 223.572052, 115.479370, 999.499755, 0.000000, 0.000000, -176.800003);
CreateObject(1521, 225.144088, 115.487045, 999.499755, 0.000000, 0.000000, -176.800003);
CreateObject(1521, 220.532241, 115.389472, 999.499755, 0.000000, 0.000000, -176.800003);
CreateObject(2634, 217.708862, 116.504592, 999.320068, 0.000000, 0.000000, 0.000000);
CreateObject(2634, 219.699768, 116.434707, 999.320068, 0.000000, 0.000000, -179.300048);
CreateObject(19906, 227.552536, 118.153152, 1000.318969, 0.000000, 0.000000, 88.799987);
CreateObject(19906, 227.601119, 124.293487, 1000.318969, 0.000000, 0.000000, 88.799987);
CreateObject(19906, 227.601119, 124.293487, 1002.068908, 0.000000, 0.000000, 88.799987);
CreateObject(19906, 227.524108, 118.233749, 1002.158691, 0.000000, 0.000000, 88.799987);
CreateObject(19619, 227.525512, 123.890327, 999.869750, 0.000000, 0.000000, -91.700057);
CreateObject(19619, 227.441284, 121.051551, 999.869750, 0.000000, 0.000000, -91.700057);
CreateObject(19619, 227.489913, 122.690818, 999.869750, 0.000000, 0.000000, -91.700057);
CreateObject(19619, 227.403945, 119.792152, 999.869750, 0.000000, 0.000000, -91.700057);
CreateObject(19619, 227.371322, 118.692657, 999.869750, 0.000000, 0.000000, -91.700057);
CreateObject(19619, 227.371322, 118.692657, 998.459106, 0.000000, 0.000000, -91.700057);
CreateObject(19619, 227.407043, 119.902046, 998.459106, 0.000000, 0.000000, -91.700057);
CreateObject(19619, 227.443130, 121.121459, 998.459106, 0.000000, 0.000000, -91.700057);
CreateObject(19619, 227.473739, 122.151023, 998.459106, 0.000000, 0.000000, -91.700057);
CreateObject(19619, 227.517272, 123.620330, 998.459106, 0.000000, 0.000000, -91.700057);
CreateObject(2634, 219.327758, 120.612068, 999.189147, 0.000000, 0.000000, 128.600021);





//RISK PECHELI,RISK GUBI
CreateObject(2531, 1059.737304, 1000.772827, 10.025313, 0.000000, 0.000000, 163.700073);
CreateObject(2531, 1061.195800, 1000.346069, 10.025313, 0.000000, 0.000000, 163.700073);
CreateObject(2531, 1062.673706, 999.913696, 10.025313, 0.000000, 0.000000, 163.700073);
CreateObject(2531, 1028.279418, 1023.913818, 10.025313, 0.000000, 0.000000, 125.900047);
CreateObject(2531, 1027.559570, 1025.010131, 10.025313, 0.000000, 0.000000, 125.900047);
CreateObject(2531, 1026.895507, 1026.097290, 10.025313, 0.000000, 0.000000, 125.900047);
CreateObject(2224, 1072.207153, 1016.999267, 9.994961, 0.000000, 0.000000, 110.699981);
CreateObject(2224, 1037.765380, 1041.193115, 10.004961, 0.000000, 0.000000, 58.299964);
CreateObject(2690, 1054.329589, 1001.875183, 12.120772, 0.000000, 0.000000, 175.499908);
CreateObject(2690, 1055.077026, 1001.816101, 12.120772, 0.000000, 0.000000, 175.499908);
CreateObject(2690, 1056.044067, 1001.739929, 12.120772, 0.000000, 0.000000, 175.499908);
CreateObject(3472, 1116.404174, 1029.975341, 9.393583, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1126.066406, 1029.975341, 9.393583, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1130.267456, 1038.845458, 9.393583, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1039.966186, 1098.364746, 9.393583, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1030.956054, 1084.595336, 9.393583, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1038.576049, 1090.295410, 9.393583, 0.000000, 0.000000, 0.000000);
CreateObject(3534, 1076.839111, 1001.728088, 16.977823, 0.000000, 179.399963, 7.899998);
CreateObject(3534, 1061.081176, 999.541320, 16.811206, 0.000000, 179.399963, 7.899998);
CreateObject(3534, 1052.229248, 1004.764404, 16.726917, 0.000000, 179.399963, 7.899998);
CreateObject(3534, 1036.724975, 1017.191101, 16.583967, 0.000000, 179.399963, 7.899998);
CreateObject(3534, 1028.815063, 1032.499633, 16.523958, 0.000000, 179.399963, 7.899998);
CreateObject(3534, 1033.328857, 1031.103515, 16.568782, 0.000000, 179.399963, 7.899998);
CreateObject(7914, 1030.139404, 1032.386474, 29.226835, 0.000000, 0.000000, 121.299926);
CreateObject(7914, 1019.437316, 1049.989013, 29.256830, 0.000000, 0.000000, 118.399925);
CreateObject(7914, 1014.087707, 1070.677978, 29.256830, 0.000000, 0.000000, 87.899993);
CreateObject(8310, 1062.335083, 998.885620, 29.791288, 0.000000, 0.000000, 94.299926);
CreateObject(8310, 1080.014038, 993.687622, 29.791288, 0.000000, 0.000000, 94.299926);
CreateObject(8310, 1100.964721, 995.263183, 29.791288, 0.000000, 0.000000, 118.199928);
CreateObject(19122, 1092.839111, 1018.941894, 9.617875, 0.000000, 0.000000, 0.000000);
CreateObject(19122, 1094.899291, 1018.941894, 9.617875, 0.000000, 0.000000, 0.000000);
CreateObject(19122, 1097.350097, 1018.941894, 9.617875, 0.000000, 0.000000, 0.000000);
CreateObject(19122, 1099.479858, 1019.062011, 9.617875, 0.000000, 0.000000, 0.000000);
CreateObject(19124, 1033.000488, 1067.858642, 9.663395, 0.000000, 0.000000, 0.000000);
CreateObject(19124, 1033.520507, 1065.769409, 9.663395, 0.000000, 0.000000, 0.000000);
CreateObject(19124, 1034.380615, 1062.749633, 9.663395, 0.000000, 0.000000, 0.000000);
CreateObject(19124, 1034.990966, 1059.539184, 9.663395, 0.000000, 0.000000, 0.000000);
CreateObject(18646, 1052.489501, 1022.694274, 16.659122, 0.000000, -176.400009, 0.000000);
CreateObject(18646, 1037.896850, 1022.664733, 17.066211, 0.000000, -176.400009, 0.000000);
CreateObject(18646, 1052.247436, 1009.204040, 16.804559, 0.000000, -176.400009, 0.000000);
CreateObject(19273, 1031.413574, 1018.230224, 12.918463, 0.000000, 0.000000, 119.699981);
CreateObject(1235, 1068.535278, 1017.087341, 10.549674, 0.000000, 0.000000, 0.000000);
CreateObject(1723, 1067.069702, 1015.494628, 9.957652, 0.000000, 0.000000, 167.300079);
CreateObject(1827, 1066.204223, 1017.247680, 10.285273, 0.000000, 1.799989, 0.000000);






CreateObject(1342, 1014.760559, 1051.696899, 11.029089, 0.000000, 0.000000, 15.300004);
CreateObject(1342, 1015.417541, 1049.295654, 11.029089, 0.000000, 0.000000, 15.300004);
CreateObject(1342, 1016.224792, 1046.344726, 11.029089, 0.000000, 0.000000, 15.300004);
CreateObject(1342, 1017.053344, 1043.316650, 11.029089, 0.000000, 0.000000, 15.300004);
CreateObject(1342, 1017.815307, 1040.529418, 11.029089, 0.000000, 0.000000, 15.300004);
CreateObject(1342, 1019.526550, 1038.064697, 11.029089, 0.000000, 0.000000, 15.300004);
CreateObject(1340, 1073.264892, 997.609985, 11.062658, 0.000000, 0.000000, 73.400039);
CreateObject(1340, 1070.341186, 998.481140, 11.062658, 0.000000, 0.000000, 73.400039);
CreateObject(1340, 1067.408813, 999.355163, 11.062658, 0.000000, 0.000000, 73.400039);
CreateObject(1340, 1064.543701, 1000.209289, 11.062658, 0.000000, 0.000000, 73.400039);
CreateObject(1571, 1026.037597, 1030.970214, 11.276836, 0.000000, 0.000000, 120.699943);
CreateObject(1571, 1023.852661, 1034.650512, 11.276836, 0.000000, 0.000000, 120.699943);
CreateObject(18874, 1027.812011, 1030.535644, 11.055541, 0.000000, 0.000000, 125.399993);
CreateObject(18874, 1027.730468, 1030.649536, 11.055541, 0.000000, 0.000000, 125.399993);
CreateObject(18874, 1027.620605, 1030.804809, 11.055541, 0.000000, 0.000000, 125.399993);
CreateObject(18874, 1027.429809, 1031.074096, 11.055541, 0.000000, 0.000000, 34.700008);
CreateObject(18874, 1027.253417, 1031.329101, 11.055541, 0.000000, 0.000000, 34.700008);
CreateObject(18874, 1027.071166, 1031.592163, 11.055541, 0.000000, 0.000000, 34.700008);
CreateObject(18874, 1026.803588, 1031.978515, 11.055541, 0.000000, 0.000000, 70.300010);
CreateObject(18874, 1026.974487, 1031.801025, 11.055541, 0.000000, 0.000000, 70.300010);
CreateObject(18961, 1023.227722, 1032.736572, 12.437968, -1.399998, 100.000015, 21.099988);
CreateObject(18961, 1022.892822, 1033.603637, 12.415247, -1.399998, 100.000015, 21.099988);
CreateObject(18961, 1022.475524, 1034.685668, 12.386907, -1.399998, 100.000015, 21.099988);
CreateObject(18961, 1022.180236, 1035.450561, 12.366873, -1.399998, 100.000015, 21.099988);
CreateObject(18960, 1024.556762, 1035.912231, 11.098202, 4.099997, 6.100000, 115.699966);
CreateObject(18960, 1025.570068, 1034.842651, 11.216192, 4.099997, 6.100000, 115.699966);
CreateObject(3472, 1105.934570, 1022.261962, 9.600989, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1092.484497, 1022.261962, 9.600989, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1081.604492, 1022.261962, 9.600989, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1067.183959, 1025.911865, 9.600989, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1036.374877, 1076.778076, 9.600989, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1036.374877, 1063.897827, 9.600989, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1041.404785, 1049.748046, 9.600989, 0.000000, 0.000000, 0.000000);
CreateObject(3472, 1037.474975, 1056.296264, 9.600989, 0.000000, 0.000000, 0.000000);
CreateObject(1670, 1066.211791, 1017.373107, 10.787065, 0.000000, 0.000000, 0.000000);
CreateObject(1829, 1031.071166, 1020.477783, 10.483138, 0.000000, 0.000000, 140.800003);
CreateObject(1829, 1054.219726, 1002.423217, 10.483138, 0.000000, 0.000000, 140.800003);
CreateObject(2229, 1057.524902, 1020.571777, 10.020976, 0.000000, 0.000000, 140.600051);
CreateObject(2229, 1046.511474, 1027.055541, 10.020976, 0.000000, 0.000000, 156.500015);
CreateObject(3437, 1051.844604, 1003.032958, 15.083540, 0.000000, 0.000000, -37.100017);
CreateObject(3437, 1033.046630, 1017.250427, 15.083540, 0.000000, 0.000000, -37.100017);
CreateObject(3437, 1052.407592, 1023.458007, 48.478534, 0.000000, 0.000000, -37.100017);
CreateObject(3437, 1052.407592, 1023.458007, 29.028541, 0.000000, 0.000000, -37.100017);
CreateObject(3437, 1060.343627, 1017.455810, 79.318588, 0.000000, 0.000000, -37.100017);
CreateObject(3437, 1060.343627, 1017.455810, 90.128601, 0.000000, 0.000000, -37.100017);
CreateObject(3437, 1060.343627, 1017.455810, 101.588592, 0.000000, 0.000000, -37.100017);
CreateObject(3437, 1056.603149, 1020.290161, 107.932929, -0.600000, -90.799987, -37.500049);
CreateObject(3437, 1049.557250, 1025.692504, 107.808929, -0.600000, -90.799987, -37.500049);
CreateObject(3437, 1045.779296, 1028.501464, 101.091995, -0.600000, -179.600021, -37.500049);
CreateObject(3437, 1055.953369, 1020.961059, 74.527488, -0.600000, 91.800018, -37.500049);
CreateObject(3437, 1052.495971, 1023.686889, 80.179229, -0.600000, 0.800019, -37.500049);
CreateObject(3437, 1030.222656, 1040.782470, 80.571235, -0.600000, 0.800019, -37.500049);
CreateObject(3437, 1030.424926, 1040.780273, 92.159439, -0.600000, 0.800019, -37.500049);
CreateObject(3437, 1030.630249, 1040.778686, 103.927619, -0.600000, 0.800019, -37.500049);
CreateObject(3437, 1030.811035, 1040.723144, 110.319320, -0.600000, 91.000038, -37.500049);
CreateObject(3437, 1016.692687, 1051.492187, 105.455207, -0.600000, 157.300109, -37.500049);
CreateObject(3437, 1020.175964, 1048.678222, 94.754402, -0.600000, 157.300109, -37.500049);
CreateObject(3437, 1023.644287, 1045.876464, 84.099670, -0.600000, 157.300109, -37.500049);
CreateObject(3437, 1015.353820, 1052.364501, 93.676628, -0.600000, -93.699897, -37.500049);
CreateObject(3437, 1013.841308, 1053.663208, 104.068389, -0.600000, 21.800079, -37.500049);
CreateObject(3437, 1010.478210, 1056.106567, 93.679237, -0.600000, 21.800079, -37.500049);
CreateObject(3437, 1008.831176, 1057.302490, 88.591423, -0.600000, 21.800079, -37.500049);
CreateObject(3437, 999.846801, 1064.195434, 88.498367, -0.600000, -1.699934, -37.500049);
CreateObject(3437, 994.677490, 1068.103393, 84.069847, -0.600000, -89.099952, -37.500049);
CreateObject(3437, 991.203369, 1070.849365, 90.198280, -0.600000, 1.200049, -37.500049);
CreateObject(3437, 999.844116, 1064.344482, 99.732666, -0.600000, 0.600050, -37.500049);
CreateObject(3437, 1000.013916, 1064.366455, 111.271377, -0.600000, 0.600050, -37.500049);
CreateObject(3437, 996.092224, 1067.434814, 115.582450, -0.600000, -90.099937, -37.500049);
CreateObject(3437, 980.611633, 1078.966308, 89.460128, -0.600000, -0.199939, -37.500049);
CreateObject(3437, 980.651367, 1079.080688, 100.449485, -0.600000, -0.199939, -37.500049);
CreateObject(3437, 980.692626, 1079.199584, 111.858779, -0.600000, -0.199939, -37.500049);
CreateObject(3437, 977.860290, 1081.132446, 102.256324, -0.600000, -29.599922, -37.500049);
CreateObject(3437, 977.982238, 1081.162963, 111.716049, -0.600000, 32.300064, -37.500049);


















    CreateObject(2631, 2022.0, 2236.7, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(2631, 2022.0, 2240.6, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(2631, 2022.0, 2244.5, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(2631, 2022.0, 2248.4, 2102.9, 0.0, 0.0, 90.0);
	CreateObject(16501, 2022.1, 2238.3, 2102.8, 0.0, 90.0, 0.0);
	CreateObject(16501, 2022.1, 2245.3, 2102.8, 0.0, 90.0, 0.0);
	CreateObject(16000, 2024.2, 2240.1, 2101.2, 0.0, 0.0, 90.0);
	CreateObject(16000, 2019.8, 2240.6, 2101.2, 0.0, 0.0, -90.0);
	CreateObject(16000, 2022.2, 2248.7, 2101.2, 0.0, 0.0, 180.0);
	CreateObject(16501, 2021.8, 2246.5, 2107.3, 0.0, 270.0, 90.0);
	CreateObject(16501, 2022.0, 2240.8, 2107.3, 0.0, 270.0, 0.0);
	CreateObject(16501, 2022.0, 2233.7, 2107.3, 0.0, 270.0, 0.0);
	CreateObject(18098, 2024.3, 2239.6, 2104.8, 0.0, 0.0, 90.0);
	CreateObject(18098, 2024.3, 2239.7, 2104.7, 0.0, 0.0, 450.0);
	CreateObject(18098, 2020.1, 2239.6, 2104.8, 0.0, 0.0, 90.0);
	CreateObject(18098, 2020.0, 2239.6, 2104.7, 0.0, 0.0, 90.0);
	CreateObject(2180, 2023.6, 2236.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2238.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2240.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2242.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2244.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2246.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2023.6, 2248.1, 2106.7, 0.0, 180.0, 90.0);
	CreateObject(2180, 2020.3, 2235.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2237.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2239.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2241.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2243.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2180, 2020.3, 2245.1, 2106.7, 0.0, 180.0, 270.0);
	CreateObject(2674, 2023.4, 2238.3, 2102.9, 0.0, 0.0, 600.0);
	CreateObject(2674, 2020.4, 2242.3, 2102.9, 0.0, 0.0, 600.0);
	CreateObject(2674, 2023.4, 2246.3, 2102.9, 0.0, 0.0, 600.0);
	CreateObject(14405, 2022.0, 2242.1, 2103.5, 0.0, 0.0, 540.0);
	CreateObject(14405, 2022.0, 2243.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2245.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2246.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2248.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2249.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2251.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2242.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2243.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2245.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2246.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2248.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2249.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2251.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2242.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2243.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2245.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2246.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2248.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2249.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2019.4, 2251.1, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(14405, 2022.0, 2253.6, 2104.0, -6.0, 0.0, 180.0);
	CreateObject(14405, 2021.1, 2253.6, 2104.0, -6.0, 0.0, 180.0);
	CreateObject(14405, 2024.6, 2253.6, 2103.5, 0.0, 0.0, 180.0);
	CreateObject(2674, 2020.4, 2235.7, 2102.9, 0.0, 0.0, 52.0);
	CreateObject(2673, 2020.4, 2246.7, 2102.9, 0.0, 0.0, 270.0);
	CreateObject(2700, 2023.5, 2235.1, 2105.5, 180.0, -4.0, 90.0);
	CreateObject(2700, 2020.4, 2235.1, 2105.5, 180.0, 0.0, 90.0);
	CreateObject(2700, 2023.5, 2242.1, 2105.5, 180.0, -4.0, 90.0);
	CreateObject(2700, 2020.4, 2242.1, 2105.5, 180.0, 0.0, 90.0);
	CreateObject(1799, 2023.1, 2234.2, 2105.7, 270.0, 0.0, 360.0);
	CreateObject(1799, 2019.8, 2234.2, 2105.7, 270.0, 0.0, 0.0);
	CreateObject(1538, 2022.7, 2234.7, 2102.8, 0.0, 0.0, 180.0);
	CreateObject(1799, 2022.1, 2234.2, 2106.1, 720.0, 90.0, 450.0);
	CreateObject(1799, 2021.8, 2234.2, 2105.1, 0.0, 270.0, 270.0);
	CreateObject(1799, 2022.1, 2234.2, 2107.3, 0.0, 90.0, 90.0);
	CreateObject(1799, 2021.6, 2234.2, 2106.3, 0.0, 270.0, 270.0);
	CreateObject(1799, 2022.3, 2234.2, 2104.3, 90.0, 0.0, 180.0);
CreateObject(18885,1690.143798, -2125.745849, 13.546875, 0.000000, 0.000000, -177.800003); //object(sw_bridge03) (1)
CreateObject(18885,1236.334594, -2004.627319, 59.857730, 0.000000, 0.000000, 90.399978); //object(sw_bridge03) (1)
CreateObject(18885,294189, 2341.325195, 10.983367, 0.000000, 0.000000, 93.800010); //object(sw_bridge03) (1)
CreateObject(987, -1275.68, 488.68, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1286.91, 488.79, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1298.81, 488.77, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1310.71, 488.79, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1322.63, 488.88, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1334.20, 488.45, 18.55,   0.00, 0.00, 2.05);
CreateObject(987, -1346.08, 488.49, 18.55,   0.00, 0.00, 0.00);
CreateObject(987, -1366.63, 488.38, 20.00,   0.00, 0.00, 0.00);
CreateObject(987, -1378.59, 488.44, 20.00,   0.00, 0.00, 0.00);
CreateObject(987, -1390.39, 488.44, 20.00,   0.00, 0.00, 0.00);
CreateObject(987, -1399.07, 488.28, 16.97,   0.00, 0.00, 0.00);
CreateObject(987, -1410.76, 488.67, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1422.62, 488.75, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1434.63, 488.89, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1446.53, 488.95, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1458.54, 489.05, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1467.44, 496.94, 17.17,   0.00, 0.00, 317.31);
CreateObject(987, -1467.48, 509.14, 17.17,   0.00, 0.00, 271.79);
CreateObject(987, -1456.76, 514.10, 17.17,   0.00, 0.00, 204.78);
CreateObject(987, -1444.74, 514.06, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1432.79, 514.15, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1420.58, 513.93, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1408.54, 513.89, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1396.63, 513.91, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1408.54, 513.89, 12.50,   0.00, 0.00, 179.80);
CreateObject(987, -1408.55, 513.84, 8.22,   0.00, 0.00, 179.91);
CreateObject(987, -1397.03, 514.68, 8.22,   0.00, 0.00, 179.80);
CreateObject(987, -1397.09, 514.66, 12.59,   0.00, 0.00, 179.80);
CreateObject(987, -1417.74, 514.28, 8.22,   0.00, 0.00, 179.91);
CreateObject(987, -1417.74, 514.28, 12.62,   0.00, 0.00, 179.91);
CreateObject(987, -1384.74, 513.95, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1372.67, 513.84, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1360.80, 513.97, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1348.67, 513.85, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1336.65, 513.83, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1324.80, 513.77, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1312.90, 513.86, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1300.91, 514.00, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1288.99, 514.08, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1277.09, 513.97, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1264.97, 513.94, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1253.97, 509.05, 17.17,   0.00, 0.00, 156.90);
CreateObject(987, -1253.43, 497.22, 17.17,   0.00, 0.00, 93.52);
CreateObject(987, -1257.86, 489.51, 17.17,   0.00, 0.00, 61.29);
CreateObject(987, -1269.61, 488.55, 17.00,   0.00, 0.00, 5.19);
CreateObject(1697, -1460.35, 486.20, 15.56,   0.00, 0.00, 89.57);
CreateObject(1697, -1447.55, 499.97, 15.76,   0.00, 0.00, 89.83);
CreateObject(1697, -1451.38, 499.98, 13.19,   0.00, 0.00, 89.83);
CreateObject(1697, -1457.57, 500.12, 8.91,   0.00, 0.00, 89.83);
CreateObject(1697, -1454.91, 500.01, 10.92,   0.00, 0.00, 89.83);
CreateObject(1225, -1406.01, 503.27, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1400.95, 490.56, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1414.59, 499.35, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1415.88, 510.59, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1391.92, 510.77, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1372.42, 503.60, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1348.09, 513.54, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1334.25, 503.43, 10.00,   0.00, 0.00, 0.00);
CreateObject(987, -1339.14, 487.49, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1320.32, 502.83, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1309.33, 491.44, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1298.64, 498.99, 10.00,   0.00, 0.00, 0.00);
CreateObject(987, -1328.94, 514.65, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1420.61, 504.05, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1413.96, 494.99, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1396.86, 507.35, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1374.97, 507.23, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1346.86, 507.49, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1313.70, 507.33, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1287.33, 505.69, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1285.55, 500.75, 17.00,   0.00, 0.00, 0.00);
//Derby
CreateObject(16358, -737.06, 613.18, 5.49,   0.00, 0.00, 315.84);
CreateObject(16358, -554.68, 467.66, 5.38,   0.00, 0.00, 327.09);
CreateObject(10388, -447.75, 393.48, -0.09,   0.00, 0.00, 327.38);
CreateObject(1697, -456.29, 397.78, 3.93,   0.00, 0.00, 237.15);
CreateObject(3749, -459.89, 405.00, 11.71,   0.00, 0.00, 57.55);
CreateObject(1697, -453.90, 401.55, 3.93,   0.00, 0.00, 237.15);
CreateObject(1697, -451.50, 405.40, 3.93,   0.00, 0.00, 237.15);
CreateObject(980, -459.37, 404.75, 8.59,   0.00, 0.00, 58.04);
CreateObject(10767, -426.40, 334.89, -13.99,   0.00, 0.00, 310.36);
CreateObject(10767, -595.56, 348.54, -13.99,   0.00, 0.00, 310.36);
CreateObject(10767, -762.76, 361.66, -13.99,   0.00, 0.00, 310.36);
CreateObject(10767, -909.44, 373.64, -13.99,   0.00, 0.00, 310.36);
CreateObject(1697, -455.76, 368.89, 4.52,   0.00, 0.00, 144.11);
CreateObject(1697, -458.03, 365.63, 2.07,   0.00, 0.00, 144.11);
CreateObject(1697, -459.46, 363.72, 0.62,   0.00, 0.00, 143.06);
CreateObject(3749, -459.17, 363.52, 6.72,   0.00, 0.00, 353.68);
CreateObject(980, -459.30, 362.18, 3.76,   0.00, 0.00, 173.16);
CreateObject(987, -1275.68, 488.68, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1286.91, 488.79, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1298.81, 488.77, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1310.71, 488.79, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1322.63, 488.88, 17.00,   0.00, 0.00, 0.00);
CreateObject(987, -1334.20, 488.45, 18.55,   0.00, 0.00, 2.05);
CreateObject(987, -1346.08, 488.49, 18.55,   0.00, 0.00, 0.00);
CreateObject(987, -1366.63, 488.38, 20.00,   0.00, 0.00, 0.00);
CreateObject(987, -1378.59, 488.44, 20.00,   0.00, 0.00, 0.00);
CreateObject(987, -1390.39, 488.44, 20.00,   0.00, 0.00, 0.00);
CreateObject(987, -1399.07, 488.28, 16.97,   0.00, 0.00, 0.00);
CreateObject(987, -1410.76, 488.67, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1422.62, 488.75, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1434.63, 488.89, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1446.53, 488.95, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1458.54, 489.05, 17.17,   0.00, 0.00, 0.00);
CreateObject(987, -1467.44, 496.94, 17.17,   0.00, 0.00, 317.31);
CreateObject(987, -1467.48, 509.14, 17.17,   0.00, 0.00, 271.79);
CreateObject(987, -1456.76, 514.10, 17.17,   0.00, 0.00, 204.78);
CreateObject(987, -1444.74, 514.06, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1432.79, 514.15, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1420.58, 513.93, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1408.54, 513.89, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1396.63, 513.91, 17.17,   0.00, 0.00, 181.04);
CreateObject(987, -1408.54, 513.89, 12.50,   0.00, 0.00, 179.80);
CreateObject(987, -1408.55, 513.84, 8.22,   0.00, 0.00, 179.91);
CreateObject(987, -1397.03, 514.68, 8.22,   0.00, 0.00, 179.80);
CreateObject(987, -1397.09, 514.66, 12.59,   0.00, 0.00, 179.80);
CreateObject(987, -1417.74, 514.28, 8.22,   0.00, 0.00, 179.91);
CreateObject(987, -1417.74, 514.28, 12.62,   0.00, 0.00, 179.91);
CreateObject(987, -1384.74, 513.95, 17.17,   0.00, 0.00, 180.53);
//


CreateObject(987, -1372.67, 513.84, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1360.80, 513.97, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1348.67, 513.85, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1336.65, 513.83, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1324.80, 513.77, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1312.90, 513.86, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1300.91, 514.00, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1288.99, 514.08, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1277.09, 513.97, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1264.97, 513.94, 17.17,   0.00, 0.00, 180.53);
CreateObject(987, -1253.97, 509.05, 17.17,   0.00, 0.00, 156.90);
CreateObject(987, -1253.43, 497.22, 17.17,   0.00, 0.00, 93.52);
CreateObject(987, -1257.86, 489.51, 17.17,   0.00, 0.00, 61.29);
CreateObject(987, -1269.61, 488.55, 17.00,   0.00, 0.00, 5.19);
CreateObject(1697, -1460.35, 486.20, 15.56,   0.00, 0.00, 89.57);
CreateObject(1697, -1447.55, 499.97, 15.76,   0.00, 0.00, 89.83);
CreateObject(1697, -1451.38, 499.98, 13.19,   0.00, 0.00, 89.83);
CreateObject(1697, -1457.57, 500.12, 8.91,   0.00, 0.00, 89.83);
CreateObject(1697, -1454.91, 500.01, 10.92,   0.00, 0.00, 89.83);
CreateObject(1225, -1406.01, 503.27, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1400.95, 490.56, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1414.59, 499.35, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1415.88, 510.59, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1391.92, 510.77, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1372.42, 503.60, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1348.09, 513.54, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1334.25, 503.43, 10.00,   0.00, 0.00, 0.00);
CreateObject(987, -1339.14, 487.49, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1320.32, 502.83, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1309.33, 491.44, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1298.64, 498.99, 10.00,   0.00, 0.00, 0.00);
CreateObject(987, -1328.94, 514.65, 10.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1420.61, 504.05, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1413.96, 494.99, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1396.86, 507.35, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1374.97, 507.23, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1346.86, 507.49, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1313.70, 507.33, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1287.33, 505.69, 17.00,   0.00, 0.00, 0.00);
CreateObject(1225, -1285.55, 500.75, 17.00,   0.00, 0.00, 0.00);
//------------------------------------------------------------------------------
	//FBI
     CreateObject(19303, 1817.588745, -1288.175048, 33.362602, 0.000000, 0.000000, 0.000000); //VIP
     CreateObject(19303, 1817.588745, -1289.446044, 33.362602, 0.000000, 0.000000, 0.000000); //VIP
     CreateObject(19303, 1817.588745, -1291.156372, 33.362602, 0.000000, 0.000000, 0.000000); //VIP
     CreateObject(19303, 1817.588745, -1292.596923, 33.362602, 0.000000, 0.000000, 0.000000); //VIP
     CreateObject(19303, 1817.521484, -1291.391479, 34.588924, -89.699989, 0.799999, -0.800000); //VIP
     CreateObject(19303, 1817.589843, -1288.942504, 34.601764, -89.699989, 0.799999, -0.800000); //VIP
     CreateObject(19303, 1817.608886, -1288.272094, 34.605258, -89.699989, 0.799999, -0.800000); //VIP

    //WestCoastNiggaz
    AddStaticVehicleEx(487,1850.1999500,1424.8000500,19.4000000,180.0000000,3,-1,15); //Maverick
    CreateObject(3606,1847.9000200,1377.3000500,19.3000000,0.0000000,0.0000000,90.0000000); //object(bevbrkhus1) (1)
    CreateObject(9258,1846.8000500,1399.1999500,19.7000000,0.0000000,0.0000000,2.0000000); //object(preshoosml02_sfn) (1)
    CreateObject(9241,1850.1999500,1426.0999800,17.3000000,0.0000000,0.0000000,90.0000000); //object(copbits_sfn) (1)
    CreateObject(982,1893.6999500,1402.9000200,16.6000000,0.0000000,0.0000000,270.0000000); //object(fenceshit) (1)
    CreateObject(982,1919.3000500,1402.9000200,16.6000000,0.0000000,0.0000000,270.0000000); //object(fenceshit) (2)
    CreateObject(982,1944.9000200,1402.9000200,16.6000000,0.0000000,0.0000000,270.0000000); //object(fenceshit) (3)
    CreateObject(984,1964.0999800,1402.8000500,16.6000000,0.0000000,0.0000000,269.7500000); //object(fenceshit2) (1)
    CreateObject(983,1970.0000000,1402.8000500,16.6000000,0.0000000,0.0000000,270.0000000); //object(fenceshit3) (1)
    CreateObject(984,1973.1999500,1409.0999800,16.6000000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (2)
    CreateObject(984,1973.1999500,1421.8000500,16.6000000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (3)
    CreateObject(983,1971.0000000,1425.8000500,16.6000000,0.0000000,0.0000000,318.0000000); //object(fenceshit3) (2)
    CreateObject(984,1880.9000200,1396.5000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (4)
    CreateObject(983,1880.9000200,1386.9000200,16.6000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (3)
    CreateObject(982,1841.5000000,1430.1999500,16.6000000,0.0000000,0.0000000,0.2500000); //object(fenceshit) (4)
    CreateObject(982,1841.5999800,1404.6999500,16.6000000,0.0000000,0.0000000,0.2470000); //object(fenceshit) (5)
    CreateObject(982,1841.6999500,1379.0999800,16.6000000,0.0000000,0.0000000,0.2470000); //object(fenceshit) (devil)
    CreateObject(982,1841.8000500,1353.5000000,16.6000000,0.0000000,0.0000000,0.2470000); //object(fenceshit) (7)
    CreateObject(982,1841.6999500,1327.9000200,16.6000000,0.0000000,0.0000000,359.2470000); //object(fenceshit) (music)
    CreateObject(982,1841.4000200,1302.3000500,16.6000000,0.0000000,0.0000000,359.7420000); //object(fenceshit) (9)
    CreateObject(983,1841.4000200,1289.5000000,16.6000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (4)
    CreateObject(982,1854.0999800,1286.3000500,16.6000000,0.0000000,0.0000000,270.0000000); //object(fenceshit) (10)
    CreateObject(984,1866.8000500,1292.6999500,16.6000000,0.0000000,0.0000000,0.0000000); //object(fenceshit2) (5)
    CreateObject(982,1854.1999500,1443.0000000,16.6000000,0.0000000,0.0000000,270.0000000); //object(fenceshit) (11)
    CreateObject(983,1870.1999500,1443.0999800,16.6000000,0.0000000,0.0000000,90.2500000); //object(fenceshit3) (5)
    CreateObject(983,1873.4000200,1439.9000200,16.6000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (devil)
	//Svetko
	CreateObject(939,-666.5000000,939.7000100,13.6000000,0.0000000,0.0000000,270.0000000); //object(cj_df_unit) (1)
    CreateObject(3066,-662.4000200,967.4000200,12.2000000,0.0000000,0.0000000,0.0000000); //object(ammotrn_obj) (1)
    CreateObject(2912,-664.7999900,936.4000200,11.1000000,0.0000000,0.0000000,0.0000000); //object(temp_crate1) (1)
    CreateObject(925,-662.5000000,961.0000000,12.2000000,0.0000000,0.0000000,0.0000000); //object(rack2) (1)
    CreateObject(16769,-653.0000000,951.2000100,11.0000000,0.0000000,0.0000000,270.0000000); //object(desn2_ammun04) (1)
    CreateObject(3109,-660.5000000,952.7000100,12.4000000,0.0000000,0.0000000,0.0000000); //object(imy_la_door) (1)
    CreateObject(1348,-657.5000000,936.0999800,11.8000000,0.0000000,0.0000000,0.0000000); //object(cj_o2tanks) (1)
    CreateObject(1362,-656.0000000,936.0000000,11.7000000,0.0000000,0.0000000,0.0000000); //object(cj_firebin) (1)
    CreateObject(3934,-654.7000100,948.4000200,14.4000000,0.0000000,0.0000000,0.0000000); //object(helipad01) (1)
    CreateObject(12930,-707.2000100,913.5000000,12.3000000,0.0000000,0.0000000,0.0000000); //object(sw_pipepile02) (1)
    CreateObject(12930,-709.2999900,913.4000200,12.3000000,0.0000000,0.0000000,0.0000000); //object(sw_pipepile02) (2)
	//stas




	///////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////
	//Parking Francesko
	CreateObject(3524, 2119.8999023438, -1120.0999755859, 27.200000762939, 0, 0, 158);
    CreateObject(3524, 2132, -1123.9000244141, 27.299999237061, 0, 0, 157.99987792969);
	//Ms gates
    AddStaticVehicle(571,-2015.1163,-189.8117,34.6097,92.1621,1,1); //
	AddStaticVehicle(571,-2015.2705,-194.7037,34.6094,89.9868,1,1); //
	AddStaticVehicle(571,-2015.0585,-197.9404,34.6042,88.8800,1,1); //
	AddStaticVehicle(571,-2015.0430,-202.6302,34.6078,90.8253,1,1); //
	AddStaticVehicle(571,-2015.1022,-210.6577,34.6041,92.9241,1,1); //
	AddStaticVehicle(571,-2015.3706,-205.9786,34.6111,89.8608,1,1); //
	AddStaticVehicle(571,-2014.9637,-213.9974,34.6042,87.7270,1,1); //
	AddStaticVehicle(571,-2015.0435,-218.5059,34.6042,91.6678,1,1); //
	AddStaticVehicle(571,-2015.1951,-226.6665,34.6042,90.7008,1,1); //
	AddStaticVehicle(571,-2015.0299,-221.8561,34.6113,89.1029,1,1); //
	AddStaticVehicle(571,-2014.9659,-234.7296,34.6041,90.7660,1,1); //
	AddStaticVehicle(571,-2015.1367,-229.8625,34.6045,89.3833,1,1); //
	AddStaticVehicle(571,-2015.0643,-237.8226,34.6041,89.5613,1,1); //
	AddStaticVehicle(571,-2015.1262,-243.3755,34.6077,91.4665,1,1); //
	AddStaticVehicle(571,-2014.9210,-246.7386,34.6112,90.0516,1,1); //
	AddStaticVehicle(571,-2015.0757,-251.4688,34.6094,90.8480,1,1); //
	AddStaticVehicle(571,-2015.2972,-181.8909,34.6040,90.4871,1,1); //
	
	
	
	
	
	
	
	
	
	
	
	AddStaticVehicle(571,-2015.2700,-186.4756,34.6042,89.9268,1,1); //

	//tow parking
ADVERTP = CreatePickup(1239, 23, 1720.4912,-1670.6102,20.2244, -1);
KPICK = CreatePickup(1239, 23, 822.4429,4.1810,1004.1797, -1);
APICK = CreatePickup(1239, 23, 2568.3730,-1296.8691,1037.7734, -1);
S1PICK1 = CreatePickup(1239, 23, 2717.0093,-2872.5889,82.4868, -1);
S1PICK2 = CreatePickup(1239, 23, 2699.5886,-2849.0471,81.7668, -1);
S1PICK4 = CreatePickup(1239, 23, 2710.0598,-2850.3059,81.7090, -1);

PRESROBLS =  CreatePickup(1314 , 1, 2448.0120,-1962.7341,13.5469);

PRESROBLV = CreatePickup(1314 , 1, 2145.6499,2834.6777,10.8203);

PRESC = CreatePickup(1314 , 1, 2019.0809,1017.7520,996.8750);

AddStaticPickup(1275, 2, 286.6993,1398.4935,10.5859);

	AddStaticPickup(1240, 2, -1290.1664,	489.6818,	11.1953); // 1 KLETKA 1 HP
    AddStaticPickup(1242, 2, -1289.7841,	491.6197,	11.1953); // 3 KLETKA 1
    AddStaticPickup(1239, 2, 1939.6274,2184.3867,10.8203, -1); // 3 KLETKA 1
    //
    AddStaticPickup(1239, 23, 1838.5139,-1856.2627,13.3828, -1);
    AddStaticPickup(1239, 1, 1116.2616,-972.3250,42.7656, -1); // 3 KLETKA 1
    //
      DPICK = CreatePickup(1239, 1, -2653.1230,1410.3335,906.2734, -1); // 3 KLETKA 1
      BPICK = CreatePickup(1239, 1, 940.1111,5.1100,1000.9297, -1); // 3 KLETKA 1
      WEAPICK = CreatePickup(1239, 1, 295.8774,-38.3258,1001.5156, -1); // 3 KLETKA 1
      BURPICK = CreatePickup(1239, 1, 377.5456,-67.4353,1001.5078, -1); // 3 KLETKA 1
      SPICK = CreatePickup(1239, 1, -104.0631,-22.6785,1000.7188, -1); // 3 KLETKA 1
      GYMPICK = CreatePickup(1239, 1, 769.0439,7.9043,1000.7111, -1); // 3 KLETKA 1
      DMVPICK = CreatePickup(1239, 1, -2026.7814,-114.7252,1035.1719, -1); // 3 KLETKA 1
      STPICK = CreatePickup(1239, 1, 1215.2838,-12.9923,1000.9219, - 1);
      DROGAPICK = CreatePickup(1239, 1, 2534.4573,-1293.0288,1031.4219, -1); // 3 KLETKA 1
      BAPICK = CreatePickup(1239, 1, 421.4501,-80.2515,1001.8047, -1); // 3 KLETKA 1
      CPICK = CreatePickup(1239, 1, 207.1632,-129.1783,1003.5078, -1); // 3 KLETKA 1
 AddStaticPickup(1239, 1, -22.1244,-55.7031,1003.5469, -1); // 3 KLETKA 1
    //HP and Armor
	AddStaticPickup(1240, 2, 1782.4434,-1748.0691,52.4688); // 1 KLETKA 1 HP DM ARENA
    AddStaticPickup(1242, 2, 1782.4434,-1748.0691,52.4688); // 3 KLETKA 1 ARMOR DM ARENA
    AddStaticPickup(1242, 2, 2485.9353,1521.5189,10.8203); // Thugs armour
    AddStaticPickup(1240, 2, 2485.9353,1521.5189,10.8203); // Thugs hp
    AddStaticPickup(1242, 2, 3023.4614,-1991.4613,11.1438); // DF armour
    AddStaticPickup(1240, 2, 3023.4614,-1991.4613,11.1438); // DF hp
    AddStaticPickup(1242, 2, 2000.6582,1537.4537,13.5859); // LV korab armor
    AddStaticPickup(1240, 2, 2000.6112,1551.1150,13.6253); // LV korab hp
    //////////////////////////////////////////////////////////////////////////////////////////
    AddStaticPickup(1240, 2, 252.1292,-94.5513,3.5354); // 1 KLETKA 1 HP BALLAS
    AddStaticPickup(1242, 2, 252.1292,-94.5513,3.5354); // 3 KLETKA 1 ARMOR BALLAS
    AddStaticPickup(1240, 2, 672.9785,   -1275.8586,   13.6334); // 1 KLETKA 1 HP DA NANG BOYS
    AddStaticPickup(1242, 2, 672.9785,   -1275.8586,   13.6334); // 3 KLETKA 1 ARMOR DA NANG BOYS
    AddStaticPickup(1240, 2, -217.1782,80.0306,2.7234); // 1 KLETKA 1 HP VAGOS
    AddStaticPickup(1242, 2, -217.1782,80.0306,2.7234); // 3 KLETKA 1 ARMOR VAGOS
    AddStaticPickup(1240, 2, 1492.0919, -1639.5154,   15.0469); // 1 KLETKA 1 HP CIVILIAN
    AddStaticPickup(1242, 2, 1467.0596, -1639.6844,   15.0469); // 3 KLETKA 1 ARMOR CIVILIAN
    AddStaticPickup(1240, 2, 2744.1709,-2453.8655,13.8623); // 1 KLETKA 1 HP DeltaForce
    AddStaticPickup(1242, 2, 2744.1709,-2453.8655,13.8623); // 3 KLETKA 1 ARMOR Delta Force
    AddStaticPickup(1240, 2, 1688.3833,-1513.5802,13.5469); // 1 KLETKA 1 HP BS
    AddStaticPickup(1242, 2, 1688.3833,-1513.5802,13.5469); // 3 KLETKA 1 ARMOR BS
	//DERBY
	
	AddStaticVehicleEx(411,-269.0000000,-34.7000000,2.9000000,254.0000000,141,16,15); //Infernus
    CreateObject(3603,-254.8999900,-57.5000000,8.0000000,0.0000000,0.0000000,342.0000000); //object(bevman_law2) (2)
    CreateObject(3279,-254.7000000,-5.4000000,1.2000000,0.0000000,0.0000000,342.0000000); //object(a51_spottower) (1)
    CreateObject(3279,-223.3999900,-16.1000000,2.1000000,0.0000000,0.0000000,253.9990000); //object(a51_spottower) (2)
    CreateObject(3749,-237.5000000,-5.9000000,8.0000000,0.0000000,0.0000000,340.0000000); //object(clubgate01_lax) (1)
    CreateObject(987,-227.6000100,-8.8000000,2.1000000,0.0000000,0.0000000,342.0000000); //object(elecfence_bar) (1)
    CreateObject(987,-216.7000000,-12.4000000,2.1000000,0.0000000,0.0000000,340.0000000); //object(elecfence_bar) (2)
    CreateObject(987,-205.7000000,-16.4000000,2.1000000,0.0000000,0.0000000,308.0000000); //object(elecfence_bar) (3)
    CreateObject(987,-198.3999900,-25.6000000,2.1000000,0.0000000,0.0000000,272.0000000); //object(elecfence_bar) (4)
    CreateObject(987,-198.0000000,-37.4000000,2.1000000,0.0000000,0.0000000,250.0000000); //object(elecfence_bar) (5)
    CreateObject(987,-202.3000000,-48.3000000,2.1000000,0.0000000,0.0000000,252.0000000); //object(elecfence_bar) (devil)
    CreateObject(987,-205.8999900,-59.4000000,2.1000000,0.0000000,0.0000000,254.0000000); //object(elecfence_bar) (7)
    CreateObject(987,-209.3000000,-71.3000000,2.1000000,0.0000000,0.0000000,254.0000000); //object(elecfence_bar) (music)
    CreateObject(987,-230.8000000,-79.1000000,2.1000000,0.0000000,0.0000000,348.0000000); //object(elecfence_bar) (9)
    CreateObject(987,-242.7000000,-79.1000000,2.1000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (10)
    CreateObject(987,-254.2000000,-75.7000000,2.1000000,0.0000000,0.0000000,344.0000000); //object(elecfence_bar) (11)
    CreateObject(987,-265.6000100,-72.4000000,2.1000000,0.0000000,0.0000000,344.0000000); //object(elecfence_bar) (12)
    CreateObject(987,-265.7000100,-72.3000000,2.2000000,0.0000000,0.0000000,134.0000000); //object(elecfence_bar) (13)
    CreateObject(987,-273.7000100,-63.5000000,1.9000000,0.0000000,0.0000000,112.0000000); //object(elecfence_bar) (14)
    CreateObject(987,-278.2000100,-52.3000000,1.9000000,0.0000000,0.0000000,82.0000000); //object(elecfence_bar) (15)
    CreateObject(987,-276.6000100,-40.6000000,1.2000000,0.0000000,0.0000000,74.0000000); //object(elecfence_bar) (16)
    CreateObject(987,-273.5000000,-29.1000000,1.1000000,0.0000000,0.0000000,74.0000000); //object(elecfence_bar) (17)
    CreateObject(987,-270.3999900,-17.9000000,1.1000000,0.0000000,0.0000000,76.0000000); //object(elecfence_bar) (18)
    CreateObject(987,-267.5000000,-6.3000000,1.1000000,0.0000000,0.0000000,74.0000000); //object(elecfence_bar) (19)
    CreateObject(987,-264.1000100,5.0000000,1.4000000,0.0000000,0.0000000,342.0000000); //object(elecfence_bar) (20)
    CreateObject(987,-254.2000000,1.7000000,1.5000000,0.0000000,0.0000000,340.0000000); //object(elecfence_bar) (21)
    CreateObject(17934,-208.7000000,-33.3000000,4.5000000,0.0000000,0.0000000,342.0000000); //object(coochieghous) (1)
    CreateObject(9241,-221.6000100,-64.9000000,3.7000000,0.0000000,0.0000000,252.0000000); //object(copbits_sfn) (1)
    CreateObject(987,-212.8999900,-82.4000000,2.1000000,0.0000000,0.0000000,172.0000000); //object(elecfence_bar) (22)
    CreateObject(14467,-243.8000000,-24.2000000,4.9000000,0.0000000,0.0000000,160.0000000); //object(carter_statue) (1)
    CreateObject(3590,-198.3999900,80.0000000,4.8000000,0.0000000,0.0000000,157.9990000); //object(compfukhouse2) (1)
    CreateObject(3606,-188.6000100,52.4000000,5.5000000,0.0000000,0.0000000,250.0000000); //object(bevbrkhus1) (1)
    CreateObject(987,-230.3999900,102.7000000,0.9000000,0.0000000,0.0000000,346.0000000); //object(elecfence_bar) (23)
    CreateObject(987,-218.6000100,99.5000000,1.4000000,0.0000000,0.0000000,340.0000000); //object(elecfence_bar) (24)
    CreateObject(987,-207.3000000,95.4000000,1.8000000,0.0000000,0.0000000,342.0000000); //object(elecfence_bar) (25)
    CreateObject(987,-196.0000000,91.7000000,2.1000000,0.0000000,0.0000000,342.0000000); //object(elecfence_bar) (26)
    CreateObject(987,-184.5000000,88.0000000,2.1000000,0.0000000,0.0000000,338.0000000); //object(elecfence_bar) (27)
    CreateObject(987,-173.5000000,83.4000000,2.1000000,0.0000000,0.0000000,284.0000000); //object(elecfence_bar) (28)
    CreateObject(987,-170.8999900,72.2000000,2.1000000,0.0000000,0.0000000,254.0000000); //object(elecfence_bar) (29)
    CreateObject(987,-174.1000100,60.8000000,2.1000000,0.0000000,0.0000000,252.0000000); //object(elecfence_bar) (30)
    CreateObject(987,-177.7000000,49.5000000,2.1000000,0.0000000,0.0000000,250.0000000); //object(elecfence_bar) (31)
    CreateObject(987,-181.8999900,38.3000000,2.1000000,0.0000000,0.0000000,214.0000000); //object(elecfence_bar) (32)
    CreateObject(987,-203.3999900,32.3000000,2.1000000,0.0000000,0.0000000,358.0000000); //object(elecfence_bar) (33)
    CreateObject(987,-213.8999900,34.2000000,2.1000000,0.0000000,0.0000000,350.0000000); //object(elecfence_bar) (34)
    CreateObject(3749,-223.7000000,36.8000000,7.9000000,0.0000000,0.0000000,340.0000000); //object(clubgate01_lax) (2)
    CreateObject(987,-242.1000100,47.2000000,1.3000000,0.0000000,0.0000000,322.0000000); //object(elecfence_bar) (35)
    CreateObject(987,-252.3000000,53.1000000,0.9000000,0.0000000,0.0000000,332.0000000); //object(elecfence_bar) (36)
    CreateObject(987,-247.3999900,50.5000000,1.1000000,0.0000000,0.0000000,154.0000000); //object(elecfence_bar) (37)
    CreateObject(987,-255.6000100,66.9000000,0.6000000,0.0000000,0.0000000,70.0000000); //object(elecfence_bar) (38)
    CreateObject(987,-251.3999900,77.8000000,0.6000000,0.0000000,0.0000000,66.0000000); //object(elecfence_bar) (39)
    CreateObject(987,-246.3000000,88.7000000,0.6000000,0.0000000,0.0000000,66.0000000); //object(elecfence_bar) (40)
    CreateObject(987,-241.2000000,99.5000000,0.6000000,0.0000000,0.0000000,16.0000000); //object(elecfence_bar) (41)
    CreateObject(9241,-239.3994100,64.7998000,2.2000000,0.0000000,0.0000000,159.9990000); //object(copbits_sfn) (2)
    CreateObject(987,-257.7999900,55.7000000,0.7000000,0.0000000,0.0000000,80.0000000); //object(elecfence_bar) (42)
    CreateObject(1358,-216.8000000,-6.7000000,3.3000000,0.0000000,0.0000000,338.0000000); //object(cj_skip_rubbish) (1)
    CreateObject(3640,-219.1000100,85.4000000,6.5000000,0.0000000,0.0000000,340.0000000); //object(glenphouse02_lax) (1)
    CreateObject(6285,-124.4000000,5.8000000,7.9000000,0.0000000,0.0000000,250.0000000); //object(santahouse04_law2) (1)
    CreateObject(9241,-126.7000000,54.5000000,3.4000000,0.0000000,0.0000000,340.0000000); //object(copbits_sfn) (3)
    CreateObject(3279,-155.5000000,-16.7000000,2.1000000,0.0000000,0.0000000,336.0000000); //object(a51_spottower) (3)
    CreateObject(987,-258.1000100,55.2000000,0.7000000,0.0000000,0.0000000,254.0000000); //object(elecfence_bar) (43)
    CreateObject(3749,-264.5000000,28.9000000,6.4000000,0.0000000,0.0000000,72.0000000); //object(clubgate01_lax) (3)
    CreateObject(987,-260.5000000,46.4000000,0.7000000,0.0000000,0.0000000,254.0000000); //object(elecfence_bar) (44)
    CreateObject(987,-267.7999900,11.0000000,0.8000000,0.0000000,0.0000000,280.0000000); //object(elecfence_bar) (45)
    CreateObject(987,-268.0000000,11.0000000,1.0000000,0.0000000,0.0000000,86.0000000); //object(elecfence_bar) (46)
    //текстове и икони
    format(string, sizeof(string), "{FF0000}Ако искате да попитате нещо за сървъра използвайте {FFFFFF}/n");
	 Create3DTextLabel(string,0xFFFFFFFF,1262.5499,-2008.2192,59.3471,20,0,0);
	 format(string, sizeof(string), "{FF0000}Ако искате да видите някое място в сървъра използвайте {FFFFFF}/gps");
	 Create3DTextLabel(string,0xFFFFFFFF,1262.5529,-2017.1658,59.3470,20,0,0);
	 format(string, sizeof(string), "{FF0000}Ако искате да видите някое място в сървъра използвайте {FFFFFF}/gps");
	 Create3DTextLabel(string,0xFFFFFFFF,1195.0001,-2036.2994,69.0078,20,0,0);
	 
     format(string, sizeof(string), "{FF0000}Натисни {FFFFFF}F/ENTER{FF0000}за да вземеш флага");
	 Create3DTextLabel(string,0xFFFFFFFF,-976.6305,1046.3048,1352.6598,15,0,0);
	      format(string, sizeof(string), "{FF0000}Натисни {FFFFFF}F/ENTER{FF0000}за да вземеш флага");
	 Create3DTextLabel(string,0xFFFFFFFF,-1130.3014,1076.2084,1353.4224,10,0,0);
    //Офиси
format(string, sizeof(string), "{003399}[ Бензиностанция ]\n{FF0000}%d/500 литра\n{7FFFD4}{6E2500}1 литър {FFFFFF}= {006600}1 долар\n{FF3300}Напиши {FFFF00}/refuel {FF3300}за да заредиш", F1);
mylabelb1 = Create3DTextLabel(string,0xFFFFFFFF, 2149.8328,2748.2905,10.5474, 20, 0);
format(string, sizeof(string), "{003399}[ Бензиностанция ]\n{FF0000}%d/500 литра\n{7FFFD4}{6E2500}1 литър {FFFFFF}= {006600}1 долар\n{FF3300}Напиши {FFFF00}/refuel {FF3300}за да заредиш", F2);
mylabelb2 = Create3DTextLabel(string,0xFFFFFFFF, 1944.1652,-1769.8917,13.1157, 20, 0);
format(string, sizeof(string), "{003399}[ Бензиностанция ]\n{FF0000}%d/500 литра\n{7FFFD4}{6E2500}1 литър {FFFFFF}= {006600}1 долар\n{FF3300}Напиши {FFFF00}/refuel {FF3300}за да заредиш", F3);
mylabelb3 = Create3DTextLabel(string,0xFFFFFFFF, 2116.6611,922.4604,10.5474, 20, 0);
format(string, sizeof(string), "{003399}[ Бензиностанция ]\n{FF0000}%d/500 литра\n{7FFFD4}{6E2500}1 литър {FFFFFF}= {006600}1 долар\n{FF3300}Напиши {FFFF00}/refuel {FF3300}за да заредиш", F4);
mylabelb4 = Create3DTextLabel(string,0xFFFFFFFF, 2204.3835,2473.3994,10.5474, 20, 0);

            	format(string, sizeof(string), "{00FF00}Етаж 1\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner1]);
 mylabel1 = Create3DTextLabel(string,0xFFFFFFFF,1786.6724,-1300.2299,22.2109,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 2\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner2]);
	mylabel2 = Create3DTextLabel(string,0xFFFFFFFF,1786.7642,-1300.4375,27.6719,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 3\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner3]);
	mylabel3 = Create3DTextLabel(string,0xFFFFFFFF,1786.6597,-1300.5477,33.1250,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 4\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner4]);
	mylabel4 = Create3DTextLabel(string,0xFFFFFFFF,1786.7040,-1300.1711,38.5781,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 5\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner5]);
	mylabel5 = Create3DTextLabel(string,0xFFFFFFFF,1786.5302,-1300.5763,44.0391,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 6\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner6]);
	mylabel6 = Create3DTextLabel(string,0xFFFFFFFF,1786.4613,-1300.7379,49.4453,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 7\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner7]);
	mylabel7 = Create3DTextLabel(string,0xFFFFFFFF,1786.6995,-1300.5914,54.9063,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 8\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner8]);
	mylabel8 = Create3DTextLabel(string,0xFFFFFFFF,1786.4866,-1301.0718,60.3594,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 9\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner9]);
	mylabel9 = Create3DTextLabel(string,0xFFFFFFFF,1786.3623,-1300.9592,65.8125,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 10\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner10]);
	mylabel10 = Create3DTextLabel(string,0xFFFFFFFF,1786.6277,-1300.7668,71.2734,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 11\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner11]);
	mylabel11 = Create3DTextLabel(string,0xFFFFFFFF,1786.4510,-1300.7397,76.6719,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 12\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner12]);
	mylabel12 = Create3DTextLabel(string,0xFFFFFFFF,1786.5739,-1300.6423,82.1328,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 13\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner13]);
	mylabel13 = Create3DTextLabel(string,0xFFFFFFFF,1786.7006,-1300.0922,87.5859,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 14\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner14]);
	mylabel14 = Create3DTextLabel(string,0xFFFFFFFF,1786.5331,-1300.3997,93.0391,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 15\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner15]);
	mylabel15 = Create3DTextLabel(string,0xFFFFFFFF,1786.9436,-1300.6741,98.5000,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 16\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner16]);
	mylabel16 = Create3DTextLabel(string,0xFFFFFFFF,1786.6553,-1300.7542,103.8984,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 17\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner17]);
	mylabel17 = Create3DTextLabel(string,0xFFFFFFFF,1786.9751,-1300.4619,109.3594,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 18\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner18]);
	mylabel18 = Create3DTextLabel(string,0xFFFFFFFF,1786.3969,-1300.7129,114.8125,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 19\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner19]);
	mylabel19 = Create3DTextLabel(string,0xFFFFFFFF,1786.6506,-1300.6418,120.2656,15,0,0);
	    	format(string, sizeof(string), "{00FF00}Етаж 20\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner20]);
	mylabel20 = Create3DTextLabel(string,0xFFFFFFFF,1786.6038,-1300.0222,125.7266,100,0,0);


    //Офиси
    //Вип банда
	
	Create3DTextLabel("{FF0000}За да вдигате левел трябва да сабирате {FFFFFF}EP\n{FF0000}На всеки кръгъл час има {FFFFFF}Payday{FF0000} и полочавате EP\nEP може да се събира от обир на {FFFFFF}банка,банкомат{FF0000}\n От {FFFFFF}/stats {FF0000}може да видите колко EP имате\nЗа да вдигнете вашия левел напишете {FFFFFF}/buylevel", 0xFFFFFFFF,1210.1042,-2037.2174,69.0078, 60, 0);
	Create3DTextLabel("{FF0000}Можете да печелите повече EP на PayDay чрез Ep Skill можете да го вдигнете чрез {FFFFFF}/buyes\n{FF0000}Можете да печелите повече пари на PayDay чрез Money Skill можете да го вдигнете чрез {FFFFFF}/buyms", 0xFFFFFFFF,1174.9714,-2036.8893,77.3364, 60, 0);
   	Create3DTextLabel("{FF0000}За да видите командите напишете {FFFFFF}/help", 0xFFFFFFFF,1243.1666,-2015.3679,59.9084, 60, 0);
	Create3DTextLabel("{FF0000}За да видите VIP командите напишете {FFFFFF}/viphelp", 0xFFFFFFFF,1177.2354,-2037.1185,69.1484, 20, 0);
	
	Create3DTextLabel("{FF0000}За да видите VIP командите напишете {FFFFFF}/viphelp", 0xFFFFFFFF,-1420.4281,-298.2666,14.0000, 30, 0);
	Create3DTextLabel("{FF0000}За да видите VIP командите напишете {FFFFFF}/viphelp", 0xFFFFFFFF,1704.7219,1448.5164,10.8181, 30, 0);
	Create3DTextLabel("{FF0000}За да видите VIP командите напишете {FFFFFF}/viphelp", 0xFFFFFFFF,1539.3873,-1667.1797,13.5469, 30, 0);
	Create3DTextLabel("{FF0000}Форум: {FFFFFF}http://gtagpbg.freeforums.org/index.php", 0xFFFFFFFF,1539.3798,-1675.9524,13.5469, 30, 0);
	Create3DTextLabel("{FF0000}Форум: {FFFFFF}http://gtagpbg.freeforums.org/index.php", 0xFFFFFFFF,1705.9453,1457.3267,10.8159, 30, 0);
	Create3DTextLabel("{FF0000}Форум: {FFFFFF}http://gtagpbg.freeforums.org/index.php", 0xFFFFFFFF,-1417.3303,-301.0280,14.0000, 30, 0);
	Create3DTextLabel("{FF0000}За да отидете на арената напишете {FFFFFF}/dmon", 0xFFFFFFFF,1239.5103,-2052.3049,59.9119, 60, 0);
	Create3DTextLabel("{FF0000}Форум: {FFFFFF}http://gtagpbg.freeforums.org/index.php", 0xFFFFFFFF,1258.6797,-2028.1857,59.4577, 60, 0);
	AddStaticPickup(1242, 1, 1258.6797,-2028.1857,59.4577, 0 );
	AddStaticPickup(1240, 1, 1258.6797,-2028.1857,59.4577, 0 );
	//
	//
		Create3DTextLabel("{FF0000}Ако имаш офис ще получаваш бонуси на PayDay", 0xFFFFFFFF,1799.0345,-1305.6024,13.6880, 10, 0);
			Create3DTextLabel("{FF0000}Напиши {FFFFFF}/plate{FF0000} за да смениш номера на твоята кола", 0xFFFFFFFF,1838.5139,-1856.2627,13.3828, 10, 0);
	//
		Create3DTextLabel("{FF0000}Los Santos {FFFFFF}(LS)", 0xFFFFFFFF,246.8896,64.2665,1003.6406, 10, 0);
		Create3DTextLabel("{FF0000}Las Venturas{FFFFFF}(LV)", 0xFFFFFFFF,242.9843,66.4887,1003.6406, 10, 0);
		Create3DTextLabel("{FF0000}San Fierro {FFFFFF}(SF)", 0xFFFFFFFF,246.3809,87.1163,1003.6406, 10, 0);
		//
				Create3DTextLabel("{FF0000}Вилна зона", 0xFFFFFFFF,236.6389,75.7744,1005.0391, 10, 0);
		Create3DTextLabel("{FF0000}DM Bizz", 0xFFFFFFFF,255.1478,74.2586,1003.6406, 10, 0);
	//
	Create3DTextLabel("Thug Life", 0x003366FF,478.5204,-1499.1995,20.4792, 20, 0);
	
	Create3DTextLabel("{990099}Напиши {FFFFFF}/buy{990099} за да купиш въдица или стръв \nНапиши {FFFFFF}/sellfish{990099} за да продадеш рибата\nЕдин килограм риба - {339933}$10", 0xFFFFFFFF,-1353.8081,2057.5544,53.1172, 10, 0);
	//
	Create3DTextLabel("{FF0000}За да почнеш да ловиш риба трябва да въдица и стръв от къщата срещу теб.\nПосле трябва да си до кея или в лодката за да ловиш риба.\nЗа да метнеш въдицата напиши {FFFFFF}/fish{FF0000},За да видиш твоите риби напиши {FFFFFF}/fishes{FF0000}\nЗа да изхвъриш рибa напиши {FFFFFF}/putback{FF0000},за да изхвъриш всички риби напиши {FFFFFF}/putallback", 0xFFFFFFFF,-1334.1389,2057.4744,53.0301, 10, 0);
	
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}F/ENTER{FF0000} за да отидеш на Coalmine Job", 0xFFFFFFFF,1833.5729,-1274.0002,131.7344, 10, 0);
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}F/ENTER{FF0000} за да отидеш на Bus Job", 0xFFFFFFFF,1832.0045,-1315.3163,131.7344, 10, 0);
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}F/ENTER{FF0000} за да отидеш на Sweep Job", 0xFFFFFFFF,1804.6072,-1308.5834,131.9282, 10, 0);
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}F/ENTER{FF0000} за да отидеш на Pizza Job", 0xFFFFFFFF,1775.9120,-1309.5533,131.7344, 10, 0);
	Create3DTextLabel("{DD00E8}Bulgarian Mafia Къща\n{FF0000}Натисни {FFFFFF}Натисни Enter{FF0000} за да се телепортираш", 0xFFFFFFFF,952.5439,-909.6124,45.7656, 10, 0);
	Create3DTextLabel("{DD00E8}Bulgarian Mafia Паркинг\n{FF0000}Натисни {FFFFFF}Натисни Enter{FF0000} за да се телепортираш", 0xFFFFFFFF,1283.7997,-816.6618,84.0951, 10, 0);
	Create3DTextLabel("{DD00E8}Bulgarian Mafia's Gunmachine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,1273.2969,-780.9787,1089.9375, 10, 0);
	Create3DTextLabel("{39DBAB}Asian Boys's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,1690.0508,-2125.0088,13.5469, 10, 0);
	Create3DTextLabel("{FF0000}VIP's Gun Machine\nНатисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,1237.0752,-2004.5337,59.8660, 10, 0);
	Create3DTextLabel("{30BA1E}Grove Street Families's Gunmachine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,2497.1770,-1702.9525,1014.7422, 10, 0);
	Create3DTextLabel("{949494}Boyz N The Hood's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,1997.9189,-1115.3516,26.7737, 10, 0);
	Create3DTextLabel("{004CFF}GPD's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,252.25920, 70.95690, 1003.72852, 10, 0);
	Create3DTextLabel("{BC73DE}Rolling Heights Ballas's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,316.7301,1119.6609,1083.8828, 10, 0);
	Create3DTextLabel("{7D9DD4}Yakuza's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,1655.5551,-1655.4983,22.5156, 10, 0);
	Create3DTextLabel("{224ABF}Vinewood Cripz's Gun Machine{FF0000}\nНатисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,134.6863,1381.5865,1088.3672, 10, 0);
	Create3DTextLabel("{275BCC}Thug Life's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,134.6391,1380.8467,1088.3672, 10, 1);
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}/buy{FF0000} за да купиш предмет", 0xFFFFFFFF,-22.1419,-55.6998,1003.5469, -1,0);
	Create3DTextLabel("{FFFF00}Los Santos Vagos's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,2544.5273,-1031.2401,69.5779, 10, 0);
	//
		Create3DTextLabel("{0F9AF7}Varrios Los Aztecas's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,259.1709,1243.1801,1084.2653, 10, 0);
	Create3DTextLabel("{FF0000}Ако си изберете кола пишете на {FFFFFF}Администратор.{FF0000}\n Full Tune може да се слага на всички коли.\nМожете да си изберете друг вид превозно средство\nМожете да си вземете превозно средство чрез канене на хора.", 0xFFFFFFFF,-1475.5341,917.6169,1040.7764, 10, 0);
	//
	//
		Create3DTextLabel("{9E2C2C}Da Nang Boys's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,2597.7771,1900.6121,11.0312, 10, 0);
	Create3DTextLabel("{E60000}Sons Of Anarchy's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,-767.8986,2765.4028,45.8556, 10, 0);
	Create3DTextLabel("{305ACF}Mara Salvatrucha 13's Gun Machine\n{FF0000}Натисни {FFFFFF}Num 0{FF0000} за да си вземеш оръжие", 0xFFFFFFFF,-209.2619,2713.0957,62.9794, 5, 0);
	DPRES1 = CreatePickup(1318, 1, 2690.7612,-1710.3971,11.8478, 0 );
	DPRES2 = CreatePickup(1318, 1, -1398.103515,937.631164,1036.479125, 1 );
	//
	
		DPRES38 = CreatePickup(1318, 1, 2526.0879,-1060.6805,69.9708, 0 );
	//
	//atmpres
		ATMPRES1 = CreatePickup(1274, 1, 1239.9829,-2041.6614,59.9389, 0 );
			ATMPRES2 = CreatePickup(1274, 1, 1538.0908,-1616.5916,13.5469, 0 );
				ATMPRES3 = CreatePickup(1274, 1, 2140.0640,-1158.2324,23.9922, 0 );
					ATMPRES4 = CreatePickup(1274, 1, 2194.0444,1986.1279,12.2969, 0 );
						ATMPRES5 = CreatePickup(1274, 1, 1718.4507,1315.4329,10.8125, 0 );
							ATMPRES6 = CreatePickup(1274, 1, 256.8503,67.3138,1003.6406, 0 );
							PRESROB1 = CreatePickup(1274, 1, 1713.8235,-1641.7657,27.2109, -1 );
							BANKROB = CreatePickup(1274, 1, 225.1788,121.2028,999.0782, -1 );
							PRESROB1 = CreatePickup(1274, 1, 2017.6198,1912.9371,12.3274, 0 );
							
							RIFALS2 = CreatePickup(1318, 1, -2174.0459,974.1130,80.0000, 0 );
							RIFASF = CreatePickup(1318, 1, 849.8866,-1519.9801,14.3533, 0 );
								
	//atmpres
	DPRES7 = CreatePickup(1318, 1, 2562.1140,-1034.3037,69.8692, 0 );
	DPRES3 = CreatePickup(1318, 1, 2693.0588,-1707.4850,11.8478, 0 );
	DPRES4 = CreatePickup(1318, 1, -1444.645507,-664.526000,1053.572998, 1 );
	//
	DPRES5 = CreatePickup(1318, 1, 2695.6021,-1704.9226,11.8438, 0 );
	DPRES6 = CreatePickup(1318, 1, -975.975708,1060.983032,1345.671875, 1 );
	//
	DPRES8 = CreatePickup(1318, 1, 286.800994,-82.547599,1001.515625, 1 );
	OPRES = CreatePickup(1318, 1, 1799.0345,-1305.6024,13.6880, 0 );
	//RIFAHEAL
	hp12 = CreatePickup(1240, 1, 2451.8647,-1702.0725,1014.0477);
    hp12 = CreatePickup(1242, 1, 2451.8647,-1702.0725,1014.0477);
	hp14 = CreatePickup(1240, 1, 2543.5596,-1031.1836,69.5763);
    hp14 = CreatePickup(1242, 1, 2543.5596,-1031.1836,69.5763);
	//ThugsHeal
	hp13 = CreatePickup(1240, 1, 150.4802,1370.3835,1084.3933, 1 );
    hp13 = CreatePickup(1242, 1, 150.4802,1370.3835,1084.3933, 1 );
	//CRIPZHEAL
	hp11 = CreatePickup(1240, 1, 150.4802,1370.3835,1084.3933, 0);
    hp11 = CreatePickup(1242, 1, 150.4802,1370.3835,1084.3933, 0);
    	hp19 = CreatePickup(1242, 1, 262.9112,1240.0040,1084.7811);
	hp19 = CreatePickup(1240, 1, 262.9112,1240.0040,1084.7811);
	hp15 = CreatePickup(1242, 1, 1695.5049,-2125.8367,13.8101);
	hp15 = CreatePickup(1240, 1, 1695.5049,-2125.8367,13.8101);
		hp18 = CreatePickup(1242, 1, 2622.2351,1824.5109,11.0234);
	hp18 = CreatePickup(1240, 1, 2622.2351,1824.5109,11.0234);
	//YAKUZAHEAL
	hp9 = CreatePickup(1242, 1, 1652.2205,-1655.1176,22.5156);
	hp9 = CreatePickup(1240, 1, 1652.2205,-1655.1176,22.5156);
	
	hp20 = CreatePickup(1242, 1, 1113.9463,-972.1600,42.7656);
	hp20 = CreatePickup(1240, 1, 1113.9463,-972.1600,42.7656);
	
	hp16 = CreatePickup(1242, 1, 316.3513,1118.4603,1083.8828);
	hp16 = CreatePickup(1240, 1, 316.3513,1118.4603,1083.8828);
			//Aztec House
	DPRES9 = CreatePickup(1318, 1, 225.63,1022.48,1084.07, 13 );
	DPRES10 = CreatePickup(1318, 1, 743.3658,-509.3188,18.0129, 4 );
		//Aztec House
	DPRES11 = CreatePickup(1318, 1, -2182.6455,956.6108,80.0000, 13 );
	DPRES12 = CreatePickup(1318, 1, -2182.6455,956.6108,80.0000, 4 );
	
	PRESLX = CreatePickup(1318, 1, 140.2747,1365.9690,1083.8594, 0 );
	PRESLX = CreatePickup(1318, 1, 134.6391,1371.5570,1083.8650, 0 );
	PRESBX = CreatePickup(1318, 1, 2814.6021,973.5005,10.7500, 0 );
	
	
	
	PRESLX1 = CreatePickup(1318, 1, 1958.2582,953.2600,10.8203, 0 );
	PRESBX1 = CreatePickup(1318, 1, 134.8058,1381.4907,1083.8654, 0 );
	
	//
	GPRESDRF2 = CreatePickup(1318, 1, 2543.462646,-1308.379882,1026.728393, 0 );
	//
		//Aztec Biz
                GPPRES17 = CreatePickup(1318, 1, 230.5144,72.9046,1005.0391, 0 );
				GPPRES16 = CreatePickup(1318, 1, -1669.0559,694.2009,30.6016, 0 );
		GPPRES15 = CreatePickup(1318, 1, -2253.5408,2345.6428,4.9755, 0 );
					GPPRES7 = CreatePickup(1318, 1, 219.3449,69.4404,1005.0391, 0 );
				GPPRES8 = CreatePickup(1318, 1, 1556.7656,-1674.5566,28.3955, 0 );
				BPRES1 = CreatePickup(1318, 1, 2159.9390,-1489.3600,26.6606, 0 );
				BPRES2 = CreatePickup(1318, 1, 1967.4453,1755.8560,12.7437, 0 );
				GPPRES13 = CreatePickup(1318, 1, 258.5221,77.3794,1003.6406, 0 );
				CreatePickup(1318, 1, -1392.0831,2111.2209,42.1281, 0 );
				GPPRES14 = CreatePickup(1318, 1, 307.3765,1792.3430,17.6406, 0 );
				
									GPPRES9 = CreatePickup(1318, 1, 1481.2998,-1790.0768,156.7533, 0 );
				GPPRES10 = CreatePickup(1318, 1, 218.0514,80.2876,1005.0391, 0 );
				
				GPPRES11 = CreatePickup(1318, 1, 253.7656,76.9244,1003.6406, 0 );
				GPPRES12 = CreatePickup(1318, 1, 2177.7581,2415.7017,73.0339, 0 );
				
			GPPRES1 = CreatePickup(1318, 1, 235.0908,72.2860,1005.0391, 0 );
				GPPRES2 = CreatePickup(1318, 1, 231.1777,80.3963,1005.0391, 0 );
					GPPRES3 = CreatePickup(1318, 1, 238.4406,79.9509,1005.0391, 0 );
					
					OFISPRES1 = CreatePickup(1318, 1, 1806.0243,-1303.5229,125.7266, 0 );
					OFISPRES2 = CreatePickup(1318, 1, 1808.4916,-1303.5211,131.7344, 0 );
					IKONKA2 = CreatePickup(1318, 1, -1134.7147,1079.4254,1353.4695, 0 );
					IKONKA1 = CreatePickup(1318, 1, -972.2311,1042.1752,1352.7073, 0 );
								GPPRES4 = CreatePickup(1318, 1, 1568.6071,-1690.0642,6.2188, 0 );
				GPPRES5 = CreatePickup(1318, 1, 2294.0452,2459.6907,10.8203, 0 );
					GPPRES6 = CreatePickup(1318, 1, -1615.3138,683.7523,7.1875, 0 );
					
	DPRES13 = CreatePickup(1318, 1, 1412.639892,-1.787510,1000.924377, 13 );
	DPRES14 = CreatePickup(1318, 1, 743.3658,-509.3188,18.0129, 4 );
	//SoA Dm Bizz
	DPRES15 = CreatePickup(1318, 1, -780.5298,2745.5205,45.8556, 0 );
	DPRES16 = CreatePickup(1318, 1, 1412.6399,-1.7875,1000.9244, 4 );
	//Rock housee
	DPRES17 = CreatePickup(1318, 1, -789.7004,2756.4951,48.2556, 0 );
	DPRES18 = CreatePickup(1318, 1, 2324.3811,-1149.5460,1050.7101, 2 );
	//BS Dm Bizz
	DPRES19 = CreatePickup(1318, 1, 1689.5876,-1506.3584,13.5469, 0 );
	DPRES20 = CreatePickup(1318, 1, 1412.6399,-1.7875,1000.9244, 1 );
	//BS housee
	DPRES21 = CreatePickup(1318, 1, 937.2368,1731.8171,8.8516, 0 );
	DPRES22 = CreatePickup(1318, 1, 2324.3811,-1149.5460,1050.7101, 3 );
	BOYZPRES = CreatePickup(1318, 1, 2000.0747,-1114.3497,27.1250, 3 );
//
	DPRES39 = CreatePickup(1318, 1, 1879.1912,2339.4458,10.9799, 0 );
	DPRES40 = CreatePickup(1318, 1, 2549.2017,-1032.2946,69.5789, 0 );
//
//MS13
	DPRES41 = CreatePickup(1318, 1, -227.2777,2711.9463,62.9766, 0 );
	DPRES42 = CreatePickup(1318, 1, -242.7389,2711.9526,62.6875, 0 );
//
	GPRESBLV = CreatePickup(1318, 1, 1703.8574,1454.8646,10.8103, 0 );
	GPRESBSF = CreatePickup(1318, 1, -1412.8531,-304.3645,14.1411, 0 );
//
	GPRESCAR = CreatePickup(1318, 1, 1411.5188,-1699.5966,13.5395, 0 );
	GPRESBIZ = CreatePickup(1318, 1, 1227.6368,-2068.6443,62.9998, 0 );
	GPRESPIZZA = CreatePickup(1318, 1, 1213.9854,-2004.7733,68.9114, 0 );
	GPRESLV = CreatePickup(1318, 1, 1237.2063,-2032.9989,61.0313, 0 );
	GPRESSF = CreatePickup(1318, 1, 1237.3722,-2041.5865,61.0313, 0 );
	GPRESBANK = CreatePickup(1318, 1, 1233.6399,-2068.7056,60.8984, 0 );
	GPRESSWEEP = CreatePickup(1318, 1, 1234.1213,-2004.6260,60.8984, 0 );
	GPRESKNIJKA = CreatePickup(1318, 1, 1220.8024,-2004.9557,65.1019, 0 );
	GPRES247 = CreatePickup(1318, 1, 1220.8024,-2004.9557,65.1019, 0 );
	
	PRESPDUTY = CreatePickup(1318, 1, 256.9983,63.6520,1003.6406, 0 );
	PRESAHOUSE1 = CreatePickup(1318, 1, 260.85,1237.24,1084.26, 0 );
	PRESAHOUSE2 = CreatePickup(1318, 1, 742.8058,-495.6140,18.0129, 0 );
	
		ASH11 = CreatePickup(1318, 1, 1673.8032,-2122.2019,14.1460, 0 );
	
		PRESABIZ1 = CreatePickup(1318, 1, 768.2079,-503.9309,18.0129, 0 );
	
	GPRESBOINI = CreatePickup(1318, 1, 1228.9353,-2041.5234,63.1250, 0 );
	GPRESCALIG = CreatePickup(1318, 1, 1228.7484,-2031.2257,63.1326, 0 );
	GPRESBUS = CreatePickup(1318, 1, 1228.0105,-2004.7490,62.9947, 0 );
	GPRESHILI = CreatePickup(1318, 1, 1221.4655,-2068.5159,65.1010, 0 );
	GPRESCEMENT = CreatePickup(1318, 1, 1213.8857,-2068.7410,68.9648, 0 );
	
	GPRESVZ = CreatePickup(1318, 1, 236.6389,75.7744,1005.0391, 0 );
	GPRESTOWT = CreatePickup(1318, 1, 1224.3289,-2041.8345,65.2266, 0 );
//
	RISKT = CreatePickup(1318, 1, 1066.6388,1018.3427,11.0000, 0 );
	RISK = CreatePickup(1318, 1, 1042.7651,1010.8513,11.0000, 0 );
	GPRESDMB = CreatePickup(1318, 1, 255.1478,74.2586,1003.6406, 0 );
	BGPRES1 = CreatePickup(1318, 1, 1264.4801,-779.1598,1091.9063, 0 );
	BGPRES2 = CreatePickup(1318, 1, 1283.7997,-816.6618,84.0951, 0 );
	RIFADMB = CreatePickup(1318, 1, 2451.2578,-1685.6801,1013.5078, 0 );
	RIFALS = CreatePickup(1318, 1, 2468.4939,-1698.2010,1013.5078, 0 );
	RIFALV = CreatePickup(1318, 1, 2455.5637,-1706.4713,1013.5078, 0 );
	FUEL1 = CreatePickup(1318, 1, 2149.8328,2748.2905,10.5474, 0 );
	FUEL2 = CreatePickup(1318, 1, 1944.1652,-1769.8917,13.1157, 0 );
	FUEL3 = CreatePickup(1318, 1, 2116.6611,922.4604,10.5474, 0 );
	FUEL4 = CreatePickup(1318, 1, 2204.3835,2473.3994,10.5474, 0 );
	BANK1 = CreatePickup(1274, 1,2315.5767,-0.7740,26.7422, -1);
	BANK2 = CreatePickup(1274, 1,246.2749,108.4250,1003.2188, -1);

	            



Create3DTextLabel("{FF0000}Място за чакане", 0xFFFFFFFF, 1991.9930,1013.0667,994.6875, 20, 0);
Create3DTextLabel("{FF0000}Място за чакане", 0xFFFFFFFF, 1993.4474,1022.2975,994.8906, 20, 0);
Create3DTextLabel("{FF0000}Място за избраня участник", 0xFFFFFFFF, 1998.9951,1018.2105,994.8906, 20, 0);
Create3DTextLabel("{FF0000}Използвай командата {FFFFFF}/riskk{FF0000} за да завъртиш колелото", 0xFFFFFFFF, 2243.7134,1677.2565,1008.3594, 25, 0);
Create3DTextLabel("{FF0000}Използвай командата {FFFFFF}/riskchat{FF0000} за да пишеш в Риск печели,Риск губи чата\nИзползвай командата {FFFFFF}/riskhelp{FF0000} за да разбереш как се играе\nИзползвай {FFFFFF}/riskrules{FF0000} за да видиш какви са правилата на играта", 0xFFFFFFFF, 2236.2246,1684.7714,1008.3594, 25, 0);



//
Create3DTextLabel("{FF0000}За да се качите в кола като шофьор натиснете {FFFFFF}F {FF0000}или {FFFFFF}ENTER\n{FF0000}За да се качите като пътник натиснете {FFFFFF}G\n{FF0000}За да се покажете през прозореца натиснете {FFFFFF}CAPS LOCK {FF0000}или {FFFFFF}H", 0xFFFFFFFF, 1240.9753,-2049.5994,59.9947, 20, 0);
Create3DTextLabel("{FF0000}За да станете VIP и да имате повече команди прочетете {FFFFFF}/viphelp", 0xFFFFFFFF, 1239.8617,-2038.5375,61.8438, 20, 0);
Create3DTextLabel("{FF0000}Ако искате да се телепортирате можете да използвате някой от тези телепорти\n {FFFFFF}/dm /dm2 /ls /lv", 0xFFFFFFFF, 1240.2148,-2037.1180,59.9518, 20, 0);
Create3DTextLabel("{FF0000}За да си тунингувате колата напишете {FFFFFF}/tune", 0xFFFFFFFF, 1252.9442,-2055.4199,59.6305, 20, 0);
Create3DTextLabel("{FF0000}За да станете VIP и да имате повече команди прочетете {FFFFFF}/viphelp", 0xFFFFFFFF, 1265.8544,-2065.3872,59.4685, 20, 0);
Create3DTextLabel("{FF0000}Сървърат разполага с DM зона за бой с оръжия в 3 различни арени\nЗа да влезеш в DM зоната напиши {FFFFFF}/dmon\n{FF0000}За да излезеш от DM зоната напиши {FFFFFF}/dmoff {FF0000}При събиране на 25 убийства в DM зоната печелите 1EP", 0xFFFFFFFF, 1263.4211,-2051.0662,59.3507, 20, 0);
		Create3DTextLabel("{FF0000}Сървърат разполага с игра {FFFFFF}Capture The Flag\n{FF0000}В играта има два отбора целта е да превземете противниковото знаме и да го закарате във вашата база.\nПри събиране на 3 точки в играта отбора печели играта и всеки получава по {FFFFFF}$5000 и 4 EP{FF0000}\nЗа да влезеш в играта напиши /ctfon\nЗа да излезеш от играта напиши /ctfoff", 0xFFFFFFFF, 1263.5055,-2040.6592,59.3066, 20, 0);

	Create3DTextLabel("{FF0000}Използвай {FFFFFF}/tune{FF0000} за да си тунингуваш твоето превозно средство", 0xFFFFFFFF, 1247.1062,-2055.2410,59.7890, 20, 0);
		Create3DTextLabel("{FF0000}Използвай {FFFFFF}/tune{FF0000} за да си тунингуваш твоето превозно средство", 0xFFFFFFFF, 2204.7341,932.8101,10.8203, 25, 0);
//
Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}VIP базата", 0xFFFFFFFF, 1703.8574,1454.8646,10.8103, 20, 0);

	Create3DTextLabel("{FF0000}Използвай {FFFFFF}/drink{FF0000} за да видиш напитките.", 0xFFFFFFFF, -2653.1230,1410.3335,906.2734, 20, 0);
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}/kungfu{FF0000} за да смениш своя боен стил\nИзползвай {FFFFFF}/boxing{FF0000} за да смениш своя боен стил\nИзползвай {FFFFFF}/grabkick{FF0000} за да смениш своя боен стил\nИзползвай {FFFFFF}/elbow{FF0000} за да смениш своя боен стил", 0xFFFFFFFF, 767.8079,-47.9472,1000.5859, 20, 0);
	Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}VIP базата", 0xFFFFFFFF, 1703.8574,1454.8646,10.8103, 20, 0);
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}/towt{FF0000} за да можеш да караш tow truck-а", 0xFFFFFFFF, 2134.3945,933.0338,10.8203, 20, 0);
		Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до мястото за {FFFFFF}боини изкуства", 0xFFFFFFFF, 1228.9353,-2041.5234,63.1250, 20, 0);
	Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}VIP базата", 0xFFFFFFFF, -1412.8531,-304.3645,14.1411, 20, 0);
	//
			Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}Carshop-а", 0xFFFFFFFF, 1225.2802,-2031.4219,65.2266, 20, 0);
	Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}Tow-truck-овете", 0xFFFFFFFF, 1224.3289,-2041.8345,65.2266, 20, 0);
	//
//
	Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}Caligula", 0xFFFFFFFF, 1228.7484,-2031.2257,63.1326, 20, 0);
//
	Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}SF", 0xFFFFFFFF, 1237.3722,-2041.5865,61.0313, 20, 0);
	Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}LV", 0xFFFFFFFF, 1237.2063,-2032.9989,61.0313, 20, 0);
		Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}LS Bank", 0xFFFFFFFF, 1233.6399,-2068.7056,60.8984, 20, 0);
	Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}Sweep Job", 0xFFFFFFFF, 1234.1213,-2004.6260,60.8984, 20, 0);
	Create3DTextLabel("{FF0000}Използвай {FFFFFF}/buyb{FF0000} за да си купиш книжка за лодка\nИзползвай {FFFFFF}/buys{FF0000} за да си купиш книжка за самолет\nИзползвай {FFFFFF}/buyh{FF0000} за да си купиш книжка за хеликоптер\nИзползвай {FFFFFF}/buyv{FF0000} за да си купиш книжка за влак", 0xFFFFFFFF, 1939.5034,2184.4158,10.8203, 20, 0);
	Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}Pizza Job", 0xFFFFFFFF, 1213.9854,-2004.7733,68.9114, 20, 0);
	Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}Bus Job", 0xFFFFFFFF, 1228.0105,-2004.7490,62.9947, 20, 0);
 Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}бизнеса 24/7", 0xFFFFFFFF, 1220.8024,-2004.9557,65.1019, 20, 0);
 //
  Create3DTextLabel("{FF0000}Използвай {FFFFFF}/black{FF0000}за да изключиш/фключиш функцията ", 0xFFFFFFFF, 1116.2616,-972.3250,42.7656, 15, 0);
 //
			Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}бизнеса за книжки", 0xFFFFFFFF, 1227.3185,-2068.8296,62.9998, 20, 0);
				Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}Coalmine Job", 0xFFFFFFFF, 1213.8857,-2068.7410,68.9648, 20, 0);
					Create3DTextLabel("{FF0000}Влез в стрелката за да се телепортираш до {FFFFFF}Pilot Job", 0xFFFFFFFF, 1221.4655,-2068.5159,65.1010, 20, 0);
					//
					Create3DTextLabel("{FF0000}Използвай {FFFFFF}/cuff{FF0000} за да слагаш белизници", 0xFFFFFFFF, 244.6708,75.8719,1003.9347, 20, 0);
					Create3DTextLabel("{FF0000}Използвай {FFFFFF}/uncuff{FF0000} за да махаш белизници", 0xFFFFFFFF, 248.4975,75.8579,1003.6406, 20, 0);
	Create3DTextLabel("{FF0000}Докато сте в тази банда ще печелите повече {FFFFFF}EP {FF0000}и {FFFFFF}пари", 0xFFFFFFFF, 1234.6176,-2002.9806,62.3478, 20, 0);
 Create3DTextLabel("{FF0000}Използваите {FFFFFF}/rules {FF0000}за да видите правилата", 0xFFFFFFFF, 1235.0769,-2071.0703,62.1621, 20, 0);
					//
	//Ballas
	DPRES25 = CreatePickup(1318, 1, 318.4737,1116.9275,1083.8828, 0 );
	DPRES26 = CreatePickup(1318, 1, 2148.4192,-1484.8193,26.6241, 0 );
	DPRES27 = CreatePickup(1318, 1, 134.6392,1379.7871,1088.3672, 0 );
	DPRES28 = CreatePickup(1318, 1, 1302.519897,-1.787510,1001.028259, 0 );
	DPRES29 = CreatePickup(1318, 1, 1654.0645,-1654.9052,22.5156, 0 );
	DPRES30 = CreatePickup(1318, 1, 1413.2828,-0.7177,1000.9247, 0 );
	DPRES31 = CreatePickup(1318, 1, 1413.2828,-0.7177,1000.9247, 3 );
	DPRES32 = CreatePickup(1318, 1, 2454.717041,-1700.871582,1013.515197, 0 );
	DPRES33 = CreatePickup(1318, 1, -2182.8843,956.6141,80.0000, 0 );
	DPRES34 = CreatePickup(1318, 1, 476.1170,-1499.1908,20.4887, 0 );
	DPRES35 = CreatePickup(1318, 1, 134.6414,1379.9113,1088.3672, 1 );
	DPRES36 = CreatePickup(1318, 1, 134.6414,1379.9113,1088.3672, 1 );
	//Grove Dm Bizz
	GROVEPRES2 = CreatePickup(1318, 1, 2127.4189,2379.4990,10.8203, 0 );
	GROVEPRES1 = CreatePickup(1318, 1, 2496.6841,-1708.3387,1018.3368, 0 );
	DPRES23 = CreatePickup(1318, 1, 2490.9531,-1699.9099,1014.7344, 0 );
	PRESKN = CreatePickup(1318, 1, 1127.9978,-1021.7932,34.9922, 0 );
	PRESSOA = CreatePickup(1318, 1, 2237.5413,-1081.2609,1049.0234, 0 );
	PRESBOYZ = CreatePickup(1318, 1, 2237.5413,-1081.2609,1049.0234, 1 );
	PRESBOYZ2 = CreatePickup(1318, 1, 2000.1091,-1114.3668,27.1250, 0 );
	DPRES24 = CreatePickup(1318, 1, 1412.6399,-1.7875,1000.9244, 5 );
	DPRES43 = CreatePickup(1318, 1, -1475.5341,917.6169,1040.7764, 0 );
	RIFA101 = CreatePickup(1318, 1, 1498.5651,734.3306,11.0234, 0 );
	RIFA102 = CreatePickup(1318, 1, -2173.6699,992.7927,80.0000, 0 );
	//FBITexts
	Create3DTextLabel("{FF0000}GOLD-{7FFF00}PLAY{FFFFFF} Office", 0xFFFFFFFF, 1786.6564,-1300.5453,15.2408, 10, 0);
	//Pickups And Texts
	PRES13 = CreatePickup(1318, 1, 2421.7314,-1220.9542,25.4504, 0 );
	PRES18 = CreatePickup(1274, 1, 2316.5886,-10.2704,26.7422, 0 );
	RPRES18 = CreatePickup(1274, 1, 2316.5886,-10.2704,26.7422, 1 );
	LPRES18 = CreatePickup(1274, 1, 2316.5886,-10.2704,26.7422, 2 );
	PRES12 = CreatePickup(1318, 1, 300.1975,-1154.4268,81.3840, 0 );
	PRES12X = CreatePickup(1318, 1, 1667.4623,-2106.9377,14.0723, 0 );
	PRESL = CreatePickup(1318, 1, 1118.0381,-1021.5579,34.9922, 0 );
	PRES11 = CreatePickup(1318, 1, 2421.7314,-1220.9542,25.4504, 0 );
	PRES10 = CreatePickup(1318, 1, 1280.6243,-812.9226,83.5385, 0 );
	PRES9 = CreatePickup(1318, 1, 1555.4976,-1675.6799,16.1953, 0 );
	PRES8 = CreatePickup(1318, 1, 322.197998,302.497985,999.148437, 0 );
	PRES7 = CreatePickup(1318, 1, 246.3819,87.1654,1003.6406, 0 );
	PRES6 = CreatePickup(1318, 1, 246.3819,87.1654,1003.6406, 0 );
	PRES5 = CreatePickup(1318, 1, -1604.5139,711.8524,13.8672, 0 );
	PRES4 = CreatePickup(1318, 1, 243.2549,66.6147,1003.6406,0);
	PRES3 = CreatePickup(1318, 1, 2287.2883,2431.8303,10.8203,0);
	PRES2 = CreatePickup(1318, 1, 243.2549,66.6147,1003.6406,0);
	BANKA = CreatePickup(1274, 1, 1480.9900,-1772.3080,18.7958,0);
	BANKAE = CreatePickup(1274, 1, 2305.5884,-16.3410,26.7496,0);
	
	BANKA2 = CreatePickup(1274, 1, -1492.5305,920.2294,7.1875,-1);
	BANKAE2 = CreatePickup(1274, 1, 2305.5884,-16.3410,26.7496,1);
	BANKA3 = CreatePickup(1274, 1, 2413.3079,1123.7147,10.8203,-1);
	BANKAE3 = CreatePickup(1274, 1, 2305.5884,-16.3410,26.7496,2);
	//DPKPICK
PRES14 = CreatePickup(1318, 1, 2595.3203,2790.6309,10.8203,0 );
PRES15 = CreatePickup(1318, 1, 861.2302,677.8163,11.8844,0 );
PRES16 = CreatePickup(1318, 1, 811.3090,552.3009,-24.6023,0 );
PRES17 = CreatePickup(1318, 1, 810.3768,686.6272,11.6675,0 );
	//Vagos House
	PRES19 = CreatePickup(1318, 1, 1879.1915,2290.6367,10.9799, 0 );
	PRES20 = CreatePickup(1318, 1, 140.2541,1365.9213,1083.8594, 1 );
 	//Grove House
	PRES46 = CreatePickup(1318, 1, 2495.3167,-1691.1392,14.7656, 0 );
	PRES45 = CreatePickup(1318, 1, 2496.0500,-1692.9301,1014.7422, 0 );
 	//Grove House
	PRES47 = CreatePickup(1318, 1, 1111.6012,-975.7668,42.7656, 0 );
	PRES48 = CreatePickup(1318, 1, 2527.654052,-1679.388305,1015.498596, 0 );
 	//Grove House
	//gpd
	PRES24 = CreatePickup(1318, 1, 246.7840,63.9002,1003.6406, 0 );
	//CBK DM Biz
	PRES25 = CreatePickup(1318, 1, -684.0186,939.4844,13.6328, 0 );
	PRES26 = CreatePickup(1318, 1, 1412.6399,-1.7875,1000.9244, 7 );
	//CBK house
	PRES27 = CreatePickup(1318, 1, -660.9448,953.5443,12.1328, 0 );
	PRES28 = CreatePickup(1318, 1, 286.800994,-82.547599,1001.515625, 5 );
	//MS-13 Dm Bizz
	PRES29 = CreatePickup(1318, 1, 2487.7441,2397.2224,10.8203, 0 );
	PRES30 = CreatePickup(1318, 1, 1412.6399,-1.7875,1000.9244, 5 );
	//MS-13 house
	PRES31 = CreatePickup(1318, 1, 2487.7478,2397.2026,4.2109, 0 );
	PRES32 = CreatePickup(1318, 1, 1523.509887,-47.821197,1002.130981, 0 );
	
	PRESA1 = CreatePickup(1318, 1, 766.5176,-556.7845,18.0129, 0 );
	PRESA2 = CreatePickup(1318, 1, 769.2267,-1696.4374,5.1554, 0 );
	//YK
    	Create3DTextLabel("{FF0000}Покрива на SFPD", 0x08FF08FF, 230.5144,72.9046,1005.0391, 10, 0);
	    Create3DTextLabel("{FF0000}Delta Force", 0x08FF08FF, 258.5224,77.3978,1003.6406, 10, 0);
    	Create3DTextLabel("{FF0000}Покрива на сградата до LVPD", 0x08FF08FF, 253.7656,76.9244,1003.6406, 10, 0);
        Create3DTextLabel("{FF0000}Покрива на кметството LS", 0x08FF08FF, 218.0514,80.2876,1005.0391, 10, 0);
		Create3DTextLabel("{FF0000}LSPD Гараж", 0x08FF08FF, 235.0908,72.2860,1005.0391, 10, 0);
        Create3DTextLabel("{FF0000}LVPD Гараж", 0x08FF08FF, 231.1777,80.3963,1005.0391, 10, 0);
        Create3DTextLabel("{FF0000}SFPD Гараж", 0x08FF08FF, 238.4406,79.9509,1005.0391, 10, 0);
      	Create3DTextLabel("{FF0000}LSPD Покрив", 0x08FF08FF, 219.3449,69.4404,1005.0391, 10, 0);
	
	
	Create3DTextLabel("{626200}Само за DF Duty\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш портата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш портата,ако си с превозно средство ", 0x08FF08FF, 344.1118,1800.3257,18.3556, 10, 0);
		Create3DTextLabel("{7804FF}Само за DPK\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш портата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш портата,ако си с превозно средство ", 0x08FF08FF, 2498.8916,2773.0569,10.8203, 10, 0);
	Create3DTextLabel("{4C77D4}Само за GPD\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш бариерата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш бариерата,ако си с превозно средство ", 0x08FF08FF, -1569.4429,661.8232,7.1875, 10, 0);
	Create3DTextLabel("{4C77D4}Само за GPD\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш бариерата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш бариерата,ако си с превозно средство ", 0x08FF08FF, 2236.0369,2454.3040,10.7270, 10, 0);
		Create3DTextLabel("{4C77D4}Само за GPD\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш бариерата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш бариерата,ако си с превозно средство ", 0x08FF08FF, 1542.7610,-1627.4590,13.3828, 10, 0);
	Create3DTextLabel("{4C77D4}Само за Thug Life\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш портата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш портата,ако си с превозно средство ", 0x08FF08FF, 496.6947,-1457.9410,17.2442, 10, 0);
	Create3DTextLabel("{FF0000}Cell 1\n{FFFFFF}Y", 0x08FF08FF, 267.3849,86.3211,1001.0391, 10, 0);
		Create3DTextLabel("{FF0000}Cell 2\n{FFFFFF}Y", 0x08FF08FF, 267.2227,82.1111,1001.0391, 10, 0);
	Create3DTextLabel("{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш/затвориш килията", 0x08FF08FF, 321.3071,314.1322,999.1484, 10, 0);
	Create3DTextLabel("{4C77D4}Само за Thug Life\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш портата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш портата,ако си с превозно средство", 0x08FF08FF, 501.8159,-1557.3213,16.8978, 10, 0);
	Create3DTextLabel("{134BC2}Само за Vinewood Cripz\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш портата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш портата,ако си с превозно средство", 0x08FF08FF, 320.9780,-1188.5830,76.3420, 10, 0);
		Create3DTextLabel("{4C77D4}Само за GPD\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш портата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш портата,ако си с превозно средство", 0x08FF08FF, 1588.4388,-1634.7316,13.3828, 10, 0);
	//
		Create3DTextLabel("{788FBF}Само за Yakuza\n{08FF08}Натисни {FF0000}Y{08FF08} за да отвориш портата, ако си пеша\nНатисни {FF0000}N{08FF08} за да отвориш портата,ако си с превозно средство", 0xFFFFFFFF, 1644.7104,-1714.7913,15.6094, 10, 0);
	//
	//WestCoastBloods Dm Bizz
	PRES34 = CreatePickup(1318, 1, 0.0,0.0,0.0, 0 );
	PRES35 = CreatePickup(1318, 1, 0.0,-0.0,0.0, 0 );
	PRES33 = CreatePickup(1318, 1, 0.0,-0.0,0.0, 0 );
	//WCB House 2
	PRES36 = CreatePickup(1318, 1, -0.0,-0.0,0.0, 0 );
	PRES37 = CreatePickup(1318, 1, -0.0,-0.0,0.0, 0 );
	//WCB tp bazi
	PRES38 = CreatePickup(1318, 1, -0.0,-0.0,0.0, 0 );
	PRES39 = CreatePickup(1318, 1, -0.0,-0.0,0.0, 0 );
	//house
	PRES40 = CreatePickup(1318, 1, 1852.3112,1377.2881,16.9223, 0 );
	PRES41 = CreatePickup(1318, 1, 513.882507,-11.269994,1001.565307, 0 );
	//Thugs House
	PRES42 = CreatePickup(1318, 1, 2481.3926,1525.4708,11.7710, 0 );
	PRES43 = CreatePickup(1318, 1, 2324.3811,-1149.5460,1050.7101, 8 );
	//Vagos
	PRES44 = CreatePickup(1318, 1, 2186.5361,-997.3368,66.4688, 0 );
//============================[TextDraws]=======================================
//============================[TextDraws]=======================================
	txtSpec = TextDrawCreate(610.0, 400.0,
	"~b~~k~~PED_SPRINT~ ~w~to respawn");
	TextDrawUseBox(txtSpec, 0);
	TextDrawFont(txtSpec, 2);
	TextDrawSetShadow(txtSpec,0);
    TextDrawSetOutline(txtSpec,1);
    TextDrawBackgroundColor(txtSpec,0x000000FF);
    TextDrawColor(txtSpec,0x000000FF);
    TextDrawAlignment(txtSpec,3);

    SetTimer("Bot",20000,1); //The messages will randomly change every 20 seconds.

for(new i = 0; i < MAX_PLAYERS; i++)
{
}
SetTimer("server",1000,1);
for(new i = 0; i < MAX_PLAYERS; i++)
{

    SpeedBar[i] = TextDrawCreate(575.0, 393.0, "");
    TextDrawBackgroundColor(SpeedBar[i], 250);
    TextDrawFont(SpeedBar[i], 1);
    TextDrawLetterSize(SpeedBar[i], 0.3,2.3);
    TextDrawColor(SpeedBar[i], -1);
    TextDrawSetOutline(SpeedBar[i], 1);
    TextDrawSetProportional(SpeedBar[i], 1);
     SpeedoTimer = SetTimer("UpdateSpeedoMeter", 500, 1);

		
    dmon1[i] = TextDrawCreate(430.000000, 120.000000, "");
    	TextDrawAlignment(dmon1[i],0);
	TextDrawBackgroundColor(dmon1[i],0x000000ff);
	TextDrawFont(dmon1[i],3);
    TextDrawLetterSize(dmon1[i], 0.4,1.1);
	TextDrawSetProportional(dmon1[i],1);
	TextDrawSetShadow(dmon1[i],1);
	
	    restime2[i] = TextDrawCreate(430.000000, 120.000000, "");
    	TextDrawAlignment(restime2[i],0);
	TextDrawBackgroundColor(restime2[i],0x000000ff);
	TextDrawFont(restime2[i],3);
    TextDrawLetterSize(restime2[i], 0.4,1.1);
	TextDrawSetProportional(restime2[i],1);
	TextDrawSetShadow(restime2[i],1);
	
		Text4[i] = TextDrawCreate(430.000000, 120.000000, "");
TextDrawBackgroundColor(Text4[i], 250);
    TextDrawFont(Text4[i], 1);
    TextDrawLetterSize(Text4[i], 0.5,2);
    TextDrawColor(Text4[i], -1);
    TextDrawSetOutline(Text4[i], 1);
    TextDrawSetProportional(Text4[i], 1);
	
	    rob[i] = TextDrawCreate(430.000000, 120.000000, "");
    	TextDrawAlignment(rob[i],0);
	TextDrawBackgroundColor(rob[i],0x000000ff);
	TextDrawFont(rob[i],3);
    TextDrawLetterSize(rob[i], 0.4,1.1);
	TextDrawSetProportional(rob[i],1);
	TextDrawSetShadow(rob[i],1);
	
		    robn[i] = TextDrawCreate(430.000000, 120.000000, "");
    	TextDrawAlignment(rob[i],0);
	TextDrawBackgroundColor(rob[i],0x000000ff);
	TextDrawFont(rob[i],3);
    TextDrawLetterSize(rob[i], 0.4,1.1);
	TextDrawSetProportional(rob[i],1);
	TextDrawSetShadow(rob[i],1);
	
	
	
    
    	    robb[i] = TextDrawCreate(430.000000, 120.000000, "");
    	TextDrawAlignment(robb[i],0);
	TextDrawBackgroundColor(robb[i],0x000000ff);
	TextDrawFont(robb[i],3);
    TextDrawLetterSize(robb[i], 0.4,1.1);
	TextDrawSetProportional(robb[i],1);
	TextDrawSetShadow(robb[i],1);
    
    	ColorData[i] = TextDrawCreate(5.000000,421.000000,"");

    TextDrawBackgroundColor(ColorData[i], 250);
    TextDrawFont(ColorData[i], 1);
    TextDrawLetterSize(ColorData[i], 0.3,2.3);
    TextDrawColor(ColorData[i], -1);
    TextDrawSetOutline(ColorData[i], 1);
    TextDrawSetProportional(ColorData[i], 1);
    
            Text[i] = TextDrawCreate(430.000000, 5.000000, "");
	TextDrawAlignment(Text[i],0);
	TextDrawBackgroundColor(Text1[i],0x000000ff);
	TextDrawFont(Text[i],2);
    TextDrawLetterSize(Text[i], 0.3,1.2);
	TextDrawSetProportional(Text[i],1);
	TextDrawSetShadow(Text[i],1);

    Text1[i] = TextDrawCreate(430.000000, 15.000000, "");
	TextDrawAlignment(Text1[i],0);
	TextDrawBackgroundColor(Text1[i],0x000000ff);
	TextDrawFont(Text1[i],2);
    TextDrawLetterSize(Text1[i], 0.3,1.2);
	TextDrawSetProportional(Text1[i],1);
	TextDrawSetShadow(Text1[i],1);
    
}
//==============================================================================
//============================[LOCKED-HP & ARMOUR]==============================
    hp21 = CreatePickup(1240, 23, 1995.9391,-1115.1627,26.7737); // 1 KLETKA 1 HP BALLAS
    hp21 = CreatePickup(1242, 23, 1995.9391,-1115.1627,26.7737); // 3 KLETKA 1 ARMOR BALLAS

    hp22 = CreatePickup(1240, 23, 1261.3987,-781.9395,1091.9063); // 1 KLETKA 1 HP BALLAS
    hp22 = CreatePickup(1242, 23, 1261.3987,-781.9395,1091.9063); // 3 KLETKA 1 ARMOR BALLAS

  hp23 = CreatePickup(1240,23,256.9264,69.5693,1003.6406, 0 ); // GPD Health
    hp23 = CreatePickup(1242,23,256.9264,69.5693,1003.6406, 0 ); // GPD Armour

        hp24 = CreatePickup(1240, 23, 318.4111,317.3209,999.1484); // 1 KLETKA 1 HP GPD
    hp24 = CreatePickup(1242, 23, 318.4111,317.3209,999.1484); // 3 KLETKA 1 ARMOR GPD


        hp25 = CreatePickup(1240, 23, 318.4111,317.3209,999.1484 ,12); // 1 KLETKA 1 HP GPD
    hp25 = CreatePickup(1242, 23, 318.4111,317.3209,999.1484 ,12); // 3 KLETKA 1 ARMOR GPD


    hp10 = CreatePickup(1240, 2, 252.1292,-94.5513,3.5354); // 1 KLETKA 1 HP BALLAS
    hp10 = CreatePickup(1242, 2, 252.1292,-94.5513,3.5354); // 3 KLETKA 1 ARMOR BALLAS
    hp1 = CreatePickup(1240,23,2497.9768,-1705.7897,1014.7422); // 1 KLETKA 1 HP GROVE
    hp1 = CreatePickup(1242,23,2497.9768,-1705.7897,1014.7422); // 3 KLETKA 1 ARMOR GROVE
    hp2 = CreatePickup(1240,23,2469.1836,-1274.5188,29.8682); // 1 KLETKA 1 HP CBK
    hp2 = CreatePickup(1242,23,2469.1836,-1274.5188,29.8682); // 3 KLETKA 1 ARMOR CBK
    hp3 = CreatePickup(1240,23,-780.5315,2744.0825,45.8556); // 1 KLETKA 1 HP SoA
    hp3 = CreatePickup(1242,23,-780.5315,2744.0825,45.8556); // 3 KLETKA 1 ARMOR SoA
   	hp5 = CreatePickup(1240,23, -208.0608,2713.0957,62.9794); // 1 KLETKA 1 HP ECC
    hp5 = CreatePickup(1242,23, -208.0608,2713.0957,62.9794); // 3 KLETKA 1 ARMOR ECC
    hp6 = CreatePickup(1240,23, 1688.3833,-1513.5802,13.5469); // 1 KLETKA 1 HP BS
    hp6 = CreatePickup(1242,23, 1688.3833,-1513.5802,13.5469); // 3 KLETKA 1 ARMOR BS
    hp7 = CreatePickup(1240,23,1967.6782,1772.4185,12.7437); // 1 KLETKA 1 HP BL
    hp7 = CreatePickup(1242,23,1967.6782,1772.4185,12.7437); // 3 KLETKA 1 ARMOR BL
    hp8 = CreatePickup(1240,23,2324.3184,-1135.7771,1051.3047, 11); // hp ballas
    hp8 = CreatePickup(1242,23,2324.3184,-1135.7771,1051.3047, 11); // armour ballas
    //--------------------------------------------------------------------------
    AddStaticVehicle(474,2344.7737,-2094.8977,13.3094,85.1462,3,3); // civilcar1
AddStaticVehicle(474,2352.3611,-2094.9119,13.3095,87.8290,6,6); // civilcar2
AddStaticVehicle(401,2247.8479,-2050.2388,13.1587,43.5014,1,1); // civilcar3
AddStaticVehicle(401,2280.2690,-2046.0022,13.3264,222.8819,4,4); // civilcar4
AddStaticVehicle(409,2244.4434,-1940.6677,13.3454,91.1365,0,0); // civilcar5
AddStaticVehicle(409,2243.1565,-1934.6652,13.3246,90.9641,0,0); // civilcar6
AddStaticVehicle(409,2329.3562,-1913.7123,13.4050,270.6702,0,0); // civilcar7
AddStaticVehicle(413,2101.4941,-1921.4818,13.5490,180.2175,151,151); // civilcar8
AddStaticVehicle(413,2101.4805,-1908.6722,13.5443,180.3700,151,151); // civilcar9
AddStaticVehicle(415,2106.2063,-1361.7257,23.7555,182.2105,13,13); // civilcar10
AddStaticVehicle(415,2101.3506,-1361.7507,23.7568,181.3590,13,13); // civilcar11
AddStaticVehicle(415,2095.7371,-1361.7386,23.7563,180.4648,13,13); // civilcar12
//=============================[Timers]=========================================
	SetTimer("AntiHackCheat", 100, 1);
    SetTimer("GeneralTimer", 500, 1);
    SetTimer("TipBot", 32000, 1);
    SetTimer("GameBot", 1000, 1);
	SetTimer("InfiniteNitro",1500,1);
	return 1;
}
//==============================================================================
public OnPlayerRequestClass(playerid, classid)
{
        TextDrawHideForPlayer(playerid,VehHealthBar[playerid]);
	if(PlayerInfo[playerid][pMember] != TEAM_VIP)
	{
	    gTeam[playerid] = PlayerInfo[playerid][pMember];
	    PlayerInfo[playerid][pModel] = classid;
		switch(classid)
		{
	 	case 0..2:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Drug Dealer", 3000, 3);
	       	}
	       		case 3..6:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Drug Maker", 3000, 3);
	       	}
	       		       		case 7..10:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Normal Ped Man", 3000, 3);
	       	}
	       		       		       		case 11..12:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Normal Ped Woman", 3000, 3);
	       	}
	       		       		       		       		case 13:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~BUSSINESMAN", 3000, 3);
	       	}
	       		       		       		       		       		case 14:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~BUSSINESWOMAN", 3000, 3);
	       	}
	       		       		       		       		       		       		case 15..17:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~PROSTITUTE", 3000, 3);
	       	}
	       		       		       		       		       		       		       		case 18..23:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~WOMAN", 3000, 3);
	       	}
	  	}
	}
	else
	{
	    gTeam[playerid] = TEAM_VIP;
	 	PlayerInfo[playerid][pModel] = classid;
		switch(classid)
		{
	 	case 0..2:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Drug Dealer", 3000, 3);
	       	}
	       		case 3..6:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~Drug Maker", 3000, 3);
	       	}
	       		       		case 7..10:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Normal Ped Man", 3000, 3);
	       	}
	       		       		       		case 11..12:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~Normal Ped Woman", 3000, 3);
	       	}
	       		       		       		       		case 13:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~BUSSINESMAN", 3000, 3);
	       	}
	       		       		       		       		       		case 14:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~BUSSINESWOMAN", 3000, 3);
	       	}
	       		       		       		       		       		       		case 15..17:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~PROSTITUTE", 3000, 3);
	       	}
	       		       		       		       		       		       		       		case 18..23:
            {
				SetPlayerPos(playerid,2183.4976,1284.9148,43.0672);
                SetPlayerCameraPos(playerid,2176.9302,1285.6965,45.1799);
                SetPlayerCameraLookAt(playerid, 2183.4976,1284.9148,43.0672);
 	            SetPlayerFacingAngle(playerid,88.68);
	     		GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~n~~p~WOMAN", 3000, 3);
	       	}
	  	}
  	}
	return 1;
}
//==============================================================================
//==============================================================================
//------------------------------------------------------------------------------
public OnPlayerConnect(playerid)
{
	new PlayerName[MAX_PLAYER_NAME], string[128], str[128], file[256];
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	new tmp3[50]; GetPlayerIp(playerid,tmp3,50);
new pAKA[256]; pAKA = dini_Get("ladmin/config/aka.txt",tmp3);
		if (strlen(pAKA) < 3) format(str,sizeof(str),"*** %s (ID: %d) зашел на сервер", PlayerName, playerid);
		else if (!strcmp(pAKA,PlayerName,true)) format(str,sizeof(str),"*** %s (ID: %d) зашел на сервер", PlayerName, playerid);
		else format(str,sizeof(str),"*** %s (%d) зашел на сервер (aka %s)", PlayerName, playerid, pAKA );
	GetPlayerName(playerid, PlayerName, MAX_PLAYER_NAME);
	GetPlayerIp(playerid,tmp3,50);
	if(strlen(dini_Get("ladmin/config/aka.txt", tmp3)) == 0) dini_Set("ladmin/config/aka.txt", tmp3, PlayerName);
 	else
	{
	    if( strfind( dini_Get("ladmin/config/aka.txt", tmp3), PlayerName, true) == -1 )
		{
		    format(string,sizeof(string),"%s,%s", dini_Get("ladmin/config/aka.txt",tmp3), PlayerName);
		    dini_Set("ladmin/config/aka.txt", tmp3, string);
		}
	}
if(strlen(dini_Get("LuxAdmin/Config/aka.txt", tmp3)) == 0) dini_Set("LuxAdmin/Config/aka.txt", tmp3, PlayerName);
else
{
if( strfind( dini_Get("LuxAdmin/Config/aka.txt", tmp3), PlayerName, true) == -1 )
{
new akastring[256];
format(akastring,sizeof(akastring),"%s,%s", dini_Get("LuxAdmin/Config/aka.txt",tmp3), PlayerName);
dini_Set("LuxAdmin/Config/aka.txt", tmp3, akastring);
}


  




}      			        											if(DFDuty[playerid]== 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        DFDuty[playerid] = 0;
			        }
			        
    Foto = TextDrawCreate(-20.000000,2.000000,"|");
	TextDrawUseBox(Foto,1);
	TextDrawBoxColor(Foto,0xFFFFFF69);
	TextDrawTextSize(Foto,660.000000,22.000000);
	TextDrawAlignment(Foto,0);
	TextDrawBackgroundColor(Foto,0xFFFFFF69);
	TextDrawFont(Foto,3);
	TextDrawLetterSize(Foto,1.000000,52.200000);
	TextDrawColor(Foto,0xFFFFFF69);
	TextDrawSetOutline(Foto,1);
	TextDrawSetProportional(Foto,1);
	TextDrawSetShadow(Foto,1);


KillTimer(dragTimers[playerid]);
pTazer[playerid] = 0;
pTazed[playerid] = 0;
   graf[playerid] = 0;

        RL_Shooting[playerid]=false;
        RL_Released[playerid]=0;

	ClockData[playerid] = TextDrawCreate(5.000000,421.000000,"");

    TextDrawBackgroundColor(ClockData[playerid], 250);
    TextDrawFont(ClockData[playerid], 1);
    TextDrawLetterSize(ClockData[playerid], 0.3,1.8000);
    TextDrawColor(ClockData[playerid], -1);
    TextDrawSetOutline(ClockData[playerid], 1);
    TextDrawSetProportional(ClockData[playerid], 1);

	Enabled[playerid]=0;
	Pers[playerid]=0;
	// Init all of the textdraw related globals
    gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;

    for(new x=0; x < SELECTION_ITEMS; x++) {
        gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;
	}

	gItemAt[playerid] = 0;


SPEEDOS[playerid] = TextDrawCreate(510.5190,379.0,"");
    TextDrawBackgroundColor(SPEEDOS[playerid], 250);
    TextDrawFont(SPEEDOS[playerid], 1);
    TextDrawLetterSize(SPEEDOS[playerid], 0.4099,1.5000);
    TextDrawColor(SPEEDOS[playerid], -1);
    TextDrawSetOutline(SPEEDOS[playerid], 1);
    TextDrawSetProportional(SPEEDOS[playerid], 1);
    TextDrawShowForPlayer(playerid,SPEEDOS[playerid]);


    td_fuel[playerid] = TextDrawCreate(510.5190, 409.0,"~r~Fuel: 100L"); //create the textdraw at position
    TextDrawBackgroundColor(td_fuel[playerid], 250);
    TextDrawFont(td_fuel[playerid], 1);
    TextDrawLetterSize(td_fuel[playerid], 0.4099,1.5000);
    TextDrawColor(td_fuel[playerid], -1);
    TextDrawSetOutline(td_fuel[playerid], 1);
    TextDrawSetProportional(td_fuel[playerid], 1);

    VehHealthBar[playerid] = TextDrawCreate(510.5190, 394.0, "~g~Health: 100");
    TextDrawBackgroundColor(VehHealthBar[playerid], 250);
    TextDrawFont(VehHealthBar[playerid], 1);
    TextDrawLetterSize(VehHealthBar[playerid], 0.4099,1.5000);
    TextDrawColor(VehHealthBar[playerid], -1);
    TextDrawSetOutline(VehHealthBar[playerid], 1);
    TextDrawSetProportional(VehHealthBar[playerid], 1);
    	if(PlayerInfo[playerid][pBlock] == 1)
	{
	    SendClientMessage(playerid, COLOR_GRAD1, "SERVER:Този Nickname е блокиран.");
        SetTimerEx("DelayedKick", 1000, false, "i", playerid);
	}
	
fly[playerid] = 0;




for (new t=0; t<MAX_TURFS; t++) GangZoneShowForPlayer(playerid, turfs[ t ][turfID], turfs[ t ][TurfColor]);
   grider[playerid][0] = 0;
        grider[playerid][1] = 0;
        grider[playerid][2] = 0;
    


        TogglePlayerSpectating(playerid, true);
        ForceClassSelection(playerid);
        SetPVarInt(playerid, "Intro", 0);
        SetTimerEx("ShowIntro", 1000, 0, "d", playerid);

	    	if(PlayerInfo[playerid][pElblow] == 1)
	{
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
	}
		    	if(PlayerInfo[playerid][pGrabKick] == 1)
	{
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
	}
		    	if(PlayerInfo[playerid][pBoxing] == 1)
	{
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
	}
		    	if(PlayerInfo[playerid][pKungfu] == 1)
	{
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
	}
    
        CD = TextDrawCreate(5.000000,421.000000,"");
    TextDrawBackgroundColor(CD, 250);
    TextDrawFont(CD, 1);
    TextDrawLetterSize(CD, 0.3,2.0);
    TextDrawColor(CD, -1);
    TextDrawSetOutline(CD, 1);
    TextDrawSetProportional(CD, 1);

    
    
    
    
    

	Txt1 = TextDrawCreate(545.000000,23.000000,"~w~gold~~-~r~play");
TextDrawBackgroundColor(Txt1, 250);
    TextDrawFont(Txt1, 1);
    TextDrawLetterSize(Txt1, 0.5,2);
    TextDrawColor(Txt1, -1);
    TextDrawSetOutline(Txt1, 1);
    TextDrawSetProportional(Txt1, 1);
    
LinkVehicleToInterior(carufo,1);
LinkVehicleToInterior(carforsale1,15);
LinkVehicleToInterior(carforsale2,15);
LinkVehicleToInterior(carforsale3,15);
LinkVehicleToInterior(carforsale4,15);
LinkVehicleToInterior(carforsale5,15);
//
//
	BetRace[playerid][0] = 255;
	BetRace[playerid][1] = 0;
	gRaceGuy[playerid] = 0;
//
	ResetStats(playerid);
	SetPlayerMapIcon(playerid,2, 1412.5999,-1700.3230,13.5395,55,43,0,0);
	SetPlayerMapIcon(playerid,3, 1480.8488,-1770.3652,18.7958,52,43,0,0);
	SetPlayerMapIcon(playerid,4, 1950.1184,-1770.3579,45.0106,56,43,0,0);
	SetPlayerMapIcon(playerid,5, 1229.0896,-2043.1825,108.0106 ,43,43,0,0);
    SetPlayerMapIcon(playerid,6, 2448.1611, -1962.9865, 13.5469 ,36,36,0,0);
    SetPlayerMapIcon(playerid,7, 2104.1606, 932.0269, 89.5624 ,56,43,0,0);
	SetPlayerMapIcon(playerid,8, 2204.5083, 2471.2610, 89.5624 ,56,0,0);
	SetPlayerMapIcon(playerid,9, 2153.5103, 2748.6191, 89.5624 ,56,0,0);
	SetPlayerMapIcon(playerid,10, 2135.4346, 2825.0793, 89.5624 ,36,0,0);
    SetPlayerMapIcon(playerid,0,1786.7319,-1301.1779,13.6875,44,0,0);
    SetPlayerMapIcon(playerid,11,2413.3079,1123.7147,10.8203,52,0,0);
    SetPlayerMapIcon(playerid,12,2413.3079,1123.7147,10.8203,52,0,0);
    RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
RemoveBuildingForPlayer(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.25);
RemoveBuildingForPlayer(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.25);
    RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
    RemoveBuildingForPlayer(playerid, 712, 699.0938, -1428.9219, 22.4219, 0.25);
    dpk1 = CreateObject(playerid, 985, 2497.4063, 2777.0703, 11.5313, 0.000000, 0.000000, 0.000000);
dpk2 = CreateObject(playerid, 986, 2497.4063, 2769.1094, 11.5313, 0.000000, 0.000000, 0.000000);
//
	    	if(PlayerInfo[playerid][pElblow] == 1)
	{
    if(GetPlayerFightingStyle(playerid) == FIGHT_STYLE_ELBOW)
	    return 1 ;
	}
		    	if(PlayerInfo[playerid][pGrabKick] == 1)
	{
    if(GetPlayerFightingStyle(playerid) == FIGHT_STYLE_GRABKICK)
	    return 1 ;
	}
		    	if(PlayerInfo[playerid][pBoxing] == 1)
	{
    if(GetPlayerFightingStyle(playerid) == FIGHT_STYLE_BOXING)
	    return 1 ;
	}
		    	if(PlayerInfo[playerid][pKungfu] == 1)
	{
    if(GetPlayerFightingStyle(playerid) == FIGHT_STYLE_KUNGFU)
	    return 1;
	}

	//
	new pname[MAX_PLAYER_NAME];
 GetPlayerName(playerid, pname, sizeof(pname));
 new string2[256];
 for(new maxplxz; maxplxz<MAX_PLAYERS; maxplxz++)
			{
	if (gPlayerLogged[maxplxz] == 1)
	{
    format(string2, sizeof(string2), "{FFFFFF}%s {9AFF00}влезе в сървъра {FFFFFF}!", pname);
    SendClientMessage(maxplxz, COLOR_WHITE, string2);
    }
	}
    PlayAudioStreamForPlayer(playerid, RS[random(sizeof(RS))]);
        	new name[24];
        							new ip[20];
			            GetPlayerIp(playerid,ip,sizeof(ip));
	GetPlayerName(playerid, name, sizeof(name));
	printf("[SERVER]: %s[%d]: IP:%s vleze v survura[VLEZE] ",name,playerid,ip);
    return 1;
	}
//------------------------------------------------------------------------------
// Define the dialog ID so we can handle responses
#define DIALOG_RULES 1
//==============================================================================
public ResetStats(playerid)
{
	new file[256], File:file2, string[100]; format(file,sizeof(file),"Config.ini");

	if(!dini_Exists("ladmin/config/aka.txt")) dini_Create("ladmin/config/aka.txt");

	if(!dini_Exists(file))
	{
		dini_Create(file);
		print("\n >Конфигурационный файл успешно создан");
	}
	PlayerInfo[playerid][pTest] = 0;
	PlayerInfo[playerid][pSkin] = 0;
	PlayerInfo[playerid][pEvent] = 0;
	PlayerInfo[playerid][pDis] = 0;
	PlayerInfo[playerid][pO] = 0;
	PlayerInfo[playerid][pMoney] = 0;
		PlayerInfo[playerid][pDMF] = 0;
			PlayerInfo[playerid][pInDMF] = 0;
	PlayerInfo[playerid][pDM] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pHouse1] = 0;
	PlayerInfo[playerid][pHouse2] = 0;
	PlayerInfo[playerid][pHouse3] = 0;
	PlayerInfo[playerid][pBiz1] = 0;
	PlayerInfo[playerid][pBiz2] = 0;
	PlayerInfo[playerid][pBiz3] = 0;
	PlayerInfo[playerid][pEarnings] = 0;
	PlayerInfo[playerid][pVudica] = 0;
	PlayerInfo[playerid][pStruv] = 0;
	PlayerInfo[playerid][pOfis1] = 0;
	PlayerInfo[playerid][pOfis2] = 0;
	PlayerInfo[playerid][pOfis3] = 0;
	PlayerInfo[playerid][pOfis4] = 0;
	PlayerInfo[playerid][pOfis5] = 0;
	PlayerInfo[playerid][pOfis6] = 0;
	PlayerInfo[playerid][pOfis7] = 0;
	PlayerInfo[playerid][pOfis8] = 0;
	PlayerInfo[playerid][pOfis9] = 0;
	PlayerInfo[playerid][pOfis10] = 0;
	PlayerInfo[playerid][pOfis11] = 0;
	PlayerInfo[playerid][pOfis12] = 0;
	PlayerInfo[playerid][pOfis13] = 0;
	PlayerInfo[playerid][pBizO] = 0;
	PlayerInfo[playerid][pHouseO] = 0;
	PlayerInfo[playerid][pOfis] = 0;
	PlayerInfo[playerid][pOfis14] = 0;
	PlayerInfo[playerid][pOfis15] = 0;
	PlayerInfo[playerid][pOfis16] = 0;
	PlayerInfo[playerid][pOfis17] = 0;
	PlayerInfo[playerid][pOfis18] = 0;
	PlayerInfo[playerid][pOfis19] = 0;
	PlayerInfo[playerid][pOfis20] = 0;
	PlayerInfo[playerid][pCMN1Kill] = 0;
	PlayerInfo[playerid][pBombs] = 0;
	PlayerInfo[playerid][pPayD] = 0;
PlayerInfo[playerid][pYear] = 0;
PlayerInfo[playerid][pDay] = 0;
PlayerInfo[playerid][pMounth] = 0;
	//
	
	PlayerInfo[playerid][p4as] = 0;
PlayerInfo[playerid][pMinuti] = 0;
	PlayerInfo[playerid][pSekundi] = 0;
		PlayerInfo[playerid][pWK] = 0;
		PlayerInfo[playerid][pCok] = 0;
			PlayerInfo[playerid][pHeroin] = 0;
			PlayerInfo[playerid][pWeed] = 0;
			PlayerInfo[playerid][pMoonshine] = 0;
		PlayerInfo[playerid][pZvezda1] = 0;
			PlayerInfo[playerid][pCarPos1] = 0;
		PlayerInfo[playerid][pCarPos2] = 0;
		PlayerInfo[playerid][pCarPos3] = 0;
		PlayerInfo[playerid][pCarPos4] = 0;
		PlayerInfo[playerid][pCarPos5] = 0;
		PlayerInfo[playerid][pCarPos6] = 0;
		PlayerInfo[playerid][pCarPos7] = 0;
		PlayerInfo[playerid][pCarPos8] = 0;
		PlayerInfo[playerid][pCarPos9] = 0;
		PlayerInfo[playerid][pCarPos10] = 0;
		PlayerInfo[playerid][pCarPos11] = 0;
		PlayerInfo[playerid][pCarPos12] = 0;
	//
	
	//
		PlayerInfo[playerid][pCar1] = 0;
		PlayerInfo[playerid][pCar2] = 0;
		PlayerInfo[playerid][pCar3] = 0;
		PlayerInfo[playerid][pCar4] = 0;
		PlayerInfo[playerid][pCar5] = 0;
		PlayerInfo[playerid][pCar6] = 0;
		PlayerInfo[playerid][pCar7] = 0;
		PlayerInfo[playerid][pCar8] = 0;
		PlayerInfo[playerid][pCar9] = 0;
		PlayerInfo[playerid][pCar10] = 0;
		PlayerInfo[playerid][pCar11] = 0;
		PlayerInfo[playerid][pCar12] = 0;
		//
	PlayerInfo[playerid][pKufar] = 0;
		PlayerInfo[playerid][pHouse] = 0;
		PlayerInfo[playerid][pBenzinka1] = 100000;
			PlayerInfo[playerid][pBenzinka2] = 100000;
				PlayerInfo[playerid][pBenzinka3] = 100000;
					PlayerInfo[playerid][pBenzinka4] = 100000;
	
	
	
		PlayerInfo[playerid][pCnos] = 0;
		PlayerInfo[playerid][pNPM] = 0;
		PlayerInfo[playerid][pCivilS] = 0;
			PlayerInfo[playerid][pOfficeS] = 0;
		PlayerInfo[playerid][pDuel] = 0;
			PlayerInfo[playerid][pDuelMoney] = 0;
		PlayerInfo[playerid][pVote] = 0;
	PlayerInfo[playerid][pDa] = 0;
	PlayerInfo[playerid][pNe] = 0;
	PlayerInfo[playerid][pNone] = 0;
	//
	PlayerInfo[playerid][pElblow] = 0;
		PlayerInfo[playerid][pGrabKick] = 0;
			PlayerInfo[playerid][pKungfu] = 0;
				PlayerInfo[playerid][pBoxing] = 0;
	//
	PlayerInfo[playerid][pGFC] = 0;
	PlayerInfo[playerid][pOffice] = 0;
	PlayerInfo[playerid][pIgnor] = 0;
	PlayerInfo[playerid][pVlak] = 0;
	PlayerInfo[playerid][pHili] = 0;
	PlayerInfo[playerid][pSamolet] = 0;
	PlayerInfo[playerid][pZarche] = 0;
	PlayerInfo[playerid][pTowT] = 0;
	PlayerInfo[playerid][pBoat] = 0;
	PlayerInfo[playerid][pDeath] = 0;
	PlayerInfo[playerid][pO] = 0;
	PlayerInfo[playerid][pO3] = 0;
	PlayerInfo[playerid][pO4] = 0;
	PlayerInfo[playerid][pZabrana] = 0;
	PlayerInfo[playerid][pO6] = 0;
	PlayerInfo[playerid][pO5] = 0;
	PlayerInfo[playerid][pCig] = 0;
	PlayerInfo[playerid][pNN] = 0;
    PlayerInfo[playerid][plPhousekey] = 255;
    PlayerInfo[playerid][plPbiskey] = 255;
	PlayerInfo[playerid][pPhousekey] = 255;
    PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pInEvent] = 0;
	PlayerInfo[playerid][pInEventAdmin] = 0;
	PlayerInfo[playerid][pCuffed] = 0;
	PlayerInfo[playerid][pSilenSkill] = 0;
	PlayerInfo[playerid][pDrugPerk] = 4;
	PlayerInfo[playerid][pAccount] = 0;
	PlayerInfo[playerid][pTuba] = 0;
	PlayerInfo[playerid][pTuba2] = 0;
 	PlayerInfo[playerid][pTazerBullets] = 0;
	PlayerCuffed[playerid] = 0;
	PlayerInfo[playerid][pManage] = 0;
	PlayerInfo[playerid][aDuty] = 0;
	PlayerInfo[playerid][DutyG] = 0;
	PlayerInfo[playerid][aTog] = 0;
	PlayerInfo[playerid][pMember] = TEAM_VIP;
	PlayerInfo[playerid][pRank] = 1;
	PlayerInfo[playerid][pBlock] = 0;
    PlayerInfo[playerid][pBanned] = 0;
    PlayerInfo[playerid][pBReason] = 0;
    PlayerInfo[playerid][pBlock] = 0;
    PlayerInfo[playerid][pBV] = 0;
    PlayerInfo[playerid][pDonateRank] = 0;
    PlayerInfo[playerid][pDeltaForce] = 0;
    PlayerInfo[playerid][pTimeVip] = 0;
    PlayerInfo[playerid][pWarns] = 0;
    PlayerInfo[playerid][pJail] = 0;
    PlayerInfo[playerid][pCash] = 0;
    PlayerInfo[playerid][pReg] = 0;
    PlayerInfo[playerid][pReg2] = 0;
    PlayerInfo[playerid][pKills] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pGun0] = 0;
	PlayerInfo[playerid][pGun1] = 0;
	PlayerInfo[playerid][pGun2] = 0;
	PlayerInfo[playerid][pGun3] = 0;
    PlayerInfo[playerid][pPhousekey] = 255;
    PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pGun4] = 0;
	PlayerInfo[playerid][pGun5] = 0;
	PlayerInfo[playerid][pGun6] = 0;
	PlayerInfo[playerid][pGun7] = 0;
	PlayerInfo[playerid][pGun8] = 0;
	PlayerInfo[playerid][pGun9] = 0;
	PlayerInfo[playerid][pGun10] = 0;
	PlayerInfo[playerid][pGun11] = 0;
	PlayerInfo[playerid][pGun12] = 0;
	PlayerInfo[playerid][pModel] = 0;
	PlayerInfo[playerid][pMuted] = 0;
	PlayerInfo[playerid][pMuteReason] = 0;
	PlayerInfo[playerid][pCMN1Kill] = 0;
	PlayerInfo[playerid][pADMINMUTE] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
	PlayerInfo[playerid][pBizPayday] = 0;
	PlayerInfo[playerid][pMon] = 0;
	PlayerInfo[playerid][pSt] = 0;
	PlayerInfo[playerid][pDea] = 0;
	PlayerInfo[playerid][pBombs] = 0;
	PlayerInfo[playerid][pCoalmine1] = 0;
	PlayerInfo[playerid][pPiza1] = 0;
	PlayerInfo[playerid][pPilot1] = 0;
	PlayerInfo[playerid][pSweep1] = 0;
	PlayerInfo[playerid][pBus1] = 0;
	PlayerInfo[playerid][prMuted] = 0;
	PlayerInfo[playerid][ptrMuted] = 0;
	PlayerInfo[playerid][ptMuted] = 0;
	PlayerInfo[playerid][pvMuted] = 0;
	PlayerInfo[playerid][paMuted] = 0;
	PlayerInfo[playerid][patMuted] = 0;
	PlayerInfo[playerid][pvtMuted] = 0;
	PlayerInfo[playerid][pfMuted] = 0;
	PlayerInfo[playerid][pftMuted] = 0;
	PlayerInfo[playerid][pSpree] = 0;
	PlayerInfo[playerid][pCalcSec] = 0.0;
	PlayerInfo[playerid][pCWons] = 0;
	PlayerInfo[playerid][pLotto] = 0;
	PlayerInfo[playerid][pHide] = 0;
	PlayerInfo[playerid][pHide2] = 0;
	PlayerInfo[playerid][pHide3] = 0;
	PlayerInfo[playerid][pHide4] = 0;
	PlayerInfo[playerid][pIgnorePM] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pDmon] = 0;
	PlayerInfo[playerid][pPP] = 0;
	PlayerInfo[playerid][pGL] = 0;
	PlayerInfo[playerid][pDP] = 0;
	PlayerInfo[playerid][pV] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pWantedDeaths] = 0;
	PlayerInfo[playerid][Level] = 1;
	PlayerInfo[playerid][Exp] = 0;
	gPlayerAccount[playerid] = 0;
	gPlayerLogged[playerid] = 0;
    gPlayerLogTries[playerid] = 0;
   	PlayerInfo[playerid][EpSkill] = 0;
   	PlayerInfo[playerid][MoneySkill] = 0;
    gPlayerSpawned[playerid] = 0;
    BladeKill[playerid] = 0;
    PlayerSpectating[playerid] = 0;
    SpecPlayerReturnPos[playerid] = 0;
    PlayerKilled[playerid] = 0;
    HitID[playerid] = 999;
    gDropPickup[playerid] = -1;
    gPickupID[playerid] = 0;
    PlayerInEvent[playerid] = 0;
    IsHitman[playerid] = 0;
    PlayerCar[playerid] = 0;
    FactionRequest[playerid] = 255;
	return 0;
}
//==============================================================================
public OnPlayerDisconnect(playerid, reason)
{
KillTimer(connect_timer3[playerid]);
KillTimer(connect_timer2[playerid]);
KillTimer(connect_timer[playerid]);
SaveTurfs3();
if(PlayerInfo[playerid][pInCTF] && ctfred == 1)
	                {
	                new string[256];
	                ctfred = 1;
	                ctfblue = 0;
	                ctfp -= 1;
	                TextDrawHideForPlayer(playerid, Text4[playerid]);
	                format(string, sizeof(string), "Capture The Flag: освободи се едно свободно място ипзолзвай /ctfon за да влезеш в червеният отбор");
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 0;
	                PlayerInfo[playerid][pInCTF] = 0;
	                return 1;
	                }
if(PlayerInfo[playerid][pInCTF] && ctfblue == 1)
	                {
	                new string[256];
	                ctfred = 0;
	                ctfblue = 1;
	                ctfp -= 1;
	                TextDrawHideForPlayer(playerid, Text4[playerid]);
	                format(string, sizeof(string), "Capture The Flag: освободи се едно свободно място ипзолзвай /ctfon за да влезеш в синият отбор");
	                SendClientMessageToAll(COLOR_BL1,string);
	                PlayerInfo[playerid][pBlueCTF] = 0;
	                PlayerInfo[playerid][pInCTF] = 0;
	                return 1;
	                }
TextDrawDestroy(Foto);
        graf[playerid] = 0;

        if(CreatedRamp[playerid] == true) DestroyObject(Ramp[playerid]), CreatedRamp[playerid] = false;
        CreatedRamp[playerid] = false;
        Enabled[playerid]=0;
        Pers[playerid]=0;
        
ResetPlayerVariables(playerid);
OnPlayerDataSave(playerid);
KillTimer(dragTimers[playerid]);


				if(PlayerInfo[playerid][pDuelMoney] == 1)
			{
			new string2[256];
            format(string2, sizeof(string2), "%s излезе от сървъра,затова поканата му се отменя", GetName(playerid));
	        SendClientMessage(PlayerInfo[playerid][pDuelH], COLOR_YELLOW,string2);
 			PlayerInfo[playerid][pDuelMoney] = 0;
			new duelh1 = PlayerInfo[playerid][pDuelH];
			PlayerInfo[duelh1][pDuelMoney] = 0;
			PlayerInfo[playerid][pDuelMoney] = 0;
			PlayerInfo[duelh1][pDuelMoney2] = 0;
			PlayerInfo[playerid][pDuelMoney2] = 0;
		}
				if(PlayerInfo[playerid][pDuelMoney2] == 1)
			{
			new duelh1 = PlayerInfo[playerid][pDuelH];
			new string2[256];
            format(string2, sizeof(string2), "%s излезе от сървъра", GetName(playerid));
	        SendClientMessage(PlayerInfo[playerid][pDuelH], COLOR_YELLOW,string2);
 			PlayerInfo[playerid][pDuelMoney] = 0;
			PlayerInfo[duelh1][pDuelMoney] = 0;
			PlayerInfo[playerid][pDuelMoney] = 0;
			PlayerInfo[duelh1][pDuelMoney2] = 0;
			PlayerInfo[playerid][pDuelMoney2] = 0;
		}
		
     if (PlayerInfo[playerid][pKufar] >= 1)
     {
	 new string2[256];
	 for(new i; i<MAX_PLAYERS; i++)
			{
	      PlayerInfo[i][pDMF2] = 1*1;
	      }
                        format(string2, sizeof(string2), "{33CC00}Moneybox: %s излезе от сървъра и мисията спря",PlayerName(playerid));
                        SendClientMessageToAll(COLOR_GREEN, string2);
                        		  Kufar = 0;
		  Moneybox = 0;
		  Death = 1;
		  for(new i; i<MAX_PLAYERS; i++)
			{
                                            GameTextForPlayer(i, "~w~Mission~n~~r~Deathmatch", 3000, 1);
                  PlayerInfo[i][pMoney] = 0;
                  PlayerInfo[i][pDM] = 1*1;
                  PlayerInfo[i][pKufar] = 0;
                           DisablePlayerCheckpoint(i);
                            DisablePlayerCheckpoint(playerid);
}
}


	    if(PlayerInfo[playerid][pRober] == 1)
	 {
  new string2[256];
PlayerInfo[playerid][pRob1] = 0;
PlayerInfo[playerid][pRober] = 0;
robmoney = 0;
    format(string2, sizeof(string2), "Човекът които се опита да прави обир на банкомат излезе от сървъра и обира се прекрати автоматично");
    SendClientMessageToAll(COLOR_ORANGE, string2);
            format(string2, sizeof(string2), "Вече може да се стартира нов обир на банкомат");
    SendClientMessageToAll(COLOR_ORANGE, string2);
}
	    if(PlayerInfo[playerid][pRoberN] == 1)
	 {
	 new string2[256];
PlayerInfo[playerid][pRobN] = 0;
    format(string2, sizeof(string2), "Лидерът на обира излезе от сървъра и обира се прекрати автоматично");
    SendClientMessageToAll(COLOR_ORANGE, string2);
        format(string2, sizeof(string2), "Вече може да се стартира нов обир");
    SendClientMessageToAll(COLOR_ORANGE, string2);
    robmoneyn = 0;
    	        for(new i; i<MAX_PLAYERS; i++)
			{

								PlayerInfo[i][pRoberN2] = 0;
								     TextDrawHideForPlayer(i, robn[i]);
							}
}

            pChannel[playerid] = 0;
        
     	IsInBus[playerid] = 0;
        Delete3DTextLabel(Text3D:PlayerLabel);
        SetPVarInt(playerid, "laser", 0);
        RemovePlayerAttachedObject(playerid, 0);
    	KillTimer(Checkveh[playerid]);
    		OnPlayerDataSave(playerid);
    new pname[MAX_PLAYER_NAME], string[560 + MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, sizeof(pname));
    	        for(new i; i<MAX_PLAYERS; i++)
			{
    switch(reason)
    {
        case 0: format(string, sizeof(string), "{FFFFFF}%s {B50F00}излезе от сървъра. {FFFFFF}(Загуби връзка)", pname);
        case 1: format(string, sizeof(string), "{FFFFFF}%s {B50F00}излезе от сървъра. {FFFFFF}(Излезе)", pname);
    }
    SendClientMessage(i, COLOR_WHITE, string);
	}
	return 1;
}
#if defined FOR_EACH
	Itter_Remove(HSVictim, playerid);
#endif
//--------------------------
//==============================================================================
forward server(playerid);
public server(playerid)
{
//
	
for(new i = 0; i < MAX_PLAYERS; i++)
    {
        new string[256];
        new nxtlevel = PlayerInfo[i][Level]+1; // As soon as its executed, It adds +1 to your score.
        new expamount = nxtlevel*levelexp;
        format(string, sizeof(string), "~r~Red Team: %d ~n~~b~Blue Team: %d", RedPoints,BluePoints);
        TextDrawSetString(Text4[i], string);
        format(string, sizeof(string), "   ~y~Level: ~w~%d  ~y~EP: ~w~%d/~g~%d", PlayerInfo[i][Level],PlayerInfo[i][Exp],expamount);
        TextDrawSetString(Text[i], string);
        format(string, sizeof(string), "   ~y~EPSKILL: ~w~%d   ~y~MSKILL: ~w~%d",PlayerInfo[i][EpSkill],PlayerInfo[i][MoneySkill]);
        TextDrawSetString(Text1[i], string);
        format(string, sizeof(string), "~r~Kills: ~w~%d/~g~25", PlayerInfo[i][pDP]);
        TextDrawSetString(dmon1[i], string);
        
                format(string, sizeof(string), "~r~Restart after: ~w~%d ~n~~r~secounds", rtimer);
        TextDrawSetString(restime2[i], string);
        

        
        new year,month,day,hours,minutes,seconds;
	getdate(year, month, day), gettime(hours, minutes, seconds);
	format(string, sizeof string, "~y~%d.~y~%s%d.~y~%s%d~w~ --- ~g~%s%d:~g~%s%d:~g~%s%d", day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year, (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds);
	TextDrawSetString(ClockData[i], string);
        }


}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
stock GetOnlinePlayers()
{
    new z;
    for(new i; i<GetMaxPlayers(); i++) if(IsPlayerConnected(i)) z++;
    return z;
}
//==============================================================================
public OnPlayerRegister(playerid, password[])
{
	if(IsPlayerConnected(playerid))
	{
	    new string[256], playersip[64];
	    GetPlayerIp(playerid, playersip, sizeof(playersip));
	    format(string, sizeof(string), "%s.ini", PlayerName(playerid));
		if(!dini_Exists(string))
		{
		    dini_Create(string);
		    strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
		    strmid(PlayerInfo[playerid][pIP], playersip, 0, strlen(playersip), 255);
		    dini_Set(string, "Key", password);
		    dini_Set(string, "IP", playersip);
		    dini_IntSet(string, "TestLevel", 0);
		    dini_IntSet(string, "AdminLevel", 0);
		    dini_IntSet(string, "aDuty", 0);
		    dini_IntSet(string, "DutyG", 0);
		    dini_IntSet(string, "aTog", 0);
		    dini_IntSet(string, "pMember", TEAM_VIP);
		    dini_IntSet(string, "pRank", 0);
		    dini_IntSet(string, "Ban", 0);
		    dini_IntSet(string, "DonateRank", 0);
		    dini_IntSet(string, "Warnings", 0);
		    dini_IntSet(string, "Registered", 0);
		    dini_IntSet(string, "Cash", 0);
			dini_IntSet(string, "Kills", 0);
			dini_IntSet(string, "Deaths", 0);
			dini_IntSet(string, "Muted", 0);
			dini_IntSet(string, "KillSpree", 0);
			dini_IntSet(string, "CWons", 0);
			dini_IntSet(string, "Hide", 0);
			dini_IntSet(string, "pIgnorePM", 0);
		    dini_IntSet(string, "pV", 0);
            dini_IntSet(string, "pDmon", 0);
            dini_IntSet(string, "pPP", 0);
            dini_IntSet(string, "pGL", 0);
            dini_IntSet(string, "pDP", 0);
            dini_IntSet(string, "pJailed", 0);
            dini_IntSet(string, "pCrimes", 0);
			dini_IntSet(string, "Level", 1);
			dini_IntSet(string, "Exp", 0);
			dini_IntSet(string, "WsSkill", 0);
			dini_IntSet(string, "EpSkill", 0);
			dini_IntSet(string, "MoneySKill", 0);
			dini_IntSet(string, "pWantedLevel", 0);
		}
		new tmppass[64];
		OnPlayerLogin(playerid,tmppass);
	}
	return 1;
}
////////////////////////////////////////////////////////////////////////////////
//==============================================================================
public OnPlayerDataSave1(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		    new string[256], playersip[64];
		    format(string, sizeof(string), "%s.ini", PlayerName(playerid));
		    GetPlayerIp(playerid, playersip, sizeof(playersip));
		    if(dini_Exists(string))
		    {
		        dini_IntSet(string, "Block", PlayerInfo[playerid][pBlock]);
		    }
		}
    return 1;
}












public OnPlayerDataSave(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(gPlayerLogged[playerid] && gPlayerSpawned[playerid])
		{
		    new string[256], playersip[64];
		    format(string, sizeof(string), "%s.ini", PlayerName(playerid));
		    GetPlayerIp(playerid, playersip, sizeof(playersip));
		    if(dini_Exists(string))
		    {
		        dini_Set(string, "Key", PlayerInfo[playerid][pKey]);
		        dini_Set(string, "IP", PlayerInfo[playerid][pIP]);
		        dini_IntSet(string, "Test", PlayerInfo[playerid][pTest]);
		        dini_IntSet(string, "Skin", PlayerInfo[playerid][pSkin]);
		        dini_IntSet(string, "Dis", PlayerInfo[playerid][pDis]);
		        dini_IntSet(string, "Event", PlayerInfo[playerid][pEvent]);
		        dini_IntSet(string, "EC", PlayerInfo[playerid][pO]);
		        //
		 		dini_IntSet(string, "Vlak", PlayerInfo[playerid][pVlak]);
			    dini_IntSet(string, "Samolet", PlayerInfo[playerid][pSamolet]);
			    dini_IntSet(string, "pZarche", PlayerInfo[playerid][pZarche]);
		        dini_IntSet(string, "Hili", PlayerInfo[playerid][pHili]);
		        dini_IntSet(string, "Boat", PlayerInfo[playerid][pBoat]);
		        dini_IntSet(string, "TowT", PlayerInfo[playerid][pTowT]);
		        //
		        		        dini_IntSet(string, "Duel", PlayerInfo[playerid][pDuel]);
		        dini_IntSet(string, "AdminLevel", PlayerInfo[playerid][pAdmin]);
		        //
		        dini_IntSet(string, "pHouse1", PlayerInfo[playerid][pHouse1]);
		        dini_IntSet(string, "pHouse2", PlayerInfo[playerid][pHouse2]);
		        dini_IntSet(string, "pHouse3", PlayerInfo[playerid][pHouse3]);
		        
		        dini_IntSet(string, "pBiz1", PlayerInfo[playerid][pBiz1]);
		        dini_IntSet(string, "pBiz2", PlayerInfo[playerid][pBiz2]);
		        dini_IntSet(string, "pBiz3", PlayerInfo[playerid][pBiz3]);
		        //
		        dini_IntSet(string, "pEarnings", PlayerInfo[playerid][pEarnings]);
		        dini_IntSet(string, "pBizPayday", PlayerInfo[playerid][pBizPayday]);
		        dini_IntSet(string, "pVudica", PlayerInfo[playerid][pVudica]);
		        dini_IntSet(string, "pStruv", PlayerInfo[playerid][pStruv]);
		        dini_IntSet(string, "pOfis1", PlayerInfo[playerid][pOfis1]);
		         dini_IntSet(string, "pOfis2", PlayerInfo[playerid][pOfis2]);
		          dini_IntSet(string, "pOfis3", PlayerInfo[playerid][pOfis3]);
		         dini_IntSet(string, "pOfis4", PlayerInfo[playerid][pOfis4]);
		         dini_IntSet(string, "pOfis5", PlayerInfo[playerid][pOfis5]);
		         dini_IntSet(string, "pOfis6", PlayerInfo[playerid][pOfis6]);
		         dini_IntSet(string, "pOfis7", PlayerInfo[playerid][pOfis7]);
		         dini_IntSet(string, "pOfis8", PlayerInfo[playerid][pOfis8]);
		         dini_IntSet(string, "pOfis9", PlayerInfo[playerid][pOfis9]);
		         dini_IntSet(string, "pOfis10", PlayerInfo[playerid][pOfis10]);
		          dini_IntSet(string, "pOfis11", PlayerInfo[playerid][pOfis11]);
		           dini_IntSet(string, "pOfis12", PlayerInfo[playerid][pOfis12]);
		           dini_IntSet(string, "pOfis13", PlayerInfo[playerid][pOfis13]);
		           dini_IntSet(string, "pBizO", PlayerInfo[playerid][pBizO]);
		           dini_IntSet(string, "pHouseO", PlayerInfo[playerid][pHouseO]);
		           dini_IntSet(string, "pOfis", PlayerInfo[playerid][pOfis]);
		           dini_IntSet(string, "pOfis14", PlayerInfo[playerid][pOfis14]);
		           dini_IntSet(string, "pOfis15", PlayerInfo[playerid][pOfis15]);
		           dini_IntSet(string, "pOfis16", PlayerInfo[playerid][pOfis16]);
		           dini_IntSet(string, "pOfis17", PlayerInfo[playerid][pOfis17]);
		            dini_IntSet(string, "pOfis18", PlayerInfo[playerid][pOfis18]);
		            dini_IntSet(string, "pOfis19", PlayerInfo[playerid][pOfis19]);
		             dini_IntSet(string, "pOfis20", PlayerInfo[playerid][pOfis20]);
		        dini_IntSet(string, "pZabrana", PlayerInfo[playerid][pZabrana]);
		        dini_IntSet(string, "pCMN1Kill", PlayerInfo[playerid][pCMN1Kill]);
		        dini_IntSet(string, "pBombs", PlayerInfo[playerid][pBombs]);
		        dini_IntSet(string, "PayD", PlayerInfo[playerid][pPayD]);
		        
		        dini_IntSet(string, "pMounth", PlayerInfo[playerid][pMounth]);
		        dini_IntSet(string, "pDay", PlayerInfo[playerid][pDay]);
		        dini_IntSet(string, "pYear", PlayerInfo[playerid][pYear]);
		        		        dini_IntSet(string, "p4as", PlayerInfo[playerid][p4as]);
		        dini_IntSet(string, "pMinuti", PlayerInfo[playerid][pMinuti]);
		        dini_IntSet(string, "pSekundi", PlayerInfo[playerid][pSekundi]);
		        		        dini_IntSet(string, "WK", PlayerInfo[playerid][pWK]);
		        
		        		        		        dini_IntSet(string, "Cok", PlayerInfo[playerid][pCok]);
		        dini_IntSet(string, "Heroin", PlayerInfo[playerid][pHeroin]);
		        dini_IntSet(string, "pMoonshine", PlayerInfo[playerid][pMoonshine]);
		        dini_IntSet(string, "pWeed", PlayerInfo[playerid][pWeed]);
		        //
		        		        dini_IntSet(string, "Zvezda1", PlayerInfo[playerid][pZvezda1]);
		        dini_IntSet(string, "CarPos1", PlayerInfo[playerid][pCarPos1]);
		        dini_IntSet(string, "CarPos2", PlayerInfo[playerid][pCarPos2]);
		        dini_IntSet(string, "CarPos3", PlayerInfo[playerid][pCarPos3]);
		        dini_IntSet(string, "CarPos4", PlayerInfo[playerid][pCarPos4]);
		        dini_IntSet(string, "CarPos5", PlayerInfo[playerid][pCarPos5]);
		        dini_IntSet(string, "CarPos6", PlayerInfo[playerid][pCarPos6]);
		        dini_IntSet(string, "CarPos7", PlayerInfo[playerid][pCarPos7]);
		        dini_IntSet(string, "CarPos8", PlayerInfo[playerid][pCarPos8]);
		        dini_IntSet(string, "CarPos9", PlayerInfo[playerid][pCarPos9]);
		        dini_IntSet(string, "CarPos10", PlayerInfo[playerid][pCarPos10]);
		        dini_IntSet(string, "CarPos11", PlayerInfo[playerid][pCarPos11]);
		        dini_IntSet(string, "CarPos12", PlayerInfo[playerid][pCarPos12]);
		        //
		        dini_IntSet(string, "Car1", PlayerInfo[playerid][pCar1]);
		        dini_IntSet(string, "Car2", PlayerInfo[playerid][pCar2]);
		        dini_IntSet(string, "Car3", PlayerInfo[playerid][pCar3]);
		        dini_IntSet(string, "Car4", PlayerInfo[playerid][pCar4]);
		        dini_IntSet(string, "Car5", PlayerInfo[playerid][pCar5]);
		        dini_IntSet(string, "Car6", PlayerInfo[playerid][pCar6]);
		        dini_IntSet(string, "Car7", PlayerInfo[playerid][pCar7]);
		        		        dini_IntSet(string, "Car8", PlayerInfo[playerid][pCar8]);
		        dini_IntSet(string, "Car9", PlayerInfo[playerid][pCar9]);
		        dini_IntSet(string, "Car10", PlayerInfo[playerid][pCar10]);
		        dini_IntSet(string, "Car11", PlayerInfo[playerid][pCar11]);
		        dini_IntSet(string, "Car12", PlayerInfo[playerid][pCar12]);
		        //
		        dini_IntSet(string, "House", PlayerInfo[playerid][pHouse]);
		        dini_IntSet(string, "Benzinka1", PlayerInfo[playerid][pBenzinka1]);
		        dini_IntSet(string, "Benzinka2", PlayerInfo[playerid][pBenzinka2]);
		        dini_IntSet(string, "Benzinka3", PlayerInfo[playerid][pBenzinka3]);
		        dini_IntSet(string, "Benzinka4", PlayerInfo[playerid][pBenzinka4]);
		        
		        //
		        dini_IntSet(string, "Cnos", PlayerInfo[playerid][pCnos]);
		         dini_IntSet(string, "NPM", PlayerInfo[playerid][pNPM]);
		        		        dini_IntSet(string, "OfficeS", PlayerInfo[playerid][pOfficeS]);
		        		        		        dini_IntSet(string, "CivilS", PlayerInfo[playerid][pCivilS]);
		        dini_IntSet(string, "Vote", PlayerInfo[playerid][pVote]);
		        dini_IntSet(string, "Ne", PlayerInfo[playerid][pNe]);
		        dini_IntSet(string, "None", PlayerInfo[playerid][pNone]);
		        dini_IntSet(string, "Da", PlayerInfo[playerid][pDa]);
		  //
		  		        dini_IntSet(string, "Elblow", PlayerInfo[playerid][pElblow]);
		  		        		        dini_IntSet(string, "Grabkick", PlayerInfo[playerid][pGrabKick]);
		  		        		        		        dini_IntSet(string, "Kungfu", PlayerInfo[playerid][pKungfu]);
		  		        		        		        		        dini_IntSet(string, "Boxing", PlayerInfo[playerid][pBoxing]);
		  //
		        dini_IntSet(string, "GFC", PlayerInfo[playerid][pGFC]);
		        dini_IntSet(string, "pOffice", PlayerInfo[playerid][pOffice]);
		        dini_IntSet(string, "Cig", PlayerInfo[playerid][pCig]);
		        dini_IntSet(string, "Radio", PlayerInfo[playerid][pRadio]);
		        dini_IntSet(string, "DrugPerk",PlayerInfo[playerid][pDrugPerk]);
		        dini_IntSet(string, "Cuffed", PlayerInfo[playerid][pCuffed]);
		        dini_IntSet(string, "Manage", PlayerInfo[playerid][pManage]);
		        dini_IntSet(string, "Account", PlayerInfo[playerid][pAccount]);
		        dini_IntSet(string, "pTuba", PlayerInfo[playerid][pTuba]);
		        dini_IntSet(string, "pTuba2", PlayerInfo[playerid][pTuba2]);
		        dini_IntSet(string, "aDuty", PlayerInfo[playerid][aDuty]);
		        dini_IntSet(string, "DutyG", PlayerInfo[playerid][DutyG]);
		        dini_IntSet(string, "aTog", PlayerInfo[playerid][aTog]);
		        dini_IntSet(string, "pMember", PlayerInfo[playerid][pMember]);
		        dini_IntSet(string, "pRank", PlayerInfo[playerid][pRank]);
		        dini_IntSet(string, "Block", PlayerInfo[playerid][pBlock]);
		        dini_IntSet(string, "Ban", PlayerInfo[playerid][pBanned]);
		        dini_IntSet(string, "pBReason", PlayerInfo[playerid][pBReason]);
		        dini_IntSet(string, "BV", PlayerInfo[playerid][pBV]);
		        dini_IntSet(string, "DonateRank", PlayerInfo[playerid][pDonateRank]);
		        dini_IntSet(string, "pDeltaForce", PlayerInfo[playerid][pDeltaForce]);
		        dini_IntSet(string, "TimeVip", PlayerInfo[playerid][pTimeVip]);
		        dini_IntSet(string, "Registered", PlayerInfo[playerid][pReg]);
		        dini_IntSet(string,"Registred2", PlayerInfo[playerid][pReg2]);
		        dini_IntSet(string, "Warnings", PlayerInfo[playerid][pWarns]);
		        dini_IntSet(string, "Cash", PlayerInfo[playerid][pCash]);
		        dini_IntSet(string, "Kills", PlayerInfo[playerid][pKills]);
		        dini_IntSet(string, "Deaths", PlayerInfo[playerid][pDeaths]);
		        dini_IntSet(string, "Muted", PlayerInfo[playerid][pMuted]);
		        dini_IntSet(string, "pMuteReason", PlayerInfo[playerid][pMuteReason]);
		        dini_IntSet(string, "pADMINMUTE", PlayerInfo[playerid][pADMINMUTE]);
		        dini_IntSet(string, "pZabrana", PlayerInfo[playerid][pZabrana]);
		        dini_IntSet(string, "pDea", PlayerInfo[playerid][pDea]);
		        dini_IntSet(string, "pMon", PlayerInfo[playerid][pMon]);
		        dini_IntSet(string, "pSt", PlayerInfo[playerid][pSt]);
		        dini_IntSet(string, "Coalmine1", PlayerInfo[playerid][pCoalmine1]);
		        dini_IntSet(string, "Piza1", PlayerInfo[playerid][pPiza1]);
		        dini_IntSet(string, "Bus", PlayerInfo[playerid][pBus1]);
		        dini_IntSet(string, "Pilot", PlayerInfo[playerid][pPilot1]);
	            dini_IntSet(string, "Sweep", PlayerInfo[playerid][pSweep1]);
		        dini_IntSet(string, "ReportMuted", PlayerInfo[playerid][prMuted]);
		        dini_IntSet(string, "ReportTimeMuted", PlayerInfo[playerid][ptrMuted]);
		        dini_IntSet(string, "TimeMuted", PlayerInfo[playerid][ptMuted]);
		        dini_IntSet(string, "AMuted", PlayerInfo[playerid][paMuted]);
		        dini_IntSet(string, "VipMuted", PlayerInfo[playerid][pvMuted]);
                dini_IntSet(string, "AdminTimeMuted", PlayerInfo[playerid][patMuted]);
                dini_IntSet(string, "VipTimeMuted", PlayerInfo[playerid][pvtMuted]);
		        dini_IntSet(string, "FactionMuted", PlayerInfo[playerid][pfMuted]);
		        dini_IntSet(string, "FactionTimeMuted", PlayerInfo[playerid][pftMuted]);
				dini_IntSet(string, "KillSpree", PlayerInfo[playerid][pSpree]);
		        dini_IntSet(string, "CWons", PlayerInfo[playerid][pCWons]);
		        dini_IntSet(string, "Hide", PlayerInfo[playerid][pHide]);
		        dini_IntSet(string, "Hide2", PlayerInfo[playerid][pHide2]);
		        dini_IntSet(string, "Hide3", PlayerInfo[playerid][pHide3]);
		        dini_IntSet(string, "Hide4", PlayerInfo[playerid][pHide4]);
                dini_IntSet(string, "pIgnorePM", PlayerInfo[playerid][pIgnorePM]);
                dini_IntSet(string, "pV", PlayerInfo[playerid][pV]);
                dini_IntSet(string, "pPP", PlayerInfo[playerid][pPP]);
                dini_IntSet(string, "pDmon", PlayerInfo[playerid][pDmon]);
                dini_IntSet(string, "pGL", PlayerInfo[playerid][pGL]);
                dini_IntSet(string, "pDP", PlayerInfo[playerid][pDP]);
                dini_IntSet(string, "pJailed", PlayerInfo[playerid][pJailed]);
		        dini_IntSet(string, "pCrimes", PlayerInfo[playerid][pCrimes]);
		        dini_IntSet(string, "pJail", PlayerInfo[playerid][pJail]);
            	dini_IntSet(string, "Level", PlayerInfo[playerid][Level]);
            	dini_IntSet(string, "Exp", PlayerInfo[playerid][Exp]);
            	dini_IntSet(string, "EpSkill", PlayerInfo[playerid][EpSkill]);
            	dini_IntSet(string, "MoneySkill", PlayerInfo[playerid][MoneySkill]);
            	dini_IntSet(string, "WsSkill", PlayerInfo[playerid][WsSkill]);
				dini_IntSet(string, "pWantedDeaths", PlayerInfo[playerid][pWantedDeaths]);
				dini_IntSet(string, "pWantedLevel", PlayerInfo[playerid][pWantedLevel]);
		    }
		}
	}
    return 1;
}
//==============================================================================
public OnPlayerLogin(playerid,password[])
{

	    
	new string2[256], keystring[256];
	format(string2, sizeof(string2), "%s.ini", PlayerName(playerid));
	keystring = dini_Get(string2, "Key");
	
	if(strcmp(keystring, password, true) == 0)
	{
	    PlayerInfo[playerid][pCoalmine1] = dini_Int(string2,"Coalmine1");
	    PlayerInfo[playerid][pPiza1] = dini_Int(string2,"Piza1");
	    PlayerInfo[playerid][pPilot1] = dini_Int(string2,"Pilot1");
	    PlayerInfo[playerid][pBus1] = dini_Int(string2,"Bus1");
	    PlayerInfo[playerid][pSweep1] = dini_Int(string2,"Sweep1");
	    PlayerInfo[playerid][pTest] = dini_Int(string2,"Test");
	    PlayerInfo[playerid][pSkin] = dini_Int(string2,"Skin");
	    PlayerInfo[playerid][pDis] = dini_Int(string2,"Dis");
	    PlayerInfo[playerid][pEvent] = dini_Int(string2,"Event");
	    PlayerInfo[playerid][pManage] = dini_Int(string2,"Manage");
	    PlayerInfo[playerid][pO] = dini_Int(string2,"EC");
	    PlayerInfo[playerid][pDrugPerk] = dini_Int(string2,"DrugPerk");
		PlayerInfo[playerid][pVlak] = dini_Int(string2,"Vlak");
		PlayerInfo[playerid][pSamolet] = dini_Int(string2,"Samolet");
		PlayerInfo[playerid][pZarche] = dini_Int(string2,"pZarche");
		PlayerInfo[playerid][pTowT] = dini_Int(string2,"TowT");
		PlayerInfo[playerid][pHili] = dini_Int(string2,"Hili");
		PlayerInfo[playerid][pBoat] = dini_Int(string2,"Boat");
		PlayerInfo[playerid][pStruv] = dini_Int(string2,"pStruv");
		PlayerInfo[playerid][pVudica] = dini_Int(string2,"pVudica");
		PlayerInfo[playerid][pBizPayday] = dini_Int(string2,"pBizPayday");
		PlayerInfo[playerid][pAdmin] = dini_Int(string2,"AdminLevel");
		//
		PlayerInfo[playerid][pHouse1] = dini_Int(string2,"pHouse1");
		PlayerInfo[playerid][pHouse2] = dini_Int(string2,"pHouse2");
		PlayerInfo[playerid][pHouse3] = dini_Int(string2,"pHouse3");
		
		PlayerInfo[playerid][pBiz1] = dini_Int(string2,"pBiz1");
		PlayerInfo[playerid][pBiz2] = dini_Int(string2,"pBiz2");
		PlayerInfo[playerid][pBiz3] = dini_Int(string2,"pBiz3");
		//
		PlayerInfo[playerid][pEarnings] = dini_Int(string2,"pEarnings");
		PlayerInfo[playerid][pOfis1] = dini_Int(string2,"pOfis1");
		PlayerInfo[playerid][pOfis2] = dini_Int(string2,"pOfis2");
		PlayerInfo[playerid][pOfis3] = dini_Int(string2,"pOfis3");
		PlayerInfo[playerid][pOfis4] = dini_Int(string2,"pOfis4");
		PlayerInfo[playerid][pOfis5] = dini_Int(string2,"pOfis5");
		PlayerInfo[playerid][pOfis6] = dini_Int(string2,"pOfis6");
		PlayerInfo[playerid][pOfis7] = dini_Int(string2,"pOfis7");
		PlayerInfo[playerid][pOfis8] = dini_Int(string2,"pOfis8");
		PlayerInfo[playerid][pOfis9] = dini_Int(string2,"pOfis9");
		PlayerInfo[playerid][pOfis10] = dini_Int(string2,"pOfis10");
		PlayerInfo[playerid][pOfis11] = dini_Int(string2,"pOfis11");
		PlayerInfo[playerid][pOfis12] = dini_Int(string2,"pOfis12");
		PlayerInfo[playerid][pOfis13] = dini_Int(string2,"pOfis13");
		PlayerInfo[playerid][pBizO] = dini_Int(string2,"pBizO");
		PlayerInfo[playerid][pHouseO] = dini_Int(string2,"pHouseO");
		PlayerInfo[playerid][pOfis] = dini_Int(string2,"pOfis");
		PlayerInfo[playerid][pOfis14] = dini_Int(string2,"pOfis14");
		PlayerInfo[playerid][pOfis15] = dini_Int(string2,"pOfis15");
		PlayerInfo[playerid][pOfis16] = dini_Int(string2,"pOfis16");
		PlayerInfo[playerid][pOfis17] = dini_Int(string2,"pOfis17");
		PlayerInfo[playerid][pOfis18] = dini_Int(string2,"pOfis18");
		PlayerInfo[playerid][pOfis19] = dini_Int(string2,"pOfis19");
		PlayerInfo[playerid][pOfis20] = dini_Int(string2,"pOfis20");
		PlayerInfo[playerid][pZabrana] = dini_Int(string2,"pZabrana");
		PlayerInfo[playerid][pCMN1Kill] = dini_Int(string2,"pCMN1Kill");
		PlayerInfo[playerid][pADMINMUTE] = dini_Int(string2,"pADMINMUTE");
		PlayerInfo[playerid][pSt] = dini_Int(string2,"pSt");
		PlayerInfo[playerid][pDea] = dini_Int(string2,"pDea");
		PlayerInfo[playerid][pMon] = dini_Int(string2,"pMon");
		PlayerInfo[playerid][pPayD] = dini_Int(string2,"PayD");
PlayerInfo[playerid][pBombs] = dini_Int(string2,"pBombs");
		PlayerInfo[playerid][pYear] = dini_Int(string2,"pYear");
		PlayerInfo[playerid][pDay] = dini_Int(string2,"pDay");
		PlayerInfo[playerid][pMounth] = dini_Int(string2,"pMounth");
		
		PlayerInfo[playerid][p4as] = dini_Int(string2,"p4as");
		PlayerInfo[playerid][pMinuti] = dini_Int(string2,"pMinuti");
		PlayerInfo[playerid][pSekundi] = dini_Int(string2,"pSekundi");
				PlayerInfo[playerid][pWK] = dini_Int(string2,"WK");
		
				PlayerInfo[playerid][pZvezda1] = dini_Int(string2,"Zvezda1");

		PlayerInfo[playerid][pCok] = dini_Int(string2,"Cok");

				PlayerInfo[playerid][pHeroin] = dini_Int(string2,"Heroin");
				PlayerInfo[playerid][pMoonshine] = dini_Int(string2,"pMoonshine");
				PlayerInfo[playerid][pWeed] = dini_Int(string2,"pWeed");
		//
				PlayerInfo[playerid][pCarPos1] = dini_Int(string2,"CarPos1");
				PlayerInfo[playerid][pCarPos2] = dini_Int(string2,"CarPos2");
				PlayerInfo[playerid][pCarPos3] = dini_Int(string2,"CarPos3");
				PlayerInfo[playerid][pCarPos4] = dini_Int(string2,"CarPos4");
				PlayerInfo[playerid][pCarPos5] = dini_Int(string2,"CarPos5");
				PlayerInfo[playerid][pCarPos6] = dini_Int(string2,"CarPos6");
				PlayerInfo[playerid][pCarPos7] = dini_Int(string2,"CarPos7");
				PlayerInfo[playerid][pCarPos8] = dini_Int(string2,"CarPos8");
				PlayerInfo[playerid][pCarPos9] = dini_Int(string2,"CarPos9");
				PlayerInfo[playerid][pCarPos10] = dini_Int(string2,"CarPos10");
				PlayerInfo[playerid][pCarPos11] = dini_Int(string2,"CarPos11");
				PlayerInfo[playerid][pCarPos12] = dini_Int(string2,"CarPos12");

		//
		PlayerInfo[playerid][pCar1] = dini_Int(string2,"Car1");
		PlayerInfo[playerid][pCar2] = dini_Int(string2,"Car2");
		PlayerInfo[playerid][pCar3] = dini_Int(string2,"Car3");
		PlayerInfo[playerid][pCar4] = dini_Int(string2,"Car4");
		PlayerInfo[playerid][pCar5] = dini_Int(string2,"Car5");
		PlayerInfo[playerid][pCar6] = dini_Int(string2,"Car6");
		PlayerInfo[playerid][pCar7] = dini_Int(string2,"Car7");
		PlayerInfo[playerid][pCar8] = dini_Int(string2,"Car8");
		PlayerInfo[playerid][pCar9] = dini_Int(string2,"Car9");
		PlayerInfo[playerid][pCar10] = dini_Int(string2,"Car10");
		PlayerInfo[playerid][pCar11] = dini_Int(string2,"Car11");
				PlayerInfo[playerid][pCar12] = dini_Int(string2,"Car12");
		//
		PlayerInfo[playerid][pHouse] = dini_Int(string2,"House");
				PlayerInfo[playerid][pCnos] = dini_Int(string2,"Cnos");
				PlayerInfo[playerid][pNPM] = dini_Int(string2,"NPM");
				PlayerInfo[playerid][pCivilS] = dini_Int(string2,"CivilS");
						PlayerInfo[playerid][pOfficeS] = dini_Int(string2,"OfficeS");
						PlayerInfo[playerid][pDuel] = dini_Int(string2,"Duel");
				PlayerInfo[playerid][pVote] = dini_Int(string2,"Vote");
		//
		PlayerInfo[playerid][pElblow] = dini_Int(string2,"Elblow");
				PlayerInfo[playerid][pGrabKick] = dini_Int(string2,"GrabKick");
						PlayerInfo[playerid][pKungfu] = dini_Int(string2,"Kungfu");
								PlayerInfo[playerid][pBoxing] = dini_Int(string2,"Boxing");
		//
		PlayerInfo[playerid][pGFC] = dini_Int(string2,"GFC");
		PlayerInfo[playerid][pOffice] = dini_Int(string2,"pOffice");
		PlayerInfo[playerid][pCig] = dini_Int(string2,"Cig");
		PlayerInfo[playerid][pAccount] = dini_Int(string2,"Account");
		PlayerInfo[playerid][pTuba] = dini_Int(string2,"pTuba");
		PlayerInfo[playerid][pTuba2] = dini_Int(string2,"pTuba2");
		PlayerInfo[playerid][pRadio] = dini_Int(string2,"Radio");
		PlayerInfo[playerid][pTazerBullets] = dini_Int(string2,"TazerBullets");
		PlayerInfo[playerid][aDuty] = dini_Int(string2,"aDuty");
		PlayerInfo[playerid][DutyG] = dini_Int(string2,"DutyG");
		PlayerInfo[playerid][aTog] = dini_Int(string2,"aTog");
		PlayerInfo[playerid][pMember] = dini_Int(string2,"pMember");
		PlayerInfo[playerid][pRank] = dini_Int(string2,"pRank");
 		PlayerInfo[playerid][pBlock] = dini_Int(string2,"Block");
		PlayerInfo[playerid][pBanned] = dini_Int(string2,"Ban");
		PlayerInfo[playerid][pDonateRank] = dini_Int(string2,"DonateRank");
		PlayerInfo[playerid][pDeltaForce] = dini_Int(string2,"pDeltaForce");
		PlayerInfo[playerid][pTimeVip] = dini_Int(string2,"TimeVip");
		PlayerInfo[playerid][pBV] = dini_Int(string2,"BV");
		PlayerInfo[playerid][pWarns] = dini_Int(string2,"Warnings");
		PlayerInfo[playerid][pReg] = dini_Int(string2,"Registered");
		PlayerInfo[playerid][pReg2] = dini_Int(string2,"Registred2");
		PlayerInfo[playerid][pCash] = dini_Int(string2,"Cash");
		PlayerInfo[playerid][pKills] = dini_Int(string2,"Kills");
		PlayerInfo[playerid][pDeaths] = dini_Int(string2,"Deaths");
		PlayerInfo[playerid][pMuted] = dini_Int(string2,"Muted");
		PlayerInfo[playerid][pMuteReason] = dini_Int(string2,"pMuteReason");
		PlayerInfo[playerid][prMuted] = dini_Int(string2,"ReportMuted");
		PlayerInfo[playerid][ptrMuted] = dini_Int(string2,"ReportTimeMuted");
		PlayerInfo[playerid][ptMuted] = dini_Int(string2,"TimeMuted");
		PlayerInfo[playerid][pvMuted] = dini_Int(string2,"VipMuted");
		PlayerInfo[playerid][paMuted] = dini_Int(string2,"AMuted");
		PlayerInfo[playerid][pvtMuted] = dini_Int(string2,"AdminTimeMuted");
		PlayerInfo[playerid][pvtMuted] = dini_Int(string2,"VipTimeMuted");
		PlayerInfo[playerid][pfMuted] = dini_Int(string2,"FactionMuted");
		PlayerInfo[playerid][pftMuted] = dini_Int(string2,"FactionTimeMuted");
		PlayerInfo[playerid][pSpree] = dini_Int(string2,"KillSpree");
		PlayerInfo[playerid][pCWons] = dini_Int(string2,"CWons");
		PlayerInfo[playerid][pHide] = dini_Int(string2,"Hide");
		PlayerInfo[playerid][pHide2] = dini_Int(string2,"Hide2");
		PlayerInfo[playerid][pHide3] = dini_Int(string2,"Hide3");
		PlayerInfo[playerid][pHide4] = dini_Int(string2,"Hide4");
    	PlayerInfo[playerid][pIgnorePM] = dini_Int(string2,"pIgnorePM");
    	PlayerInfo[playerid][pDmon] = dini_Int(string2,"pDmon");
    	PlayerInfo[playerid][pPP] = dini_Int(string2,"pPP");
    	PlayerInfo[playerid][pDP] = dini_Int(string2,"pDP");
    	PlayerInfo[playerid][pV] = dini_Int(string2,"pV");
		PlayerInfo[playerid][pJailed] = dini_Int(string2,"pJailed");
		PlayerInfo[playerid][pCrimes] = dini_Int(string2,"pCrimes");
		PlayerInfo[playerid][pJail] = dini_Int(string2,"pJail");
		PlayerInfo[playerid][Level] = dini_Int(string2,"Level");
		PlayerInfo[playerid][Exp] = dini_Int(string2,"Exp");
		PlayerInfo[playerid][EpSkill] = dini_Int(string2,"EpSkill");
		PlayerInfo[playerid][LevelSkill] = dini_Int(string2,"LevelSkill");
		PlayerInfo[playerid][MoneySkill] = dini_Int(string2,"MoneySkill");
		PlayerInfo[playerid][WsSkill] = dini_Int(string2,"WsSkill");
		PlayerInfo[playerid][pWantedDeaths] = dini_Int(string2,"pWantedDeaths");
		PlayerInfo[playerid][pWantedLevel] = dini_Int(string2,"pWantedLevel");
    	PlayerInfo[playerid][pGL] = dini_Int(string2,"pGL");
	}
	else
	{
	    new loginstring[256];
		format(loginstring,sizeof(loginstring),"{FFFFFF}Добре дошъл {2C6700}%s\n{FFFFFF}Името е регистрирано Моля, въведи твоята парола", PlayerName(playerid));
		ShowPlayerDialog(playerid,12347,DIALOG_STYLE_PASSWORD,"Влизане:",loginstring,"Влез","Излез");
		TextDrawHideForPlayer(playerid, ClockData[playerid]);
		
		TextDrawShowForPlayer(playerid, ClockData[playerid]);
		format(string2, sizeof(string2), "SERVER: Грешна парола");
	    SendClientMessage(playerid, COLOR_RED,string2);
	    gPlayerLogTries[playerid] += 1;
	    if(gPlayerLogTries[playerid] == 3)
	 {
    format(string2, sizeof(string2), "SERVER: %s was kicked by THE SERVER [Reason: Wrong Password]", PlayerName(playerid));
    SendClientMessageToAll(COLOR_RED, string2);
	    format(string2, sizeof(string2), "SERVER: Ти си KICKED,Причина 3 грешни опита!");
	    SendClientMessage(playerid, COLOR_RED,string2);
	    Kick(playerid);
}
		return 1;
	}
	   new year,month,day;
	    	new hours,minutes,seconds;
	if(PlayerInfo[playerid][pBlock] >= 1)
	{
	format(string2, sizeof(string2), "SERVER: Този акаунт е блокиран!");
	    SendClientMessage(playerid, COLOR_RED,string2);
	   SetTimerEx("DelayedKick", 1000, false, "i", playerid);
	 }
	
    new string[256];
    
        				TogglePlayerSpectating(playerid, false);
        ForceClassSelection(playerid);
        PlayerInfo[playerid][pVreme] = 1*60;
        PlayerInfo[playerid][pMonTime] = 1*1;
        PlayerInfo[playerid][pStTime] = 1*1;
        PlayerInfo[playerid][pDeaTime] = 1*1;
        PlayerInfo[playerid][pCMTime] = 1*1;
        if(PlayerInfo[playerid][pReg] == 0)
        {
        format(string, sizeof(string), "SERVER: Ти успешно регистрира {00A600}%s{FFFFFF} с парола {FFFF00}%s {FFFF00}{FFFFFF},ти автоматично влезе в акаунта си.",PlayerName(playerid),PlayerInfo[playerid][pKey]);
	    SendClientMessage(playerid, COLOR_WHITE,string);
	    }
	SendClientMessage(playerid,COLOR_WHITE,"{FFFF00}Добре дошъл в {FFFFFF}[-Gold-Play-]{00FF00}[1.6]{FF0000}[0.3.7]{FFFFFF}[Версия 1.6 © sTrIx 2015 - site: http://gtagpbg.freeforums.org]");
	SendClientMessage(playerid,COLOR_WHITE,"");
	GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 21);
	strmid(PlayerInfo[playerid][pKey], password, 0, strlen(password), 255);
    
    			    	
	        new nxtlevel = PlayerInfo[playerid][Level]+1;
        new expamount = nxtlevel*levelexp;
        new admin[32];
	                	if(PlayerInfo[playerid][pTest] == 1) { admin = "Test Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pTest] == 0) { admin = "None"; }
                	else if(PlayerInfo[playerid][pAdmin] == 1) { admin = "Helper"; }
                	else if(PlayerInfo[playerid][pAdmin] == 4) { admin = "Grand Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 2) { admin = "Administrator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 3) { admin = "Moderator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 6) { admin = "Owner";}
					else if(PlayerInfo[playerid][pAdmin] == 7) { admin = "Scripter";}
					else if(PlayerInfo[playerid][pAdmin] == 5) { admin = "Master Admin";}
    
    
    

	    		format(string, sizeof(string), "{00E600}SERVER: Ти влезе успешно в акаунта!");
	    		SendClientMessage(playerid, COLOR_WHITE,string);
	    			    		format(string, sizeof(string), "Admin Level: %s | VIP Level: %d | Player Level: %d | EP: %d| Faction: %s(%d)", admin, PlayerInfo[playerid][pDonateRank], PlayerInfo[playerid][Level], PlayerInfo[playerid][Exp], TeamInfo[PlayerInfo[playerid][pMember]][TeamName],PlayerInfo[playerid][pRank]);
	    		SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
    
    

    


	    		
	    	if(PlayerInfo[playerid][pReg] == 1)
	{
 				    	new month1[32];
	                	if(PlayerInfo[playerid][pMounth] == 1) { month1 = "Януари"; }
                	else if(PlayerInfo[playerid][pMounth] == 2) { month1 = "февруари"; }
                	else if(PlayerInfo[playerid][pMounth] == 3) { month1 = "Март"; }
                	else if(PlayerInfo[playerid][pMounth] == 4) { month1 = "Април"; }
                	else if(PlayerInfo[playerid][pMounth] == 5) { month1 = "Май"; }
                	else if(PlayerInfo[playerid][pMounth] == 6) { month1 = "Юни"; }
                	else if(PlayerInfo[playerid][pMounth] == 7) { month1 = "Юли"; }
					else if(PlayerInfo[playerid][pMounth] == 8) { month1 = "Август"; }
					else if(PlayerInfo[playerid][pMounth] == 9) { month1 = "Септември"; }
					else if(PlayerInfo[playerid][pMounth] == 10) { month1 = "Октомври"; }
					else if(PlayerInfo[playerid][pMounth] == 11) { month1 = "Ноември"; }
					else if(PlayerInfo[playerid][pMounth] == 12) { month1 = "Декември"; }
	    		
			    		format(string, sizeof(string), "Последното влизане в този акаунт е било на: %d %s %d в %d:%d:%d",PlayerInfo[playerid][pDay],month1,PlayerInfo[playerid][pYear],PlayerInfo[playerid][p4as],PlayerInfo[playerid][pMinuti],PlayerInfo[playerid][pSekundi]);
	    		SendClientMessage(playerid, COLOR_WHITE,string);
	    		format(string, sizeof(string), "",PlayerInfo[playerid][pDay],month1,PlayerInfo[playerid][pYear],PlayerInfo[playerid][p4as],PlayerInfo[playerid][pMinuti],PlayerInfo[playerid][pSekundi]);
	    		SendClientMessage(playerid, COLOR_WHITE,string);
	    		
	    		
	    		
	    		TextDrawShowForPlayer(playerid, CD), TextDrawShowForPlayer(playerid, Text[playerid]), TextDrawShowForPlayer(playerid, Text1[playerid]);

	    		






	    				 getdate(year, month, day);
 PlayerInfo[playerid][pDay] = day;
 PlayerInfo[playerid][pMounth] = month;
 PlayerInfo[playerid][pYear] = year;
 	gettime(hours, minutes, seconds);
	 PlayerInfo[playerid][p4as] = hours;
 PlayerInfo[playerid][pMinuti] = minutes;
    PlayerInfo[playerid][pSekundi] = seconds;
        	    	if(Moneybox == 1)
	{
				    SetPlayerCheckpoint(playerid, MB1, 3.0);

                                            GameTextForPlayer(playerid, "~w~Mission~n~~g~Moneybox", 3000, 1);
	}



	    	if(Death == 1)
	{
				    SetPlayerCheckpoint(playerid, DM, 3.0);

                                            GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 3000, 1);
	}
		    	if(Death2 == 1)
	{
				    SetPlayerCheckpoint(playerid, DM2, 3.0);

                                            GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 3000, 1);
	}
			    	if(Death3 == 1)
	{
				    SetPlayerCheckpoint(playerid, DM3, 3.0);

                                            GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 3000, 1);
	}



		    	if(Kufar == 1)
	{
	Moneybox = 0;
				    SetPlayerCheckpoint(playerid, MB2, 3.0);

                                            GameTextForPlayer(playerid, "~w~Mission~n~~g~Moneybox", 3000, 1);
	}



		    	if(Race == 1)
	{
				    SetPlayerCheckpoint(playerid, Racestart, 3.0);

                                            GameTextForPlayer(playerid, "~w~Mission~n~~b~Street Race", 3000, 1);
	}
			    	if(Race2 == 1)
	{

				    SetPlayerCheckpoint(playerid, Racestart2, 3.0);

                                            GameTextForPlayer(playerid, "~w~Mission~n~~b~Street Race", 3000, 1);
	}
				    	if(Race3 == 1)
	{
	Moneybox = 0;

				    SetPlayerCheckpoint(playerid, Racestart3, 3.0);
                                            GameTextForPlayer(playerid, "~w~Mission~n~~b~Street Race", 3000, 1);
	}
	
	}

	    		
	    			if(PlayerInfo[playerid][pReg] == 0)
	{
	
	//
	
	
	
	
	
	
	
	
	
	
	//
	    PlayerInfo[playerid][pReg] = 1;
		GivePlayerCash(playerid, 5000);
		 getdate(year, month, day);
 PlayerInfo[playerid][pDay] = day;
 PlayerInfo[playerid][pMounth] = month;
 PlayerInfo[playerid][pYear] = year;
	gettime(hours, minutes, seconds);
	 PlayerInfo[playerid][p4as] = hours;
 PlayerInfo[playerid][pMinuti] = minutes;
   PlayerInfo[playerid][pSekundi] = seconds;
 				    	new month1[32];
	                	if(PlayerInfo[playerid][pMounth] == 1) { month1 = "Януари"; }
                	else if(PlayerInfo[playerid][pMounth] == 2) { month1 = "февруари"; }
                	else if(PlayerInfo[playerid][pMounth] == 3) { month1 = "Март"; }
                	else if(PlayerInfo[playerid][pMounth] == 4) { month1 = "Април"; }
                	else if(PlayerInfo[playerid][pMounth] == 5) { month1 = "Май"; }
                	else if(PlayerInfo[playerid][pMounth] == 6) { month1 = "Юни"; }
                	else if(PlayerInfo[playerid][pMounth] == 7) { month1 = "Юли"; }
					else if(PlayerInfo[playerid][pMounth] == 8) { month1 = "Август"; }
					else if(PlayerInfo[playerid][pMounth] == 9) { month1 = "Септември"; }
					else if(PlayerInfo[playerid][pMounth] == 10) { month1 = "Октомври"; }
					else if(PlayerInfo[playerid][pMounth] == 11) { month1 = "Ноември"; }
					else if(PlayerInfo[playerid][pMounth] == 12) { month1 = "Декември"; }
									format(string, sizeof(string), "");
	    		SendClientMessage(playerid, COLOR_WHITE,string);
	    		SendClientMessage(playerid, COLOR_WHITE,string);
	    		TextDrawShowForPlayer(playerid, CD), TextDrawShowForPlayer(playerid, Text[playerid]), TextDrawShowForPlayer(playerid, Text1[playerid]);
			    		format(string, sizeof(string), "Последното ти влизане в този акаунт е било на: %d %d %s %d:%d:%d",PlayerInfo[playerid][pYear],PlayerInfo[playerid][pDay],month1,PlayerInfo[playerid][p4as],PlayerInfo[playerid][pMinuti],PlayerInfo[playerid][pSekundi]);
	    		SendClientMessage(playerid, COLOR_WHITE,string);
	}
	gPlayerLogged[playerid] = 1;
	SetPlayerCash(playerid, PlayerInfo[playerid][pCash]);
    
    
    
    	    	if(Moneybox == 1)
	{
				    SetPlayerCheckpoint(playerid, MB1, 3.0);
				        
                                            GameTextForPlayer(playerid, "~w~Mission~n~~g~Moneybox", 3000, 1);
	}



	    	if(Death == 1)
	{
				    SetPlayerCheckpoint(playerid, DM, 3.0);
				            
                                            GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 3000, 1);
	}
		    	if(Death2 == 1)
	{
				    SetPlayerCheckpoint(playerid, DM2, 3.0);
				           
                                            GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 3000, 1);
	}
			    	if(Death3 == 1)
	{
				    SetPlayerCheckpoint(playerid, DM3, 3.0);
				            
                                            GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 3000, 1);
	}



		    	if(Kufar == 1)
	{
	Moneybox = 0;
				    SetPlayerCheckpoint(playerid, MB2, 3.0);
				    				           
                                            GameTextForPlayer(playerid, "~w~Mission~n~~g~Moneybox", 3000, 1);
	}



		    	if(Race == 1)
	{
				    SetPlayerCheckpoint(playerid, Racestart, 3.0);

                                            GameTextForPlayer(playerid, "~w~Mission~n~~b~Street Race", 3000, 1);
	}
			    	if(Race2 == 1)
	{

				    SetPlayerCheckpoint(playerid, Racestart2, 3.0);
				    				             
                                            GameTextForPlayer(playerid, "~w~Mission~n~~b~Street Race", 3000, 1);
	}
				    	if(Race3 == 1)
	{
	Moneybox = 0;

				    SetPlayerCheckpoint(playerid, Racestart3, 3.0);
                                            GameTextForPlayer(playerid, "~w~Mission~n~~b~Street Race", 3000, 1);
	}
	return 1;
}
//==============================================================================
public OnPlayerSpawn(playerid)
{
PlayerInfo[playerid][pHouseInfor] = 1*1;
PlayerInfo[playerid][pBizInfor] = 1*1;
fly[playerid] = 0;

			    
	        if (PlayerInfo[playerid][pInDMF] >= 1)
			{
				SetPlayerPos(playerid, 1220.5503,-1656.2913,11.7969);
	SetPlayerVirtualWorld(playerid, 99990);
			            ResetPlayerWeapons(playerid);
                        ResetPlayerWeaponsEx(playerid);
                        GivePlayerWeapon(playerid, 30,5000);
			return 1;
			}

    FlashZoneForPlayer(playerid);
	//
        TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
if(PlayerInfo[playerid][pWantedLevel] == 0)
					{
SetPlayerWantedLevel(playerid,0);
					}
					
					if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
//












    
//
    StopAudioStreamForPlayer(playerid);
    SetPlayerInterior(playerid, 0);
    SetPlayerVirtualWorld(playerid, 0);
    SetPlayerScore(playerid, PlayerInfo[playerid][pKills]);
    SetPlayerSkillLevel(playerid,0,999);
	SetPlayerSkillLevel(playerid,1,999);
	SetPlayerSkillLevel(playerid,2,999);
	SetPlayerSkillLevel(playerid,3,999);
	SetPlayerSkillLevel(playerid,4,999);
	SetPlayerSkillLevel(playerid,5,999);
	SetPlayerSkillLevel(playerid,6,999);
	SetPlayerSkillLevel(playerid,7,999);
	SetPlayerSkillLevel(playerid,8,999);
	SetPlayerSkillLevel(playerid,9,999);
	SetPlayerSkillLevel(playerid,10,999);
	SetPlayerToTeamColor(playerid);
	for (new i = 0; i < MAX_TURFS; i++) GangZoneShowForPlayer(playerid, turfs[i][turfID], turfs[i][TurfColor]);
	SetPlayerSpawn(playerid);
	//
	    	if(PlayerInfo[playerid][pElblow] == 1)
	{
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
	}
	
	    	if(Moneybox == 1)
	{
				    SetPlayerCheckpoint(playerid, MB1, 3.0);
				             SendClientMessage(playerid,COLOR_GREEN,"Moneybox: Все още има Moneybox и имаш шанса да спечелиш пари");
                                            GameTextForPlayer(playerid, "~w~Mission~n~~g~Moneybox", 3000, 1);
	}
	
	
	
	    	if(Death == 1)
	{
				    SetPlayerCheckpoint(playerid, DM, 3.0);
				             SendClientMessage(playerid,COLOR_RD2,"Deathmatch: Все още има Deathmatch и имаш шанса да спечелиш пари");
                                            GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 3000, 1);
	}
		    	if(Death2 == 1)
	{
				    SetPlayerCheckpoint(playerid, DM2, 3.0);
				             SendClientMessage(playerid,COLOR_RD2,"Deathmatch: Все още има Deathmatch и имаш шанса да спечелиш пари");
                                            GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 3000, 1);
	}
			    	if(Death3 == 1)
	{
				    SetPlayerCheckpoint(playerid, DM3, 3.0);
				             SendClientMessage(playerid,COLOR_RD2,"Deathmatch: Все още има Deathmatch и имаш шанса да спечелиш пари");
                                            GameTextForPlayer(playerid, "~w~Mission~n~~r~Deathmatch", 3000, 1);
	}
	
	
	
		    	if(Kufar == 1)
	{
	Moneybox = 0;
				    SetPlayerCheckpoint(playerid, MB2, 3.0);
				    				             SendClientMessage(playerid,COLOR_GREEN,"Moneybox: Все още има Moneybox и имаш шанса да спечелиш пари");
                                            GameTextForPlayer(playerid, "~w~Mission~n~~g~Moneybox", 3000, 1);
	}
	
	
	
		    	if(Race == 1)
	{
				    SetPlayerCheckpoint(playerid, Racestart, 3.0);
				    				             SendClientMessage(playerid,COLOR_BL1,"Streetrace: Все още има Street Race и имаш шанса да спечелиш пари");
                                            GameTextForPlayer(playerid, "~w~Mission~n~~b~Street Race", 3000, 1);
	}
			    	if(Race2 == 1)
	{
	
				    SetPlayerCheckpoint(playerid, Racestart2, 3.0);
				    				             SendClientMessage(playerid,COLOR_BL1,"Streetrace: Все още има Street Race и имаш шанса да спечелиш пари");
                                            GameTextForPlayer(playerid, "~w~Mission~n~~b~Street Race", 3000, 1);
	}
				    	if(Race3 == 1)
	{
	Moneybox = 0;

				    SetPlayerCheckpoint(playerid, Racestart3, 3.0);
				    				             SendClientMessage(playerid,COLOR_BL1,"Streetrace: Все още има Street Race и имаш шанса да спечелиш пари");
                                            GameTextForPlayer(playerid, "~w~Mission~n~~b~Street Race", 3000, 1);
	}
	
	
//
	    	if(PlayerInfo[playerid][pZvezda1] == 1)
	{
	WantedPoints[playerid] = 1;
	}
		    	if(PlayerInfo[playerid][pZvezda1] == 2)
	{
	WantedPoints[playerid] = 3;
	}
		    	if(PlayerInfo[playerid][pZvezda1] == 3)
	{
	WantedPoints[playerid] = 3;
	}
		    	if(PlayerInfo[playerid][pZvezda1] == 4)
	{
	WantedPoints[playerid] = 4;
	}
		    	if(PlayerInfo[playerid][pZvezda1] == 5)
	{
	WantedPoints[playerid] = 5;
	}
		    	if(PlayerInfo[playerid][pZvezda1] == 6)
	{
	WantedPoints[playerid] = 6;
	}
 
            			    if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
 {
		    SetPlayerPos(playerid, 2324.6035,-1136.6400,1051.3047);
			SetPlayerInterior(playerid, 12);
			SetPlayerVirtualWorld(playerid, 2);
		}
 
 
 
			    if(PlayerInfo[playerid][pMember] == TEAM_GROVE)
	{
            SetPlayerPos(playerid,2494.7446,-1684.7919,13.5110);
            SetPlayerInterior(playerid, 0);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 107);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 107);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 107);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 106);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 271);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 149);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 105);
			}
       }
 
 
 



//
	    	if(PlayerInfo[playerid][pInDMF] == 1)
	{
	SetPlayerPos(playerid, 1220.5503,-1656.2913,11.7969);
	SetPlayerVirtualWorld(playerid, 99990);
	                        ResetPlayerWeapons(playerid);
                        ResetPlayerWeaponsEx(playerid);
GivePlayerWeapon(playerid, 30,5000);
	}

		    	if(PlayerInfo[playerid][pOfficeS] == 1)
	{
	SetPlayerInterior(playerid,0);
	SetPlayerPos(playerid, 1789.3209,-1298.8424,13.3750);
	}
		    	if(PlayerInfo[playerid][pGrabKick] == 1)
	{
		SetPlayerInterior(playerid,0);
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
	}
		    	if(PlayerInfo[playerid][pBoxing] == 1)
	{
		SetPlayerInterior(playerid,0);
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
	}
		    	if(PlayerInfo[playerid][pKungfu] == 1)
	{
		SetPlayerInterior(playerid,0);
	    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
	}
//
			    if(PlayerInfo[playerid][pV] == 1)
	{
	   
	   	SetPlayerInterior(playerid,0);
        SetPlayerPos(playerid, 1481.3265,-1767.5563,18.7958);
		SetPlayerInterior(playerid, 0);
	}
	//
	     	if(PlayerInfo[playerid][AFKstatus] == 1)
	{
	            ResetPlayerWeapons(playerid);
	            SetPlayerInterior(playerid,15);
		        SetPlayerColor(playerid, COLOR_AFK);
				SetPlayerPos(playerid,2215.454833,-1147.475585,1025.796875);
				SendClientMessage(playerid, COLOR_GREEN3,"Ако искаш да се върнеш обратно в игра напиши /back!");
	}
		    if(PlayerInfo[playerid][pDonateRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_GROVE)
	{
		        SetPVarInt(playerid, "laser", 1);
        SetPVarInt(playerid, "color", 19083);
	}
		    if(PlayerInfo[playerid][pDonateRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_GPD)
	{
		        SetPVarInt(playerid, "laser", 1);
        SetPVarInt(playerid, "color", 19080);
	}
		    if(PlayerInfo[playerid][pDonateRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_MS13)
	{
		        SetPVarInt(playerid, "laser", 1);
        SetPVarInt(playerid, "color", 19080);
	}
		    if(PlayerInfo[playerid][pDonateRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_YAKUZA)
	{
		        SetPVarInt(playerid, "laser", 1);
        SetPVarInt(playerid, "color", 19084);
	}
	
	//
		    if(PlayerInfo[playerid][pDonateRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_CRIPZ)
	{
		        SetPVarInt(playerid, "laser", 1);
        SetPVarInt(playerid, "color", 19080);
	}
			    if(PlayerInfo[playerid][pDonateRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
	{
		        SetPVarInt(playerid, "laser", 1);
        SetPVarInt(playerid, "color", 19080);
	}
			    if(PlayerInfo[playerid][pDonateRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_Thugs)
	{
		        SetPVarInt(playerid, "laser", 1);
        SetPVarInt(playerid, "color", 19080);
	}
	
		    if(PlayerInfo[playerid][pDonateRank] >= 6 && PlayerInfo[playerid][p4anti] == 1 && PlayerInfo[playerid][pGranati] == 1)
	{
		GivePlayerWeapon(playerid, 39, 6); //sat
	}
			    if(PlayerInfo[playerid][pDonateRank] == 7 && PlayerInfo[playerid][p4anti] == 1 && PlayerInfo[playerid][pGranati] == 1)
	{
		GivePlayerWeapon(playerid, 39, 7); //sat
	}
		    if(PlayerInfo[playerid][pDonateRank] == 5 && PlayerInfo[playerid][p4anti] == 1 && PlayerInfo[playerid][pGranati] == 1)
	{
		GivePlayerWeapon(playerid, 39, 5); //sat
	}
	
	
		    if(PlayerInfo[playerid][pDonateRank] >= 6 && PlayerInfo[playerid][pGranati] == 1 && PlayerInfo[playerid][pGranati] == 1)
	{
		GivePlayerWeapon(playerid, 16, 6); //Grenade
	}
			    if(PlayerInfo[playerid][pDonateRank] == 7 && PlayerInfo[playerid][pGranati] == 1 && PlayerInfo[playerid][pGranati] == 1)
	{
		GivePlayerWeapon(playerid, 16, 7); //Grenade
	}
		    if(PlayerInfo[playerid][pDonateRank] == 5 && PlayerInfo[playerid][pGranati] == 1 && PlayerInfo[playerid][pGranati] == 1)
	{
		GivePlayerWeapon(playerid, 16, 5); //Grenade
	}
	
			    if(PlayerInfo[playerid][pWantedLevel] >= 7)
	{
PlayerInfo[playerid][pWantedLevel] = 6;
	}
	
	
		    if(PlayerInfo[playerid][pDonateRank] >= 4 && PlayerInfo[playerid][pWantedLevel] == 0 && PlayerInfo[playerid][aDuty] == 0)
	{
	Delete3DTextLabel(Text3D:PlayerLabel);
	    format(dstring,sizeof(dstring),"{FF0000}VIP");
	    PlayerLabel = Create3DTextLabel(dstring, 0x8B0000FF, 0.0, 0.0, 30.0, 15.0, 0, 1);
	    Attach3DTextLabelToPlayer(PlayerLabel, playerid, 0.0, 0.0, 0.20);
		SetPlayerArmour(playerid, 100);
	}
			    if(PlayerInfo[playerid][pWantedLevel] >= 1 && PlayerInfo[playerid][aDuty] == 0)
	{
	Delete3DTextLabel(Text3D:PlayerLabel);
     Delete3DTextLabel(Text3D:PlayerLabel);
     format(dstring,sizeof(dstring),"SUSPECTED - %d", PlayerInfo[playerid][pWantedLevel]);
     PlayerLabel = Create3DTextLabel(dstring, 0x003366FF, 0.0, 0.0, 35.0, 15.0, 0, 1);
     Attach3DTextLabelToPlayer(PlayerLabel, playerid, 0.0, 0.0, 0.20);
	}
		    if(PlayerInfo[playerid][pDmon] == 1)
	{
	   SetPlayerArmour(playerid, 0);
        SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
		SetPlayerInterior(playerid, 1);
		TextDrawShowForPlayer(playerid, dmon1[playerid]);
		                        ResetPlayerWeapons(playerid);
                        ResetPlayerWeaponsEx(playerid);
		new r = random(sizeof(PossibleRandomWeapons));
		SetPlayerVirtualWorld(playerid, 989);
GivePlayerWeapon(playerid, PossibleRandomWeapons[r][0], PossibleRandomWeapons[r][1]);
                
	}
	else if(PlayerInfo[playerid][WsSkill] == 0)
	{
GivePlayerWeapon(playerid, 23,14);
GivePlayerWeapon(playerid, 25,23);
GivePlayerWeapon(playerid, 31,25);
	}
	else if(PlayerInfo[playerid][WsSkill] == 1)
	{
GivePlayerWeapon(playerid, 23,40);
GivePlayerWeapon(playerid, 25,43);
GivePlayerWeapon(playerid, 31,45);
	}
	else if(PlayerInfo[playerid][WsSkill] == 2)
	{
GivePlayerWeapon(playerid, 29,45);
GivePlayerWeapon(playerid, 33,43);
GivePlayerWeapon(playerid, 22,35);
	}
	else if(PlayerInfo[playerid][WsSkill] == 3)
	{
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 33,43);
GivePlayerWeapon(playerid, 22,35);
	}
	else if(PlayerInfo[playerid][WsSkill] == 4)
	{
GivePlayerWeapon(playerid, 27,25);
GivePlayerWeapon(playerid, 31,13);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 17,2);
	}
	else if(PlayerInfo[playerid][WsSkill] == 5)
	{
GivePlayerWeapon(playerid, 27,45);
GivePlayerWeapon(playerid, 31,33);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 17,5);
	}
	else if(PlayerInfo[playerid][WsSkill] == 6)
	{
GivePlayerWeapon(playerid, 27,45);
GivePlayerWeapon(playerid, 31,33);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 17,7);
	}
	else if(PlayerInfo[playerid][WsSkill] == 7)
	{
GivePlayerWeapon(playerid, 25,25);
GivePlayerWeapon(playerid, 30,43);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
	}
	else if(PlayerInfo[playerid][WsSkill] == 8)
	{
GivePlayerWeapon(playerid, 25,45);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 30,53);
GivePlayerWeapon(playerid, 24,45);
	}
	else if(PlayerInfo[playerid][WsSkill] == 9)
	{
GivePlayerWeapon(playerid, 25,75);
GivePlayerWeapon(playerid, 30,63);
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 4,1);
	}
	else if(PlayerInfo[playerid][WsSkill] == 10)
	{
GivePlayerWeapon(playerid, 28,15);
GivePlayerWeapon(playerid, 27,23);
GivePlayerWeapon(playerid, 24,15);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 11)
	{
GivePlayerWeapon(playerid, 30,33);
GivePlayerWeapon(playerid, 28,25);
GivePlayerWeapon(playerid, 27,33);
GivePlayerWeapon(playerid, 24,25);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 12)
	{
GivePlayerWeapon(playerid, 30,60);
GivePlayerWeapon(playerid, 28,35);
GivePlayerWeapon(playerid, 27,43);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 13)
	{
	GivePlayerWeapon(playerid, 30,90);
GivePlayerWeapon(playerid, 28,45);
GivePlayerWeapon(playerid, 27,53);
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 14)
	{
	GivePlayerWeapon(playerid, 30,130);
GivePlayerWeapon(playerid, 28,15);
GivePlayerWeapon(playerid, 26,15);
GivePlayerWeapon(playerid, 24,15);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 15)
	{
	GivePlayerWeapon(playerid, 30,190);
GivePlayerWeapon(playerid, 28,20);
GivePlayerWeapon(playerid, 26,20);
GivePlayerWeapon(playerid, 24,20);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 16)
	{
GivePlayerWeapon(playerid, 30,300);
GivePlayerWeapon(playerid, 28,25);
GivePlayerWeapon(playerid, 26,25);
GivePlayerWeapon(playerid, 24,25);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 17)
	{
GivePlayerWeapon(playerid, 31,33);
GivePlayerWeapon(playerid, 28,30);
GivePlayerWeapon(playerid, 26,35);
GivePlayerWeapon(playerid, 24,30);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 18)
	{
	GivePlayerWeapon(playerid, 31,60);
GivePlayerWeapon(playerid, 28,35);
GivePlayerWeapon(playerid, 26,35);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 19)
	{
	GivePlayerWeapon(playerid, 31,90);
GivePlayerWeapon(playerid, 28,45);
GivePlayerWeapon(playerid, 26,45);
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 20)
	{
	GivePlayerWeapon(playerid, 31,120);
GivePlayerWeapon(playerid, 28,50);
GivePlayerWeapon(playerid, 26,50);
GivePlayerWeapon(playerid, 24,50);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    		else if(PlayerInfo[playerid][WsSkill] == 21)
	{
	GivePlayerWeapon(playerid, 31,150);
GivePlayerWeapon(playerid, 28,60);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,60);
GivePlayerWeapon(playerid, 24,60);
    	}
    	    	    		else if(PlayerInfo[playerid][WsSkill] == 22)
	{
	GivePlayerWeapon(playerid, 31,160);
GivePlayerWeapon(playerid, 28,70);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,70);
GivePlayerWeapon(playerid, 24,70);
    	}
    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 23)
	{
	GivePlayerWeapon(playerid, 31,180);
GivePlayerWeapon(playerid, 32,15);
GivePlayerWeapon(playerid, 26,15);
GivePlayerWeapon(playerid, 24,15);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 24)
	{
	GivePlayerWeapon(playerid, 31,220);
GivePlayerWeapon(playerid, 32,20);
GivePlayerWeapon(playerid, 26,20);
GivePlayerWeapon(playerid, 24,20);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 25)
	{
	GivePlayerWeapon(playerid, 31,240);
GivePlayerWeapon(playerid, 32,30);
GivePlayerWeapon(playerid, 26,30);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,30);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 26)
	{
	GivePlayerWeapon(playerid, 31,270);
GivePlayerWeapon(playerid, 32,50);
GivePlayerWeapon(playerid, 26,35);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 27)
	{
	GivePlayerWeapon(playerid, 31,280);
GivePlayerWeapon(playerid, 32,60);
GivePlayerWeapon(playerid, 26,40);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,40);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 28)
	{
	GivePlayerWeapon(playerid, 31,300);
GivePlayerWeapon(playerid, 32,70);
GivePlayerWeapon(playerid, 26,50);
GivePlayerWeapon(playerid, 24,50);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 29)
	{
	GivePlayerWeapon(playerid, 31,320);
GivePlayerWeapon(playerid, 32,80);
GivePlayerWeapon(playerid, 26,55);
GivePlayerWeapon(playerid, 24,55);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 30)
	{
	GivePlayerWeapon(playerid, 31,350);
GivePlayerWeapon(playerid, 32,90);
GivePlayerWeapon(playerid, 26,60);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,60);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 31)
	{
	GivePlayerWeapon(playerid, 31,370);
GivePlayerWeapon(playerid, 32,100);
GivePlayerWeapon(playerid, 26,65);
GivePlayerWeapon(playerid, 24,65);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 32)
	{
	GivePlayerWeapon(playerid, 31,380);
GivePlayerWeapon(playerid, 32,110);
GivePlayerWeapon(playerid, 26,70);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,70);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 33)
	{
	GivePlayerWeapon(playerid, 31,390);
GivePlayerWeapon(playerid, 32,120);
GivePlayerWeapon(playerid, 26,77);
GivePlayerWeapon(playerid, 24,77);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 34)
	{
	GivePlayerWeapon(playerid, 31,400);
GivePlayerWeapon(playerid, 32,150);
GivePlayerWeapon(playerid, 26,79);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,79);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 35)
	{
GivePlayerWeapon(playerid, 31,410);
GivePlayerWeapon(playerid, 32,190);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,83);
GivePlayerWeapon(playerid, 24,83);
GivePlayerWeapon(playerid, 33,15);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 36)
	{
	GivePlayerWeapon(playerid, 31,415);
GivePlayerWeapon(playerid, 32,200);
GivePlayerWeapon(playerid, 26,90);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,90);
GivePlayerWeapon(playerid, 33,20);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 37)
	{
	GivePlayerWeapon(playerid, 31,420);
GivePlayerWeapon(playerid, 32,230);
GivePlayerWeapon(playerid, 26,97);
GivePlayerWeapon(playerid, 24,97);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 33,35);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 38)
	{
	GivePlayerWeapon(playerid, 31,430);
GivePlayerWeapon(playerid, 32,260);
GivePlayerWeapon(playerid, 26,99);
GivePlayerWeapon(playerid, 24,99);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 33,42);
    	}
    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 39)
	{
	GivePlayerWeapon(playerid, 31,440);
GivePlayerWeapon(playerid, 32,290);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,115);
GivePlayerWeapon(playerid, 24,115);
GivePlayerWeapon(playerid, 33,62);
    	}
    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 40)
	{
	GivePlayerWeapon(playerid, 31,445);
GivePlayerWeapon(playerid, 32,340);
GivePlayerWeapon(playerid, 26,118);
GivePlayerWeapon(playerid, 24,118);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 33,79);
    	}
    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 41)
	{
	GivePlayerWeapon(playerid, 31,450);
GivePlayerWeapon(playerid, 32,375);
GivePlayerWeapon(playerid, 26,118);
GivePlayerWeapon(playerid, 24,118);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,1);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 42)
	{
	GivePlayerWeapon(playerid, 31,455);
GivePlayerWeapon(playerid, 32,390);
GivePlayerWeapon(playerid, 26,130);
GivePlayerWeapon(playerid, 24,130);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,2);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 43)
	{
	GivePlayerWeapon(playerid, 31,465);
GivePlayerWeapon(playerid, 32,410);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,147);
GivePlayerWeapon(playerid, 24,147);
GivePlayerWeapon(playerid, 34,3);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 44)
	{
	GivePlayerWeapon(playerid, 31,475);
GivePlayerWeapon(playerid, 32,450);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,159);
GivePlayerWeapon(playerid, 24,159);
GivePlayerWeapon(playerid, 34,4);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 45)
	{
	GivePlayerWeapon(playerid, 31,480);
GivePlayerWeapon(playerid, 32,490);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,167);
GivePlayerWeapon(playerid, 24,167);
GivePlayerWeapon(playerid, 34,5);
GivePlayerWeapon(playerid, 35,1);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 46)
	{
	GivePlayerWeapon(playerid, 31,485);
GivePlayerWeapon(playerid, 32,520);
GivePlayerWeapon(playerid, 26,180);
GivePlayerWeapon(playerid, 24,180);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,6);
GivePlayerWeapon(playerid, 35,2);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 47)
	{
	GivePlayerWeapon(playerid, 31,490);
GivePlayerWeapon(playerid, 32,530);
GivePlayerWeapon(playerid, 26,195);
GivePlayerWeapon(playerid, 24,195);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,7);
GivePlayerWeapon(playerid, 35,3);
    	}
    	    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 48)
	{
	GivePlayerWeapon(playerid, 31,495);
GivePlayerWeapon(playerid, 32,595);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,230);
GivePlayerWeapon(playerid, 24,200);
GivePlayerWeapon(playerid, 34,8);
GivePlayerWeapon(playerid, 35,4);
GivePlayerWeapon(playerid, 9,1);
    	}
    	    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 49)
	{
	GivePlayerWeapon(playerid, 31,500);
GivePlayerWeapon(playerid, 32,635);
GivePlayerWeapon(playerid, 26,260);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,210);
GivePlayerWeapon(playerid, 34,9);
GivePlayerWeapon(playerid, 35,5);
GivePlayerWeapon(playerid, 9,1);
    	}
    	    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 50)
	{
	GivePlayerWeapon(playerid, 31,510);
GivePlayerWeapon(playerid, 32,700);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,290);
GivePlayerWeapon(playerid, 24,220);
GivePlayerWeapon(playerid, 34,10);
GivePlayerWeapon(playerid, 35,6);
GivePlayerWeapon(playerid, 9,1);
    	}
//




if(PlayerInfo[playerid][pInCTF] == 1)
			    {
			    ResetPlayerWeapons(playerid);
                        ResetPlayerWeaponsEx(playerid);
GivePlayerWeapon(playerid, 25, 64);
GivePlayerWeapon(playerid, 24, 64);
GivePlayerWeapon(playerid, 29, 64);
GivePlayerWeapon(playerid, 25, 64);
GivePlayerWeapon(playerid, 24, 64);
GivePlayerWeapon(playerid, 29, 64);
			    }

											if(PlayerInfo[playerid][pRank] == 1 && OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerSkin(playerid,280);
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] == 2 && OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerSkin(playerid,281);
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] == 3 && OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerSkin(playerid,284);
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] == 4 && OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerSkin(playerid,282);
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] == 5 && OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerSkin(playerid,285);
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] >= 6 && OnDuty[playerid]== 1  && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerSkin(playerid,288);
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
			        			        											if(DFDuty[playerid]== 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerSkin(playerid,287);
			        SetPlayerColor(playerid,COLOR_DF);
			        }
			        
			        
			        			        			        											if(DFDuty[playerid]== 1 && PlayerInfo[playerid][pMember] != TEAM_GPD)
			        {
			        DFDuty[playerid] = 0;
			        }
			        
//
	                
			if(PlayerInfo[playerid][pBlueCTF] == 1)
	{
	SetPlayerColor(playerid,COLOR_BLUE);
SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
SetPlayerInterior(playerid,10);
		}
					if(PlayerInfo[playerid][pRedCTF] == 1)
	{
	SetPlayerColor(playerid,COLOR_RED);
SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
SetPlayerInterior(playerid,10);
		}
		
	if(PlayerInfo[playerid][aDuty] == 1)
	{
	                        ResetPlayerWeapons(playerid);
                        ResetPlayerWeaponsEx(playerid);
		    	    
	    format(dstring,sizeof(dstring),"ADMIN ON-DUTY");
     PlayerLabel = Create3DTextLabel(dstring, 0xFF0000FF, 0.0, 0.0, 30.0, 20.0, 0, 1);
     Attach3DTextLabelToPlayer(PlayerLabel, playerid, 0.0, 0.0, 0.20);
   	
		SendClientMessage(playerid, COLOR_GREEN,"Ти все-още си On Duty и трябва да помагаш на играчите");
		SetPlayerColor(playerid, COLOR_ADMIN);
		SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
			if(PlayerInfo[playerid][DutyG] == 1)
	{
		SetPlayerHealth(playerid, 99999);
		SetPlayerArmour(playerid, 99999);
		}
	}
		if(PlayerInfo[playerid][pJailed] == 1)
	{
     	PlayerInfo[playerid][pZvezda1] = 0;
   		SetPlayerWantedLevel(playerid, 0);
	    SetPlayerInterior(playerid, 4);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CUFFED);
		SetPlayerPos(playerid, 302.180999,300.722991,999.148437);
		SendClientMessage(playerid, COLOR_GRAD1, "{003399}Admin Jail: Ти все още си в ADMIN затвора!");
	}
			if(PlayerInfo[playerid][pJail] == 1)
	{
	PlayerInfo[playerid][pZvezda1] = 0;
   		SetPlayerWantedLevel(playerid, 0);
          SetPlayerInterior(playerid, 6);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CUFFED);
		SetPlayerPos(playerid, 264.3858,77.3312,1001.0391);
		SendClientMessage(playerid, COLOR_GRAD1, "{1959BA}Jail: Ти все още си в затвора на полицията!");
	}
		    	if(PlayerInfo[playerid][pCivilS] == 1)
	{
new rand = random(5);
SetPlayerPos(playerid,CivilSP[rand][0],CivilSP[rand][1],CivilSP[rand][2]);
SetPlayerInterior(playerid,0);
SetPlayerVirtualWorld(playerid,0);

	}
		    	if(PlayerInfo[playerid][pGFCS] == 1)
	{
	SetPlayerPos(playerid, 286.6993,1398.4935,10.5859);
	SetPlayerVirtualWorld(playerid,0);
    SetPlayerInterior(playerid,0);
	}
			    	if(PlayerInfo[playerid][pSpawnHouse] == 1)
	{
	 for(new h; h<MAX_HOUSES; h++){
 if(HouseInfo[h][Bus] == 0)
 {
 if(strcmp(HouseInfo[h][hName],GetName(playerid), false ) == 0){
	SetPlayerPos(playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ]);
	SetPlayerVirtualWorld(playerid,0);
    SetPlayerInterior(playerid,0);
	}
	}
 }
	}
			    	if(PlayerInfo[playerid][pSpawnBiz] == 1)
	{
 for(new h; h<MAX_HOUSES; h++){
 if(HouseInfo[h][Bus] == 1)
 {
 if(strcmp(HouseInfo[h][hOwner],GetName(playerid), false ) == 0){
	SetPlayerPos(playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ]);
	SetPlayerVirtualWorld(playerid,0);
    SetPlayerInterior(playerid,0);
	}
	}
	}
	}
	return 1;
}
//==============================================================================
public SetPlayerSpawn(playerid)
{
    new rand = random(5);
    new crand = random(3);
    if(SpecPlayerReturnPos[playerid] == 1)
	{
	    SetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
	    SetPlayerFacingAngle(playerid, Unspec[playerid][sAngle]);
	    SetPlayerInterior(playerid, Unspec[playerid][sPint]);
	    SetPlayerVirtualWorld(playerid, Unspec[playerid][sVw]);
	    SpecPlayerReturnPos[playerid] = 0;
	    return 1;
	}
	switch(PlayerInfo[playerid][pMember])
    {
              case TEAM_YAKUZA:
	   {
         	SetPlayerPos(playerid,gYAKUZASP[rand][0],gYAKUZASP[rand][1],gYAKUZASP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gYAKUZASP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 101);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 101);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 47);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 48);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 30);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 7);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 3);
			}
       }
       case TEAM_DPK:
	   {
         	SetPlayerPos(playerid,gDarkSP[rand][0],gDarkSP[rand][1],gDarkSP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gDarkSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 185);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 185);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 120);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 208);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 117);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 118);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 118);
			}
       }
       case TEAM_BALLAS:
	   {
         	SetPlayerPos(playerid,gBallasSP[rand][0],gBallasSP[rand][1],gBallasSP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gBallasSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 104);
	     	    SetPlayerInterior(playerid, 5);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 104);
	     	    SetPlayerInterior(playerid, 5);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 102);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 102);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 102);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
                SetPlayerSkin(playerid, 103);
                SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 103);
			    SetPlayerInterior(playerid, 5);
			}
       }
       case TEAM_RIFA:
	   {
         	SetPlayerPos(playerid,gRIFASP[rand][0],gRIFASP[rand][1],gRIFASP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gRIFASP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	SetPlayerInterior(playerid,2);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 174);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 174);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 174);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 173);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 175);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 175);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 173);
			}
	   }
       case TEAM_VAGOS:
	   {
			SetPlayerPos(playerid,gVagosSP[rand][0],gVagosSP[rand][1],gVagosSP[rand][2]);
   			SetPlayerFacingAngle(playerid,gVagosSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 108);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 108);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 109);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 109);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 109);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 110);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 110);
			}
       }
       case TEAM_VIP:
	   {
         	SetPlayerPos(playerid,gVIPSP[rand][0],gVIPSP[rand][1],gVIPSP[rand][2]);
   			SetPlayerFacingAngle(playerid,gVIPSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 186);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 186);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 19);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 100);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 126);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 147);
			}

       }
       case TEAM_TRIADS:
	   {
    		SetPlayerPos(playerid,gTriadsSP[rand][0],gTriadsSP[rand][1],gTriadsSP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gTriadsSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	SetPlayerInterior(playerid,9);

	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 115);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 115);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 116);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 114);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 114);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 116);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 116);
			}
       }
       case TEAM_BOYZ:
	   {
    		SetPlayerPos(playerid,gBoyzSP[rand][0],gBoyzSP[rand][1],gBoyzSP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gBoyzSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 123);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 123);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 123);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 217);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 101);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 47);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 29);
			}
       }
       case TEAM_CRIPZ:
	   {
    		SetPlayerPos(playerid,gCripzSP[crand][0],gCripzSP[crand][1],gCripzSP[crand][2]);
	     	SetPlayerFacingAngle(playerid,gCripzSP[crand][3]);
     		SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 21);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 21);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 21);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 176);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 156);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 176);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 177);
			}
       }
       case TEAM_GPD:
	   {
    		SetPlayerPos(playerid,GPDSP[crand][0],GPDSP[crand][1],GPDSP[crand][2]);
	     	SetPlayerFacingAngle(playerid,GPDSP[crand][3]);
     		SetCameraBehindPlayer(playerid);
     		SetPlayerInterior(playerid,6);

     	    if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, skins[random(3)]);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, skins[random(3)]);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
       }
       case TEAM_ZETAS:
	   {
    		SetPlayerPos(playerid,ZETAS[crand][0],ZETAS[crand][1],ZETAS[crand][2]);
	     	SetPlayerFacingAngle(playerid,ZETAS[crand][3]);
     		SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 124);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 124);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 125);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 120);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 46);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 30);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 23);
			}
       }
       case TEAM_SoA:
	   {
         	SetPlayerPos(playerid,SoA[rand][0],SoA[rand][1],SoA[rand][2]);
	     	SetPlayerFacingAngle(playerid,SoA[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 248);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 248);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 248);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 100);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 247);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 291);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 73);
			}
       }
	    case TEAM_MS13:
	   {
         	SetPlayerPos(playerid,MS13[rand][0],MS13[rand][1],MS13[rand][2]);
	     	SetPlayerFacingAngle(playerid,MS13[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 115);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 115);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 114);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 116);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 116);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 114);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 116);
			}
	   }
	   case TEAM_BulgarianMafia:
	   {
         	SetPlayerPos(playerid,BulgarianMafia[rand][0],BulgarianMafia[rand][1],BulgarianMafia[rand][2]);
	     	SetPlayerFacingAngle(playerid,BulgarianMafia[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 122);
	     	    SetPlayerInterior(playerid, 5);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 122);
	     	    SetPlayerInterior(playerid, 5);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 123);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 126);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 115);
				SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 174);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 116);
			    SetPlayerInterior(playerid, 5);
			}
	   }
	   case TEAM_FBI:
	   {
         	SetPlayerPos(playerid,BlackStreet[rand][0],BlackStreet[rand][1],BlackStreet[rand][2]);
	     	SetPlayerFacingAngle(playerid,BlackStreet[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 240);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 240);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 166);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 165);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 164);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 217);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 185);
			}
	   }
	   case TEAM_Thugs:
	   {
         	SetPlayerPos(playerid,SB[rand][0],SB[rand][1],SB[rand][2]);
	     	SetPlayerFacingAngle(playerid,SB[rand][3]);
	     	SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 1);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 293);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 293);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 293);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 177);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 126);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 180);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 21);
			}
	   }
	   	   case TEAM_NZ:
	   {
         	SetPlayerPos(playerid,NZ[rand][0],NZ[rand][1],NZ[rand][2]);
	     	SetPlayerFacingAngle(playerid,NZ[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 123);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 123);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 123);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 122);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 121);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 121);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 124);
			}
	   }
	   case TEAM_LatinKing:
	   {
         	SetPlayerPos(playerid,RussianMafia[rand][0],RussianMafia[rand][1],RussianMafia[rand][2]);
	     	SetPlayerFacingAngle(playerid,RussianMafia[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 126);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 126);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5) 
			{
			    SetPlayerSkin(playerid, 115);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 109);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 108);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 47);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 48);
			}
	   }
       case TEAM_AsianBoyz:
	   {
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 47);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 47);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 120);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 122);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 126);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 185);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 292);
			}
       }
       case TEAM_CIVILIAN:
	   {
	         SetPlayerPos(playerid,CivilSP[rand][0],CivilSP[rand][1],CivilSP[rand][2]);
		     SetPlayerFacingAngle(playerid,CivilSP[rand][3]);
		     SetCameraBehindPlayer(playerid);
       }
	}
    return 1;
}
//------------------------------------------------------------------------------
public OnPlayerText(playerid, text[])
{






        PlayerInfo[playerid][pMUTE2] = 1*2;
        PlayerInfo[playerid][pMUTE1] += 1;

    if(PlayerInfo[playerid][pMUTE1] == 4)
    {
	new string2[256];
            format(string2, sizeof(string2), "Ако не спреш да спамиш ще бъдещ заглушен");
    SendClientMessage(playerid, COLOR_WHITE, string2);
return 1;
}
    if(PlayerInfo[playerid][pMUTE1] == 5)
    {
    	new string2[256];
	    				PlayerInfo[playerid][ptMuted] = 3*60;
						PlayerInfo[playerid][pMuted] = 1;
						format(string2, sizeof(string2), "SERVER:%s was muted by THE SERVER for 3 minutes. [Reason: Спам]",PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string2);
return 1;
}

	    

    if(PlayerInfo[playerid][pPrefix2] == 1)
    {
        new pName[MAX_PLAYER_NAME];
        GetPlayerName(playerid, pName, 24);
		new string2[256];
            format(string2, sizeof(string2), "{FF0000}[%s]{FFFFFF}%s: %s",pPrefix ,  pName, text);
    SendClientMessageToAll(COLOR_WHITE, string2);
return 0;
}

    new string[256];
    new tmp[256];
    if(gPlayerSpawned[playerid] != 1)
    {
    SendClientMessage(playerid, COLOR_GREY, "Трябва да натиснеш SPAWN!");
    return 0;
    }
    if(PlayerInfo[playerid][pMuted] != 0)
    {
        SendClientMessage(playerid, COLOR_ADMINCMD, "Ти си заглушен в чата.");
        return 0;
    }
        if(PlayerInfo[playerid][pADMINMUTE] != 0)
    {
        SendClientMessage(playerid, COLOR_ADMINCMD, "Ти си заглушен в чата.");
        return 0;
    }
        if(PlayerInfo[playerid][AFKstatus] != 0)
    {
        SendClientMessage(playerid, COLOR_ADMINCMD, "Ти си AFK.");
        return 0;
    }
    if(CalculateStarted == 1)
    {
		switch (CalculateEvent)
		{
		    case 1:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("Vqf1sg4r", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Vqf1sg4r")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		    case 2:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("Sx123grLS", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Sx123grLS")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		    case 3:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("AS12grw0", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("AS12grw0")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		    case 4:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("HV7ceGbt", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("HV7ceGbt")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		    case 5:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("CVs52Wgb", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("CVs52Wgb")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		    case 6:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("XSg12gEgd", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("XSg12gEgd")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		    case 7:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("DBsAAkL", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("DBsAAkL")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		    case 8:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("AL123Wvfr", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("AL123Wvfr")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		    case 9:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("SxTE7fe", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("SxTE7fe")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		    case 10:
		    {
		        new idx;
	            tmp = strtok(text, idx);
		        if ((strcmp("TheSqg55", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("TheSqg55")))
	            {
	                CalculateStarted = 0;
	                CalculateEvent = 0;
	                for(new i = 0; i < MAX_PLAYERS; i++)
		            {
		                KillTimer(reactiontimer[i]);
		            }
	                PlayerInfo[playerid][pCWons] ++;
	                PlayerInfo[playerid][Exp] ++;
	                format(string, sizeof(string), "* %s спечели REACTION теста.Той/Тя e печелил(а) %d път/и. *", PlayerName(playerid), PlayerInfo[playerid][pCWons]);
	                SendClientMessageToAll(COLOR_RED, string);
					format(string, sizeof(string), "* Ти спечели REACTION теста и печелиш 1 EP. *");
                    SendClientMessage(playerid, COLOR_RED, string);
	                PlayerInfo[playerid][pCalcSec] = 0.0;
	            }
		    }
		}
    }
	if(realchat)
	{
	if(PlayerInfo[playerid][pCBC] == 0)
	{
	    format(string, sizeof(string), "{FFFFFF}(%d): {FFFFFF}%s", playerid, text[0]);
	    SendPlayerMessageToAll(playerid, string);
	    }
	    	if(PlayerInfo[playerid][pCBC] >= 1 || PlayerInfo[playerid][pTogCB] == 1)
	{
	new cb1 = PlayerInfo[playerid][pCBC];
	    format(string, sizeof(string), "{FF9933}[CB %d] %s(%d): %s",cb1,PlayerName(playerid), playerid, text[0]);
	    	    	if(PlayerInfo[playerid][pCBC] >= 1 || PlayerInfo[playerid][pTogCB] == 1)
	{
		        for(new i; i<MAX_PLAYERS; i++)
			{
	    	    	if(PlayerInfo[i][pCBC] == cb1 || PlayerInfo[playerid][pTogCB] == 1)
	    	    	{
				SendClientMessage(i,0xF97804FF, string);
				}
	    }
	    }
	    }
	    return 0;
	}
	return 1;
}
//==============================================================================
public OnPlayerEnterCheckpoint(playerid)
{
     if (IsPlayerInRangeOfPoint(playerid, 7.0,Carshop))
     {
          DisablePlayerCheckpoint(playerid);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,Coalmine))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,Pilot))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,Knijki))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,lsbank))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,piza))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,bizn))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,bus2))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,swep))
     {
          DisablePlayerCheckpoint(playerid);
     }
               if (IsPlayerInRangeOfPoint(playerid, 7.0,ofis))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,trucks))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,boini))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,sf))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,lv))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,ls))
     {
          DisablePlayerCheckpoint(playerid);
     }
          if (IsPlayerInRangeOfPoint(playerid, 7.0,risk2))
     {
          DisablePlayerCheckpoint(playerid);
     }
     
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 448)
   {
     if (IsPlayerInRangeOfPoint(playerid, 7.0,PizzaCheckPoint1))
     {
          SetPlayerCheckpoint(playerid, PizzaCheckPoint2, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,PizzaCheckPoint2))
     {
          SetPlayerCheckpoint(playerid, PizzaCheckPoint3, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,PizzaCheckPoint3))
     {
          SetPlayerCheckpoint(playerid, PizzaCheckPoint4, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,PizzaCheckPoint4))
     {
          SetPlayerCheckpoint(playerid, PizzaCheckPoint5, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,PizzaCheckPoint5))
     {
          SetPlayerCheckpoint(playerid, PizzaTakePoint, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,PizzaTakePoint))
     {
         SendClientMessage(playerid,COLOR_YELLOW,"Ти достави всички пици и получи $2000 и 2 EP.");
         GivePlayerMoney(playerid, 2000);
         PlayerInfo[playerid][Exp]+= 2;
         PlayerInfo[playerid][pPiza1] = 1;
	     if(PlayerInfo[playerid][pDonateRank] <= 3)
    	{
 	     PlayerInfo[playerid][pPizza] = 60*60;
      }
	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
 	     PlayerInfo[playerid][pPizza] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
 	     PlayerInfo[playerid][pPizza] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] >= 6)
    	{
 	     PlayerInfo[playerid][pPizza] = 20*60;
      }
         SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
         RemovePlayerFromVehicle(playerid);
         	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 4 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
         	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 5 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
         	     if(PlayerInfo[playerid][pDonateRank] == 6)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 6 + 3EP.");
         PlayerInfo[playerid][Exp]+= 3;
         }
                  	     if(PlayerInfo[playerid][pDonateRank] == 7)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 7 + 4EP.");
         PlayerInfo[playerid][Exp]+= 4;
         }
         DisablePlayerCheckpoint(playerid);
         pizza[playerid] = 0;
    }
}
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 406)
   {
     if (IsPlayerInRangeOfPoint(playerid, 7.0,CoalmineCheckPoint1))
     {
          SetPlayerCheckpoint(playerid, CoalmineCheckPoint2, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,CoalmineCheckPoint2))
     {
          SetPlayerCheckpoint(playerid, CoalmineCheckPoint3, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,CoalmineCheckPoint3))
     {
          SetPlayerCheckpoint(playerid, CoalmineCheckPoint4, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,CoalmineCheckPoint4))
     {
          SetPlayerCheckpoint(playerid, CoalmineCheckPoint5, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,CoalmineCheckPoint5))
     {
          SetPlayerCheckpoint(playerid, CoalmineCheckPoint6, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,CoalmineCheckPoint6))
     {
          SetPlayerCheckpoint(playerid, CoalmineCheckPoint7, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,CoalmineCheckPoint7))
     {
          SetPlayerCheckpoint(playerid, CoalmineCheckPoint8, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,CoalmineCheckPoint8))
     {
          SetPlayerCheckpoint(playerid, CoalmineTakePoint, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,CoalmineTakePoint))
     {
         SendClientMessage(playerid,COLOR_YELLOW,"Ти премина през всички маркери и получи $2000 и 2 EP.");
         GivePlayerMoney(playerid, 2000);
         PlayerInfo[playerid][pCoalmine1] = 1;
         PlayerInfo[playerid][Exp]+= 2;
	     if(PlayerInfo[playerid][pDonateRank] <= 3)
    	{
 	     PlayerInfo[playerid][pCoalmine] = 60*60;
      }
	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
 	     PlayerInfo[playerid][pCoalmine] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
 	     PlayerInfo[playerid][pCoalmine] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] >= 6)
    	{
 	     PlayerInfo[playerid][pCoalmine] = 20*60;
      }
         SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
         RemovePlayerFromVehicle(playerid);
         	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 4 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
         	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 5 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
         	     if(PlayerInfo[playerid][pDonateRank] == 6)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 6 + 3EP.");
         PlayerInfo[playerid][Exp]+= 3;
         }
                  	     if(PlayerInfo[playerid][pDonateRank] == 7)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 7 + 4EP.");
         PlayerInfo[playerid][Exp]+= 4;
         }
         DisablePlayerCheckpoint(playerid);
         coalmine[playerid] = 0;
    }
}







if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 431)
   {
     if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint1))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint4, 7.0);
     }

     if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint4))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint5, 7.0);
     }
     
     if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint5))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint6, 7.0);
     }
     
     if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint6))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint7, 7.0);
     }
     
     if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint7))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint8, 7.0);
     }
     
     if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint8))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint9, 7.0);
     }
     
         if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint9))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint10, 7.0);
     }
             if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint10))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint11, 7.0);
     }
             if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint11))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint12, 7.0);
     }
             if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint12))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint13, 7.0);
     }
             if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint13))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint14, 7.0);
     }
             if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint14))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint15, 7.0);
     }
             if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint15))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint16, 7.0);
     }
             if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint16))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint17, 7.0);
     }
             if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint17))
     {
          SetPlayerCheckpoint(playerid, busCheckPoint18, 7.0);
     }
             if (IsPlayerInRangeOfPoint(playerid, 7.0,busCheckPoint18))
     {
         SendClientMessage(playerid,COLOR_YELLOW,"Ти премина през всички маркери и получи $2000 и 2 EP.");
         GivePlayerMoney(playerid, 2000);
         PlayerInfo[playerid][pBus1] = 1;
         PlayerInfo[playerid][Exp]+= 2;
         	     if(PlayerInfo[playerid][pDonateRank] <= 3)
    	{
 	     PlayerInfo[playerid][pBus] = 60*60;
      }
	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
 	     PlayerInfo[playerid][pBus] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
 	     PlayerInfo[playerid][pBus] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] >= 6)
    	{
 	     PlayerInfo[playerid][pBus] = 20*60;
      }
         SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
         RemovePlayerFromVehicle(playerid);
         	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 4 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
         	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 5 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
         	     if(PlayerInfo[playerid][pDonateRank] == 6)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 6 + 3EP.");
         PlayerInfo[playerid][Exp]+= 3;
         }
                  	     if(PlayerInfo[playerid][pDonateRank] == 7)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 7 + 4EP.");
         PlayerInfo[playerid][Exp]+= 4;
         }
         DisablePlayerCheckpoint(playerid);
         bus[playerid] = 0;
}
}











         if (IsPlayerInRangeOfPoint(playerid, 3.0,Race1p))
     {
          DisablePlayerCheckpoint(playerid);
          SetPlayerCheckpoint(playerid, Race2p, 4.0);
          }


              if (IsPlayerInRangeOfPoint(playerid, 3.0,Race2p))
     {
     DisablePlayerCheckpoint(playerid);
          SetPlayerCheckpoint(playerid, Race3p, 4.0);

     }

              if (IsPlayerInRangeOfPoint(playerid, 3.0,Race3p))
     {
     DisablePlayerCheckpoint(playerid);
          SetPlayerCheckpoint(playerid, Race4p, 4.0);

     }








                   if (IsPlayerInRangeOfPoint(playerid, 3.0,Race4p))
     {

new string2[256];
		                          format(string2, sizeof(string2), "Street Race: %s спечели съзтезанието",PlayerName(playerid));
                        SendClientMessageToAll(COLOR_BL1, string2);
                                  format(string2, sizeof(string2), "Които успее убие %s до 5 минути ще спечели +1 CMN1 Kill",PlayerName(playerid));
          SendClientMessageToAll(COLOR_ORANGE, string2);
          PlayerInfo[playerid][pCMN1] = 1;
		  PlayerInfo[playerid][pCMN1T] = 1*1;
		  PlayerInfo[playerid][pCMN1T3] = 5*60;
		  Moneybox = 1;
		  Race = 0;
                            DisablePlayerCheckpoint(playerid);
                            }























if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 574)
   {
     if (IsPlayerInRangeOfPoint(playerid, 7.0,SweepCheckPoint1))
     {
          SetPlayerCheckpoint(playerid, SweepCheckPoint2, 7.0);
  	 }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,SweepCheckPoint2))
     {
          SetPlayerCheckpoint(playerid, SweepCheckPoint3, 7.0);
  	 }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,SweepCheckPoint3))
     {
          SetPlayerCheckpoint(playerid, SweepCheckPoint4, 7.0);
  	 }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,SweepCheckPoint4))
     {
          SetPlayerCheckpoint(playerid, SweepCheckPoint5, 7.0);
  	 }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,SweepCheckPoint5))
     {
          SetPlayerCheckpoint(playerid, SweepTakePoint, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,SweepTakePoint))
     {
         PlayerInfo[playerid][pSweep] = 1;
         SendClientMessage(playerid,COLOR_YELLOW,"Ти завърши работата като чистач на улици и получи $2000 и 2 EP.");
         GivePlayerMoney(playerid, 2000);
         PlayerInfo[playerid][Exp]+= 2;
	     if(PlayerInfo[playerid][pDonateRank] <= 3)
    	{
 	     PlayerInfo[playerid][pSweep] = 60*60;
      }
	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
 	     PlayerInfo[playerid][pSweep] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
 	     PlayerInfo[playerid][pSweep] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] >= 6)
    	{
 	     PlayerInfo[playerid][pSweep] = 20*60;
      }
            	     if(PlayerInfo[playerid][pDonateRank] == 7)
    	{
 	     PlayerInfo[playerid][pSweep] = 10*60;
      }
         SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
         RemovePlayerFromVehicle(playerid);
                  	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 4 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
         	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 5 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
if(PlayerInfo[playerid][pDonateRank] == 6)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 6 + 3EP.");
         PlayerInfo[playerid][Exp]+= 3;
         }
                  	     if(PlayerInfo[playerid][pDonateRank] == 7)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 7 + 4EP.");
         PlayerInfo[playerid][Exp]+= 4;
         }
         DisablePlayerCheckpoint(playerid);
         sweep[playerid] = 0;
    }
}
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 513)
   {
     if (IsPlayerInRangeOfPoint(playerid, 7.0,pilotCheckPoint1))
     {
          SetPlayerCheckpoint(playerid, pilotCheckPoint2, 7.0);
  	 }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,pilotCheckPoint2))
     {
          SetPlayerCheckpoint(playerid, pilotCheckPoint3, 7.0);
  	 }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,pilotCheckPoint3))
     {
          SetPlayerCheckpoint(playerid, pilotCheckPoint4, 7.0);
  	 }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,pilotCheckPoint4))
     {
          SetPlayerCheckpoint(playerid, pilotCheckPoint5, 7.0);
  	 }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,pilotCheckPoint5))
     {
          SetPlayerCheckpoint(playerid, pilotCheckPoint6, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,pilotCheckPoint6))
     {
          SetPlayerCheckpoint(playerid, pilotCheckPoint7, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,pilotCheckPoint7))
     {
          SetPlayerCheckpoint(playerid, pilotTakePoint, 7.0);
     }
     if (IsPlayerInRangeOfPoint(playerid, 7.0,pilotTakePoint))
     {
         SendClientMessage(playerid,COLOR_YELLOW,"Ти завърши работата като пилот и получи $2000 и 2 EP.");
         GivePlayerMoney(playerid, 2000);
         PlayerInfo[playerid][pPilot] = 1;
         PlayerInfo[playerid][Exp]+= 2;
         	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 4 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
         	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
         SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 5 + 2EP.");
         PlayerInfo[playerid][Exp]+= 2;
         }
if(PlayerInfo[playerid][pDonateRank] == 6)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 6 + 3EP.");
         PlayerInfo[playerid][Exp]+= 3;
         }
                  	     if(PlayerInfo[playerid][pDonateRank] == 7)
    	{
          SendClientMessage(playerid,COLOR_YELLOW,"VIP LEVEL 7 + 4EP.");
         PlayerInfo[playerid][Exp]+= 4;
         }
	     if(PlayerInfo[playerid][pDonateRank] <= 3)
    	{
 	     PlayerInfo[playerid][pPilot] = 60*60;
      }
	     if(PlayerInfo[playerid][pDonateRank] == 4)
    	{
 	     PlayerInfo[playerid][pPilot] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] == 5)
    	{
 	     PlayerInfo[playerid][pPilot] = 30*60;
      }
      	     if(PlayerInfo[playerid][pDonateRank] >= 6)
    	{
 	     PlayerInfo[playerid][pPilot] = 20*60;
      }
            	     if(PlayerInfo[playerid][pDonateRank] == 7)
    	{
 	     PlayerInfo[playerid][pPilot] = 10*60;
      }
         SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
         RemovePlayerFromVehicle(playerid);
         DisablePlayerCheckpoint(playerid);
         pilot[playerid] = 0;
         }
	 }






	 new string2[256];
     if (IsPlayerInRangeOfPoint(playerid, 3.0,DM) && Death == 1  && Death2 == 0  && Death3 == 0)
     {
          TogglePlayerControllable(playerid,0);
          SetPlayerPos(playerid,1220.5503,-1656.2913,11.7969);
          SetPlayerVirtualWorld(playerid, 99990);
          PlayerInfo[playerid][pInDMF] = 1;
          GivePlayerWeapon(playerid, 30,5000);
format(string2, sizeof(string2), "Deathmatch: Някой влезе в Deathmatch-а трябва още един играч за да се стартира брояча");
SendClientMessageToAll(COLOR_RD2, string2);
Death = 0;
Death3 = 0;
Death2 = 1;
 for(new i; i<MAX_PLAYERS; i++)
			{
                            DisablePlayerCheckpoint(i);
                               SetPlayerCheckpoint(i, DM2, 4.0);
                               }
                               return 1;

     }
     
     
	 
	 
     if (IsPlayerInRangeOfPoint(playerid, 3.0,DM2) && Death == 0  && Death2 == 1  && Death3 == 0)
     {
          TogglePlayerControllable(playerid,0);
          SetPlayerPos(playerid,1220.5503,-1656.2913,11.7969);
          SetPlayerVirtualWorld(playerid, 99990);
          PlayerInfo[playerid][pInDMF] = 1;
          	        for(new i; i<MAX_PLAYERS; i++)
			{
                    PlayerInfo[i][pDMF] = 3*60;
                    }
                  		ResetPlayerWeaponsEx(playerid);
                        GivePlayerWeapon(playerid, 30,5000);
          		                          format(string2, sizeof(string2), "Deathmatch: Мисията ще започне след 3 минути");
                        SendClientMessageToAll(COLOR_RD2, string2);
                         for(new i; i<MAX_PLAYERS; i++)
			{
                        DisablePlayerCheckpoint(i);
                                  SetPlayerCheckpoint(i, DM3, 4.0);
                                  }
Death = 0;
Death3 = 1;
Death2 = 0;
return 1;
     }

     if (IsPlayerInRangeOfPoint(playerid, 3.0,DM3) && Death == 0  && Death2 == 0  && Death3 == 1)
     {
          TogglePlayerControllable(playerid,0);
          SetPlayerPos(playerid,1220.5503,-1656.2913,11.7969);
          SetPlayerVirtualWorld(playerid, 99990);
          PlayerInfo[playerid][pInDMF] = 1;
                  		ResetPlayerWeaponsEx(playerid);
                        GivePlayerWeapon(playerid, 30,5000);
          		                          format(string2, sizeof(string2), "Deathmatch: Някой влезе в Deathmatch-а");
                        SendClientMessageToAll(COLOR_RD2, string2);
                        return 1;
						}

     //
     //
     //
     
     
     
     
     //
     //
     //
    if (IsPlayerInRangeOfPoint(playerid, 3.0,MB1))
     {
		  PlayerInfo[playerid][pKufar] = 1;
		  Kufar = 1;
		  Moneybox = 0;
                        	format(string2, sizeof(string2), "{33CC00}Moneybox: %s взе раницата с пари. Не му позволявавай да достигне до следващия червен маркер!",PlayerName(playerid));
							SendClientMessageToAll(COLOR_GREEN, string2);
							 for(new i; i<MAX_PLAYERS; i++)
			{
                                     DisablePlayerCheckpoint(i);
                            DisablePlayerCheckpoint(playerid);
          SetPlayerCheckpoint(i, MB2, 3.0);
          SetPlayerCheckpoint(playerid, MB2, 3.0);
          }

     }
     
if(GetVehicleModel(GetPlayerVehicleID(playerid)) >= 400)
   {
   
if (IsPlayerInRangeOfPoint(playerid, 3.0,Racestart) && raceplayers == 0)
     {
     DisablePlayerCheckpoint(playerid);
      for(new i; i<MAX_PLAYERS; i++)
   {
     DisablePlayerCheckpoint(i);
     }
                                                    format(string2, sizeof(string2), "Street Race: %s влезе в съзтезаниете,трябва още някой да влезе за да се стартира",PlayerName(playerid));
                        SendClientMessageToAll(COLOR_BL1, string2);
                        raceplayers += 1;
                        DisablePlayerCheckpoint(playerid);
                         for(new i; i<MAX_PLAYERS; i++)
   {
     DisablePlayerCheckpoint(i);
     }
      for(new i; i<MAX_PLAYERS; i++)
   {
                                                    SetPlayerCheckpoint(i, Racestart2, 3.0);
                                                    }
Race3 = 0;
Race2 = 1;
Race = 0;
DisablePlayerCheckpoint(playerid);
          }
          return 1;
          }

          //
          //
          //
                    if (IsPlayerInRangeOfPoint(playerid, 3.0,Racestart2) || raceplayers >= 2)
     {

 
                            format(string2, sizeof(string2), "Street Race: %s влезе в съзтезанието,съзтезанието ще се стартира след 3 минути",PlayerName(playerid));
                        SendClientMessageToAll(COLOR_BL1, string2);
                        raceplayers += 1;
                         for(new i; i<MAX_PLAYERS; i++)
			{
                                                    DisablePlayerCheckpoint(i);
                                                    PlayerInfo[i][pSR] = 3*60;
                                                    SetPlayerCheckpoint(i, Racestart3, 3.0);
                                                    }
Race3 = 1;
Race2 = 0;
Race = 0;
DisablePlayerCheckpoint(playerid);
          }
          
          
          
          
                              if (IsPlayerInRangeOfPoint(playerid, 3.0,Racestart3))
     {
DisablePlayerCheckpoint(playerid);

                            format(string2, sizeof(string2), "Street Race: %s влезе в съзтезанието",PlayerName(playerid));
                        SendClientMessageToAll(COLOR_BL1, string2);
                        raceplayers += 1;
                                                    DisablePlayerCheckpoint(playerid);
          }

          

          
          


     
     
     
     if (IsPlayerInRangeOfPoint(playerid, 3.0,MB2) && PlayerInfo[playerid][pKufar] >= 1)
     {

     PlayerInfo[playerid][pZvezda1] += 2;
              PlayerInfo[playerid][pWantedLevel]+= 2;
               for(new i; i<MAX_PLAYERS; i++)
			{
	      PlayerInfo[i][pDMF2] = 1*1;
	      }
                        format(string2, sizeof(string2), "Moneybox: %s успешно занесе раницата и спечели $50000",PlayerName(playerid));
                        SendClientMessageToAll(COLOR_GREEN, string2);
          format(string2, sizeof(string2), "CMN1: %s е заподозрян в грабеж, убий го и ще получиш CMN1 Kill.",PlayerName(playerid));
          SendClientMessageToAll(COLOR_ORANGE, string2);
          PlayerInfo[playerid][pCMN1] = 1;
		  PlayerInfo[playerid][pCMN1T] = 1*1;
		  PlayerInfo[playerid][pCMN1T3] = 5*60;
		  PlayerInfo[playerid][pZvezda1] += 2;
		  
                        		  Kufar = 0;
		  Moneybox = 0;
		  Death = 1;
         SendClientMessage(playerid,COLOR_GREEN,"Moneybox: Ти достави раницата и получи $45321.");
         GameTextForPlayer(playerid, "~w~YOU WON~n~~g~$45321", 3000, 3);
          for(new i; i<MAX_PLAYERS; i++)
   {
   if(PlayerInfo[i][pCMN1] == 0)
   {
                                            GameTextForPlayer(i, "~w~Mission~n~~r~Deathmatch", 3000, 1);
											}
											}
                                            
         GivePlayerCash(playerid, 45321);
         PlayerInfo[playerid][pMon] += 1;
          for(new i; i<MAX_PLAYERS; i++)
			{
                  PlayerInfo[i][pMoney] = 0;
                  PlayerInfo[i][pDM] = 1*1;
                  PlayerInfo[i][pKufar] = 0;
                           DisablePlayerCheckpoint(i);
                           }
                            DisablePlayerCheckpoint(playerid);
}
     return 1;
}
//
public OnPlayerCommandText(playerid, cmdtext[])
{
    new string[256];
	new cmd[256];
	new tmp[256];
	new playermoney;
	new giveplayer[MAX_PLAYER_NAME];
	new giveplayerid, specplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);
    printf("[cmd][%s]: %s",PlayerName(playerid),cmdtext);
        if(strcmp(cmd, "/frefuel", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_GROVE)
            {
                for(new cars=0; cars<90; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                         fuel[grovecars[cars]] = fuel[grovecars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_GROVE, COLOR_LIGHTBLUE, string);
			}
		}
        if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_BALLAS)
            {
                for(new cars=0; cars<12; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[ballascars[cars]] = fuel[ballascars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_BALLAS, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_VAGOS)
            {
                for(new cars=0; cars<9999; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[vagoscars[cars]] = fuel[vagoscars[cars]] = 100;
                    }
                }
                format(string, sizeof(string),"%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_VAGOS, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_VIP)
            {
                for(new cars=1; cars<108; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[vipcars[cars]] = fuel[vipcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_VIP, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_TRIADS)
            {
                for(new cars=0; cars<16; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[azteccars[cars]] = fuel[azteccars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_TRIADS, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_Thugs)
            {
                for(new cars=0; cars<90; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[sbcars[cars]] = fuel[sbcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_Thugs, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_MS13)
            {
                for(new cars=0; cars<11; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[ecoastcars[cars]] = fuel[ecoastcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_MS13, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_CRIPZ)
            {
                for(new cars=0; cars<90; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[vcripzcars[cars]] = fuel[vcripzcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_CRIPZ, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_BOYZ)
            {
                for(new cars=1; cars<16; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[boyzcars[cars]] = fuel[boyzcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_BOYZ, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_ZETAS)
            {
                for(new cars=1; cars<13; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[atcars[cars]] = fuel[atcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_ZETAS, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_GPD)
            {
                for(new cars=1; cars<998; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[gpcars[cars]] = fuel[gpcars[cars]] = 100;
                        fuel[dfcars[cars]] = fuel[dfcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_SoA)
            {
                for(new cars=1; cars<23; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[rockcars[cars]] = fuel[rockcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_SoA, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
            {
                for(new cars=0; cars<100; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[ABcars[cars]] = fuel[ABcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_AsianBoyz, COLOR_LIGHTBLUE, string);
			}
		}
						if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_YAKUZA)
            {
                for(new cars=0; cars<29; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[yakuzacars[cars]] = fuel[yakuzacars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_YAKUZA, COLOR_LIGHTBLUE, string);
			}
		}
				if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_DPK)
            {
                for(new cars=0; cars<29; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[Dpkcars[cars]] = fuel[Dpkcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_DPK, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_BulgarianMafia)
            {
                for(new cars=0; cars<21; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[killazcars[cars]] = fuel[killazcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_BulgarianMafia, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_LatinKing)
            {
                for(new cars=1; cars<90; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[latincars[cars]] = fuel[latincars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_LatinKing, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_FBI)
            {
                for(new cars=1; cars<12; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[fbicars[cars]] = fuel[fbicars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_FBI, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_NZ)
            {
                for(new cars=1; cars<14; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[cbkcars[cars]] = fuel[cbkcars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_NZ, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_RIFA)
            {
                for(new cars=1; cars<13; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        fuel[rifacars[cars]] = fuel[rifacars[cars]] = 100;
                    }
                }
                format(string, sizeof(string), "%s(%d) зареди всички превозни средства със 100 литра бензин!", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_RIFA, COLOR_LIGHTBLUE, string);
			}
		}
		return 1;
    }
        if (strcmp("/view", cmdtext, true, 10) == 0)
        {
                SetPlayerPos(playerid, 2897.8269,529.6500,2.5237);
                SendClientMessage(playerid, COLOR_BLUE, "You just got Teleported to LV Derby Map!");
                return 1;
        }
        if (strcmp("/cgraffity", cmdtext, true, 10) == 0)
        {
    ShowPlayerDialog(playerid, 1998, DIALOG_STYLE_MSGBOX, "Graffity System", "Sigur vrei sa creezi un tatuaj?", "Ok", "");
        return 1;
        }
    if (strcmp("/cremove", cmdtext, true, 10) == 0)
        {
        DestroyObject(graffity);
        SendClientMessage(playerid,-1,"Ai sters tatuaju.");
        return 1;
        }

if(strcmp(cmd, "/bizinfo", true) == 0)
    {

if(PlayerInfo[playerid][pBizO] == 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш бизнес");
return 1;
}
 for(new h; h<MAX_HOUSES; h++){
 if(HouseInfo[h][Bus] == 1)
 {
      if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
      if(strcmp(HouseInfo[h][hOwner],GetName(playerid), false ) == 0){
						 new string2[256];
						 new earnings = HouseInfo[h][Earnings];
						PlayerInfo[playerid][pEarnings] = earnings;
						 new earn = PlayerInfo[playerid][pEarnings];
    format(string2, sizeof(string2), "{80BFFF}Earnings - $%d", earn);
    SendClientMessage(playerid, COLOR_BL1, string2);
    }
    }
    }
    }
    return 1;
    }
    if(strcmp(cmd, "/earnings", true) == 0)
    {

if(PlayerInfo[playerid][pBizO] == 0)
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти не притежаваш бизнес");
return 1;
}
 for(new h; h<MAX_HOUSES; h++){
 if(HouseInfo[h][Bus] == 1)
 {
      if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
						format(string, sizeof(string), "{80BFFF}Ти взе парите от бизнеса си");
						SendClientMessage(playerid, COLOR_BL1, string);
new earnings = HouseInfo[h][Earnings];
GivePlayerCash(playerid,earnings);
	HouseInfo[h][Earnings] = 0;
	PlayerInfo[playerid][pEarnings] = 0;
	SavePlayerHouse(h);
    }
    }
    }
    return 1;
    }
    
if(strcmp(cmd, "/aka", true) == 0)
    {
    new playa;
    new playername[MAX_PLAYER_NAME];
    if(IsPlayerConnected(playerid)){
    if(PlayerInfo[playerid][pAdmin] < 1) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Използвайте: /aka [ID на играча]");
    giveplayerid = strval(tmp);
	playa = ReturnUser(tmp);
    if(!IsPlayerConnected(playa)) return SendClientMessage(playerid, COLOR_GRAD1, "Въвели сте невалидно ID!");
    new tmp3[50];
  		  	GetPlayerIp(playa,tmp3,50);
			GetPlayerName(playa, playername, sizeof(playername));
		    format(string, sizeof(string), "AKA: [%s id:%d] [%s] %s", playername, playa, tmp3, dini_Get("ladmin/config/aka.txt",tmp3) );
	        SendClientMessage(playerid, 0xFF99CCFF, string);}
    return 1;
    }

	
	if(strcmp(cmd, "/freeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /freeze [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if(PlayerInfo[playa][pAdmin] > PlayerInfo[playerid][pAdmin])
			{
				SendClientMessage(playerid, COLOR_GREY, "You can't freeze Higher Level Admins !");
				return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						TogglePlayerControllable(playa, 0);
                        format(string, sizeof(string), "* Ти замрази %s *",giveplayer);
			            SendClientMessage(playerid, COLOR_WHITE,string);
			            format(string, sizeof(string), "* %s те замрази *", PlayerName(playerid));
			            SendClientMessage(playa, COLOR_YELLOW,string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unfreeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unfreeze [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] > 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						TogglePlayerControllable(playa, 1);
						format(string, sizeof(string), "* Ти отмрази %s *",giveplayer);
			            SendClientMessage(playerid, COLOR_WHITE,string);
			            format(string, sizeof(string), "* %s те отмрази *", PlayerName(playerid));
			            SendClientMessage(playa, COLOR_YELLOW,string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
	
	
	
	
	        if (!strcmp (cmdtext, "/placeradar"))
        {
                if (IsPlayerInAnyVehicle (playerid))
                {
                    new vehid = GetPlayerVehicleID (playerid);
                    if (VehRadarID [vehid] > -1) return 1;

            new Float: x, Float: y, Float: z, Float: a;
                    GetVehiclePos (vehid, x, y, z);
                    GetVehicleZAngle (vehid, a);
                    SendClientMessage (playerid, COLOR_YELLOW, "Radar has been added successfully.");
                    VehRadarID [vehid] = CreateObject (367, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 300.0);
                    AttachObjectToVehicle (VehRadarID [vehid], vehid, 0.2, 0.50, 0.3, 0.0, 0.0, 90.0);

                    for (new i = 0; i < MAX_PLAYERS; i++)
                    {
                        if (IsPlayerInVehicle (i, vehid))
                        {
                                TextDrawShowForPlayer (i, RadarHud);
                                }
                    }
                }
                return 1;
        }

        if (!strcmp (cmdtext, "/removeradar"))
        {
            if (IsPlayerInAnyVehicle (playerid))
            {
                new vehid = GetPlayerVehicleID (playerid);
                if (VehRadarID [vehid] == -1) return 1;

                    DestroyObject (VehRadarID [vehid]);
                SendClientMessage (playerid, COLOR_YELLOW, "Radar has been removed successfully.");
                VehRadarID [vehid] = -1;
                KillTimer (CheckingSpeed [vehid]);
                CheckingSpeed [vehid] = -1;

                for (new i = 0; i < MAX_PLAYERS; i++)
                    {
                        if (IsPlayerInVehicle (i, vehid))
                        {
                                        TextDrawHideForPlayer (i, RadarHud);
                                        TextDrawHideForPlayer (playerid, SpeedAndModel [vehid]);
                        }
                    }
            }
            return 1;
        }

        if (!strcmp (cmdtext, "/checkspeed"))
        {
            if (IsPlayerInAnyVehicle (playerid))
            {
                new vehid = GetPlayerVehicleID (playerid);
                if (VehRadarID [vehid] == -1) return 1;
                CheckingSpeed [vehid] = SetTimerEx ("UpdateSpeed", 100, 1, "d", vehid);
            }
            return 1;
        }

        if (!strcmp (cmdtext, "/stopchecking"))
        {
            if (IsPlayerInAnyVehicle (playerid))
            {
                new vehid = GetPlayerVehicleID (playerid);
                if (CheckingSpeed [vehid] > 0)
                {
                    KillTimer (CheckingSpeed [vehid]);
                    CheckingSpeed [vehid] = -1;
                }
                for (new i = 0; i < MAX_PLAYERS; i++)
                        {
                                if (IsPlayerInVehicle (i, vehid))
                        {
                                TextDrawHideForPlayer (i, SpeedAndModel [vehid]);
                                }
                        }
            }
            return 1;
        }

        if (!strcmp (cmdtext, "/issueticket"))
        {
            if (IsPlayerInAnyVehicle (playerid))
            {
                new vehid = GetPlayerVehicleID (playerid);
                if (CheckingSpeed [vehid] > -1)
                {
                    for (new i = 0; i < MAX_PLAYERS; i++)
                    {
                        if (IsPlayerConnected (i) && i != playerid)
                        {
                            if (IsPlayerInVehicle (i, GetVehicleInfrontID (vehid)))
                            {
                                if (GetPlayerVehicleSeat (i) == 0)
                                {
                                    GivePlayerMoney (i, -1500);
                                }
                            }
                        }
                    }
                }
            }
            return 1;
        }
	
	
	if(strcmp(cmd, "/freezeall", true) == 0)
	{
    if (PlayerInfo[playerid][pAdmin] >= 5)
    for(new i; i<MAX_PLAYERS; i++)
    {
        TogglePlayerControllable(i,0);
    }
    new p_Name[24],str[128];
    GetPlayerName(playerid,p_Name,24);
    format(str,sizeof(str),"Admin %s[%d] замръзи всички играчи в сървъра!",p_Name,playerid);
    SendClientMessageToAll(-1,str);
    return 1;
}
//
if(strcmp(cmd, "/unfreezeall", true) == 0)
	{
    if (PlayerInfo[playerid][pAdmin] >= 5)
    for(new i; i<MAX_PLAYERS; i++)
    {
        TogglePlayerControllable(i,1);
    }
    new p_Name[24],str[128];
    GetPlayerName(playerid,p_Name,24);
    format(str,sizeof(str),"Admin %s[%d] отмръзи всички играчи в сървъра!",p_Name,playerid);
    SendClientMessageToAll(-1,str);
    return 1;
}



                  	if(strcmp(cmd, "/egiveep", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /egiveep [playerid] [EP]");
				return 1;
			}
			new playa;
			new ep;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			ep = strval(tmp);
			if (PlayerInfo[playerid][pEvent] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			      if(PlayerInfo[playa][pInEvent] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
                    	if(ep < 1 || ep > 5) return SendClientMessage(playerid, COLOR_GRAD1, "EP-то трябва да е от 1 до 5.");
                    	if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Неможеш да дадеш EP на себеси"); return 1; }
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][Exp] += ep;
                        format(string, sizeof(string), "%s ти даде %d EP.", PlayerName(playerid),ep);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти даде %d EP на %s.", ep, PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
     }
     





	if(strcmp(cmd, "/egivemoney", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /egivemoney [Playerid/PartOfName] [money]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pEvent] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
			if (PlayerInfo[playa][pInEvent] == 0)
			{
             format(string, sizeof(string), "*{FFFFFF}Tози играч не е в евент*");
			SendClientMessage(playerid, COLOR_WHITE, string);
			}
			                    	if(money < 1 || money > 150000) return SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са от 1 до 150000.");
                    	if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Неможеш да дадеш пари на себеси"); return 1; }
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GivePlayerCash(playa, money);
                        format(string, sizeof(string), "*{FFFFFF}%s {FFFFFF}ти даде пари на стойност {9AFF00}$%d {FFFFFF}*", PlayerName(playerid), money);
				        SendClientMessage(playa, COLOR_WHITE, string);
                        format(string, sizeof(string), "*{FFFFFF}Ти даде на {FFFFFF}%s {FFFFFF}пари на стойност {9AFF00}$%d {FFFFFF}*", PlayerName(playa), money);
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
		}
		return 1;
	}





    if(strcmp(cmdtext, "/park", true) == 0)
    {
        new vehicleid = GetPlayerVehicleID(playerid);
        if(GetVehicleModel(vehicleid) == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в кола.");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр.");
                if(vehicleid ==carflux2 || vehicleid ==carflux  || vehicleid ==caro || vehicleid ==carpedal || vehicleid ==caro2 || vehicleid ==caro3 || vehicleid ==carflux3 || vehicleid ==carholy || vehicleid ==carstrix4 || vehicleid ==carflux4 || vehicleid ==carmoto || vehicleid ==carufo)
    {
			if (PlayerInfo[playerid][pCar1] == 1 || PlayerInfo[playerid][pCar2] == 1 || PlayerInfo[playerid][pCar3] == 1 || PlayerInfo[playerid][pCar4] == 1 || PlayerInfo[playerid][pCar5] == 1 || PlayerInfo[playerid][pCar6] == 1 || PlayerInfo[playerid][pCar7] == 1 || PlayerInfo[playerid][pCar8] == 1 || PlayerInfo[playerid][pCar9] == 1 || PlayerInfo[playerid][pCar10] == 1 || PlayerInfo[playerid][pCar11] == 11 || PlayerInfo[playerid][pCar12] == 12)
			{
        VehicleInfo[vehicleid][vModel] = GetVehicleModel(vehicleid);
        GetVehiclePos(vehicleid, VehicleInfo[vehicleid][vCoordX], VehicleInfo[vehicleid][vCoordY], VehicleInfo[vehicleid][vCoordZ]);
        GetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][vCoordA]);
        VehicleInfo[vehicleid][vModSlot0] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER);
        VehicleInfo[vehicleid][vModSlot1] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD);
        VehicleInfo[vehicleid][vModSlot2] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF);
        VehicleInfo[vehicleid][vModSlot3] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT);
        VehicleInfo[vehicleid][vModSlot4] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_LAMPS);
        VehicleInfo[vehicleid][vModSlot5] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO);
        VehicleInfo[vehicleid][vModSlot6] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST);
        VehicleInfo[vehicleid][vModSlot7] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS);
        VehicleInfo[vehicleid][vModSlot8] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_STEREO);
        VehicleInfo[vehicleid][vModSlot9] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS);
        VehicleInfo[vehicleid][vModSlot10] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER);
        VehicleInfo[vehicleid][vModSlot11] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER);
        VehicleInfo[vehicleid][vModSlot12] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT);
        VehicleInfo[vehicleid][vModSlot13] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT);
         new currentveh;
          new Float:z_rot;
          currentveh = GetPlayerVehicleID(playerid);
GetVehicleZAngle(currentveh, z_rot);
    VehicleInfo[currentveh][vCoordA] = z_rot;
    
        format(string, sizeof(string), "/Park/parking_%d.ini", vehicleid);
        new vFile = ini_createFile(string);
        if(vFile < 0) vFile = ini_openFile(string);
        if(vFile >= 0)
        {
            ini_setInteger(vFile, "vModel", VehicleInfo[vehicleid][vModel]);
            ini_setFloat(vFile, "vCoordX", VehicleInfo[vehicleid][vCoordX]);
            ini_setFloat(vFile, "vCoordY", VehicleInfo[vehicleid][vCoordY]);
            ini_setFloat(vFile, "vCoordZ", VehicleInfo[vehicleid][vCoordZ]);
            ini_setFloat(vFile, "vCoordA", VehicleInfo[vehicleid][vCoordA]);
            ini_setInteger(vFile, "vPaintJob", VehicleInfo[vehicleid][vPaintJob]);
            ini_setInteger(vFile, "vColor1", VehicleInfo[vehicleid][vColor1]);
            ini_setInteger(vFile, "vColor2", VehicleInfo[vehicleid][vColor2]);
            ini_setInteger(vFile, "vModSlot0", VehicleInfo[vehicleid][vModSlot0]);
            ini_setInteger(vFile, "vModSlot1", VehicleInfo[vehicleid][vModSlot1]);
            ini_setInteger(vFile, "vModSlot2", VehicleInfo[vehicleid][vModSlot2]);
            ini_setInteger(vFile, "vModSlot3", VehicleInfo[vehicleid][vModSlot3]);
            ini_setInteger(vFile, "vModSlot4", VehicleInfo[vehicleid][vModSlot4]);
            ini_setInteger(vFile, "vModSlot5", VehicleInfo[vehicleid][vModSlot5]);
            ini_setInteger(vFile, "vModSlot6", VehicleInfo[vehicleid][vModSlot6]);
            ini_setInteger(vFile, "vModSlot7", VehicleInfo[vehicleid][vModSlot7]);
            ini_setInteger(vFile, "vModSlot8", VehicleInfo[vehicleid][vModSlot8]);
            ini_setInteger(vFile, "vModSlot9", VehicleInfo[vehicleid][vModSlot9]);
            ini_setInteger(vFile, "vModSlot10", VehicleInfo[vehicleid][vModSlot10]);
            ini_setInteger(vFile, "vModSlot11", VehicleInfo[vehicleid][vModSlot11]);
            ini_setInteger(vFile, "vModSlot12", VehicleInfo[vehicleid][vModSlot12]);
            ini_setInteger(vFile, "vModSlot13", VehicleInfo[vehicleid][vModSlot13]);
            new color1;
            new color2;
            ini_closeFile(vFile);
            SendClientMessage(playerid, COLOR_ORANGE, "Паркирането е успешно");
            SetVehicleToRespawn(vehicleid);
            ChangeVehicleColor(vehicleid, VehicleInfo[vehicleid][vColor1], VehicleInfo[vehicleid][vColor2]);
			}
			}
        }
        else print("Can't open ini-file.");
        return 1;
    }

	if(strcmp(cmd, "/unmute", true) == 0)
	{
			    if(IsPlayerConnected(playerid))
		    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unmute [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			            PlayerInfo[playa][ptMuted] = 0;
			            format(string, sizeof(string), "{33CC33}ADMIN:%s was unmuted by %s",PlayerName(playa) ,PlayerName(playerid));
			            SendClientMessageToAll(COLOR_GREEN,string);
		            }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/unadminmute", true) == 0)
	{
			    if(IsPlayerConnected(playerid))
		    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unadminmute [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			            PlayerInfo[playa][ptMuted] = 0;
			            PlayerInfo[playa][pADMINMUTE] = 0;
			            format(string, sizeof(string), "ADMIN:%s was ADMIN unmuted by %s",PlayerName(playa) ,PlayerName(playerid));
			            SendClientMessageToAll(COLOR_GREEN,string);
		            }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
			if(strcmp(cmd, "/adminmute", true) == 0)
	{
			    if(IsPlayerConnected(playerid))
		    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /adminmute [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pADMINMUTE] = 1;
			            format(string, sizeof(string), "ADMIN:%s was ADMIN muted by %s",PlayerName(playa) ,PlayerName(playerid));
			            SendClientMessageToAll(COLOR_RED,string);
			            format(string, sizeof(string), "Ти си ADMIN muted от %s,за да премахнеш твоя Admin mute използвай командата /payadminmute",PlayerName(playerid));
			            SendClientMessage(playa, COLOR_RED,string);
		            }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
               if(!strcmp(cmdtext, "/gfcrefuel", true)) {
       		              if (PlayerInfo[playerid][pGD] == 1)
	              {
            if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 403) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в камиона");
            if(IsPlayerInRangeOfPoint(playerid, 10, 2149.8328,2748.2905,10.5474) && F1 <= 250)
	    {
	    F1 = 500;
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ти презареди бензиностанцията и получи $9000");
	    GivePlayerCash(playerid,9000);
	    }
	                if(IsPlayerInRangeOfPoint(playerid, 10, 1944.1652,-1769.8917,13.1157) && F2 <= 250)
	    {
	    F2 = 500;
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ти презареди бензиностанцията и получи $9000");
	    GivePlayerCash(playerid,9000);
	    }
	    	                if(IsPlayerInRangeOfPoint(playerid, 10, 2116.6611,922.4604,10.5474) && F3 <= 250)
	    {
	    F3 = 500;
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ти презареди бензиностанцията и получи $9000");
	    GivePlayerCash(playerid,9000);
	    }
	    	                if(IsPlayerInRangeOfPoint(playerid, 10, 2204.3835,2473.3994,10.5474) && F4 <= 250)
	    {
	    F4 = 500;
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ти презареди бензиностанцията и получи $9000");
	    GivePlayerCash(playerid,9000);



	    }
	                if(IsPlayerInRangeOfPoint(playerid, 10, 2149.8328,2748.2905,10.5474) && F1 >= 251)
	    {
	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Тази бензиностанция има достатъчно бензин");
	    }
	                if(IsPlayerInRangeOfPoint(playerid, 10, 1944.1652,-1769.8917,13.1157) && F2 >= 251)
	    {
SendClientMessage(playerid, COLOR_LIGHTBLUE, "Тази бензиностанция има достатъчно бензин");
	    }
	    	                if(IsPlayerInRangeOfPoint(playerid, 10, 2116.6611,922.4604,10.5474) && F3 >= 251)
	    {
SendClientMessage(playerid, COLOR_LIGHTBLUE, "Тази бензиностанция има достатъчно бензин");
	    }
	    	                if(IsPlayerInRangeOfPoint(playerid, 10, 2204.3835,2473.3994,10.5474) && F4 >= 251)
	    {
SendClientMessage(playerid, COLOR_LIGHTBLUE, "Тази бензиностанция има достатъчно бензин");
	    }

            }
            else
            {
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на GFC смяна");
            }
            return 1;
        }
	
		if(strcmp(cmd, "/eunfreezeall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
					        					        		    if(PlayerInfo[i][pInEvent] >= 1)
		    {
 TogglePlayerControllable(i,1);
 }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {
 }
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
				if(strcmp(cmd, "/dname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
					        					        		    if(PlayerInfo[i][pInEvent] >= 1)
		    {
 PlayerInfo[i][pNameO] = 0;
 }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {
 }
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
			if(strcmp(cmd, "/ename", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
					        					        		    if(PlayerInfo[i][pInEvent] >= 1)
		    {
 PlayerInfo[i][pNameO] = 1;
 }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {
 }
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
			if(strcmp(cmd, "/efreezeall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
					        					        		    if(PlayerInfo[i][pInEvent] >= 1)
		    {
 TogglePlayerControllable(i,0);
 }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {
 }
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/esethpall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
						new level;
						level = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
					        					        		    if(PlayerInfo[i][pInEvent] >= 1)
		    {
 SetPlayerHealth(i, level);
 }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {
 }
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/esetarmorall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
						new level;
						level = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
					        					        		    if(PlayerInfo[i][pInEvent] >= 1)
		    {
 SetPlayerArmour(i, level);
 }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {

 }
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
//
//
	if(strcmp(cmd, "/freeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /freeze [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if(PlayerInfo[playa][pAdmin] > PlayerInfo[playerid][pAdmin])
			{
				SendClientMessage(playerid, COLOR_GREY, "You can't freeze Higher Level Admins !");
				return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						TogglePlayerControllable(playa, 0);
						format(string, sizeof(string), "%s was unfreezed by %s",giveplayer ,PlayerName(playerid));
			            SendClientMessageToAll(COLOR_GRAD1, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
//
//
	if(strcmp(cmd, "/egivegunall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
						new level;
						level = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
						    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
					        					        		    if(PlayerInfo[i][pInEvent] >= 1)
		    {
 GivePlayerWeapon(i, level,9999999);
 
 }
 
 
 }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {
 }
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/esetskinall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
						new level;
						level = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
					        					        		    if(PlayerInfo[i][pInEvent] >= 1)
		    {
 SetPlayerSkin(i, level);
 }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {
 }
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/esetskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /esetskin [Playerid/PartOfName] [skin id]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 299 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "Грешен скин ID!"); return 1; }
			if (PlayerInfo[playerid][pEvent] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
				if (PlayerInfo[para1][pInEvent] == 0)
			{
			format(string, sizeof(string), "Този играч не е в евент.");
			SendClientMessage(playerid, COLOR_YELLOW, string);
						}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					    format(string, sizeof(string), "* %s смени твоят скин *", PlayerName(playerid));
				        SendClientMessage(para1, COLOR_YELLOW, string);
						format(string, sizeof(string), "Ти смени скина на %s на скин %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					    SetPlayerSkin(para1, level);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/setskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setskin [Playerid/PartOfName] [skin id]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					    format(string, sizeof(string), "* %s смени ID Skin на %s *", PlayerName(playerid), PlayerName(para1));
				        SendClientMessageToAll(COLOR_WHITE, string);
						format(string, sizeof(string), "* %s смени твоя ID Skin на %d *",PlayerName(playerid),level);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					    SetPlayerSkin(para1, level);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/explode", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /explode [Playerid/PartOfName]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 2)
					{
					    if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
					    {
					        GetPlayerPos(playerid, plocx, plocy, plocz);
						    CreateExplosion(plocx, plocy, plocz-9, 7, 1.0);
					        return 1;
					    }
						GetPlayerPos(giveplayerid, plocx, plocy, plocz);
						CreateExplosion(plocx, plocy, plocz-9, 7, 1.0);
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
						format(string, sizeof(string), "* Ти взриви %s *",PlayerName(giveplayerid));
						SendClientMessage(playerid, COLOR_YELLOW, string);
						format(string, sizeof(string), "* %s те взриви *",PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
                        format(string, sizeof(string), "Explode: %s взриви %s",PlayerName(playerid),PlayerName(giveplayerid));
						SendAdminMessage(COLOR_RED, string);
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/blowup", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /blowup [Playerid/PartOfName] [type of explosion]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new expltype;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /blowup [Playerid/PartOfName] [type of explosion]");
				return 1;
			}
			expltype = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
					{
					    GetPlayerPos(playerid, plocx, plocy, plocz);
					    CreateExplosion(plocx, plocy, plocz, expltype, 1.0);
					    return 1;
					}
					GetPlayerPos(giveplayerid, plocx, plocy, plocz);
					CreateExplosion(plocx, plocy, plocz, expltype, 1.0);
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cnnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
				tmp = strtok(cmdtext, idx);
				new txtid;
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /cnnn <type> ");
					return 1;
				}
				txtid = strval(tmp);
				if(txtid == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "You can not select 2");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /cnnn <type> [cnnc textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow]");
					return 1;
				}
				format(string, sizeof(string), "~w~%s",result);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				    GameTextForPlayer(i, string, 5000, txtid);
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
	
	
	
	
    if(strcmp(cmd, "/ban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sban [Playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
				        {
							SetTimerEx("DelayedBan", 1000, false, "i", playerid);
							format(string, sizeof(string), "SERVER: %s was banned by THE SERVER [Reason:Ban a larger admin level]", PlayerName(playerid));
							SendClientMessageToAll(COLOR_RED, string);
							return 1;
				        }
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ban [Playerid/PartOfName] [reason]");
							return 1;
						}
						new y,m,d,h,mi,s;
	                    getdate(y, m, d), gettime(h, mi, s);
	                    new str51[256];
					    format(str51,sizeof(str51),"%s has been banned by %s on %d.%d.%d in %d:%d:%d. [Reason: %s]", PlayerName(giveplayerid),PlayerName(playerid),d,m,y,h,mi,s,(result));
						SendClientMessageToAll(COLOR_RED,str51);
						SetTimerEx("DelayedBan", 1000, false, "i", giveplayerid);
						//
	  //
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	
	
    if(strcmp(cmd, "/sban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sban [Playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
				        {
							PlayerInfo[playerid][pBanned] = 1;
							format(string, sizeof(string), "SERVER: %s was banned by THE SERVER [Reason:Ban a larger admin level]", PlayerName(playerid));
							SendClientMessageToAll(COLOR_RED, string);
							BanEx(playerid, "Attempting to ban a Higher Level Admin");
							return 1;
				        }
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sban [Playerid/PartOfName] [reason]");
							return 1;
						}
						PlayerInfo[giveplayerid][pBanned] = 1;
						BanEx(giveplayerid, (result));
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/skick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /skick [Playerid/PartOfName]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
				    {
				        format(string, sizeof(string), "%s was kicked by THE SERVER [Reason:Kick a larger admin level]", PlayerName(playerid));
				        SendClientMessageToAll(COLOR_RED, string);
				        Kick(playerid);
				        return 1;
				    }
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        Kick(giveplayerid);
				    }
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/teunmute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /teunmute [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pTest] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			            PlayerInfo[playa][ptMuted] = 0;
			            format(string, sizeof(string), "ADMIN:%s е отглушен от %s",PlayerName(playa) , PlayerName(playerid));
			            SendClientMessageToAll(COLOR_GREEN,string);
		            }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/amute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
            {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /amute [playerid][time][Reason]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new time = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[256];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
					}
					if(playa != INVALID_PLAYER_ID)
					{
	    				PlayerInfo[playa][patMuted] = time*60;
					    PlayerInfo[playa][paMuted] = 1;
					}
					if(playa != INVALID_PLAYER_ID)
					{
	    				PlayerInfo[playa][patMuted] = time*60;
					    PlayerInfo[playa][paMuted] = 1;
                        format(string, sizeof(string), "ADMIN:%s was muted in ADMIN CHAT by %s for %d minutes. [Reason: %s]",PlayerName(playa) ,PlayerName(playerid), time, result);
					    SendClientMessageToAll(COLOR_RED,string);
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	

			
    if(strcmp(cmd, "/vehcolor", true) == 0)
 {
     if(IsPlayerConnected(playerid))
     {
   tmp = strtok(cmdtext, idx);
   if(!strlen(tmp))
   {
    SendClientMessage(playerid, COLOR_GRAD2, "Използвай: /vehcolor [color1] [color2]");
    return 1;
   }
   new color1;
   tmp = strtok(cmdtext, idx);
   color1 = strval(tmp);
   new type;
   type = strval(tmp);
new vehicleid = GetPlayerVehicleID(playerid);
        if(GetVehicleModel(vehicleid) == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в кола.");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр.");
                if(vehicleid ==carflux2 || vehicleid ==carflux  || vehicleid ==caro || vehicleid ==carpedal || vehicleid ==caro2 || vehicleid ==caro3 || vehicleid ==carflux3 || vehicleid ==carholy || vehicleid ==carstrix4 || vehicleid ==carflux4 || vehicleid ==carmoto || vehicleid ==carufo)
    {
   if (PlayerInfo[playerid][pCar1] == 1 || PlayerInfo[playerid][pCar2] == 1 || PlayerInfo[playerid][pCar3] == 1 || PlayerInfo[playerid][pCar4] == 1 || PlayerInfo[playerid][pCar5] == 1 || PlayerInfo[playerid][pCar6] == 1 || PlayerInfo[playerid][pCar7] == 1 || PlayerInfo[playerid][pCar8] == 1 || PlayerInfo[playerid][pCar9] == 1 || PlayerInfo[playerid][pCar10] == 1 || PlayerInfo[playerid][pCar11] == 11 || PlayerInfo[playerid][pCar12] == 12)
   {
   format(string, sizeof(string), "/Park/parking_%d.ini", vehicleid);
        new vFile = ini_createFile(string);
        if(vFile < 0) vFile = ini_openFile(string);
        if(vFile >= 0)
        {
            ini_setInteger(vFile, "vColor1", color1);
            ini_setInteger(vFile, "vColor2", type);
   new vehicleid = GetPlayerVehicleID(playerid);
      ChangeVehicleColor(vehicleid, color1, type);
      format(string, sizeof(string), "Ти смени цвета на колата си",PlayerName(playerid));
      SendClientMessage(playerid, COLOR_RED, string);
      ChangeVehicleColor(vehicleid, VehicleInfo[vehicleid][vColor1], VehicleInfo[vehicleid][vColor2]);
            ini_closeFile(vFile);
   }
}
}
  }
  return 1;
 }
	
    if(strcmp(cmd, "/cc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Използвай: /cc [color1] [color2]");
				return 1;
			}
			new color1;
			tmp = strtok(cmdtext, idx);
			color1 = strval(tmp);
			new type;
			type = strval(tmp);
			if (PlayerInfo[playerid][pDonateRank] >= 3)
			{
			new vehicleid = GetPlayerVehicleID(playerid);
      ChangeVehicleColor(vehicleid, color1, type);
						format(string, sizeof(string), "* ти смени цвета на колата си *",PlayerName(playerid));
						SendClientMessage(playerid, COLOR_RED, string);


			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
			}
		}
		return 1;
	}



	if(strcmp(cmd, "/gmx", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
            {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /gmx [Confirm] [Time] [Reason]");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			new time = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /gmx [Confirm] [Reason] [Time]");
					return 1;
				}
	gmxtime = 1;
	format(string, sizeof(string), "ADMIN:%s пусна брояч за рестартиране на сървъра,сървъра ще се рестартира след %d секунди [Причина:%s]",PlayerName(playerid) ,time,result);
	SendClientMessageToAll(COLOR_LIGHTRED, string);
	SetTimer("gmxtimer",time*1000,0);
	SetTimer("gmxtimer2", 2000, false);
	rtimer = time;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
	
	
	
	if(strcmp(cmd, "/vmute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
            {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /vmute [playerid][time][Reason]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new time = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[256];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
					}
					if(playa != INVALID_PLAYER_ID)
					{
	    				PlayerInfo[playa][pvtMuted] = time*60;
					    PlayerInfo[playa][pvMuted] = 1;
					}
					if(playa != INVALID_PLAYER_ID)
					{
	    				PlayerInfo[playa][pvtMuted] = time*60;
					    PlayerInfo[playa][pvMuted] = 1;
                        format(string, sizeof(string), "ADMIN:%s was muted in VIP CHAT by %s for %d minutes. [Reason: %s]",PlayerName(playa) ,PlayerName(playerid), time, result);
					    SendClientMessageToAll(COLOR_RED,string);
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/aunmute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /aunmute [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        PlayerInfo[playa][patMuted] = 0;
			            PlayerInfo[playa][paMuted] = 0;
			            format(string, sizeof(string), "ADMIN:%s was unmuted in ADMIN CHAT by %s",PlayerName(playa) , PlayerName(playerid));
			            SendClientMessageToAll(COLOR_GREEN,string);
		            }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/vunmute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /vunmute [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        PlayerInfo[playa][pvtMuted] = 0;
			            PlayerInfo[playa][pvMuted] = 0;
			            format(string, sizeof(string), "ADMIN:%s was unmuted in VIP CHAT by %s",PlayerName(playa) , PlayerName(playerid));
			            SendClientMessageToAll(COLOR_GREEN,string);
		            }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
//
//
//
	if(strcmp(cmd, "/saveacc", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 5)
		{
			SaveAccounts();
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си админ!");
		}
		return 1;
	}
//
	if(strcmp(cmd, "/maketvipall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pAdmin] >= 6)
				        {
				        }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        dini_IntSet(string, "TimeVip", 1);
							}
						}
					}
				}
				format(string, sizeof(string), "%s даде временен вип на всички", PlayerName(playerid));
				SendClientMessageToAll(COLOR_GRAD1,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gettvipall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pAdmin] >= 6)
				        {
				        }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
								PlayerInfo[i][pTimeVip] = 0;
							}
						}
					}
				}
				format(string, sizeof(string), "%s махна временя вип на всички", PlayerName(playerid));
				SendClientMessageToAll(COLOR_GRAD1,string);
				PlayerInfo[playerid][pTimeVip2] = 0;
				PlayerInfo[playerid][pTimeVip] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/muteall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
				        	if(i != INVALID_PLAYER_ID)
					        {
								PlayerInfo[i][pMuted] = 1;
								PlayerInfo[i][pvMuted] = 1;
							}
					}
				}
				format(string, sizeof(string), "All Players was muted by %s", PlayerName(playerid));
				SendClientMessageToAll(COLOR_GRAD1,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unmuteall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
                    {
				        	if(i != INVALID_PLAYER_ID)
					        {
								PlayerInfo[i][pMuted] = 0;
								PlayerInfo[i][pvMuted] = 0;
						}
					}
				}
				format(string, sizeof(string), "All Players was unmuted by %s", PlayerName(playerid));
				SendClientMessageToAll(COLOR_GREEN,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/fmuteall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] >= 6)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pMember] != TEAM_CIVILIAN && PlayerInfo[i][pRank] >= 6)
				        {
				        }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
								PlayerInfo[i][pfMuted] = 1;
							}
						}
					}
				}
                format(string, sizeof(string), "All Players was muted by %s", PlayerName(playerid));
                SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/funmuteall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] >= 6)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
                    {
                        if(PlayerInfo[i][pMember] != TEAM_CIVILIAN && PlayerInfo[i][pRank] >= 6)
				        {
				        }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
								PlayerInfo[i][pfMuted] = 0;
							}
						}
					}
				}
                format(string, sizeof(string), "All Players was unmuted by %s", PlayerName(playerid));
                SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_GREEN, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
			}
		}
		return 1;
	}
	if (strcmp(cmdtext, "/muted", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    SendClientMessage(playerid, COLOR_GREEN, "Онлайн заглушени играчи:");
			    for(new i = 0; i < MAX_PLAYERS; i++)
			    {
				    if(IsPlayerConnected(i))
				    {
				    new count = 0;
					    if(PlayerInfo[i][pMuted] == 1 && PlayerInfo[i][ptMuted] == 1)
				        {
						    GetPlayerName(i, sendername, sizeof(sendername));
						    format(string, 256, "{FFFFFF}%s (ID:%d).", sendername, i);
					     count = 1;
						}
						if (count == 0) SendClientMessage(playerid,COLOR_RED,"Няма онлайн заглушени играчи.");
	            	return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if (strcmp(cmdtext, "/vmuted", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    SendClientMessage(playerid, COLOR_RED, "Онлайн VIP заглушени играчи:");
			    for(new i = 0; i < MAX_PLAYERS; i++)
			    {
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pvMuted] == 1)
				        {
						    GetPlayerName(i, sendername, sizeof(sendername));
						    format(string, 256, "{FFFFFF}%s(ID:%d) {FF0000}е заглушен във VIP CHAT.", sendername, i);
						    SendClientMessage(playerid, COLOR_WHITE, string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unjail", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unjail [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(PlayerInfo[playa][pAdmin] > PlayerInfo[playerid][pAdmin])
			        {
				       return 1;
			        }
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						PlayerInfo[playa][pJail] = 0;
						PlayerInfo[playa][pJailed] = 0;
						PlayerInfo[playa][pJailTime] = 0;
						PlayerCuffed[giveplayerid] = 0;
						SetPlayerHealth(playa, 0);
                        WantedPoints[playerid] = 0;
						format(string, 256, "%s е извън затвора от %s.", giveplayer, PlayerName(playerid));
                        SendClientMessageToAll(COLOR_GREEN,string);
						{
						}
			       }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/pj", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Използвай: /pj [0-5]");
				return 1;
			}
			new health;
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pDonateRank] >= 4)
			{
						ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), health);
						format(string, sizeof(string), "Ти пребоядиса твоята кола!",PlayerName(playerid));
						SendClientMessage(playerid, COLOR_YELLOW, string);


			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
			}
		}
		return 1;
	}




 	if(strcmp(cmd, "/anews", true) == 0) // Admins
		{
  		if(IsPlayerConnected(playerid))
		    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{

				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[128];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Използвай: /anews [cnn textformat ~n~=Newline ~r~=Red ~g~=Green ~b~=Blue ~w~=White ~y~=Yellow][text]");
					return 1;
				}

				new y, m, d;
				new h,mi,s;
				getdate(y,m,d);
				gettime(h,mi,s);
				format(string, sizeof(string), "* (%d/%d/%d)[%d:%d:%d] %s пусна новина. *",d,m,y,h,mi,s, PlayerName(playerid), result);
                SendClientMessageToAll(COLOR_LIGHTRED,string);
				format(string, sizeof(string), "~r~News: ~n~~w~%s",result);
				GameTextForAll(string, 5000, 6);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
//	 	
			
			
			
			
			
			
			
			
    if(strcmp(cmd, "/aviptext", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /aviptext [Playerid/PartOfName] [text]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /aviptext [Playerid/PartOfName] [text]");
							return 1;
						}
							    Delete3DTextLabel(Text3D:PlayerLabel);
                VIPLabel[playerid] = 0;

	    format(dstring,sizeof(dstring),"%s", result);
	    PlayerLabel = Create3DTextLabel(dstring, 0xCF002CFF, 0.0, 0.0, 40.0, 20.0, 0, 1);
	    Attach3DTextLabelToPlayer(PlayerLabel, giveplayerid, 0.0, 0.0, 0.57);
				if (PlayerInfo[playerid][pDonateRank] >= 5)
				{
							    Delete3DTextLabel(Text3D:PlayerLabel);
                VIPLabel[playerid] = 0;
	    format(dstring,sizeof(dstring),"%s", result);
	    PlayerLabel = Create3DTextLabel(dstring, 0xCF002CFF, 0.0, 0.0, 40.0, 20.0, 0, 1);
	    Attach3DTextLabelToPlayer(PlayerLabel, giveplayerid, 0.0, 0.0, 0.57);
	    }
	    }
	    }
	    
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}

			
			
			
			
			

	 	if(strcmp(cmd, "/3dtext", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pDonateRank] >= 6)
	        {
	        if(PlayerInfo[playerid][pWantedLevel] >= 1)
	        {
	        SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да използваш тази команда");
	        return 1;
	        }
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /3dtext [text]");
					return 1;
				}
							    Delete3DTextLabel(Text3D:PlayerLabel);
                VIPLabel[playerid] = 0;

	    format(dstring,sizeof(dstring),"%s", result);
	    PlayerLabel = Create3DTextLabel(dstring, 0xCF002CFF, 0.0, 0.0, 40.0, 20.0, 0, 1);
	    Attach3DTextLabelToPlayer(PlayerLabel, playerid, 0.0, 0.0, 0.20);
				if (PlayerInfo[playerid][pDonateRank] >= 5)
				{
							    Delete3DTextLabel(Text3D:PlayerLabel);
                VIPLabel[playerid] = 0;
	    format(dstring,sizeof(dstring),"%s", result);
	    PlayerLabel = Create3DTextLabel(dstring, 0xCF002CFF, 0.0, 0.0, 40.0, 20.0, 0, 1);
	    Attach3DTextLabelToPlayer(PlayerLabel, playerid, 0.0, 0.0, 0.20);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
 	}



//

	 	if(strcmp(cmd, "/a", true) == 0 || strcmp(cmd, "/adminchat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    new admin[32];
                	if(PlayerInfo[playerid][pTest] == 1) { admin = "Test Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 1) { admin = "Helper"; }
                	else if(PlayerInfo[playerid][pAdmin] == 4) { admin = "Grand Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 2) { admin = "Administrator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 3) { admin = "Moderator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 6) { admin = "Owner";}
					else if(PlayerInfo[playerid][pAdmin] == 7) { admin = "Scripter";}
					else if(PlayerInfo[playerid][pAdmin] == 5) { admin = "Master Admin";}
            if(PlayerInfo[playerid][paMuted] != 0)
            {
                SendClientMessage(playerid,COLOR_ADMINCMD, "Ти си заглушен във ADMIN CHAT!");
                return 1;
            }
	        if(PlayerInfo[playerid][paMuted] != 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: (/a)dminchat[admin chat]");
					return 1;
				}
				format(string, sizeof(string), "%s %s(%d): %s",admin, PlayerName(playerid), playerid, result);
				if (PlayerInfo[playerid][pAdmin] >= 1)
				{
					SendAdminMessage(COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
 	}
       
       
        	if(strcmp(cmd, "/ewinner2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pEvent] == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ewinner2 [WINNER]");
					return 1;
				}
				              for(new i = 0; i < MAX_PLAYERS; i++)
                {
					format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~%s",result);
				    GameTextForPlayer(i, string, 5000, 3);
				    PlayerInfo[i][pLimit] = 333333;
				    }
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
 	}
       
       
       
       
 	if(strcmp(cmd, "/vipchat", true) == 0 || strcmp(cmd, "/v", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pvMuted] != 0)
            {
                SendClientMessage(playerid,COLOR_ADMINCMD, "Ти си заглушен във VIP CHAT!");
                return 1;
            }
	        if(PlayerInfo[playerid][pvMuted] != 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: (/v)ipchat[vip chat]");
					return 1;
				}
				format(string, sizeof(string), "[VIP CHAT][VIP Level:%d] %s(ID:%d): %s",PlayerInfo[playerid][pDonateRank], PlayerName(playerid), playerid, result);
				if (PlayerInfo[playerid][pDonateRank] >= 1)
				{
					SendVipMessage(COLOR_RED, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
			}
		}
		return 1;
 	}
 	//
 	
 	
 	
 	
 	
 	 	if(strcmp(cmd, "/riskchat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pEvent] == 1  && or == 1 || PlayerInfo[playerid][pTick] == 1 && or == 1)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /riskchat [risk chat]");
					return 1;
				}
				format(string, sizeof(string), "RISK: %s(ID:%d): %s",PlayerName(playerid), playerid, result);
				if (PlayerInfo[playerid][pEvent] == 1 || PlayerInfo[playerid][pTick] == 1)
				{
					SendRiskMessage(COLOR_ORANGE, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си участник в играта");
			}
		}
		return 1;
 	}
 	
 	
 	//
 	if(strcmp(cmd, "/startvote", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /startvote [question]");
					return 1;
				}
				format(string, sizeof(string), "ADMIN: %s стартирана гласуване с въпрос - %s",PlayerName(playerid), result);
SendClientMessageToAll(COLOR_RED, string);
format(string, sizeof(string), "VOTE: Използвайте /poll за да гласувате, имате 30 секунди!",PlayerName(playerid), result);
SendClientMessageToAll(COLOR_RED, string);
					    	        	    for(new i=0; i < MAX_PLAYERS; i++)
    {
vote1 = 1;
				PlayerInfo[i][pNone] = 0;
								PlayerInfo[i][pDa] = 0;
												PlayerInfo[i][pNe] = 0;
				PlayerInfo[i][pVoteTime] = 1*30;
format(PlayerInfo[i][VoteText], 70, "%s", result);
format(VoteText2, 70, "%s", result);
			                                          }

			}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		return 1;
 	}
 	


if(strcmp(cmd, "/vote", true) == 0)
	{
if(vote1 == 0)
{
format(string, sizeof(string), "В момента няма гласуване за RESPAWN на превозните средства!");
SendClientMessage(playerid, COLOR_GRAD1, string);
return 1;
}
if(PlayerInfo[playerid][pVoteT2] == 1)
{
format(string, sizeof(string), "Ти вече си гласувал за RESPAWN на превозните средства!");
SendClientMessage(playerid, COLOR_GRAD1, string);
return 1;
}
PlayerInfo[playerid][pVoteT2] = 1;
format(string, sizeof(string), "{60FA00}RESPAWN CARS",PlayerInfo[playerid][VoteText]); ShowPlayerDialog(playerid,525,DIALOG_STYLE_MSGBOX,"{60FA00}VOTЕ",string,"Да","Не");
		return 1;
 	}


 	if(strcmp(cmd, "/poll", true) == 0)
	{
if(vote1 == 0)
{
format(string, sizeof(string), "В момента няма гласуване!");
SendClientMessage(playerid, COLOR_GRAD1, string);
return 1;
}
if(PlayerInfo[playerid][pVoteT1] == 1)
{
format(string, sizeof(string), "Ти вече си гласувал!");
SendClientMessage(playerid, COLOR_GRAD1, string);
return 1;
}
PlayerInfo[playerid][pVoteT1] = 1;
format(string, sizeof(string), "{60FA00}%s",PlayerInfo[playerid][VoteText]); ShowPlayerDialog(playerid,525,DIALOG_STYLE_MSGBOX,"{60FA00}VOTЕ",string,"Да","Не");
		return 1;
 	}




	 	if(strcmp(cmd, "/endvote", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3)
	        {
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				while ((idx < length) && ((idx - offset)))
				{
					idx++;
				}
				format(string, sizeof(string), "ADMIN: %s отмени гласуването, въпроса беше - %s",PlayerName(playerid), PlayerInfo[playerid][VoteText]);
SendClientMessageToAll(COLOR_RED, string);
					    	        	    for(new i=0; i < MAX_PLAYERS; i++)
    {
			vote1 = 0;
				PlayerInfo[i][pNone] = 0;
								PlayerInfo[i][pDa] = 0;
												PlayerInfo[i][pNe] = 0;
				PlayerInfo[i][pVoteTime] = 0;
}
			}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		return 1;
 	}












	 	if(strcmp(cmd, "/caskrescars", true) == 0)
	{
	        if(PlayerInfo[playerid][pAdmin] >= 3)
	        {
				if(vote2 == 0)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Не е било питано за Respawn на превозните средства!");
				return 1;
				}
format(string, sizeof(string), "ADMIN: %s отмени гласуването за RESPAWN на превозните средства!",PlayerName(playerid));
SendClientMessageToAll(COLOR_RED, string);
					    	        	    for(new i=0; i < MAX_PLAYERS; i++)
    {
								PlayerInfo[i][pDa2] = 0;
												PlayerInfo[i][pNe2] = 0;
				PlayerInfo[i][pResTime] = 0;
				PlayerInfo[i][pVoteT2] = 0;
				vote2 = 0;
}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		return 1;
 	}




 	 	if(strcmp(cmd, "/askrescars", true) == 0)
	{
	        if(PlayerInfo[playerid][pManage] >= 1)
	        {
format(string, sizeof(string), "ADMIN: %s стартира гласуване за RESPAWN на превозните средства!",PlayerName(playerid), PlayerInfo[playerid][VoteText]);
SendClientMessageToAll(COLOR_RED, string);
format(string, sizeof(string), "VOTE RESPAWN CARS: %s Използвайте /vote за да гласувате, имате 15 секунди!",PlayerName(playerid), PlayerInfo[playerid][VoteText]);
SendClientMessageToAll(COLOR_RED, string);
				vote2 = 1;
new ch;
	            new min;
	            new sek;
	            gettime(ch, min, sek);
	            chas3 = ch;
			 minuti3 = min;
	            sekundi3 = sek;
	            GetPlayerName(playerid, adminin3, sizeof(adminin3));
for(new i=0; i < MAX_PLAYERS; i++)
    {
vote2 = 1;
format(PlayerInfo[i][VoteText], 70, "Respawn Cars");
				PlayerInfo[i][pNone] = 0;
								PlayerInfo[i][pDa] = 0;
												PlayerInfo[i][pNe] = 0;
				PlayerInfo[i][pVoteTime] = 1*15;
}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		return 1;
 	}
 	
	if(strcmp(cmd, "/checkfuelcars", true) == 0)
	{
	        if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			new year,month,day,hours,minutes,seconds;
	getdate(year, month, day);
format(string, sizeof(string), "SERVER: Последният REFUEL CARS е направен от %s на %d.%d.%d г. в %d:%d:%d часа",adminin,day,month,year,chas,minuti,sekundi);
SendClientMessage(playerid, COLOR_WHITE,string);

			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно права за да ползваш командата!");
			}
     	return 1;
	}
	if(strcmp(cmd, "/checkrescars", true) == 0)
	{
	        if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			new year,month,day,hours,minutes,seconds;
	getdate(year, month, day);
format(string, sizeof(string), "SERVER: Последният RESPAWN CARS е направен от %s на %d.%d.%d г. в %d:%d:%d часа",adminin,day,month,year,chas2,minuti2,sekundi2);
SendClientMessage(playerid, COLOR_WHITE,string);

			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно права за да ползваш командата!");
			}
     	return 1;
	}
	if(strcmp(cmd, "/checkaskres", true) == 0)
	{
	        if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			new year,month,day,hours,minutes,seconds;
	getdate(year, month, day);
format(string, sizeof(string), "SERVER: Последното гласуване за RESPAWN CARS е направен от %s на %d.%d.%d г. в %d:%d:%d часа",adminin,day,month,year,chas3,minuti3,sekundi3);
SendClientMessage(playerid, COLOR_WHITE,string);

			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно права за да ползваш командата!");
			}
     	return 1;
	}
	if(strcmp(cmd, "/refuelcars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pManage] < 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			    return 1;
			}
			else
			{
				for(new cars=0; cars<MAX_VEHICLES; cars++)
				{
	
					if(!VehicleOccupied(cars))
					{
    fuel[cars] = fuel[cars] = 100; //restoring fuel to 100
    isrefuelling[playerid] = 0;//resetting anti-spam thingy :3
					}
				}
									        for(new i; i<MAX_PLAYERS; i++)
			{
			new vid = GetPlayerVehicleID(i);
if(IsPlayerInVehicle(i))
	{
			vid = GetPlayerVehicleID(i);
			RepairVehicle(vid);
			fuel[vid] = fuel[vid] = 100;
	}
	}
	GetPlayerName(playerid, adminin, sizeof(adminin));
                format(string, sizeof(string), "REFUEL CARS: %s презареди всички превозни средства !", PlayerName(playerid));
	            SendClientMessageToAll(COLOR_RED,string);
	            new ch;
	            new min;
	            new sek;
	            gettime(ch, min, sek);
	            chas = ch;
			 minuti = min;
	            sekundi = sek;
			}
		}
		return 1;
	}

	if (strcmp(cmdtext, "/sound", true) == 0)
 	{
        if(PlayerInfo[playerid][pDonateRank] >= 3)
		{
SendClientMessage(playerid,COLOR_YELLOW,"Ти си пусна звук");
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		}
		else
		{
            SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
		}
     	return 1;
	}
	
	if (strcmp(cmdtext, "/nos", true) == 0)
 	{
        if(PlayerInfo[playerid][pDonateRank] >= 2)
		{
        if(IsPlayerInAnyVehicle(playerid))
        {
        AddVehicleComponent(GetPlayerVehicleID(playerid),1008);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		}
		else
		{
            SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
		}
		}
     	return 1;
	}
    if (strcmp(cmdtext, "/hyd", true) == 0)
        {
        if(PlayerInfo[playerid][pDonateRank] >= 2)
		{
        if(IsPlayerInAnyVehicle(playerid))
        {
        AddVehicleComponent(GetPlayerVehicleID(playerid), 1087);
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
		}
		else
		{
            SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
		}
		}
     	return 1;
	}

	if(strcmp(cmdtext,"/flip",true)==0)
	{
	if(PlayerInfo[playerid][pDonateRank] >= 2)
	{
	new VehicleID,Float:X,Float:Y,Float:Z;
	GetPlayerPos(playerid,X,Y,Z);
	VehicleID = GetPlayerVehicleID(playerid);
	SetVehiclePos(VehicleID,X,Y,Z);
	SetVehicleZAngle(VehicleID,0);
	SendClientMessage(playerid, COLOR_WHITE, "* Вие преобърнахте вашето превозно средство *");
	}
	return 1;
	}




	if(strcmp(cmd,"/invisible",true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] >= 3 && PlayerInfo[playerid][pO2] == 0)
		{
		SetPlayerColor(playerid,COLOR_INVISIBLE);
		SendClientMessage(playerid,COLOR_WHITE,"Ти вече си невидим на картата.");
		}
		else
		{
		SendClientMessage(playerid,COLOR_WHITE,"Ти не можеш да ползваш тази команда.");
		}
		return 1;
	}
		if(strcmp(cmd,"/visible",true) == 0)
	{
		              if (PlayerInfo[playerid][pDonateRank] == 7)
	              {
		if(PlayerInfo[playerid][pDonateRank] >= 7 && PlayerInfo[playerid][pO2] == 0)
		SetPlayerColor(playerid,COLOR_INVISIBLE);











				    if(PlayerInfo[playerid][pMember] == TEAM_GROVE)
	{
    SetPlayerColor(playerid,COLOR_GREEN);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_BALLAS)
	{
    SetPlayerColor(playerid,COLOR_PURPLE);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_VAGOS)
	{
    SetPlayerColor(playerid,COLOR_YELLOW);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_VIP)
	{
    SetPlayerColor(playerid,0xFF4500FF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_TRIADS)
	{
    SetPlayerColor(playerid,0x33CCFFAA);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_BOYZ)
	{
    SetPlayerColor(playerid,DANANGBOYS_COLOR);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ)
	{
    SetPlayerColor(playerid,CRIPZ_COLOR);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_GPD)
	{
    SetPlayerColor(playerid,COLOR_WHITE);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_SoA)
	{
    SetPlayerColor(playerid,COLOR_RED);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_ZETAS)
	{
    SetPlayerColor(playerid,0xCCCCAA);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
	{
    SetPlayerColor(playerid,0x0FD49CFF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_MS13)
	{
    SetPlayerColor(playerid,COLOR_MS13);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_BulgarianMafia)
	{
    SetPlayerColor(playerid,0xCC66CCFF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_RIFA)
	{
    SetPlayerColor(playerid,0x1682D959);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_LatinKing)
	{
    SetPlayerColor(playerid,0xFFE100FF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_FBI)
	{
    SetPlayerColor(playerid,COLOR_BlackStreet);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_NZ)
	{
    SetPlayerColor(playerid,0x6D000080);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_Thugs)
	{
    SetPlayerColor(playerid,0x2480E3FF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA)
	{
    SetPlayerColor(playerid,COLOR_YAKUZA);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_CIVILIAN)
	{
    SetPlayerColor(playerid,COLOR_WHITE);
	}
					    if(PlayerInfo[playerid][pMember] == TEAM_DPK)
	{
    SetPlayerColor(playerid,COLOR_ORANGE);
	}













		SendClientMessage(playerid,COLOR_WHITE,"Ти вече си видим на картата.");
		}
		else
		{
		 SendClientMessage(playerid, COLOR_GREY,"Нямаш достатъчно VIP права за да ползваш тази команда!");
		}
		return 1;
	}



	if(strcmp(cmd, "/drink", true) == 0) // By CuervO_NegrO
	{
 		if(IsPlayerConnected(playerid))
	    {
     		if(IsPlayerInRangeOfPoint(playerid, 10, -2654.0173,1407.3441,906.2734) || IsPlayerInRangeOfPoint(playerid, 10, 940.1111,5.1100,1000.9297) || IsPlayerInRangeOfPoint(playerid, 10, 1215.2838,-12.9923,1000.9219) || IsPlayerInRangeOfPoint(playerid, 10, 2717.5200,-2870.3110,82.4311)) //RPC
	        {
     				if(PlayerInfo[playerid][pDonateRank] >= 0)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "---------------[Бар]---------------");
					SendClientMessage(playerid, COLOR_WHITE, "/buybeer - $30");
					SendClientMessage(playerid, COLOR_WHITE, "/buywine - $30");
					SendClientMessage(playerid, COLOR_WHITE, "/buysprunk - $30");
					SendClientMessage(playerid, COLOR_WHITE, "/buymart - $30");
					SendClientMessage(playerid, COLOR_WHITE, "/buyvodkah - $30");
					SendClientMessage(playerid, COLOR_WHITE, "/buywater - $30");
					SendClientMessage(playerid, COLOR_YELLOW, "---------------[Бар]---------------");
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/buybeer", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 10, -2654.0173,1407.3441,906.2734) || IsPlayerInRangeOfPoint(playerid, 10, 940.1111,5.1100,1000.9297) || IsPlayerInRangeOfPoint(playerid, 10, 1215.2838,-12.9923,1000.9219)) //RPC
	        {
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			if(PlayerInfo[playerid][pCash] >= 30)
			{
			GivePlayerCash(playerid,-30);
			HouseInfo[h][Earnings] += 30;
			SavePlayerHouse(h);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
			}
			}
			}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/buywine", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 10, -2654.0173,1407.3441,906.2734) || IsPlayerInRangeOfPoint(playerid, 10, 940.1111,5.1100,1000.9297) || IsPlayerInRangeOfPoint(playerid, 10, 1215.2838,-12.9923,1000.9219)) //RPC
	        {
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			if(PlayerInfo[playerid][pCash] >= 30)
			{
			GivePlayerCash(playerid,-30);
			HouseInfo[h][Earnings] += 30;
			SavePlayerHouse(h);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			}
            }
            }
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/buysprunk", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 10, -2654.0173,1407.3441,906.2734) || IsPlayerInRangeOfPoint(playerid, 10, 940.1111,5.1100,1000.9297) || IsPlayerInRangeOfPoint(playerid, 10, 1215.2838,-12.9923,1000.9219)) //RPC
	        {
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			if(PlayerInfo[playerid][pCash] >= 30)
			{
			GivePlayerCash(playerid,-30);
			HouseInfo[h][Earnings] += 30;
			SavePlayerHouse(h);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
   			new Float:PlayersHealth;
   			GetPlayerHealth(playerid, PlayersHealth);
   			SetPlayerHealth(playerid, PlayersHealth + 10);
   			}
   			}
   			}
   			}
		}
		return 1;
	}


	if(strcmp(cmd, "/buymart", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 10, -2654.0173,1407.3441,906.2734) || IsPlayerInRangeOfPoint(playerid, 10, 940.1111,5.1100,1000.9297) || IsPlayerInRangeOfPoint(playerid, 10, 1215.2838,-12.9923,1000.9219)) //RPC
	        {
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			if(PlayerInfo[playerid][pCash] >= 30)
			{
			GivePlayerCash(playerid,-30);
			HouseInfo[h][Earnings] += 30;
			SavePlayerHouse(h);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_BEER);
			}
			}
			}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/buyvodkah", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 10, -2654.0173,1407.3441,906.2734) || IsPlayerInRangeOfPoint(playerid, 10, 940.1111,5.1100,1000.9297) || IsPlayerInRangeOfPoint(playerid, 10, 1215.2838,-12.9923,1000.9219)) //RPC
	        {
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			if(PlayerInfo[playerid][pCash] >= 30)
			{
			GivePlayerCash(playerid,-30);
			HouseInfo[h][Earnings] += 30;
			SavePlayerHouse(h);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_WINE);
			}
			}
			}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/buywater", true) == 0) // By CuervO_NegrO
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 10, -2654.0173,1407.3441,906.2734) || IsPlayerInRangeOfPoint(playerid, 10, 940.1111,5.1100,1000.9297) || IsPlayerInRangeOfPoint(playerid, 10, 1215.2838,-12.9923,1000.9219)) //RPC
	        {
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			if(PlayerInfo[playerid][pCash] >= 30)
			{
			GivePlayerCash(playerid,-30);
			HouseInfo[h][Earnings] += 30;
			SavePlayerHouse(h);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DRINK_SPRUNK);
   			new Float:PlayersHealth;
   			GetPlayerHealth(playerid, PlayersHealth);
   			SetPlayerHealth(playerid, PlayersHealth + 10);
   			}
   			}
   			}
   			}
		}
		return 1;
	}
if(strcmp(cmd, "/checkvote", true) == 0) // Edited by LordMan, orginally from CW-RP
	{
format(string, sizeof(string), "{00FF00}Резултатите от гласуванията на последния въпрос - %s",VoteText2);
SendClientMessage(playerid, COLOR_YELLOW, string);
for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
			if(PlayerInfo[i][plDa] >= 1)
			{
			new dainfo[27];
						if(PlayerInfo[i][plDa] == 1) { dainfo = "ДА"; }
                	else if(PlayerInfo[i][plDa] == 2) { dainfo = "НЕ"; }
		        format(string, sizeof(string), "{FFFFFF}%s - {33CC00}%s", PlayerName(i), dainfo);
		    	SendClientMessage(playerid, COLOR_YELLOW, string);
		    	}
	            }
	            }
return 1;
}

  	if(strcmp(cmd, "/listguns", true) == 0) // Edited by LordMan, orginally from CW-RP
	{
		if (PlayerInfo[playerid][pDonateRank] <= 5)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "Нямаш достатъчно VIP права за да ползваш тази команда");
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
		    SendClientMessage(playerid, COLOR_GREY, "USAGE: /listguns [playerid/partOfName]");
		    return 1;
	    }
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "Грешно ID");
		    return 1;
	    }
		new sweapon, sammo, gunname[100];
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	    format(string, sizeof(string), "*** Оръжията на %s ***", PlayerName(giveplayerid));
		    	SendClientMessage(playerid, COLOR_WHITE, string);
		for (new i=0; i<12; i++)
	    {
		    GetPlayerWeaponData(giveplayerid, i, sweapon, sammo);
		    GetWeaponName(sweapon, gunname, sizeof(gunname));
		    if(sweapon != 0)
		    {
		        format(string, sizeof(string), "%s (%d)", i, gunname, sammo);
		    	SendClientMessage(playerid, COLOR_YELLOW, string);
			}
	    }
		return 1;
	}

    if(strcmp(cmd, "/changelaser", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pDonateRank] >= 7)
			{
               tmp = strtok(cmdtext, idx);
               if (!strlen(tmp)) {
                   SendClientMessage(playerid, COLOR_WHITE, "Използвай: /changelaser [color]");
                   SendClientMessage(playerid, 0x00E800FF, "red, blue, pink, orange, green, yellow");
                   return 1;
            }
               if (!strcmp(tmp, "red", true)) SetPVarInt(playerid, "color", 18643);
               else if (!strcmp(tmp, "blue", true)) SetPVarInt(playerid, "color", 19080);
               else if (!strcmp(tmp, "pink", true)) SetPVarInt(playerid, "color", 19081);
               else if (!strcmp(tmp, "orange", true)) SetPVarInt(playerid, "color", 19082);
               else if (!strcmp(tmp, "green", true)) SetPVarInt(playerid, "color", 19083);
               else if (!strcmp(tmp, "yellow", true)) SetPVarInt(playerid, "color", 19084);
               else SendClientMessage(playerid, COLOR_GRAD1, "Няма такъв цвят!");
		  }
		  else
		  {
			 SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
			 }
		  }
		  return 1;
    }
    
   if(strcmp(cmd, "/laser", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pDonateRank] >= 5)
			{
                if(VIPLaser[playerid] == 0)
                {
                    SetPVarInt(playerid, "laser", 0);
                    RemovePlayerAttachedObject(playerid, 0);
                    format(string, 256, "VIP Laser: Ти премахна лазера.");
                    SendClientMessage(playerid, COLOR_GREEN, string);
                    VIPLaser[playerid] = 1;
				}
                else
                {
                    SetPVarInt(playerid, "laser", 1);
                    SetPVarInt(playerid, "color", GetPVarInt(playerid, "color"));
                    format(string, 256, "VIP Laser: Ти добави лазера.");
                    SendClientMessage(playerid, COLOR_GREEN, string);
                    VIPLaser[playerid] = 0;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
		}
		return 1;
	}


	if(strcmp(cmd, "/jetpack", true) == 0)
	{
		        					if(PlayerInfo[playerid][pO] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "В момента не можеш да използваш тази команда.");
return 1;
					}
	        					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
	
		if (PlayerInfo[playerid][pDonateRank] >= 6)
		{
            GivePlayerGun(playerid, 21);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
		}
		return 1;
	}

	if(strcmp(cmdtext, "/svchange", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] >= 2)
		{
            if(PlayerInfo[playerid][pGranati] == 1)
            {

                format(string, 256, "Ти вече ще се спаунваш с чантички.");
                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                PlayerInfo[playerid][p4anti] = 1;
                PlayerInfo[playerid][pGranati] = 0;
            }
            else
            {
                format(string, 256, "Ти вече ще се спаунваш с гранати.");
                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                PlayerInfo[playerid][pGranati] = 1;
                PlayerInfo[playerid][p4anti] = 0;
			}
		}
	return 1;
     }


     
     
     	if(strcmp(cmdtext, "/risk", true) == 0)
	{
		if(PlayerInfo[playerid][pEvent] == 1)
		{
if(or == 0)
{
                format(string, 256, "Играта риск печели,риск губи е отворена");
                SendClientMessageToAll(COLOR_ORANGE, string);
                or = 1;
                return 1;
                }

if(or == 1)
{
                format(string, 256, "Играта риск печели,риск губи е затворена");
                SendClientMessageToAll(COLOR_ORANGE, string);
                or = 0;
                return 1;
			}
		}
	return 1;
     }
     
	if(strcmp(cmdtext, "/detonator", true) == 0)
	{
		if(PlayerInfo[playerid][pBombs] >= 1)
		{
            if(BombC[playerid] == 0)
            {
                format(string, 256, "Ти активира бомбата");
                SendClientMessage(playerid, COLOR_ORANGE, string);
                BombC[playerid] = 1;
                PlayerInfo[playerid][pActivatedB] = 1;
            }
            else
            {
                format(string, 256, "Ти деактивира бомбата");
                SendClientMessage(playerid, COLOR_ORANGE, string);
                BombC[playerid] = 0;
                PlayerInfo[playerid][pActivatedB] = 0;

			}
		}
	return 1;
     }
     
     

     
               	if(strcmp(cmdtext, "/dmcamera2", true) == 0)
	{
              	format(string, 256, "Camera: Ти в момента гледаш през DM камера 1.");
              	SendClientMessage(playerid, COLOR_WHITE, string);
                format(string, 256, "Camera: За да спреш да гледаш от камерата използвай командата /stopcamera.");
                SendClientMessage(playerid, COLOR_WHITE, string);
                SetPlayerCameraPos(playerid,2378.4526,1042.3674,18.3189);
                SetPlayerCameraLookAt(playerid,2381.5283,1029.6492,18.1649);
	return 1;
     }
     
     
     
     
     
     
          	if(strcmp(cmdtext, "/dmcamera1", true) == 0)
	{
              	format(string, 256, "Camera: Ти в момента гледаш през DM камера 1.");
              	SendClientMessage(playerid, COLOR_WHITE, string);
                format(string, 256, "Camera: За да спреш да гледаш от камерата използвай командата /stopcamera.");
                SendClientMessage(playerid, COLOR_WHITE, string);
                SetPlayerCameraPos(playerid,2396.2234,983.9236,18.3189);
                SetPlayerCameraLookAt(playerid,2381.5283,1029.6492,18.1649);
	return 1;
     }
     
     
     
     
     
               	if(strcmp(cmdtext, "/dm2camera1", true) == 0)
	{
              	format(string, 256, "Camera: Ти в момента гледаш през DM 2 камера 1.");
              	SendClientMessage(playerid, COLOR_WHITE, string);
                format(string, 256, "Camera: За да спреш да гледаш от камерата използвай командата /stopcamera.");
                SendClientMessage(playerid, COLOR_WHITE, string);
                SetPlayerCameraPos(playerid,1176.4257,1231.3821,16.3110);
                SetPlayerCameraLookAt(playerid,1170.4556,1246.2584,15.7774);
	return 1;
     }
     
     
     
                    	if(strcmp(cmdtext, "/dm2camera2", true) == 0)
	{
              	format(string, 256, "Camera: Ти в момента гледаш през DM 2 камера 2.");
              	SendClientMessage(playerid, COLOR_WHITE, string);
                format(string, 256, "Camera: За да спреш да гледаш от камерата използвай командата /stopcamera.");
                SendClientMessage(playerid, COLOR_WHITE, string);
                SetPlayerCameraPos(playerid,1098.1591,1360.0845,16.3110);
                SetPlayerCameraLookAt(playerid,1106.6646,1352.8414,19.3868);
	return 1;
     }
     
     
     
     
     
     
                    	if(strcmp(cmdtext, "/dm3camera1", true) == 0)
	{
              	format(string, 256, "Camera: Ти в момента гледаш през DM 3 камера 1.");
              	SendClientMessage(playerid, COLOR_WHITE, string);
                format(string, 256, "Camera: За да спреш да гледаш от камерата използвай командата /stopcamera.");
                SendClientMessage(playerid, COLOR_WHITE, string);
                SetPlayerCameraPos(playerid,1585.1644,-1493.1808,22.6045);
                SetPlayerCameraLookAt(playerid,1591.2841,-1494.8633,22.5083);
	return 1;
     }



                    	if(strcmp(cmdtext, "/dm3camera2", true) == 0)
	{
              	format(string, 256, "Camera: Ти в момента гледаш през DM 3 камера 2.");
              	SendClientMessage(playerid, COLOR_WHITE, string);
                format(string, 256, "Camera: За да спреш да гледаш от камерата използвай командата /stopcamera.");
                SendClientMessage(playerid, COLOR_WHITE, string);
                SetPlayerCameraPos(playerid,1617.3185,-1490.9114,22.6082);
                SetPlayerCameraLookAt(playerid,1611.5326,-1494.1122,22.6111);
	return 1;
     }
     
     
     
	if(strcmp(cmdtext, "/stopcamera", true) == 0)
	{
                format(string, 256, "Ти спря да гледаш от камерата.");
                SendClientMessage(playerid, COLOR_WHITE, string);
                SetCameraBehindPlayer(playerid);
	return 1;
     }
     
     
	if(strcmp(cmdtext, "/rifacamera", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == TEAM_RIFA)
		{
            if(RifaCam[playerid] == 0)
            {
                format(string, 256, "За да спреш да гледаш използвай /rifacamera");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                SetPlayerCameraPos(playerid,-2228.8979,969.9410,97.7188);
                SetPlayerCameraLookAt(playerid,-2228.8979,969.9410,97.7188);
                RifaCam[playerid] = 1;
                SetPlayerInterior(playerid, 0);
            }
            else
            {
                format(string, 256, "Ти спря да гледаш");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                SetCameraBehindPlayer(playerid);
                RifaCam[playerid] = 0;

			}
		}
	return 1;
     }
          	if(strcmp(cmdtext, "/thcamera", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == TEAM_Thugs)
		{
            if(RifaCam[playerid] == 0)
            {
                format(string, 256, "За да спреш да гледаш използвай /thcamera");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                SetPlayerCameraPos(playerid,487.1743,-1457.5992,37.5781);
                SetPlayerCameraLookAt(playerid,487.3942,-1470.5540,37.3014);
                SetPlayerInterior(playerid, 0);
                RifaCam[playerid] = 1;
            }
            else
            {
                format(string, 256, "Ти спря да гледаш");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                SetCameraBehindPlayer(playerid);
                RifaCam[playerid] = 0;

			}
		}
	return 1;
     }
     
          	if(strcmp(cmdtext, "/fbicamera", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == TEAM_FBI)
		{
            if(RifaCam[playerid] == 0)
            {
                format(string, 256, "За да спреш да гледаш използвай /fbicamera");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                SetPlayerCameraPos(playerid,952.2360,1768.8192,15.7941);
                SetPlayerCameraLookAt(playerid,966.9221,1749.7156,15.2808);
                SetPlayerInterior(playerid, 0);
                RifaCam[playerid] = 1;
            }
            else
            {
                format(string, 256, "Ти спря да гледаш");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                SetCameraBehindPlayer(playerid);
                RifaCam[playerid] = 0;

			}
		}
	return 1;
     }

     
     
     
     
     	if(strcmp(cmdtext, "/abcamera", true) == 0)
	{
		if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
		{
            if(RifaCam[playerid] == 0)
            {
                format(string, 256, "За да спреш да гледаш използвай /abcamera");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                SetPlayerCameraPos(playerid,1671.7843,-2121.3367,18.6086);
                SetPlayerCameraLookAt(playerid,1725.2898,-2115.7366,17.1128);
                SetPlayerInterior(playerid, 0);
                RifaCam[playerid] = 1;
            }
            else
            {
                format(string, 256, "Ти спря да гледаш");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                SetCameraBehindPlayer(playerid);
                RifaCam[playerid] = 0;

			}
		}
	return 1;
     }




if (strcmp(cmd, "/briefcase", true) == 0 || strcmp(cmd, "/bcase", true) == 0)
{
				        if (PlayerInfo[playerid][pWK] >= 1)
			{
	if(BC[playerid] == 1)
{
            PlayerInfo[playerid][pWIK] = 0;
            RemovePlayerAttachedObject( playerid,9 );
                format(string, 256, "Ти си прибра куфарчето");
                SendClientMessage(playerid, COLOR_GREEN, string);
	 BC[playerid]=0;
	 return 1;
	}
	if(BC[playerid] == 0)
	{
PlayerInfo[playerid][pWIK] = 1;
                format(string, 256, "Ти си извади куфарчето");
                SendClientMessage(playerid, COLOR_GREEN, string);
SetPlayerAttachedObject( playerid, 9, 1210, 6, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 9);
		BC[playerid]=1;
		}
		return 1;
	}
  }









	if(strcmp(cmdtext, "/santahead", true) == 0)
	{
            if(PlayerInfo[playerid][pSanta] == 0)
            {
            			SendClientMessage(playerid, COLOR_BL1,"Ти си сложи шапката");
            			      SetPlayerAttachedObject( playerid, 8, 19066, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382 ) && EditAttachedObject(playerid, 8);
PlayerInfo[playerid][pSanta] = 1;
            }
            else
            {
PlayerInfo[playerid][pSanta] = 0;
RemovePlayerAttachedObject( playerid,8 );
			SendClientMessage(playerid, COLOR_BL1,"Ти си махна шапката");
		}
	return 1;
     }



	if(strcmp(cmdtext, "/parrot", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] >= 3)
		{
            if(PlayerInfo[playerid][pParrot] == 0)
            {
            			SendClientMessage(playerid, COLOR_BL1,"Ти си сложи папагал");
            			      SetPlayerAttachedObject( playerid, 7, 19078, 15, 0.073592, 0.024750, 0.023458, 164.272216, 87.050361, 0.000000, 1.000000, 0.968321, 1.118647 ) && EditAttachedObject(playerid, 7);
PlayerInfo[playerid][pParrot] = 1;
            }
            else
            {
PlayerInfo[playerid][pParrot] = 0;
RemovePlayerAttachedObject( playerid,7 );
			SendClientMessage(playerid, COLOR_BL1,"Ти си махна папагала");
			}
		}
	return 1;
     }


	if(strcmp(cmdtext, "/cnos", true) == 0)
	{
	new vehicleid;
		if(PlayerInfo[playerid][pDonateRank] >= 3)
		{
            if(PlayerInfo[playerid][pCnos] == 0)
            {
            			SendClientMessage(playerid, COLOR_BL1,"Твоето нитро вече е безкраино");
PlayerInfo[playerid][pCnos] = 1;
	                vehicleid=GetPlayerVehicleID(playerid);
					AddVehicleComponent(vehicleid,1010);
	
            }
            else
            {
            vehicleid=GetPlayerVehicleID(playerid);
PlayerInfo[playerid][pCnos] = 0;
 AddVehicleComponent(vehicleid,1008);
			SendClientMessage(playerid, COLOR_BL1,"Твоето нитро вече е краино!");
			}
		}
	return 1;
     }

	if(strcmp(cmd, "/para", true) == 0)
	{
		if (PlayerInfo[playerid][pDonateRank] >= 1)
		{
 			GivePlayerGun(playerid, 46);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
		}
		return 1;
	}
	if(strcmp(cmd, "/fine", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fine [playerid] [amount] [Reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new fine;
						tmp = strtok(cmdtext, idx);
						if (!strlen(tmp))
						{
						SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fine [playerid] [amount] [Reason]");
						return 1;
						}
						fine = strval(tmp);
						if (fine < 0)
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Сумата трябва да е повече от 0.");
							return 1;
						}
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fine [playerid] [amount] [Reason]");
							return 1;
						}
						format(string, sizeof(string), "%s му бяха взети $%d от %s. Причина: %s", giveplayer, fine, PlayerName(playerid), (result));
						SendClientMessageToAll(COLOR_RED, string);
						GivePlayerCash(giveplayerid, -fine);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/efix", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /efix [playerid]");
				return 1;
			}
			new plo;
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(PlayerInfo[plo][pInEvent] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
                    if(PlayerInfo[plo][AFKstatus] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
					if (PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
					{
	                	PlayerInfo[plo][pO3] = 0;
					    format(string, sizeof(string), "{FFFFFF}*** {00FF00}Админ %s ти позволи да използваш fix {FFFFFF}***", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_WHITE, string);
				        format(string, sizeof(string), "{FFFFFF}*** {FFFFFF}Ти позволи на {00FF00}%s {FFFFFF} да използва fix{FFFFFF}***", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/dfix", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /dfix [playerid]");
				return 1;
			}
			new plo;
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(PlayerInfo[plo][pInEvent] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
                    if(PlayerInfo[plo][AFKstatus] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
					if (PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
					{
	                	PlayerInfo[plo][pO3] = 1;
					    format(string, sizeof(string), "{FFFFFF}*** {00FF00}Админ %s ти забрани да използваш fix {FFFFFF}***", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_WHITE, string);
				        format(string, sizeof(string), "{FFFFFF}*** {FFFFFF}Ти забрани на {00FF00}%s {FFFFFF} да използва fix{FFFFFF}***", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/dinvisible", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /dinvisible [playerid]");
				return 1;
			}
			new plo;
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(PlayerInfo[plo][pInEvent] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
                    if(PlayerInfo[plo][AFKstatus] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
					if (PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
					{
	                	PlayerInfo[plo][pO2] = 1;
					    format(string, sizeof(string), "{FFFFFF}*** {00FF00}Админ %s ти забрани да използваш invisible {FFFFFF}***", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_WHITE, string);
				        format(string, sizeof(string), "{FFFFFF}*** {FFFFFF}Ти забрани на {00FF00}%s {FFFFFF} да използва invisible{FFFFFF}***", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//
//
	if(strcmp(cmd, "/djetpack", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /djetpack [playerid]");
				return 1;
			}
			new plo;
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(PlayerInfo[plo][pInEvent] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
                    if(PlayerInfo[plo][AFKstatus] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
					if (PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
					{
	                	PlayerInfo[plo][pO] = 1;
					    format(string, sizeof(string), "{FFFFFF}*** {00FF00}Админ %s ти забрани да използваш jetpack {FFFFFF}***", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_WHITE, string);
				        format(string, sizeof(string), "{FFFFFF}*** {FFFFFF}Ти забрани на {00FF00}%s {FFFFFF} да използва jetpack{FFFFFF}***", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/einvisible", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /einvisible [playerid]");
				return 1;
			}
			new plo;
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(PlayerInfo[plo][pInEvent] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
                    if(PlayerInfo[plo][AFKstatus] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
					if (PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
					{
	                	PlayerInfo[plo][pO2] = 0;
					    format(string, sizeof(string), "{FFFFFF}*** {00FF00}Админ %s ти позволи да използваш invisible {FFFFFF}***", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_WHITE, string);
				        format(string, sizeof(string), "{FFFFFF}*** {FFFFFF}Ти позволи на {00FF00}%s {FFFFFF} да използва invisible{FFFFFF}***", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/ajetpack", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ajetpack [playerid]");
				return 1;
			}
			new plo;
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(PlayerInfo[plo][pInEvent] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
                    if(PlayerInfo[plo][AFKstatus] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
					if (PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
					{
	                	PlayerInfo[plo][pO] = 0;
					    format(string, sizeof(string), "{FFFFFF}*** {00FF00}Админ %s ти позволи да използваш jetpack {FFFFFF}***", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_WHITE, string);
				        format(string, sizeof(string), "{FFFFFF}*** {FFFFFF}Ти позволи на {00FF00}%s {FFFFFF} да използва jetpack{FFFFFF}***", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/red", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /red [playerid]");
				return 1;
			}
			new plo;
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(PlayerInfo[plo][pInEvent] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
                    if(PlayerInfo[plo][AFKstatus] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
					if (PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
					{
	                	SetPlayerColor(plo, COLOR_RED);
					    format(string, sizeof(string), "{FFFFFF}*** {00FF00}Админ %s ти смени цвета {FFFFFF}***", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_WHITE, string);
				        format(string, sizeof(string), "{FFFFFF}*** {FFFFFF}Ти смени цвета на {00FF00}%s {FFFFFF}{FFFFFF}***", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/blue", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /blue [playerid]");
				return 1;
			}
			new plo;
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(PlayerInfo[plo][pInEvent] == 0)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
                    if(PlayerInfo[plo][AFKstatus] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е не е в евент!");
                        return 1;
                    }
					if (PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
					{
	                	SetPlayerColor(plo, COLOR_BL1);
					    format(string, sizeof(string), "{FFFFFF}*** {00FF00}Админ %s ти смени цвета {FFFFFF}***", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_WHITE, string);
				        format(string, sizeof(string), "{FFFFFF}*** {FFFFFF}Ти смени цвета на {00FF00}%s {FFFFFF}{FFFFFF}***", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gethere", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /gethere [playerid]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if(PlayerInfo[plo][pJail] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е в затвора и не можеш да бъде телепортиран!");
                        return 1;
                    }
                    						if(PlayerInfo[playerid][pJailed] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч е в затвора и не можеш да бъде телепортиран!");
				return 1;
			}
                    if(PlayerInfo[plo][AFKstatus] == 1)
                    {
                        SendClientMessage(playerid, COLOR_GRAD1, "Този играч е в AFK режим и не може да бъде телепортиран!");
                        return 1;
                    }
					if (PlayerInfo[playerid][pAdmin] >= 2)
					{
						GetPlayerPos(playerid, plocx, plocy, plocz);
						SetPlayerVirtualWorld(plo, GetPlayerVirtualWorld(playerid));
						SetPlayerInterior(plo, GetPlayerInterior(playerid));
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
					    format(string, sizeof(string), "* Ти беше телепортиран до %s *", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_YELLOW, string);
				        format(string, sizeof(string), "* Ти телепортира %s до теб *", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_YELLOW, string);
				        format(string, sizeof(string), "Teleport: %s телепортира %s до себе си!", PlayerName(playerid) ,PlayerName(plo));
						SendAdminMessage(COLOR_RED, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/disarm", true) == 0){
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /disarm [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        ResetPlayerWeapons(playa);
                        ResetPlayerWeaponsEx(playa);
			            format(string, sizeof(string), "* Ти взе всички оръжия на %s *",PlayerName(playa));
			            SendClientMessage(playerid, COLOR_WHITE,string);
			            format(string, sizeof(string), "* %s взе всички твои оръжия *", PlayerName(playerid));
			            SendClientMessage(playa, COLOR_YELLOW,string);
					}
				}
			}
		}
		return 1;
	}
	//
	//
	//
	///
	//
		if(strcmp(cmd, "/checkfuel", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pGD] == 1)
			{
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_GREEN, "{6699FF}Използвай: 1 - [Бензиностанция 1] 2 - [Бензиностанция 2] 3 - [Бензиностанция 3] 4 - [Бензиностанция 4]");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
						if (strcmp(x_job, "1", true) == 0)
						{
						format(string, 256, "{6699FF}Бензиностанция 1 [%d от 500 литрa (трябва да са под 250 за да можеш да презареждаш)]",F1);
                        SendClientMessage(playerid, COLOR_GREEN,string);
						}
				    	if (strcmp(x_job, "2", true) == 0)
						{
						format(string, 256, "{6699FF}Бензиностанция 2 [%d от 500 литрa (трябва да са под 250 за да можеш да презареждаш)]",F2);
                        SendClientMessage(playerid, COLOR_GREEN,string);
						}
						if (strcmp(x_job, "3", true) == 0)
						{
						format(string, 256, "{6699FF}Бензиностанция 3 [%d от 500 литрa (трябва да са под 250 за да можеш да презареждаш)]",F3);
                        SendClientMessage(playerid, COLOR_GREEN,string);
						}
						if (strcmp(x_job, "4", true) == 0)
						{
						format(string, 256, "{6699FF}Бензиностанция 4 [%d от 500 литрa (трябва да са под 250 за да можеш да презареждаш)]",F4);
                        SendClientMessage(playerid, COLOR_GREEN,string);
						}


			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на GFC смяна");
				return 1;
			}
		}
		return 1;
	}
	//
	//
	//
					if(strcmp(cmd, "/drop", true) == 0)
	{
           new para1;
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /drop [item number]");
				SendClientMessage(playerid, COLOR_YELLOW, "Item Numbers: 1: Dice, 2: Radio, 3: Briefcase, 5: Bomb");
				SendClientMessage(playerid, COLOR_YELLOW, "Item Numbers: 6: Cigarattes, 7: Cocaine, 8: Heroin, 9: Boat License");
				SendClientMessage(playerid, COLOR_YELLOW, "Item Numbers: 10: Train License, 11: Helicopter License, 12: Airplane License");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
		    if(strcmp(x_job,"1",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли твоето зарче.");
				PlayerInfo[playerid][pZarche] = 0;
			}
			if(strcmp(x_job,"2",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли твоето радио.");
				PlayerInfo[playerid][pRadio] = 0;
			}
			if(strcmp(x_job,"3",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли твоя куфар.");
				PlayerInfo[playerid][pWK] = 0;
			}
			if(strcmp(x_job,"4",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли твоята бомба.");
				PlayerInfo[playerid][pBombs] = 0;
			}
			if(strcmp(x_job,"5",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти всичките си бомби.");
				PlayerInfo[playerid][pBombs] = 0;
			}
			if(strcmp(x_job,"6",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли всичките си цигари.");
				PlayerInfo[playerid][pCig] = 0;
			}
			if(strcmp(x_job,"7",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли всичкия си кокаин.");
				PlayerInfo[playerid][pCok] = 0;
			}
			if(strcmp(x_job,"8",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли всичкия си хероин.");
				PlayerInfo[playerid][pHeroin] = 0;
			}
			if(strcmp(x_job,"9",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли твоя лиценз за лотки.");
				PlayerInfo[playerid][pBoat] = 0;
			}
			if(strcmp(x_job,"10",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли твоя лиценз за влакове.");
				PlayerInfo[playerid][pVlak] = 0;
			}
			if(strcmp(x_job,"11",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли твоя лиценз за хеликоптер.");
				PlayerInfo[playerid][pHili] = 0;
			}
			if(strcmp(x_job,"12",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти изхвърли твоя лиценз за самолет.");
				PlayerInfo[playerid][pSamolet] = 0;
			}
		return 1;
	}

if(strcmp(cmd, "/robberybank", true) == 0)
	{
		    if(IsPlayerInRangeOfPoint(playerid, 15, 225.1788,121.2028,999.0782))
		        {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
			SendClientMessage(playerid, COLOR_WHITE,"Използвай: /robberybank [start/end/invite/kick/leave/check]");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			 			            if(strcmp(x_job,"check",true) == 0)
            {
            if(robmoneyn == 0)
            {
				SendClientMessage(playerid, COLOR_ORANGE, "Можеш да стартираш обир още сега!");
				}
				if(robmoneyn >= 500)
            {
				SendClientMessage(playerid, COLOR_ORANGE, "В момента има обир!");
				}
	}
	 if(strcmp(x_job,"leave",true) == 0)
            {
            if(PlayerInfo[playerid][pRoberN2] == 0)
            {
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не участваш в обир!");
				return 1;
				}
				if(PlayerInfo[playerid][pRoberN2] == 1)
            {
                        PlayerInfo[playerid][pRoberN2] = 0;
                        TextDrawShowForPlayer(playerid, robn[playerid]);
                        PlayerInfo[playerid][pRobN] = 0;
                        }
			}
	if(strcmp(x_job,"kick",true) == 0)
            {
            	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /robbery [kick] [playerid] [confirm playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			                             if (ProxDetectorS(3.0, playerid, playa))
                        {
                        			    			if (PlayerInfo[playerid][pRoberN] == 1)
			{
					        if(IsPlayerInRangeOfPoint(playerid, 3, 225.1788,121.2028,999.0782) || IsPlayerInRangeOfPoint(playerid, 3, 2448.0120,-1962.7341,13.5469))
		        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да поканиш себеси!"); return 1; }
                        format(string, sizeof(string), "%s те изгони от обира обира.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_ORANGE, string);
                        format(string, sizeof(string), "Ти изгони %s от обира.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_ORANGE, string);
                        PlayerInfo[playa][pRoberN2] = 0;
                        PlayerInfo[playa][pRobN] = 0;


                        }
else
{
					                    format(string, sizeof(string), "Ти не си в мястото за стартиране на обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
                        }
                        else
                        {
format(string, sizeof(string), "Ти не си лидер на обир");
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        }
					}
	 else
	 {
                        format(string, sizeof(string), "%s не е близо до теб", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GRAD1, string);
	 }

				}
			}
		}
	        }


		if(strcmp(x_job,"invite",true) == 0)
            {
            	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /invite [invite] [playerid] [confirm playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			                             if (ProxDetectorS(3.0, playerid, playa))
                        {
                        			    			if (PlayerInfo[playerid][pRoberN] == 1)
			{
					        if(IsPlayerInRangeOfPoint(playerid, 3, 225.1788,121.2028,999.0782) || IsPlayerInRangeOfPoint(playerid, 3, 2448.0120,-1962.7341,13.5469))
		        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да поканиш себеси!"); return 1; }
                        format(string, sizeof(string), "%s те вкара в обира.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_ORANGE, string);
                        format(string, sizeof(string), "Ти вкара %s в обира.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_ORANGE, string);
                        PlayerInfo[playa][pRoberN2] = 1;
                        TextDrawShowForPlayer(playa, robn[playa]);
                        SetPlayerSkin(playa,25);
                        PlayerInfo[playa][pRobN] = 1*2;
                        PlayerInfo[playa][pWantedLevel] += 1;


                        }
else
{
					                    format(string, sizeof(string), "Ти не си в мястото за стартиране на обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
                        }
                        else
                        {
format(string, sizeof(string), "Ти не си лидер на обир");
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        }
					}
	 else
	 {
                        format(string, sizeof(string), "%s не е близо до теб", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GRAD1, string);
	 }

				}
			}
		}
	        }
	if(strcmp(x_job,"start",true) == 0)
            {
                 if(IsPlayerConnected(playerid))
     {
     if(robmoneyn == 0)
     {
          if(IsPlayerInRangeOfPoint(playerid, 10, 225.1788,121.2028,999.0782))
          {
     PlayerInfo[playerid][pZvezda1] += 1;
     PlayerInfo[playerid][pWantedLevel] += 1;
          if(PlayerInfo[playerid][pWantedLevel] == 1)
     {
SetPlayerWantedLevel(playerid,1);
     }
          if(PlayerInfo[playerid][pWantedLevel] == 2)
     {
SetPlayerWantedLevel(playerid,2);
     }
          if(PlayerInfo[playerid][pWantedLevel] == 3)
     {
SetPlayerWantedLevel(playerid,3);
     }
          if(PlayerInfo[playerid][pWantedLevel] == 4)
     {
SetPlayerWantedLevel(playerid,4);
     }
          if(PlayerInfo[playerid][pWantedLevel] == 5)
     {
SetPlayerWantedLevel(playerid,5);
     }
          if(PlayerInfo[playerid][pWantedLevel] >= 6)
     {
SetPlayerWantedLevel(playerid,6);
     }
                 format(string, sizeof(string), "Robbery: Ти започна обир, намери място където да крадеш !");
                 SendClientMessageToAll(COLOR_ORANGE,string);
                 SetPlayerSkin(playerid,24);
                        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
      SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRoberN] = 1;
TextDrawShowForPlayer(playerid, robn[playerid]);
}
else
{
                         format(string, sizeof(string), "Ти не си в мястото за стартиране на обир");
                 SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
                         format(string, sizeof(string), "В момента има обир");
                 SendClientMessage(playerid, COLOR_GRAD1,string);
}
  }
	}
	if(strcmp(x_job,"end",true) == 0)
            {
                 if(IsPlayerConnected(playerid))
     {
     if(PlayerInfo[playerid][pRoberN] == 1)
  {
                 format(string, sizeof(string), "ROB:Обира беше прекратен от лидера на обира и участиниците в него получиха парите си.",robmoneyn);
                 SendClientMessageToAll(COLOR_ORANGE,string);
       for(new i; i<MAX_PLAYERS; i++)
   {
        if(PlayerInfo[i][pRoberN] >= 1 || PlayerInfo[i][pRoberN2] >= 1)
  {
            GivePlayerCash(i, robmoneyn);
              TextDrawHideForPlayer(i, robn[playerid]);
     PlayerInfo[i][pRobN] = 0;
            PlayerInfo[i][pRoberN] = 0;
            PlayerInfo[i][pRoberN2] = 0;
            PlayerInfo[i][pRobN] =0;
   TextDrawHideForPlayer(i, robn[i]);
   TextDrawHideForPlayer(i, robn[i]);
   TextDrawHideForPlayer(i, robn[i]);
   robmoneyn = 0;
   }
   }
   PlayerInfo[playerid][pRobN] = 0;
PlayerInfo[playerid][pRoberN] = 0;
TextDrawHideForPlayer(playerid, robn[playerid]);
}
else
{
                         format(string, sizeof(string), "Ти не си лидер на обир");
                 SendClientMessage(playerid, COLOR_GRAD1,string);
}
  }
	        }








			}
		return 1;
	}
//





				if(strcmp(cmd, "/robhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	 if(robmoneyn == 0)
	 {
		        if(PlayerInfo[playerid][pInHouse] == 0)
 {
 SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в къща");
 return 1;
 }
		        	    if(PlayerInfo[playerid][pRoberN] == 1)
	    {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}






format(string, sizeof(string), "Robbery: Някой се опитва да обере къща, отиди и го спри!");
	                SendClientMessageToAll(COLOR_ORANGE,string);
      			        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRobN] = 1*2;
PlayerInfo[playerid][pNTime] = 0;
PlayerInfo[playerid][pNRob2] = 0;
TextDrawShowForPlayer(playerid, robn[playerid]);

}
else
{
}

}
else
{
}
















	 if(robmoneyn == 0)
	 {
		        	    if(PlayerInfo[playerid][pRoberN] == 1)
	    {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}






										                    format(string, sizeof(string), "ROB:Ти стартира обир на къща,внимавай да не те убият");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ако отидеш надалеч от мястото няма да можеш да взимаш пари, за да прекратиш обира използвай /stoprob");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ти получи +1 Wanted Level, защото се опитваш да правиш обир");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
                 format(string, sizeof(string), "ROB:Човека/групичката която стартираха обир-а вече почнаха да ограбват къща.");
	                SendClientMessageToAll(COLOR_ORANGE,string);
      			        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRobN] = 1*2;
TextDrawShowForPlayer(playerid, robn[playerid]);

}
else
{
}

}
else
{
}








		}
		return 1;
	}












				if(strcmp(cmd, "/rob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	 if(robmoneyn == 0)
	 {
		        if(IsPlayerInRangeOfPoint(playerid, 3, 1713.8235,-1641.7657,27.2109))
		        {
                 format(string, sizeof(string), "Robbery: Някой се опитва да обере Atrium, отиди и го спри!");
	                SendClientMessageToAll(COLOR_ORANGE,string);
	                if(PlayerInfo[playerid][pRoberN] == 0)
	                {
	                SendClientMessage(playerid,COLOR_GRAD1,"Ти не си лидер на обир !");
	                return 1;
	                }
		        	    if(PlayerInfo[playerid][pRoberN] == 1)
	    {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
PlayerInfo[playerid][pRobN] = 1*2;
TextDrawShowForPlayer(playerid, robn[playerid]);
PlayerInfo[playerid][pNTime] = 0;
PlayerInfo[playerid][pNRob2] = 0;

}
else
{
					                    format(string, sizeof(string), "Ти не си лидер на обир.");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "Ти не си до място за обир!");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "В момента има обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
		}
		return 1;
	}




					if(strcmp(cmd, "/robbank", true) == 0)
	{
	if(PlayerInfo[playerid][pRank] <= 5)
	{
	format(string, sizeof(string), "Ти не си лидер на банда!");
    SendClientMessage(playerid, COLOR_GRAD1,string);
	return 1;
	}
	    if(IsPlayerConnected(playerid))
	    {
	 if(robmoneyn == 0)
	 {
		        if(IsPlayerInRangeOfPoint(playerid, 3, 299.7396,123.1522,999.0851))
		        {
                 format(string, sizeof(string), "Robbery: Някой се опитва да обере банка, отиди и го спри!");
	                SendClientMessageToAll(COLOR_ORANGE,string);
		        	    if(PlayerInfo[playerid][pRoberN] == 1)
	    {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
PlayerInfo[playerid][pRobN] = 1*2;
TextDrawShowForPlayer(playerid, robn[playerid]);
PlayerInfo[playerid][pNTime] = 0;
PlayerInfo[playerid][pNRob2] = 0;

}
else
{
					                    format(string, sizeof(string), "Ти не си лидер на обир.");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "Ти не си до място за обир!");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "В момента има обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
		}
		return 1;
	}



					if(strcmp(cmd, "/robbery", true) == 0)
	{
		    if(IsPlayerInRangeOfPoint(playerid, 3, 2145.6499,2834.6777,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 2448.0120,-1962.7341,13.5469))
		        {
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
			SendClientMessage(playerid, COLOR_WHITE,"Използвай: /robbery [start/end/invite/kick/leave/check]");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			 			            if(strcmp(x_job,"check",true) == 0)
            {
            if(robmoneyn == 0)
            {
				SendClientMessage(playerid, COLOR_ORANGE, "Можеш да стартираш обир още сега!");
				}
				if(robmoneyn >= 500)
            {
				SendClientMessage(playerid, COLOR_ORANGE, "В момента има обир!");
				}
	}
	 if(strcmp(x_job,"leave",true) == 0)
            {
            if(PlayerInfo[playerid][pRoberN2] == 0)
            {
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не участваш в обир!");
				return 1;
				}
				if(PlayerInfo[playerid][pRoberN2] == 1)
            {
                        PlayerInfo[playerid][pRoberN2] = 0;
                        TextDrawShowForPlayer(playerid, robn[playerid]);
                        PlayerInfo[playerid][pRobN] = 0;
                        }
			}
	if(strcmp(x_job,"kick",true) == 0)
            {
            	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /robbery [kick] [playerid] [confirm playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			                             if (ProxDetectorS(3.0, playerid, playa))
                        {
                        			    			if (PlayerInfo[playerid][pRoberN] == 1)
			{
					        if(IsPlayerInRangeOfPoint(playerid, 3, 2145.6499,2834.6777,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 2448.0120,-1962.7341,13.5469))
		        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да поканиш себеси!"); return 1; }
                        format(string, sizeof(string), "%s те изгони от обира обира.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_ORANGE, string);
                        format(string, sizeof(string), "Ти изгони %s от обира.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_ORANGE, string);
                        PlayerInfo[playa][pRoberN2] = 0;
                        PlayerInfo[playa][pRobN] = 0;


                        }
else
{
					                    format(string, sizeof(string), "Ти не си в мястото за стартиране на обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
                        }
                        else
                        {
format(string, sizeof(string), "Ти не си лидер на обир");
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        }
					}
	 else
	 {
                        format(string, sizeof(string), "%s не е близо до теб", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GRAD1, string);
	 }

				}
			}
		}
	        }


		if(strcmp(x_job,"invite",true) == 0)
            {
            	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /robbery [invite] [playerid] [confirm playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			                             if (ProxDetectorS(3.0, playerid, playa))
                        {
                        			    			if (PlayerInfo[playerid][pRoberN] == 1)
			{
					        if(IsPlayerInRangeOfPoint(playerid, 3, 2145.6499,2834.6777,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 2448.0120,-1962.7341,13.5469))
		        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да поканиш себеси!"); return 1; }
                        format(string, sizeof(string), "%s те вкара в обира.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_ORANGE, string);
                        format(string, sizeof(string), "Ти вкара %s в обира.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_ORANGE, string);
                        PlayerInfo[playa][pRoberN2] = 1;
                        TextDrawShowForPlayer(playa, robn[playa]);
                        SetPlayerSkin(playa,25);
                        PlayerInfo[playa][pRobN] = 1*2;
                        PlayerInfo[playa][pWantedLevel] += 1;


                        }
else
{
					                    format(string, sizeof(string), "Ти не си в мястото за стартиране на обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
                        }
                        else
                        {
format(string, sizeof(string), "Ти не си лидер на обир");
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        }
					}
	 else
	 {
                        format(string, sizeof(string), "%s не е близо до теб", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GRAD1, string);
	 }

				}
			}
		}
	        }
	if(strcmp(x_job,"start",true) == 0)
            {
                 if(IsPlayerConnected(playerid))
     {
     if(robmoneyn == 0)
     {
          if(IsPlayerInRangeOfPoint(playerid, 3, 2145.6499,2834.6777,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 2448.0120,-1962.7341,13.5469))
          {
     PlayerInfo[playerid][pZvezda1] += 1;
     PlayerInfo[playerid][pWantedLevel] += 1;
          if(PlayerInfo[playerid][pWantedLevel] == 1)
     {
SetPlayerWantedLevel(playerid,1);
     }
          if(PlayerInfo[playerid][pWantedLevel] == 2)
     {
SetPlayerWantedLevel(playerid,2);
     }
          if(PlayerInfo[playerid][pWantedLevel] == 3)
     {
SetPlayerWantedLevel(playerid,3);
     }
          if(PlayerInfo[playerid][pWantedLevel] == 4)
     {
SetPlayerWantedLevel(playerid,4);
     }
          if(PlayerInfo[playerid][pWantedLevel] == 5)
     {
SetPlayerWantedLevel(playerid,5);
     }
          if(PlayerInfo[playerid][pWantedLevel] >= 6)
     {
SetPlayerWantedLevel(playerid,6);
     }
                 format(string, sizeof(string), "Robbery: Ти започна обир, намери място където да крадеш !");
                 SendClientMessageToAll(COLOR_ORANGE,string);
                 SetPlayerSkin(playerid,24);
                        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
      SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRoberN] = 1;
TextDrawShowForPlayer(playerid, robn[playerid]);
}
else
{
                         format(string, sizeof(string), "Ти не си в мястото за стартиране на обир");
                 SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
                         format(string, sizeof(string), "В момента има обир");
                 SendClientMessage(playerid, COLOR_GRAD1,string);
}
  }
	}
	if(strcmp(x_job,"end",true) == 0)
            {
                 if(IsPlayerConnected(playerid))
     {
     if(PlayerInfo[playerid][pRoberN] == 1)
  {
                 format(string, sizeof(string), "ROB:Обира беше прекратен от лидера на обира и участиниците в него получиха парите си.",robmoneyn);
                 SendClientMessageToAll(COLOR_ORANGE,string);
       for(new i; i<MAX_PLAYERS; i++)
   {
        if(PlayerInfo[i][pRoberN] >= 1 || PlayerInfo[i][pRoberN2] >= 1)
  {
            GivePlayerCash(i, robmoneyn);
              TextDrawHideForPlayer(i, robn[playerid]);
     PlayerInfo[i][pRobN] = 0;
            PlayerInfo[i][pRoberN] = 0;
            PlayerInfo[i][pRoberN2] = 0;
            PlayerInfo[i][pRobN] =0;
   TextDrawHideForPlayer(i, robn[i]);
   TextDrawHideForPlayer(i, robn[i]);
   TextDrawHideForPlayer(i, robn[i]);
   robmoneyn = 0;
   }
   }
   PlayerInfo[playerid][pRobN] = 0;
PlayerInfo[playerid][pRoberN] = 0;
TextDrawHideForPlayer(playerid, robn[playerid]);
}
else
{
                         format(string, sizeof(string), "Ти не си лидер на обир");
                 SendClientMessage(playerid, COLOR_GRAD1,string);
}
  }
	        }








			}
		return 1;
	}
	//
			if(strcmp(cmd, "/buy", true) == 0)
	{
			if(IsPlayerInRangeOfPoint(playerid, 2.0, 2548.2588,-1293.3577,1044.1250))
		{
					new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
		     	SendClientMessage(playerid, COLOR_WHITE,"Използвай: /buy [drug name][gram/liter]");
		     	SendClientMessage(playerid, COLOR_YELLOW,"Drug names: Moonshine $5000, Weed $6000, Cocaine $8000, Heroin $9000");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}Всяка цена е за грам/литър и всеки наркотик има ефект!");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}При употреба на 1 литър Weed (трева) получаваш 20 HEALTH и резачка (за 13 сек.)");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}При употреба на 1 литър Moonshine (спиртно питие) получаваш 20 HEALTH и резачка (за 13 сек.)");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}При употреба на 1 литър Cocaine (кокаин) получаваш 20 HEALTH и резачка (за 13 сек.)");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}При употреба на 1 литър Heroin (хероин) получаваш 20 HEALTH и резачка (за 13 сек.)");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}ВНИМАНИЕ: Ако бъдеш убит и имаш дрога в себе си ще я загубиш затова използвай куфар да я съхраняваш!");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}Куфар (briefcase) можеш да вземеш от бизнес 24/7 Shop или General Store!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
						 			 			            if(strcmp(x_job,"moonshinegram",true) == 0)
            {
            if(PlayerInfo[playerid][pCash] < 500)
            {
            SendClientMessage(playerid, COLOR_GRAD1,"Трябва да имаш поне $500, за да ползваш командата!");
            }
            for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 500;
			 SavePlayerHouse(h);
			 }
			 }
			PlayerInfo[playerid][pCash] -= 500;
			PlayerInfo[playerid][pMoonshine] += 1;
            format(string, sizeof(string), "Ти си купи 1 грам спиртно питие.");
            SendClientMessage(playerid, COLOR_RED,string);
	    	}
	    	if(strcmp(x_job,"moonshineliter",true) == 0)
            {
            if(PlayerInfo[playerid][pCash] < 5000)
            {
            SendClientMessage(playerid, COLOR_GRAD1,"Трябва да имаш поне $50, за да ползваш командата!");
            }
            for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 5000;
			 SavePlayerHouse(h);
			 }
			 }
			PlayerInfo[playerid][pCash] -= 5000;
			PlayerInfo[playerid][pWeed] += 10;
            format(string, sizeof(string), "Ти си купи 1 литър спиртно питие.");
            SendClientMessage(playerid, COLOR_RED,string);
	    	}


		if(strcmp(x_job,"weedgram",true) == 0)
            {
		            if(PlayerInfo[playerid][pCash] < 600)
            {
            SendClientMessage(playerid, COLOR_GRAD1,"Трябва да имаш поне $600, за да ползваш командата!");
            }
            for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 600;
			 SavePlayerHouse(h);
			 }
			 }
			PlayerInfo[playerid][pCash] -= 600;
			PlayerInfo[playerid][pMoonshine] += 1;
            format(string, sizeof(string), "Ти си купи 1 грам трева.");
            SendClientMessage(playerid, COLOR_RED,string);
	    	}
	    	if(strcmp(x_job,"weedliter",true) == 0)
            {
            if(PlayerInfo[playerid][pCash] < 6000)
            {
            SendClientMessage(playerid, COLOR_GRAD1,"Трябва да имаш поне $6000, за да ползваш командата!");
            }
            for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 6000;
			 SavePlayerHouse(h);
			 }
			 }
			PlayerInfo[playerid][pCash] -= 6000;
			PlayerInfo[playerid][pWeed] += 10;
            format(string, sizeof(string), "Ти си купи 1 литър трева.");
            SendClientMessage(playerid, COLOR_RED,string);
	    	}



if(strcmp(x_job,"cocainegram",true) == 0)
            {
if(PlayerInfo[playerid][pCash] < 800)
            {
            SendClientMessage(playerid, COLOR_GRAD1,"Трябва да имаш поне $800, за да ползваш командата!");
            }
            for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 800;
			 SavePlayerHouse(h);
			 }
			 }
			PlayerInfo[playerid][pCash] -= 800;
			PlayerInfo[playerid][pCok] += 1;
            format(string, sizeof(string), "Ти си купи 1 грам кокаин.");
            SendClientMessage(playerid, COLOR_RED,string);
	    	}
	    	if(strcmp(x_job,"cocaineliter",true) == 0)
            {
            if(PlayerInfo[playerid][pCash] < 8000)
            {
            SendClientMessage(playerid, COLOR_GRAD1,"Трябва да имаш поне $8000, за да ползваш командата!");
            }
            for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 8000;
			 SavePlayerHouse(h);
			 }
			 }
			PlayerInfo[playerid][pCash] -= 8000;
			PlayerInfo[playerid][pCok] += 10;
            format(string, sizeof(string), "Ти си купи 1 литър кокаин.");
            SendClientMessage(playerid, COLOR_RED,string);
	    	}






if(strcmp(x_job,"heroingram",true) == 0)
            {
if(PlayerInfo[playerid][pCash] < 900)
            {
            SendClientMessage(playerid, COLOR_GRAD1,"Трябва да имаш поне $900, за да ползваш командата!");
            }
            for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 900;
			 SavePlayerHouse(h);
			 }
			 }
			PlayerInfo[playerid][pCash] -= 900;
			PlayerInfo[playerid][pCok] += 1;
            format(string, sizeof(string), "Ти си купи 1 грам хероин.");
            SendClientMessage(playerid, COLOR_RED,string);
	    	}
	    	if(strcmp(x_job,"heroinliter",true) == 0)
            {
            if(PlayerInfo[playerid][pCash] < 9000)
            {
            SendClientMessage(playerid, COLOR_GRAD1,"Трябва да имаш поне $9000, за да ползваш командата!");
            }
            for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 9000;
			 SavePlayerHouse(h);
			 }
			 }
			PlayerInfo[playerid][pCash] -= 9000;
			PlayerInfo[playerid][pCok] += 10;
            format(string, sizeof(string), "Ти си купи 1 литър хероин.");
            SendClientMessage(playerid, COLOR_RED,string);
            return 1;
	    	}

		if(IsPlayerInRangeOfPoint(playerid, 2.0, -1353.8081,2057.5544,53.1172))
		{
		ShowPlayerDialog(playerid, DIALOG_FISHES, DIALOG_STYLE_LIST, "{FFFFFF}BUY", "{FFFFFF}Въдица\nСтръв(50)", "Select", "Close");
		return 1;
		}





		    if (PlayerInfo[playerid][pCash] >= 3000 && IsPlayerInRangeOfPoint(playerid, 2.0, -22.5576,-55.6804,1003.5469))
		{
           new para1;
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
			SendClientMessage(playerid, COLOR_WHITE,"Използвай: /buy [Opiton]");
				SendClientMessage(playerid, COLOR_YELLOW, "Използвай: 1: 20 Броя цигари, 2: Куфар, 3: Бастун, 4: Гранати, 5: Вибратор");
				SendClientMessage(playerid, COLOR_YELLOW, "Използвай: 6: Нож, 7: - Радио, 8: Зарче 9: Туба");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 3000;
			 SavePlayerHouse(h);
			 			            if(strcmp(x_job,"9",true) == 0)
            {
				SendClientMessage(playerid, COLOR_YELLOW, "Ти си купи туба за $3000");
								GivePlayerCash(playerid, -3000);
								PlayerInfo[playerid][pTuba] = 1;
								PlayerInfo[playerid][pTuba2] = 0;
			}

			            if(strcmp(x_job,"8",true) == 0)
            {
				SendClientMessage(playerid, COLOR_YELLOW, "Ти си купи зарче за $3000");
								GivePlayerCash(playerid, -3000);
								PlayerInfo[playerid][pZarche] = 1;
			}

            if(strcmp(x_job,"1",true) == 0)
            {
				SendClientMessage(playerid, COLOR_YELLOW, "Ти си купи 20 броя цигари за $3000");
								GivePlayerCash(playerid, -3000);
								PlayerInfo[playerid][pCig] += 20;
												PlayerInfo[playerid][pTimer2] = 0*0;
			}
			 if(strcmp(x_job,"2",true) == 0)
            {

				SendClientMessage(playerid, COLOR_YELLOW, "Ти си купи куфар за $3000");
				PlayerInfo[playerid][pTimer1] = 0*0;
				PlayerInfo[playerid][pWK] = 1;
								GivePlayerCash(playerid, -3000);
			}
			 if(strcmp(x_job,"3",true) == 0)
			{

				SendClientMessage(playerid, COLOR_YELLOW, "Ти си купи бастун за $3000");
								GivePlayerCash(playerid, -3000);
													GivePlayerWeapon(playerid, 15, 10);
			}
			 if(strcmp(x_job,"4",true) == 0)
			{

				SendClientMessage(playerid, COLOR_YELLOW, "Ти си купи една граната за $3000");
								GivePlayerCash(playerid, -3000);
													GivePlayerWeapon(playerid, 15, 1);
			}
			 if(strcmp(x_job,"5",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти си купи вибратор за $3000");
								GivePlayerCash(playerid, -3000);
													GivePlayerWeapon(playerid, 12, 10);
			}
			 if(strcmp(x_job,"6",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти си купи нож за $3000");
								GivePlayerCash(playerid, -3000);
													GivePlayerWeapon(playerid, 4, 10);
			}
			 if(strcmp(x_job,"7",true) == 0)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Ти си купи радио за $3000");
				GivePlayerCash(playerid, -3000);
				PlayerInfo[playerid][pRadio] = 1;
											PlayerInfo[playerid][pTimer3] = 0*0;
			}
			}
			}
			}
			}
		return 1;
	}
	//

					if(strcmp(cmd, "/skin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if (PlayerInfo[playerid][pCash] >= 3000 && IsPlayerInRangeOfPoint(playerid, 2.0, 207.1632,-129.1783,1003.5078))
			{
			new para1;
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_YELLOW, "Използвай: 1 - Skin 1 2 - Skin 2 3 - Skin 3 4 - Skin 4");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 3000;
			 SavePlayerHouse(h);

			            if(strcmp(x_job,"1",true) == 0)
            {
    if(GetPlayerMoney(para1) == 3000)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -3000);
								SetPlayerSkin(playerid,1);
			}

            if(strcmp(x_job,"2",true) == 0)
            {
    if(GetPlayerMoney(para1) == 3000)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -3000);
								SetPlayerSkin(playerid,7);
			}
			            if(strcmp(x_job,"3",true) == 0)
            {
    if(GetPlayerMoney(para1) == 3000)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -3000);
								SetPlayerSkin(playerid,15);
			}
			            if(strcmp(x_job,"4",true) == 0)
            {
    if(GetPlayerMoney(para1) == 3000)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -3000);
						    	SetPlayerSkin(playerid,22);
			}
			}
			}
			}
		}
		return 1;
	}
	
				if(strcmp(cmd, "/sexshop", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if (PlayerInfo[playerid][pCash] >= 3000 && IsPlayerInRangeOfPoint(playerid, 2.0, -104.0631,-22.6785,1000.7188))
			{
			new para1;
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_YELLOW, "Използвай: 1 - Vibrator 2 - Dildo 3 - Purple Dildo 4 - Silver Vibrator");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 3000;
			 SavePlayerHouse(h);

			            if(strcmp(x_job,"1",true) == 0)
            {
    if(GetPlayerMoney(para1) == 3000)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -3000);
								GivePlayerGun(playerid, 12);
			}

            if(strcmp(x_job,"2",true) == 0)
            {
    if(GetPlayerMoney(para1) == 3000)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -3000);
								GivePlayerGun(playerid, 11);
			}
			            if(strcmp(x_job,"3",true) == 0)
            {
    if(GetPlayerMoney(para1) == 3000)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -3000);
								GivePlayerGun(playerid, 10);
			}
			            if(strcmp(x_job,"4",true) == 0)
            {
    if(GetPlayerMoney(para1) == 3000)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -3000);
								GivePlayerGun(playerid, 13);
			}
			}
			}
			}
		}
		return 1;
	}
	//
					if(strcmp(cmd, "/eat", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if (PlayerInfo[playerid][pCash] >= 40 && IsPlayerInRangeOfPoint(playerid, 10.0, 377.5456,-67.4353,1001.5078) || PlayerInfo[playerid][pCash] >= 40 && IsPlayerInRangeOfPoint(playerid, 3, 2717.0093,-2872.5889,82.4868))
			{
			new para1;
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_YELLOW, "Използвай: 1 - Pizza 2 - Burger 3 - Duner 4 - Big Burger");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 40;
			 SavePlayerHouse(h);

			            if(strcmp(x_job,"1",true) == 0)
            {
    if(GetPlayerMoney(para1) == 40)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -40);
							SetPlayerArmour(playerid,100);
			}

            if(strcmp(x_job,"2",true) == 0)
            {
    if(GetPlayerMoney(para1) == 40)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -40);
								SetPlayerArmour(playerid,100);
			}
			            if(strcmp(x_job,"3",true) == 0)
            {
    if(GetPlayerMoney(para1) == 40)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -40);
								SetPlayerArmour(playerid,100);
			}
			            if(strcmp(x_job,"4",true) == 0)
            {
    if(GetPlayerMoney(para1) == 40)
    {
				}
				else
				{
				}
								GivePlayerCash(playerid, -40);
		SetPlayerArmour(playerid,100);
			}
			}
			}
			}
		}
		return 1;
		}
	//
						if(strcmp(cmd, "/usedrug", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
if(PlayerInfo[playerid][pWIK] == 1)
{
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /usedrug [drug]");
				SendClientMessage(playerid, COLOR_YELLOW,"Drug names: Moonshine, Weed, Cocaine, Heroin");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}Всяка цена е за грам/литър и всеки наркотик има ефект!");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}При употреба на 1 литър Weed (трева) получаваш 20 HEALTH и резачка (за 13 сек.)");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}При употреба на 1 литър Moonshine (спиртно питие) получаваш 20 HEALTH и резачка (за 13 сек.)");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}При употреба на 1 литър Cocaine (кокаин) получаваш 20 HEALTH и резачка (за 13 сек.)");
				SendClientMessage(playerid, COLOR_YELLOW, "{FF0000}При употреба на 1 литър Heroin (хероин) получаваш 20 HEALTH и резачка (за 13 сек.)");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"moonshine",true) == 0)
            {
    if(PlayerInfo[playerid][pMoonshine] == 10 && PlayerInfo[playerid][pWK] == 1 && PlayerInfo[playerid][pWIK] == 1)
    {
    SetPlayerWeather(playerid, 12);
    GivePlayerWeapon(playerid,9);
				new Float:health;
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+20);
			}
			}
			 if(strcmp(x_job,"weed",true) == 0)
            {
    if(PlayerInfo[playerid][pWeed] == 10 && PlayerInfo[playerid][pWK] == 1 && PlayerInfo[playerid][pWIK] == 1)
    {
new Float:health;
SetPlayerWeather(playerid, 25);
GivePlayerWeapon(playerid,9);
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+20);
}
}
if(strcmp(x_job,"cocaine",true) == 0)
            {
 if(PlayerInfo[playerid][pCok] == 10 && PlayerInfo[playerid][pWK] == 1 && PlayerInfo[playerid][pWIK] == 1)
    {
new Float:health;
SetPlayerWeather(playerid, 27);
GivePlayerWeapon(playerid,9);
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+20);
}
}
if(strcmp(x_job,"heroin",true) == 0)
            {
 if(PlayerInfo[playerid][pHeroin] == 10 && PlayerInfo[playerid][pWK] == 1 && PlayerInfo[playerid][pWIK] == 1)
    {
new Float:health;
SetPlayerWeather(playerid, 42);
GivePlayerWeapon(playerid,9);
GetPlayerHealth(playerid,health);
SetPlayerHealth(playerid,health+20);
}
}








		}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си извадиш куфарчето");
		}

		}
		return 1;
	}
//
            	if(strcmp(cmd, "/drugs", true) == 0)
	{
					format(string, sizeof(string), "{FF0000}Вие имате - %d грама Weed (трева)", PlayerInfo[playerid][pWeed]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "{FF0000}Вие имате - %d грама Moonshine (спиртно питие)", PlayerInfo[playerid][pMoonshine]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "{FF0000}Вие имате - %d грама Cocaine (коикаин)", PlayerInfo[playerid][pCok]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "{FF0000}Вие имате - %d грама Heroin (хероин)", PlayerInfo[playerid][pHeroin]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
				//

				if(strcmp(cmd, "/dmv", true) == 0)
	{
		new para1;
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
			SendClientMessage(playerid, COLOR_WHITE,"Използвай: /dmv [license number]");
				SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}License Numbers: 1: Лодка, 2: Влак/Трамвай, 3: Хеликоптер, 4: Самолет");
				SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Трябва да имаш следните левели минимум за всяка шофьорска книжка:");
				SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Лодка - 8 левел, Влак/Трамвай - 10 левел, Хеликоптер - 12 левел, Самолет - 15 левел");
				SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Цените за да вземеш определена шофьорска книжка са:");
				SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Лодка - $5000, Влак/Трамвай - $10000, Хеликоптер - $15000, Самолет - $25000");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(IsPlayerInRangeOfPoint(playerid, 30, -2026.5165,-114.5547,1035.1719))
			{
						 			 			            if(strcmp(x_job,"4",true) == 0)
            {
            if(PlayerInfo[playerid][pCash] < 25000)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за самолет!");
			return 1;
			}
			if(PlayerInfo[playerid][Level] < 15)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за самолет!");
			return 1;
			}
			if(PlayerInfo[playerid][pSamolet] >= 1)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за самолет!");
			return 1;
			}
				SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за самолет!");
								GivePlayerCash(playerid, -25000);
								PlayerInfo[playerid][pSamolet] = 1;
								for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 25000;
			 SavePlayerHouse(h);
			 }
			 }
			}
						 			 			            if(strcmp(x_job,"3",true) == 0)
            {
            if(PlayerInfo[playerid][pCash] < 15000)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за хеликоптер!");
			return 1;
			}
			if(PlayerInfo[playerid][Level] < 12)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за хеликоптер!");
			return 1;
			}
			if(PlayerInfo[playerid][pHili] >= 1)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за хеликоптер!");
			return 1;
			}
				SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за хеликоптер!");
								GivePlayerCash(playerid, -15000);
								PlayerInfo[playerid][pHili] = 1;
								for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 15000;
			 SavePlayerHouse(h);
			 }
			 }
			}
			 			 			            if(strcmp(x_job,"2",true) == 0)
            {
            if(PlayerInfo[playerid][pCash] < 10000)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за влак/трамвай!");
			return 1;
			}
			if(PlayerInfo[playerid][Level] < 10)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за влак/трамвай!");
			return 1;
			}
			if(PlayerInfo[playerid][pVlak] >= 1)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за влак/трамвай!");
			return 1;
			}
				SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за влак/трамвай!");
								GivePlayerCash(playerid, -10000);
								PlayerInfo[playerid][pVlak] = 1;
								for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 10000;
			 SavePlayerHouse(h);
			 }
			 }
			}
			 			            if(strcmp(x_job,"1",true) == 0)
            {
            if(PlayerInfo[playerid][pCash] < 5000)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно пари, за да си купиш шофьорска книжка за лодка!");
			return 1;
			}
			if(PlayerInfo[playerid][Level] < 8)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво, за да си купиш шофьорска книжка за лодка!");
			return 1;
			}
			if(PlayerInfo[playerid][pBoat] >= 1)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти вече имаш шофьорска книжка за лодка!");
			return 1;
			}
				SendClientMessage(playerid, COLOR_YELLOW, "{003AE6}Ти си купи шофьорска книжка за лодка!");
								GivePlayerCash(playerid, -5000);
								PlayerInfo[playerid][pBoat] = 1;
								for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 HouseInfo[h][Earnings] += 5000;
			 SavePlayerHouse(h);
}
}
}
}
		return 1;
	}

	//
	//
	//
	//
		if(strcmp(cmd, "/spawn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
						    if (PlayerInfo[playerid][pCash] >= 0)
			{
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /spawn [0-5]");
				SendClientMessage(playerid, COLOR_YELLOW, "0: Office, 1: Civil, 2: Faction, 3: GPFC, 4: House, 5: Bizz");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			            if(strcmp(x_job,"4",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Ти промени твоя spawn на Office spawn!");
								PlayerInfo[playerid][pCivilS] = 0;
								PlayerInfo[playerid][pOfficeS] = 0;
								PlayerInfo[playerid][pGFCS] = 0;
								PlayerInfo[playerid][pSpawnBiz] = 0;
								PlayerInfo[playerid][pSpawnHouse] = 1;
			}
						            if(strcmp(x_job,"5",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Ти промени твоя spawn на Bizz spawn!");
								PlayerInfo[playerid][pCivilS] = 0;
								PlayerInfo[playerid][pOfficeS] = 0;
								PlayerInfo[playerid][pGFCS] = 0;
								PlayerInfo[playerid][pSpawnBiz] = 1;
								PlayerInfo[playerid][pSpawnHouse] = 0;
			}
            if(strcmp(x_job,"0",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Ти промени твоя spawn на Office spawn!");
								PlayerInfo[playerid][pCivilS] = 0;
								PlayerInfo[playerid][pOfficeS] = 1;
								PlayerInfo[playerid][pGFCS] = 0;
								PlayerInfo[playerid][pSpawnBiz] = 0;
								PlayerInfo[playerid][pSpawnHouse] = 0;
			}
			            if(strcmp(x_job,"3",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Ти промени твоя spawn на GPFC spawn!");
								PlayerInfo[playerid][pCivilS] = 0;
								PlayerInfo[playerid][pOfficeS] = 0;
								PlayerInfo[playerid][pGFCS] = 1;
								PlayerInfo[playerid][pSpawnBiz] = 0;
								PlayerInfo[playerid][pSpawnHouse] = 0;

			}
			else if(strcmp(x_job,"1",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Ти промени твоя spawn на Civil spawn!");
								PlayerInfo[playerid][pCivilS] = 1;
								PlayerInfo[playerid][pOfficeS] = 0;
								PlayerInfo[playerid][pGFCS] = 0;
								PlayerInfo[playerid][pSpawnBiz] = 0;
								PlayerInfo[playerid][pSpawnHouse] = 0;
			}
						else if(strcmp(x_job,"2",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "SERVER: Ти промени твоя spawn на Faction spawn!");
								PlayerInfo[playerid][pCivilS] = 0;
								PlayerInfo[playerid][pOfficeS] = 0;
								PlayerInfo[playerid][pGFCS] = 0;
								PlayerInfo[playerid][pSpawnBiz] = 0;
								PlayerInfo[playerid][pSpawnHouse] = 0;
			}
			}
		}
		return 1;
	}
	//
			if(strcmp(cmd, "/drift", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
		    					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
			if(PlayerInfo[playerid][pJail] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				return 1;
			}
						if(PlayerInfo[playerid][pJailed] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				return 1;
			}
				if(PlayerInfo[playerid][pInEvent] >= 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент и не можеш да се телепортираш!");
				return 1;
			}
			if(PlayerInfo[playerid][pJail] >= 1 || PlayerInfo[playerid][pJailed] >= 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си в затвора!");
		return 1;
	}
			if(PlayerInfo[playerid][AFKstatus] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
				return 1;
			}
			    	new Float:pHealth;
      GetPlayerHealth(playerid,pHealth);
           	if(pHealth <= 99)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си под 100 HP и не можеш да се телепортираш");
		return 1;
	}
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /drift 1,2,3");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"1",true) == 0)
            {
   PlayerInfo[playerid][pStunt] = 1;
					SetPlayerPos(playerid, -350.2762,1529.0115,75.3594);
				SendClientMessage(playerid, COLOR_WHITE, "Използвай /driftoff за да излезеш от стънт арената");
				SetPlayerInterior(playerid, 0);
			}
			else if(strcmp(x_job,"2",true) == 0)
            {
   PlayerInfo[playerid][pStunt] = 1;
					SetPlayerPos(playerid, 1990.4972,2225.2429,26.2408);
				SendClientMessage(playerid, COLOR_WHITE, "Използвай /driftoff за да излезеш от стънт арената");
				SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
			}
			else if(strcmp(x_job,"3",true) == 0)
			{
   PlayerInfo[playerid][pStunt] = 1;
				SetPlayerPos(playerid, -2521.0908,-623.3063,132.7686);
				SendClientMessage(playerid, COLOR_WHITE, "Използвай /driftoff за да излезеш от стънт арената");
				SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
			}
		}
		return 1;
	}
	
		if(strcmp(cmd, "/stunt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
		    					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
if(PlayerInfo[playerid][pJail] >= 1 || PlayerInfo[playerid][pJailed] >= 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си в затвора!");
		return 1;
	}
			if(PlayerInfo[playerid][pJail] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				return 1;
			}
						if(PlayerInfo[playerid][pJailed] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				return 1;
			}
				if(PlayerInfo[playerid][pInEvent] >= 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент и не можеш да се телепортираш!");
				return 1;
			}
			if(PlayerInfo[playerid][AFKstatus] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
				return 1;
			}
			    	new Float:pHealth;
      GetPlayerHealth(playerid,pHealth);
           	if(pHealth <= 99)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си под 100 HP и не можеш да се телепортираш");
		return 1;
	}
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /stunt ls,sf,desert");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"ls",true) == 0)
            {
   PlayerInfo[playerid][pStunt] = 1;
					SetPlayerPos(playerid, 1997.9039,-2398.1733,13.5469);
				SendClientMessage(playerid, COLOR_WHITE, "Използвай /stuntoff за да излезеш от стънт арената");
				SetPlayerInterior(playerid, 0);
			}
			else if(strcmp(x_job,"sf",true) == 0)
            {
   PlayerInfo[playerid][pStunt] = 1;
					SetPlayerPos(playerid, -1215.5232,-20.6731,14.1484);
				SendClientMessage(playerid, COLOR_WHITE, "Използвай /stuntoff за да излезеш от стънт арената");
				SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
			}
			else if(strcmp(x_job,"desert",true) == 0)
			{
   PlayerInfo[playerid][pStunt] = 1;
				SetPlayerPos(playerid, 388.4215,2531.3589,16.5391);
				SendClientMessage(playerid, COLOR_WHITE, "Използвай /stuntoff за да излезеш от стънт арената");
				SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/vgoto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
if(PlayerInfo[playerid][pJail] >= 1 || PlayerInfo[playerid][pJailed] >= 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си в затвора!");
		return 1;
	}
				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
		    					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
			if(PlayerInfo[playerid][pJail] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				return 1;
			}
						if(PlayerInfo[playerid][pJailed] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				return 1;
			}
				if(PlayerInfo[playerid][pInEvent] >= 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент и не можеш да се телепортираш!");
				return 1;
			}
			if(PlayerInfo[playerid][AFKstatus] == 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
				return 1;
			}
			    	new Float:pHealth;
      GetPlayerHealth(playerid,pHealth);
           	if(pHealth <= 99)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си под 100 HP и не можеш да се телепортираш");
		return 1;
	}
		    //if (PlayerInfo[playerid][pAdmin] >= 1)//
		    if (PlayerInfo[playerid][pDonateRank] >= 4)
			{
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /vgoto [name]");
				SendClientMessage(playerid, COLOR_GREY, "LS, SF, LV, MC, Drift");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"ls",true) == 0)
            {
			    if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1538.8336,-1691.1599,13.5469);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1538.8336,-1691.1599,13.5469);
				}
				SendClientMessage(playerid, COLOR_LIGHTRED, "   Ти се телепортира на Los Santos!");
				SetPlayerInterior(playerid, 0);
			}
			else if(strcmp(x_job,"sf",true) == 0)
            {
			    if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -1417.0,-295.8,14.1);
				}
				SendClientMessage(playerid, COLOR_LIGHTRED, "   Ти се телепортира на San Fierro Airport!");
				SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
			}
			else if(strcmp(x_job,"lv",true) == 0)
			{
                if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
				}
				SendClientMessage(playerid, COLOR_LIGHTRED, "   Ти се телепортира на Las Venturas Airport!");
				SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
			}
			else if(strcmp(x_job,"mc",true) == 0)
			{
                if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2334.6887, -1612.0864, 483.4248);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -2334.6887, -1612.0864, 483.4248);
				}
				SendClientMessage(playerid, COLOR_LIGHTRED, "   Ти се телепортира на Mountain MC!");
				SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
			}
			else if(strcmp(x_job,"drift",true) == 0)
			{
                if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -359.2370,1529.7457,75.3594);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -359.2370,1529.7457,75.3594);
				}
				SendClientMessage(playerid, COLOR_LIGHTRED, "  Ти се телепортира на Drift!");
				SetPlayerInterior(playerid, 0);
                SetPlayerVirtualWorld(playerid, 0);
			}
			}
		}
		return 1;
	}
	
	
	
				    if(strcmp(cmdtext, "/driftoff") == 0)
    {
    				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
        					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}

     	if(PlayerInfo[playerid][pJail] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в дрифт арена");
		return 1;
	}
	     	if(PlayerInfo[playerid][pJailed] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в дрифт арена");
		return 1;
	}
     	if(PlayerInfo[playerid][AFKstatus] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в дрифт арена");
		return 1;
	}
     	if(PlayerInfo[playerid][pStunt] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в дрифт арена");
		return 1;
	}
	SetPlayerArmour(playerid, 0);
     SetPlayerHealth(playerid, 0);
    PlayerInfo[playerid][pStunt] = 0;
	return 1;
     }
	
	
	
	
	
			    if(strcmp(cmdtext, "/stuntoff") == 0)
    {
    				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
        					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
					
     	if(PlayerInfo[playerid][pJail] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в стънт арена");
		return 1;
	}
     	if(PlayerInfo[playerid][pJailed] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в стънт арена");
		return 1;
	}
     	if(PlayerInfo[playerid][AFKstatus] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в стънт арена");
		return 1;
	}
     	if(PlayerInfo[playerid][pStunt] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в стънт арена");
		return 1;
	}
	SetPlayerArmour(playerid, 0);
     SetPlayerHealth(playerid, 0);
    PlayerInfo[playerid][pStunt] = 0;
	return 1;
     }
     
		    if(strcmp(cmdtext, "/dmoff") == 0)
    {
    				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
    
    					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
    
    
     	if(PlayerInfo[playerid][pJail] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на DMON!");
		return 1;
	}
				                         	if(PlayerInfo[playerid][pJailed] == 1)
        			{
				        SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на DMON!");
				        return 1;
			        }
     	if(PlayerInfo[playerid][AFKstatus] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на DMON!");
		return 1;
	}
     	if(PlayerInfo[playerid][pDmon] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си на DMON!");
		return 1;
	}
			                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
		PlayerInfo[playerid][pDMKills2] = 0;
	SetPlayerArmour(playerid, 0);
	    PlayerInfo[playerid][pDmon] = 0;
     SetPlayerHealth(playerid, 0);
     SetPlayerVirtualWorld(playerid, 0);
     TextDrawHideForPlayer(playerid, dmon1[playerid]);
	return 1;
     }
	    if(strcmp(cmdtext, "/dmon") == 0)
    {
    				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
        					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
     	if(PlayerInfo[playerid][pJail] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
		return 1;
	}
				                         	if(PlayerInfo[playerid][pJailed] == 1)
        			{
				        SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				        return 1;
			        }
     	if(PlayerInfo[playerid][AFKstatus] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
		return 1;
	}
	     	if(OnDuty[playerid]== 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си на смяна!");
		return 1;
	}
	if(PlayerInfo[playerid][pJail] >= 1 || PlayerInfo[playerid][pJailed] >= 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си в затвора!");
		return 1;
	}
	     	if(PlayerInfo[playerid][pDmon] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си на DMON!");
		return 1;
	}
	if(PlayerInfo[playerid][aDuty] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си ADMIN ON DUTY!");
		return 1;
	}
	    	new Float:pHealth;
      GetPlayerHealth(playerid,pHealth);
           	if(pHealth <= 99)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си под 100 HP и не можеш да се телепортираш");
		return 1;
	}
	SetPlayerArmour(playerid, 0);
	    PlayerInfo[playerid][pDmon] = 1;
        SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
	    format(string, sizeof(string), "DM Area: %s влезе в DM арената!", PlayerName(playerid));
	    ProxDetector(99999999999999999999999999999999999999.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
	    SendClientMessage(playerid, COLOR_YELLOW, "Моля, използвайте /dmoff за да излезете от арената!");
		SetPlayerInterior(playerid, 1);
                TextDrawShowForPlayer(playerid, dmon1[playerid]);
        SetPlayerVirtualWorld(playerid, 989);
        		ResetPlayerWeaponsEx(playerid);
        new r = random(sizeof(PossibleRandomWeapons));
GivePlayerWeapon(playerid, PossibleRandomWeapons[r][0], PossibleRandomWeapons[r][1]);
	return 1;
     }
    if(strcmp(cmdtext, "/dm") == 0)
    {
    				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
        					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
     	if(PlayerInfo[playerid][AFKstatus] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
		return 1;
	}
    	new Float:pHealth;
      GetPlayerHealth(playerid,pHealth);
           	if(pHealth <= 99)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си под 100 HP и не можеш да се телепортираш");
		return 1;
	}
        SetPlayerPos(playerid, 2382.7813,1011.1350,10.8203);
		SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);

	return 1;
     }
     
     
     
     
     
     
     
     
         if(strcmp(cmdtext, "/sus") == 0)
    {
	
        					if(PlayerInfo[playerid][pWantedLevel] == 0)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си заподозрян.");
return 1;
					}
							        if(!IsPlayerInRangeOfPoint(playerid, 3, 1239.9829,-2041.6614,59.9389) && !IsPlayerInRangeOfPoint(playerid, 3, 1538.0908,-1616.5916,13.5469) && !IsPlayerInRangeOfPoint(playerid, 3, 2140.0640,-1158.2324,23.9922) && !IsPlayerInRangeOfPoint(playerid, 3, 2194.0444,1986.1279,12.2969) && !IsPlayerInRangeOfPoint(playerid, 3, 1718.4507,1315.4329,10.8125) && !IsPlayerInRangeOfPoint(playerid, 3, 256.8503,67.3138,1003.6406) && !IsPlayerInRangeOfPoint(playerid, 3, 257.5424,68.5065,1003.6406))
		        {
		         SendClientMessage(playerid, COLOR_GREY, "Ти не си до ATM!");
		            return 1;
		        }
		        
		        
		        
		                 	if(PlayerInfo[playerid][pCash] <= 999 && PlayerInfo[playerid][pWantedLevel] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $1000,за да си платиш глобата");
		return 1;
	}
			                 	if(PlayerInfo[playerid][pCash] <= 1999 && PlayerInfo[playerid][pWantedLevel] == 2)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $2000,за да си платиш глобата");
		return 1;
	}
			                 	if(PlayerInfo[playerid][pCash] <= 2999 && PlayerInfo[playerid][pWantedLevel] == 3)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $3000,за да си платиш глобата");
		return 1;
	}
				                 	if(PlayerInfo[playerid][pCash] <= 3999 && PlayerInfo[playerid][pWantedLevel] == 4)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $4000,за да си платиш глобата");
		return 1;
	}
				                 	if(PlayerInfo[playerid][pCash] <= 4999 && PlayerInfo[playerid][pWantedLevel] == 5)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $5000,за да си платиш глобата");
		return 1;
	}
				                 	if(PlayerInfo[playerid][pCash] <= 5999 && PlayerInfo[playerid][pWantedLevel] >= 6)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $6000,за да си платиш глобата");
		return 1;
	}
        					if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SendClientMessage(playerid, COLOR_ORANGE, "Ти си плати глобата,която струваше $1000.");
GivePlayerCash(playerid,-1000);
SetPlayerWantedLevel(playerid,0);
PlayerInfo[playerid][pWantedLevel] = 0;
					}
					        					if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SendClientMessage(playerid, COLOR_ORANGE, "Ти си плати глобата,която струваше $2000.");
GivePlayerCash(playerid,-2000);
SetPlayerWantedLevel(playerid,0);
PlayerInfo[playerid][pWantedLevel] = 0;
					}
					        					if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SendClientMessage(playerid, COLOR_ORANGE, "Ти си плати глобата,която струваше $3000.");
GivePlayerCash(playerid,-3000);
SetPlayerWantedLevel(playerid,0);
PlayerInfo[playerid][pWantedLevel] = 0;
					}
					        					if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SendClientMessage(playerid, COLOR_ORANGE, "Ти си плати глобата,която струваше $4000.");
GivePlayerCash(playerid,-4000);
SetPlayerWantedLevel(playerid,0);
PlayerInfo[playerid][pWantedLevel] = 0;
					}
					        					if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SendClientMessage(playerid, COLOR_ORANGE, "Ти си плати глобата,която струваше $5000.");
GivePlayerCash(playerid,-5000);
SetPlayerWantedLevel(playerid,0);
PlayerInfo[playerid][pWantedLevel] = 0;
					}
					        					if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SendClientMessage(playerid, COLOR_ORANGE, "Ти си плати глобата,която струваше $6000.");
GivePlayerCash(playerid,-6000);
SetPlayerWantedLevel(playerid,0);
PlayerInfo[playerid][pWantedLevel] = 0;
					}

	return 1;
     }
     
     
     
     
     
    if(strcmp(cmdtext, "/dm2") == 0)
    {
    				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
        					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
     	if(PlayerInfo[playerid][pJail] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
		return 1;
	}
				                         	if(PlayerInfo[playerid][pJailed] == 1)
        			{
				        SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				        return 1;
			        }
     	if(PlayerInfo[playerid][AFKstatus] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
		return 1;
	}
	    	new Float:pHealth;
      GetPlayerHealth(playerid,pHealth);
           	if(pHealth <= 99)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си под 100 HP и не можеш да се телепортираш");
		return 1;
	}
        SetPlayerPos(playerid, 1135.5582,1335.1517,10.8203);
		SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);

	return 1;
     }
    if(strcmp(cmdtext, "/dm3") == 0)
    {
    				                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
        					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
     	if(PlayerInfo[playerid][pJail] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
		return 1;
	}
				                         	if(PlayerInfo[playerid][pJailed] == 1)
        			{
				        SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				        return 1;
			        }
     	if(PlayerInfo[playerid][AFKstatus] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
		return 1;
	}
	    	new Float:pHealth;
      GetPlayerHealth(playerid,pHealth);
           	if(pHealth <= 99)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти си под 100 HP и не можеш да се телепортираш");
		return 1;
	}
        SetPlayerPos(playerid, 1608.0096,-1506.8599,13.5720);
		SetPlayerInterior(playerid, 0);
        SetPlayerVirtualWorld(playerid, 0);

	return 1;
     }

	if(strcmp(cmd, "/ipcheck", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ipcheck [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			//if (PlayerInfo[playerid][pAdmin] >= 3)//
		    if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						new ip[20];
			            GetPlayerIp(playa,ip,sizeof(ip));
			            format(string, sizeof(string), "%s's IP: %s\n", giveplayer, ip);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sethp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sethp [Playerid/PartOfName] [health]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sethp [Playerid/PartOfName] [health]");
				return 1;
			}
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        SetPlayerHealth(playa, health);
				        format(string, sizeof(string), "* %s промени твоя живот на %d *", PlayerName(playa),health);
				        SendClientMessage(playa, COLOR_YELLOW, string);
			            format(string, sizeof(string), "Health: %s сложи %d Health на %s", PlayerName(playerid), health,PlayerName(playa));
						SendAdminMessage(COLOR_RED, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setarmour", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setarmour [Playerid/PartOfName] [armor]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setarmour [Playerid/PartOfName] [armor]");
				return 1;
			}
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerArmour(playa, health);
			            format(string, sizeof(string), "* %s промени твоя жилетка на %d *", PlayerName(playa),health);
				        SendClientMessage(playa, COLOR_YELLOW, string);
			            format(string, sizeof(string), "Armour: %s сложи %d Armour на %s", PlayerName(playerid), health,PlayerName(playa));
						SendAdminMessage(COLOR_RED, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
//
//

	if(strcmp(cmd, "/stopalldrags", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /stopalldrags [health]");
				return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					KillTimer(dragTimers[i]);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/sethpall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sethpall [health]");
				return 1;
			}
			new health;
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					SetPlayerHealth(i, health);
				}
                    format(string, sizeof(string), "* %s зареди кръвта на всички играчи в сървъра на %d *", PlayerName(playerid), health);
	                SendClientMessageToAll(COLOR_YELLOW,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/setlimit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setlimit [Limit]");
				return 1;
			}
			new limit;
			limit = strval(tmp);
			if (PlayerInfo[playerid][pEvent] >= 1  && PlayerInfo[playerid][pInEvent] >= 1)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					PlayerInfo[i][pLimit] = limit;
				}
                    format(string, sizeof(string), "{00FF00}%s сложи лимита в евента да е %d", PlayerName(playerid), limit);
	                SendClientMessageToAll(COLOR_YELLOW,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	//
	//
	
	
	
		new tombn = RandomEx(1, tombola);
		new dice1 = RandomEx(1, 7);
	
	
				if(strcmp(cmd, "/dice", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pZarche] == 1)
			{
 format(string, sizeof(string), "%s метна зарче и се падна числото %d", PlayerName(playerid), dice1);
ProxDetector(10.0, playerid, string, COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
 }
 else
 {
 format(string, sizeof(string), "Ти нямаш зарче!");
 SendClientMessage(playerid, COLOR_GRAD1, string);
 }
		}
		return 1;
	}
	


			if(strcmp(cmd, "/maxcameraspeed", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /maxcameraspeed [Скорост]");
				return 1;
			}
			new limit;
			limit = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
		 maxskorost = limit;
				}
                    format(string, sizeof(string), "%s смени максимума скорост за камера на %d ",PlayerName(playerid),limit);
	                SendClientMessageToAll(COLOR_ORANGE,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}





			if(strcmp(cmd, "/riskticket", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /riskticket [Цена]");
				return 1;
			}
			new limit;
			limit = strval(tmp);
			if (PlayerInfo[playerid][pEvent] == 1)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					riskcena = limit;
				}
                    format(string, sizeof(string), "%s смени смени цената на билета на $%d за играта риск печели,риск губи ",PlayerName(playerid),riskcena);
	                SendClientMessageToAll(COLOR_ORANGE,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}

	
			if(strcmp(cmd, "/tomb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
 format(string, sizeof(string), "Едно от числата на Gold Play томболата е {FF8800}%d", tombn);
 SendClientMessageToAll(COLOR_WHITE, string);
 }
 else
 {
 format(string, sizeof(string), "Нямаш права за да ползваш командата!");
 SendClientMessage(playerid, COLOR_GRAD1, string);
 }
		}
		return 1;
	}
	
				if(strcmp(cmd, "/tombn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /tombn [Число]");
				return 1;
			}
			new limit;
			limit = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
tombola = limit;
 format(string, sizeof(string), "{FF8800}%s{FFFFFF} промени  максимуса числа за Gold Play томболата на {FF8800}%d",PlayerName(playerid), limit);
 SendClientMessageToAll(COLOR_WHITE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}



			if(strcmp(cmd, "/askin", true) == 0)
	{
				if (PlayerInfo[playerid][pAdmin] >= 1  || PlayerInfo[playerid][pTest] >= 1)
			{
 		// If there was a previously created selection menu, destroy it
		DestroySelectionMenu(playerid);

	    SetPVarInt(playerid, "skinc_active", 1);
	    //SetPVarInt(playerid, "skinc_page", 0); // will reset the page back to the first

	    CreateSelectionMenu(playerid);
	    SelectTextDraw(playerid, 0xACCBF1FF);
	    }
	    return 1;
	}






	
	//
		                    	if(strcmp(cmd, "/robuninvite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /robuninvite [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			                             if (ProxDetectorS(3.0, playerid, giveplayerid))
                        {
                        			    			if (PlayerInfo[playerid][pRoberN] == 1)
			{
					        if(IsPlayerInRangeOfPoint(playerid, 3, 2145.6499,2834.6777,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 2448.0120,-1962.7341,13.5469))
		        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да изгониш себеси!"); return 1; }
                        format(string, sizeof(string), "%s те махна от обира.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_ORANGE, string);
                        format(string, sizeof(string), "Ти махна %s от обира.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_ORANGE, string);
                        PlayerInfo[playa][pRoberN2] = 0;
                        TextDrawHideForPlayer(playa, robn[playa]);
                        PlayerInfo[playa][pRobN] = 0;
                        
}
else
{
					                    format(string, sizeof(string), "Ти не си в мястото за стартиране на обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
                        }
                        else
                        {
format(string, sizeof(string), "Ти не си лидер на обир");
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        }
					}
	 else
	 {
                        format(string, sizeof(string), "%s не е близо до теб", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GRAD1, string);
	 }

				}
			}
		}
		return 1;
       }
	//
	
	
	
	
		                    	if(strcmp(cmd, "/givebomb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givebomb [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			                             if (ProxDetectorS(3.0, playerid, playa))
                        {
                        			    			if (PlayerInfo[playerid][pBombs] >= 1)
			{
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да дадеш бомба на себеси!"); return 1; }
                        format(string, sizeof(string), "%s ти даде бомба.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_ORANGE, string);
                        format(string, sizeof(string), "Ти даде една бомба на %s.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_ORANGE, string);
                        PlayerInfo[playa][pBombs] += 1;
                        PlayerInfo[playerid][pBombs] -= 1;
                        }
                        else
                        {
format(string, sizeof(string), "Ти нямаш нито една бомба");
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        }
					}
	 else
	 {
                        format(string, sizeof(string), "%s не е близо до теб", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GRAD1, string);
	 }

				}
			}
		}
		return 1;
       }
	
	
	
	
	
	
	
	                    	if(strcmp(cmd, "/robinvite", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /robinvite [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			                             if (ProxDetectorS(3.0, playerid, playa))
                        {
                        			    			if (PlayerInfo[playerid][pRoberN] == 1)
			{
					        if(IsPlayerInRangeOfPoint(playerid, 3, 2145.6499,2834.6777,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 2448.0120,-1962.7341,13.5469))
		        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да поканиш себеси!"); return 1; }
                        format(string, sizeof(string), "%s те вкара в обира.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_ORANGE, string);
                        format(string, sizeof(string), "Ти вкара %s в обира.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_ORANGE, string);
                        PlayerInfo[playa][pRoberN2] = 1;
                        TextDrawShowForPlayer(playa, robn[playa]);
                        SetPlayerSkin(playa,25);
                        PlayerInfo[playa][pRobN] = 1*2;
                        PlayerInfo[playa][pWantedLevel] += 1;
                        

                        }
else
{
					                    format(string, sizeof(string), "Ти не си в мястото за стартиране на обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
                        }
                        else
                        {
format(string, sizeof(string), "Ти не си лидер на обир");
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        }
					}
	 else
	 {
                        format(string, sizeof(string), "%s не е близо до теб", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GRAD1, string);
	 }

				}
			}
		}
		return 1;
       }
       
					if(strcmp(cmd, "/robn", true) == 0)
	{
robmoneyn = 0;
		return 1;
	}
       
       
       
       
					if(strcmp(cmd, "/startrob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    if(robmoneyn == 0)
	    {
		        if(IsPlayerInRangeOfPoint(playerid, 3, 2145.6499,2834.6777,10.8203) || IsPlayerInRangeOfPoint(playerid, 3, 2448.0120,-1962.7341,13.5469))
		        {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
     format(string, sizeof(string), "ROB:Можеш да вкараш хора в обира чрез /robinvite, те трябва да са близо до теб");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
										                    format(string, sizeof(string), "ROB:Ти се опитваш да направиш обир,изполвай /robgps за да разбереш каде има места за обир");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:За да спреш обира използвай /stoprob");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ти получи +1 Wanted Level, защото се опитваш да правиш обир");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
                 format(string, sizeof(string), "ROB:Един човек или една групичка хора се опитват да правият обир,използвай /robgps за да разбереш каде има места за обир.");
	                SendClientMessageToAll(COLOR_ORANGE,string);

format(string, sizeof(string), "ROB:Можеш да ограбиш къща с /robhouse.");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                SetPlayerSkin(playerid,24);
						       			        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRoberN] = 1;
TextDrawShowForPlayer(playerid, robn[playerid]);
}
else
{
					                    format(string, sizeof(string), "Ти не си в мястото за стартиране на обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "В момента има обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
		}
		return 1;
	}













					if(strcmp(cmd, "/heal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    if(PlayerInfo[playerid][pDuelMoney2] >= 1 || PlayerInfo[playerid][pDuelMoney] >= 1)
	    {
	    				    format(string, sizeof(string), "Ти си в дуел и не можеш да ползваш тази команда!");
	                SendClientMessage(playerid, COLOR_WHITE,string);
	    return 1;
	    }
		        			if(PlayerInfo[playerid][pCash] >= 500)
			{
				         if(IsPlayerInRangeOfPoint(playerid, 179, 1290.2639,-3.3891,1001.0222))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
          GivePlayerCash(playerid, -500);
          HouseInfo[h][Earnings] += 500;
          SavePlayerHouse(h);
SetPlayerArmour(playerid,100);
SetPlayerHealth(playerid,100);

}
}
}
else
{
}

}
else
{
					                    format(string, sizeof(string), "Ти не си в DM бизнес");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
		}
		return 1;
	}
					if(strcmp(cmd, "/idveh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    new vehicle;
vehicle = GetPlayerVehicleID(playerid);
if(vehicle > 0)
{

				    format(string, sizeof(string), "ID-то на твоето превозно средство е {FF0000}%d",vehicle);
	                SendClientMessage(playerid, COLOR_WHITE,string);



}
else
{
					                    format(string, sizeof(string), "Ти не си в превозно средство");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
		}
		return 1;
	}
	
	        
	        
	        
	        
	        
	        
	        
	        
	        					if(strcmp(cmd, "/ctfoff", true) == 0)
 {
		                	                if(PlayerInfo[playerid][pInCTF] == 0 && PlayerInfo[playerid][pAdmin] <= 5)
	                {
	                format(string, sizeof(string), "Ти не си в Capture The Flag,затова не можеш да използваш тази команда");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
	                return 1;
	                }
	                if(ctfpl <= 1 && startctf == 1)
	                {
	                if(BluePoints == RedPoints)
	                {
	                	                    new string2[256];
    format(string2, sizeof(string2), "Capture The Flag:Никой отбор не спечели,понеже точките на двата отбора са равни");
    SendClientMessageToAll(COLOR_BL1, string2);
        	        for(new i; i<MAX_PLAYERS; i++)
			{
    	                PlayerInfo[i][pFlakche1] = 0;
	                PlayerInfo[i][pFlakche2] = 0;
	                vzetflag1 = 0;
	                vzetflag2 = 0;
	                SetPlayerHealth(i,0);
	                ctfred = 1;
	                ctfblue = 0;
	                ctfp = 0;
	                ctfpl = 0;
	                PlayerInfo[i][pCTFTimer] = 0;
	                TextDrawHideForPlayer(i, Text4[i]);
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pBlueCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
				    BluePoints = 0;
				    RedPoints = 0;
				    ctfred = 0;
	                ctfp = 0;
	                ctfpl = 0;
	                startctf = 0;
	                MoveObject(ctfp110, -1124.956176, 1057.738769, 1346.458496, 44);
MoveObject(ctfp111, -1124.169433, 1046.195068, 1346.458496, 44);
MoveObject(ctfp112, -1123.388671, 1034.741821, 1346.458496, 44);
MoveObject(ctfp113, -1122.601074, 1023.188293, 1346.458496, 44);
MoveObject(ctfp114, -1125.739624, 1069.221679, 1346.458496, 44);
MoveObject(ctfp115, -1125.479858, 1080.794433, 1346.458496, 44);
MoveObject(ctfp116, -1124.460449, 1092.237915, 1346.458496, 44);
MoveObject(ctfp117, -1123.437988, 1103.711791, 1346.458496, 44);
MoveObject(ctfp118, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp119, -980.092773, 1072.358398, 1346.458496, 44);
MoveObject(ctfp200, -979.771911, 1083.853515, 1346.458496, 44);
MoveObject(ctfp201,  -979.451599, 1095.319580, 1346.458496, 44);
MoveObject(ctfp202, -980.579956, 1049.202636, 1346.458496, 44);
MoveObject(ctfp203, -980.898925, 1037.786254, 1346.458496, 44);
MoveObject(ctfp204, -981.540344, 1014.825073, 1346.458496, 44);
MoveObject(ctfp205, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp206, -981.218750, 1026.340332, 1346.458496, 44);
}
	                }
	                if(BluePoints >= RedPoints)
	                {
	                    new string2[256];
    format(string2, sizeof(string2), "Capture The Flag:Синят отбор спечели");
    SendClientMessageToAll(COLOR_BL1, string2);
    	        for(new i; i<MAX_PLAYERS; i++)
			{
			    GameTextForPlayer(i, "~b~+1 Blue Point", 2000, 3);
	                PlayerInfo[i][pFlakche1] = 0;
	                PlayerInfo[i][pFlakche2] = 0;
	                vzetflag1 = 0;
	                vzetflag2 = 0;
	                SetPlayerHealth(i,0);
	                ctfred = 1;
	                ctfblue = 0;
	                ctfp = 0;
	                ctfpl = 0;
	                PlayerInfo[i][pCTFTimer] = 0;
	                TextDrawHideForPlayer(i, Text4[i]);
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pBlueCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
				    BluePoints = 0;
				    RedPoints = 0;
				    ctfred = 0;
	                ctfp = 0;
	                ctfpl = 0;
	                startctf = 0;
	                MoveObject(ctfp110, -1124.956176, 1057.738769, 1346.458496, 44);
MoveObject(ctfp111, -1124.169433, 1046.195068, 1346.458496, 44);
MoveObject(ctfp112, -1123.388671, 1034.741821, 1346.458496, 44);
MoveObject(ctfp113, -1122.601074, 1023.188293, 1346.458496, 44);
MoveObject(ctfp114, -1125.739624, 1069.221679, 1346.458496, 44);
MoveObject(ctfp115, -1125.479858, 1080.794433, 1346.458496, 44);
MoveObject(ctfp116, -1124.460449, 1092.237915, 1346.458496, 44);
MoveObject(ctfp117, -1123.437988, 1103.711791, 1346.458496, 44);
MoveObject(ctfp118, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp119, -980.092773, 1072.358398, 1346.458496, 44);
MoveObject(ctfp200, -979.771911, 1083.853515, 1346.458496, 44);
MoveObject(ctfp201,  -979.451599, 1095.319580, 1346.458496, 44);
MoveObject(ctfp202, -980.579956, 1049.202636, 1346.458496, 44);
MoveObject(ctfp203, -980.898925, 1037.786254, 1346.458496, 44);
MoveObject(ctfp204, -981.540344, 1014.825073, 1346.458496, 44);
MoveObject(ctfp205, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp206, -981.218750, 1026.340332, 1346.458496, 44);
    if(PlayerInfo[i][pBlueCTF] == 1)
{
	                format(string, sizeof(string), "Твоят отбор победи, ти получаваш:4EP и $5000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 4;
		            GivePlayerCash(i,5000);
}
}
	                }
	                	                if(RedPoints >= BluePoints)
	                {
	                    startctf = 0;
    new string2[256];
    format(string2, sizeof(string2), "Capture The Flag:Червеният спечели");
    SendClientMessageToAll(0xFF4500FF, string2);
    	        for(new i; i<MAX_PLAYERS; i++)
			{
			    GameTextForPlayer(i, "~r~+1 Red Point", 2000, 3);
	                PlayerInfo[i][pFlakche1] = 0;
	                PlayerInfo[i][pFlakche2] = 0;
	                vzetflag1 = 0;
	                vzetflag2 = 0;
	                SetPlayerHealth(i,0);
	                ctfred = 1;
	                ctfblue = 0;
	                ctfp = 0;
	                ctfpl = 0;
	                PlayerInfo[i][pCTFTimer] = 0;
	                TextDrawHideForPlayer(i, Text4[i]);
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pBlueCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
				    BluePoints = 0;
				    RedPoints = 0;
				    ctfred = 0;
	                ctfp = 0;
	                ctfpl = 0;
	                MoveObject(ctfp110, -1124.956176, 1057.738769, 1346.458496, 44);
MoveObject(ctfp111, -1124.169433, 1046.195068, 1346.458496, 44);
MoveObject(ctfp112, -1123.388671, 1034.741821, 1346.458496, 44);
MoveObject(ctfp113, -1122.601074, 1023.188293, 1346.458496, 44);
MoveObject(ctfp114, -1125.739624, 1069.221679, 1346.458496, 44);
MoveObject(ctfp115, -1125.479858, 1080.794433, 1346.458496, 44);
MoveObject(ctfp116, -1124.460449, 1092.237915, 1346.458496, 44);
MoveObject(ctfp117, -1123.437988, 1103.711791, 1346.458496, 44);
MoveObject(ctfp118, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp119, -980.092773, 1072.358398, 1346.458496, 44);
MoveObject(ctfp200, -979.771911, 1083.853515, 1346.458496, 44);
MoveObject(ctfp201,  -979.451599, 1095.319580, 1346.458496, 44);
MoveObject(ctfp202, -980.579956, 1049.202636, 1346.458496, 44);
MoveObject(ctfp203, -980.898925, 1037.786254, 1346.458496, 44);
MoveObject(ctfp204, -981.540344, 1014.825073, 1346.458496, 44);
MoveObject(ctfp205, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp206, -981.218750, 1026.340332, 1346.458496, 44);
    if(PlayerInfo[i][pRedCTF] == 1)
{
	                format(string, sizeof(string), "Твоят отбор победи, ти получаваш:4EP и $5000");
                    SendClientMessage(i,COLOR_RED, string);
                    PlayerInfo[i][Exp] += 4;
		            GivePlayerCash(i,5000);
}
}
	                }
	                }
	                
if(PlayerInfo[playerid][pInCTF] && ctfred == 1)
	                {
	                PlayerInfo[playerid][pFlakche1] = 0;
	                PlayerInfo[playerid][pFlakche2] = 0;
	                new string[256];
	                SetPlayerHealth(playerid,0);
	                ctfred = 1;
	                ctfblue = 0;
	                ctfp -= 1;
	                TextDrawHideForPlayer(playerid, Text4[playerid]);
	                format(string, sizeof(string), "Capture The Flag:%s освободи свободно място ипзолзвай /ctfon за да влезеш в синият отбор",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
	                PlayerInfo[playerid][pRedCTF] = 0;
	                PlayerInfo[playerid][pInCTF] = 0;
	                PlayerInfo[playerid][pBlueCTF] = 0;
	                TextDrawHideForPlayer(playerid,Text4[playerid]);
	                return 1;
	                }
if(PlayerInfo[playerid][pInCTF] && ctfblue == 1)
	                {
	                PlayerInfo[playerid][pFlakche1] = 0;
	                PlayerInfo[playerid][pFlakche2] = 0;
	                SetPlayerHealth(playerid,0);
	                new string[256];
	                ctfred = 0;
	                ctfblue = 1;
	                ctfp -= 1;
	                TextDrawHideForPlayer(playerid,Text4[playerid]);
	                SetPlayerHealth(playerid,0);
	                format(string, sizeof(string), "Capture The Flag:%s освободи свободно място ипзолзвай /ctfon за да влезеш в червеният отбор",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 0;
	                PlayerInfo[playerid][pInCTF] = 0;
	                PlayerInfo[playerid][pRedCTF] = 0;
	                return 1;
	                }

		return 1;
	}
	    					if(strcmp(cmd, "/derbyoff", true) == 0)
	{
		            if(PlayerInfo[playerid][pInDerby] == 0)
	                {
	                format(string, sizeof(string), "Ти не си в играта Derby");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
	                return 1;
	                }
	                	                if(startderby == 1)
	                {
	                format(string, sizeof(string), "Derby:Играта е почнала,затова ти неможеш да я напуснеш");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
	                return 1;
	                }
	                format(string, sizeof(string), "%s напусна играта Derby",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
	                SetPlayerHealth(playerid,0);
	                
	                
	return 1;
	}
	    					if(strcmp(cmd, "/derbyon", true) == 0)
	{
	if(PlayerInfo[playerid][aDuty] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си ADMIN ON DUTY!");
		return 1;
	}
		                if(derbypl >= 10 && PlayerInfo[playerid][pAdmin] <= 7)
	                {
	                format(string, sizeof(string), "Достигнат е максималният брой играчи за Derby");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
	                return 1;
	                }
	                		                if(startderby >= 1 && PlayerInfo[playerid][pAdmin] <= 7)
	                {
	                format(string, sizeof(string), "Играта е почнала,затова не можеш да влезеш");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
	                return 1;
	                }
	                	                	                if(PlayerInfo[playerid][pInDerby] >= 1 && PlayerInfo[playerid][pAdmin] <= 6)
	                {
	                format(string, sizeof(string), "Ти си в игра,затова не можеш да използваш тази команда");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
	                return 1;
	                }
	                	                if(derbypl == 1)
	                {
	                for(new i; i<MAX_PLAYERS; i++)
			{
			if(PlayerInfo[i][pInDerby] == 1)
	                {
	                PlayerInfo[i][pDerbyTimer] = 3*60;
	                format(string, sizeof(string), "Derby:Събраха се 2 играча Играта ще започне след 3 минути!");
	                SendClientMessage(playerid, COLOR_BL1,string);
	                }
	                }
	                }
	                TogglePlayerControllable(playerid,0);
	                	                if(derbypl == 0)
	                {
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar1, 2903.5728,528.5768,2.2532);
PutPlayerInVehicle(playerid, dcar1, 0);
derbypl = 1;
PlayerInfo[playerid][pInDerby] = 1;
	                format(string, sizeof(string), "{FF0000}Derby:%s влезе в играта, трябва още 1 играч да влезе в играта за да се стартира - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
return 1;
	                }
	                	                	                if(derbypl == 1)
	                {
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar2, 2887.7605,502.0151,2.2508);
PutPlayerInVehicle(playerid, dcar2, 0);
derbypl = 2;
PlayerInfo[playerid][pInDerby] = 1;
	   format(string, sizeof(string), "{FF0000}Derby:%s влезе в играта - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
return 1;
	                }
	                	                	                	                if(derbypl == 2)
	                {
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar3, 2910.3416,486.6797,7.6709);
PutPlayerInVehicle(playerid, dcar3, 0);
derbypl = 3;
PlayerInfo[playerid][pInDerby] = 1;
 format(string, sizeof(string), "{FF0000}Derby:%s влезе в играта - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
return 1;
	                }
	                	                	                	                	                if(derbypl == 3)
	                {
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar4, 2951.5703,448.3196,10.5177);
PutPlayerInVehicle(playerid, dcar4, 0);
derbypl = 4;
PlayerInfo[playerid][pInDerby] = 1;
 format(string, sizeof(string), "{FF0000}Derby:%s влезе в играта - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
return 1;
	                }
if(derbypl == 4)
{
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar5, 3032.7810,441.3437,21.0623);
PutPlayerInVehicle(playerid, dcar5, 0);
derbypl = 5;
PlayerInfo[playerid][pInDerby] = 1;
 format(string, sizeof(string), "{FF0000}Derby:%s влезе в играта - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
return 1;
	                }
	                if(derbypl == 5)
{
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar6, 2991.1995,442.2599,38.9873);
PutPlayerInVehicle(playerid, dcar6, 0);
derbypl = 6;
PlayerInfo[playerid][pInDerby] = 1;
 format(string, sizeof(string), "{FF0000}Derby:%s влезе в играта - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
return 1;
	                }
	                if(derbypl == 6)
{
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar7, 2992.2349,482.4532,50.3248);
PutPlayerInVehicle(playerid, dcar7, 0);
derbypl = 7;
PlayerInfo[playerid][pInDerby] = 1;
 format(string, sizeof(string), "{FF0000}Derby:%s влезе в играта - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
return 1;
	                }
	                	                if(derbypl == 7)
{
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar8, 3029.9094,501.0880,40.5482);
PutPlayerInVehicle(playerid, dcar8, 0);
derbypl = 8;
PlayerInfo[playerid][pInDerby] = 1;
 format(string, sizeof(string), "{FF0000}Derby:%s влезе в играта - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
return 1;
	                }
if(derbypl == 8)
{
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar9, 3040.5171,531.2624,40.4538);
PutPlayerInVehicle(playerid, dcar9, 0);
derbypl = 9;
PlayerInfo[playerid][pInDerby] = 1;
 format(string, sizeof(string), "{FF0000}Derby:%s влезе в играта - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
return 1;
	                }
if(derbypl == 9)
{
	                SetPlayerInterior(playerid,0);
	                SetPlayerVirtualWorld(playerid,0);
SetVehiclePos(dcar9, 3040.5171,531.2624,40.4538);
PutPlayerInVehicle(playerid, dcar9, 0);
derbypl = 10;
PlayerInfo[playerid][pInDerby] = 1;
 format(string, sizeof(string), "{FF0000}{FF0000}Derby:%s влезе в играта - /derbyon",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
	                 format(string, sizeof(string), "{FF0000}Събра се нужня брой играчи, играта ще стартира след 10 секунди",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
	                 for(new i; i<MAX_PLAYERS; i++)
			{
	                PlayerInfo[i][pDerbyTimer] = 1*10;
	                }
	                sabrani = 1;
return 1;
	                }
	                
	                
	return 1;
	}
	        
	        
	        
	    					if(strcmp(cmd, "/ctfon", true) == 0)
	{
	if(PlayerInfo[playerid][aDuty] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си ADMIN ON DUTY!");
		return 1;
	}
	                if(ctfpl >= 9 && PlayerInfo[playerid][pAdmin] <= 6)
	                {
	                format(string, sizeof(string), "Достигнат е максималният брой играчи за Capture The Flag");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
	                return 1;
	                }
	                	                if(PlayerInfo[playerid][pInCTF] >= 1 && PlayerInfo[playerid][pAdmin] <= 6)
	                {
	                format(string, sizeof(string), "Ти си в игра,затова не можеш да използваш тази команда");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
	                return 1;
	                }
	                if(ctfpl >= 9 && PlayerInfo[playerid][pAdmin] <= 6)
	                {
	                format(string, sizeof(string), "Capture The Flag: Достигнат е максималният брой играчи");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
	                return 1;
	                }
	                //
	             PlayerInfo[playerid][pFlakche1] = 0;
                 PlayerInfo[playerid][pFlakche2] = 0;
                 new string[256];
                 PlayerInfo[playerid][pRedCTF] = 0;
                 PlayerInfo[playerid][pInCTF] = 0;
                 PlayerInfo[playerid][pBlueCTF] = 0;
                 PlayerInfo[playerid][pBlueCTF] = 0;
                 PlayerInfo[playerid][pInCTF] = 0;
	                //
	                TextDrawHideForPlayer(playerid, Text4[playerid]);
	                ResetPlayerWeapons(playerid);
                        ResetPlayerWeaponsEx(playerid);
                        PlayerInfo[playerid][pInCTF] = 1;
                        			    ResetPlayerWeapons(playerid);
                        ResetPlayerWeaponsEx(playerid);
GivePlayerWeapon(playerid, 25, 64);
GivePlayerWeapon(playerid, 24, 64);
GivePlayerWeapon(playerid, 29, 64);
GivePlayerWeapon(playerid, 25, 64);
GivePlayerWeapon(playerid, 24, 64);
GivePlayerWeapon(playerid, 29, 64);
SetPlayerVirtualWorld(playerid, 0);
TextDrawShowForPlayer(playerid,Text4[playerid]);
	                if(ctfpl == 1)
	                {
	                for(new i; i<MAX_PLAYERS; i++)
			{
			if(PlayerInfo[i][pInCTF] == 1)
	                {
	                PlayerInfo[i][pCTFTimer] = 1*60;
	                }
	                }
	                }
	                                        if(ctfpl == 1)
                        {
                        SendClientMessageToAll(COLOR_BL1,"Capture The Flag: Играта ще започне след 1 минута");
                        }
	                if(ctfpl == 0 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfpl = 1;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 1 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfpl = 2;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 2 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfp = 3;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 3 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfp = 4;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 4 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfp = 5;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 5 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfp = 6;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 6 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfp = 7;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 7 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfp = 8;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 8 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfp = 9;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 9 && ctfred == 1)
	                {
	                SetPlayerColor(playerid, COLOR_RED);
	                ctfred = 0;
	                ctfblue = 1;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-1132.3528,1036.2312,1345.7362);
	                ctfp = 10;
	                SendClientMessage(playerid, 0xFF4500FF,"{FF0000}Capture The Flag: Ти беше избран да си от червения отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pRedCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                //blue//
	                if(ctfpl == 0 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                ctfpl = 1;
	                SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта, трябва още 1 играч да влезе в играта за да се стартира - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 1 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                ctfpl = 2;
	                SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 2 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                ctfp = 3;
	  	            SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 3 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                ctfp = 4;
	               SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 4 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                ctfp = 5;
	                SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 5 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                ctfp = 6;
	                SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 6 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                ctfp = 7;
	                SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 7 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                ctfp = 8;
	              SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 8 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                SetPlayerInterior(playerid,10);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                ctfp = 9;
	        SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                if(ctfpl == 9 && ctfblue == 1)
	                {
	                SetPlayerColor(playerid, COLOR_BLUE);
	                ctfred = 1;
	                ctfblue = 0;
	                ctfp = 10;
	                SetPlayerInterior(playerid,10);
	     SendClientMessage(playerid, 0xFF4500FF,"{3399FF}Capture The Flag: Ти беше избран да си от синия отбор!");
                    format(string, sizeof(string), "{33CC00}Capture The Flag: %s влезе в играта - /ctfon",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                format(string, sizeof(string), "{33CC00}Capture The Flag: Моля, използвайте /ctfoff за да излезете от играта!",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
	                SetPlayerPos(playerid,-971.9517,1083.2987,1345.0001);
	                PlayerInfo[playerid][pBlueCTF] = 1;
	                PlayerInfo[playerid][pInCTF] = 1;
	                return 1;
	                }
	                //blue//
		return 1;
	}
	        
	        
	        							if(strcmp(cmd, "/payfwarn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		        			if(PlayerInfo[playerid][pCash] >= 400000)
			{
			if(PlayerInfo[playerid][pMember] == TEAM_GPD)
			{
						 format(string, sizeof(string), "Ти си плати FACTION предупреждение в Gold Play Police Department,това ти струваше $400000");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
          GivePlayerCash(playerid, -400000);
}
else
{
						 format(string, sizeof(string), "Ти не си в Gold Play Police Department");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
	        }
	        }
	        return 1;
	        }
	        
	        
			        
			        
							if(strcmp(cmd, "/rankup", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		        			if(PlayerInfo[playerid][pCash] >= 400000)
			{
					        			if(PlayerInfo[playerid][pRank] == 5)
			{
								                    format(string, sizeof(string), "Ти вече си достигнал 5-ти ранк!");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
			return 1;
}
			if(PlayerInfo[playerid][pMember] == TEAM_GPD)
			{
						 format(string, sizeof(string), "Ти вдигна ранка си в Gold Play Police Department,това ти струваше $400000");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
				PlayerInfo[playerid][pMember] = TEAM_GPD;
				PlayerInfo[playerid][pRank] += 1;
				SetPlayerHealth(playerid,0);
				FactionRequest[playerid] = TEAM_GPD;

          GivePlayerCash(playerid, -400000);











          												if(PlayerInfo[playerid][pRank] == 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerHealth(playerid,0);
			        PlayerInfo[playerid][pRank] = 2;
			        			         format(string, sizeof(string), "%s си вдигна ранка и сега неговя ранк е 2", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						return 1;
			        }
			        
			        
											if(PlayerInfo[playerid][pRank] == 2 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerHealth(playerid,0);
			        PlayerInfo[playerid][pRank] = 3;
			        			         format(string, sizeof(string), "%s си вдигна ранка и сега неговя ранк е 3", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
           						return 1;
			        }
											if(PlayerInfo[playerid][pRank] == 3 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerHealth(playerid,0);
			        PlayerInfo[playerid][pRank] = 4;
			        			         format(string, sizeof(string), "%s си вдигна ранка и сега неговя ранк е 4", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
			        						return 1;
			        }

										if(PlayerInfo[playerid][pRank] == 4 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerHealth(playerid,0);
			        PlayerInfo[playerid][pRank] = 5;
			        			         format(string, sizeof(string), "%s си вдигна ранка и сега неговя ранк е 5", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
			      						return 1;
			        }








}
else
{
						 format(string, sizeof(string), "Ти не си в Gold Play Police Department");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "Ти нямаш достатъчно пари,цената за да си вдигнеш ранка в Gold Play Police Department е $400000");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
		}
		return 1;
	}
			        
			        
			        
	
						if(strcmp(cmd, "/joingpd", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		        			if(PlayerInfo[playerid][pCash] >= 2000000)
			{
					        			if(PlayerInfo[playerid][pMember] == TEAM_GPD)
			{
								                    format(string, sizeof(string), "Ти вече си в Gold Play Police Department!");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
			return 1;
}
			if(PlayerInfo[playerid][pMember] == TEAM_CIVILIAN)
			{
						 format(string, sizeof(string), "Ти влезе в Gold Play Police Department,това ти струваше $400000");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
				PlayerInfo[playerid][pMember] = TEAM_GPD;
				PlayerInfo[playerid][pRank] = 1;
				SetPlayerHealth(playerid,0);
				FactionRequest[playerid] = TEAM_GPD;
				
          GivePlayerCash(playerid, -2000000);
          
}
else
{
						 format(string, sizeof(string), "Ти вече си в банда,затова не можеш да влезеш в Gold Play Police Department");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "Ти нямаш достатъчно пари,цената за да влезеш в Gold Play Police Department е $400000");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
		}
		return 1;
	}
	
	
	
	
	
	
	
	
					if(strcmp(cmd, "/payadminmute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		        			if(PlayerInfo[playerid][pCash] >= 200000)
			{
					        			if(PlayerInfo[playerid][pADMINMUTE] == 1)
			{

				    format(string, sizeof(string), "Ти премахна твоя ADMIN mute,това ти струваше $200000");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
          GivePlayerCash(playerid, -200000);
          PlayerInfo[playerid][pADMINMUTE] = 0;


}
else
{
					                    format(string, sizeof(string), "Ти не си ADMIN заглушен");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
}
else
{
					                    format(string, sizeof(string), "Ти нямаш достатъчно пари,цената за ADMIN unmute е $200000");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
		}
		return 1;
	}
	


					if(strcmp(cmd, "/riskk", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		        if(IsPlayerInRangeOfPoint(playerid, 3, 2244.0120,1677.2415,1008.3594))
		        {
					        			if(PlayerInfo[playerid][pTick] == 1)
			{

				    format(string, sizeof(string), "%s завъртя колелото,сега трябва да изчакаме малко,за да разберем какво се е паднало",PlayerName(playerid));
	                				if (PlayerInfo[playerid][pEvent] == 1 || PlayerInfo[playerid][pTick] == 1)
				{
					SendRiskMessage(COLOR_ORANGE, string);
				}
          PlayerInfo[playerid][pKolelo1] = 1*4;


}
else
{
					                    format(string, sizeof(string), "Ти нямаш билет за играта,затова ти не можеш да ползваш тази команда!");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}

}
else
{
					                    format(string, sizeof(string), "Трябва да си до колелото,за да ползваш тази команда!");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
		}
		return 1;
	}
					if(strcmp(cmd, "/bet", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		        if(IsPlayerInRangeOfPoint(playerid, 3, 822.4429,4.1810,1004.1797))
		        {
					        			if(PlayerInfo[playerid][pCash] >= 5000)
			{

				    format(string, sizeof(string), "Ти заложи 5000$ за кон номер 15");
					SendClientMessage(playerid, COLOR_ORANGE, string);
					GivePlayerCash(playerid,-5000);
					for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
					HouseInfo[h][Earnings] += 5000;
					SavePlayerHouse(h);
	}
   }
          PlayerInfo[playerid][pKolelo2] = 1*4;


}
else
{
					                    format(string, sizeof(string), "Трябва да имаш поне $5000!");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}

}
else
{
					                    format(string, sizeof(string), "Трябва да си в бизнес!");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
		}
		return 1;
	}













					if(strcmp(cmd, "/buyticket", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		        if(IsPlayerInRangeOfPoint(playerid, 3, 1066.6388,1018.3427,11.0000))
		        {
		        			if(PlayerInfo[playerid][pCash] >= riskcena)
			{
					        			if(PlayerInfo[playerid][pTick] == 0)
			{
		        
				    format(string, sizeof(string), "Ти си купи билет за играта");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
          GivePlayerCash(playerid, -riskcena);
          PlayerInfo[playerid][pTick] = 1;
		        
		        
}
else
{
					                    format(string, sizeof(string), "Ти вече имаш билет за играта");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
}
else
{
					                    format(string, sizeof(string), "Ти нямаш достатъчно пари,цената на билета за играта е $%d",riskcena);
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
		
}
else
{
					                    format(string, sizeof(string), "Ти не си в мястото за купуване на билет");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
		}
		}
		return 1;
	}




if(strcmp(cmd, "/stoprob", true) == 0)
 {
     if(IsPlayerConnected(playerid))
     {
     if(PlayerInfo[playerid][pRoberN] == 1)
  {
                 format(string, sizeof(string), "ROB:Обира беше прекратен от лидера на обира и участиниците в него получиха парите си.",robmoneyn);
                 SendClientMessageToAll(COLOR_ORANGE,string);
       for(new i; i<MAX_PLAYERS; i++)
			{
			     if(PlayerInfo[i][pRoberN] >= 1 || PlayerInfo[i][pRoberN2] >= 1)
  {
            GivePlayerCash(i, robmoneyn);
              TextDrawHideForPlayer(i, robn[playerid]);
  			PlayerInfo[i][pRobN] = 0;
            PlayerInfo[i][pRoberN] = 0;
            PlayerInfo[i][pRoberN2] = 0;
            PlayerInfo[i][pRobN] =0;
			TextDrawHideForPlayer(i, robn[i]);
			TextDrawHideForPlayer(i, robn[i]);
			TextDrawHideForPlayer(i, robn[i]);
			robmoneyn = 0;
			}
			}
			PlayerInfo[playerid][pRobN] = 0;
PlayerInfo[playerid][pRoberN] = 0;
TextDrawHideForPlayer(playerid, robn[playerid]);
}
else
{
                         format(string, sizeof(string), "Ти не си лидер на обир");
                 SendClientMessage(playerid, COLOR_GRAD1,string);
}
  }
  return 1;
 }










//

	
	
					if(strcmp(cmd, "/startrobbank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    if(robmoneyb == 0)
	    {
		        if(IsPlayerInRangeOfPoint(playerid, 3, 2316.6194,-10.2736,26.7422))
		        {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
										                    format(string, sizeof(string), "ROB:Ти стартира обир на банка,внимавай да не те убият");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ако отидеш надалеч от банката няма да можеш да взимаш пари, за да прекратиш обира използвай /stoprobbank");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ти получи +1 Wanted Level, защото се опитваш да ограбиш банка");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
                 format(string, sizeof(string), "ROB:Някой се опитва да обере банка.");
	                SendClientMessageToAll(COLOR_ORANGE,string);
      			        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRoberB] = 1;
PlayerInfo[playerid][pRobB] = 1*2;
TextDrawShowForPlayer(playerid, robb[playerid]);
}
else
{
					                    format(string, sizeof(string), "Ти не си в банка");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "В момента има обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
		}
		return 1;
	}

					if(strcmp(cmd, "/stoprobbank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    if(PlayerInfo[playerid][pRoberB] == 1)
	 {
                 format(string, sizeof(string), "ROB:Обира беше прекратен,този които се опитваше да ограби банка получи $%d.",robmoneyb);
	                SendClientMessageToAll(COLOR_ORANGE,string);
                 format(string, sizeof(string), "ROB:Браво, ти обра $%d от банката",robmoneyb);
	                SendClientMessage(playerid, COLOR_ORANGE,string);
TextDrawHideForPlayer(playerid, robb[playerid]);
PlayerInfo[playerid][pRobB] = 0;
GivePlayerCash(playerid, robmoneyb);
robmoneyb = 0;
}
else
{
					                    format(string, sizeof(string), "Ти не се опитваш да обереш банка и не можеш да използваш тази команда");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
		}
		return 1;
	}
//





				if(strcmp(cmd, "/robhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	 if(robmoneyn == 0)
	 {
		        if(PlayerInfo[playerid][pInHouse] == 0)
 {
 SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в къща");
 return 1;
 }
		        	    if(PlayerInfo[playerid][pRoberN] == 1)
	    {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
					
					
					
					
					
					
										                    format(string, sizeof(string), "ROB:Ти стартира обир на къща,внимавай да не те убият");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ако отидеш надалеч от мястото няма да можеш да взимаш пари, за да прекратиш обира използвай /stoprob");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ти получи +1 Wanted Level, защото се опитваш да правиш обир");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
                 format(string, sizeof(string), "ROB:Човека/групичката която стартираха обир-а вече почнаха да ограбват къща.");
	                SendClientMessageToAll(COLOR_ORANGE,string);
      			        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRobN] = 1*2;
TextDrawShowForPlayer(playerid, robn[playerid]);

}
else
{
}

}
else
{
}
















	 if(robmoneyn == 0)
	 {
		        	    if(PlayerInfo[playerid][pRoberN] == 1)
	    {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}






										                    format(string, sizeof(string), "ROB:Ти стартира обир на къща,внимавай да не те убият");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ако отидеш надалеч от мястото няма да можеш да взимаш пари, за да прекратиш обира използвай /stoprob");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ти получи +1 Wanted Level, защото се опитваш да правиш обир");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
                 format(string, sizeof(string), "ROB:Човека/групичката която стартираха обир-а вече почнаха да ограбват къща.");
	                SendClientMessageToAll(COLOR_ORANGE,string);
      			        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRobN] = 1*2;
TextDrawShowForPlayer(playerid, robn[playerid]);

}
else
{
}

}
else
{
}








		}
		return 1;
	}














	
				if(strcmp(cmd, "/rob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	 if(robmoneyn == 0)
	 {
		        if(IsPlayerInRangeOfPoint(playerid, 3, 2017.6198,1912.9371,12.3274) || IsPlayerInRangeOfPoint(playerid, 3, 2463.1233,-1957.5519,16.7929) || IsPlayerInRangeOfPoint(playerid, 3, 1965.7695,1623.1764,12.86238))
		        {
		        	    if(PlayerInfo[playerid][pRoberN] == 1)
	    {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
										                    format(string, sizeof(string), "ROB:Ти стартира обир на банкомат,внимавай да не те убият");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ако отидеш надалеч от мястото няма да можеш да взимаш пари, за да прекратиш обира използвай /stoprobatm");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
	                					                    format(string, sizeof(string), "ROB:Ти получи +1 Wanted Level, защото се опитваш да правиш обир");
	                SendClientMessage(playerid, COLOR_ORANGE,string);
                 format(string, sizeof(string), "ROB:Човека/групичката която стартираха обир-а вече почнаха да взимат пари.");
	                SendClientMessageToAll(COLOR_ORANGE,string);
      			        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRobN] = 1*2;
TextDrawShowForPlayer(playerid, robn[playerid]);

}
else
{
					                    format(string, sizeof(string), "Ти не си лидер на обир.");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "Ти не си до място за обир,използвай /robgps за да разбереш каде има места.");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "В момента има обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
		}
		return 1;
	}
	
	
	
	
	
	
	
	//
				if(strcmp(cmd, "/robatm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    if(robmoney == 0)
	    {
		        if(IsPlayerInRangeOfPoint(playerid, 3, 1239.9829,-2041.6614,59.9389) || IsPlayerInRangeOfPoint(playerid, 3, 1538.0908,-1616.5916,13.5469) || IsPlayerInRangeOfPoint(playerid, 3, 2140.0640,-1158.2324,23.9922) || IsPlayerInRangeOfPoint(playerid, 3, 2194.0444,1986.1279,12.2969) || IsPlayerInRangeOfPoint(playerid, 3, 1718.4507,1315.4329,10.8125) || IsPlayerInRangeOfPoint(playerid, 3, 256.8503,67.3138,1003.6406) || IsPlayerInRangeOfPoint(playerid, 3, 257.5424,68.5065,1003.6406))
		        {
					PlayerInfo[playerid][pZvezda1] += 1;
					PlayerInfo[playerid][pWantedLevel] += 1;
										if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
					if(IsPlayerInRangeOfPoint(playerid, 3, 1239.9829,-2041.6614,59.9389) || IsPlayerInRangeOfPoint(playerid, 3, 1538.0908,-1616.5916,13.5469) || IsPlayerInRangeOfPoint(playerid, 3, 2140.0640,-1158.2324,23.9922) || IsPlayerInRangeOfPoint(playerid, 3, 2194.0444,1986.1279,12.2969) || IsPlayerInRangeOfPoint(playerid, 3, 257.5424,68.5065,1003.6406))
		        {
                 format(string, sizeof(string), "Robbery ATM: Някой се опитва да обере банкомат в LS, отиди и го спри!");
	                SendClientMessageToAll(COLOR_ORANGE,string);
	                }
	                if(IsPlayerInRangeOfPoint(playerid, 3, 2194.0444,1986.1279,12.2969) || IsPlayerInRangeOfPoint(playerid, 3, 1718.4507,1315.4329,10.8125))
		        {
                 format(string, sizeof(string), "Robbery ATM: Някой се опитва да обере банкомат в LV, отиди и го спри!");
	                SendClientMessageToAll(COLOR_ORANGE,string);
	                }
	                
	                
	                format(string, sizeof(string), "{CC0000}[SUSPECTED] {0033FF}Ти си заподозрян в престъпление: Обир на банкомат, ниво на издирване: %d",PlayerInfo[playerid][pWantedLevel]);
	                SendClientMessage(playerid, COLOR_GRAD1,string);
      			        format(string, sizeof(string), "%s се издирва [Обир]", PlayerName(playerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
PlayerInfo[playerid][pRober] = 1;
PlayerInfo[playerid][pRob1] = 1*2;
PlayerInfo[playerid][pATMTime] = 0;
PlayerInfo[playerid][pATMRob2] = 0;

}
else
{
					                    format(string, sizeof(string), "Ти не си до банкомат");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}

}
else
{
					                    format(string, sizeof(string), "В момента има обир");
	                SendClientMessage(playerid, COLOR_GRAD1,string);
}
		}
		return 1;
	}
	
	//
			if(strcmp(cmd, "/removelimit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] >= 1  && PlayerInfo[playerid][pInEvent] >= 1)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					PlayerInfo[i][pLimit] = 333333;
				}
                    format(string, sizeof(string), "{00FF00}%s премахна лимита в евента", PlayerName(playerid));
	                SendClientMessageToAll(COLOR_YELLOW,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/setarmorall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setarmorall [armor]");
				return 1;
			}
			new health;
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					SetPlayerArmour(i, health);
				}
                    format(string, sizeof(string), "* %s зареди жилетката на всички играчи в сървъра на %d *", PlayerName(playerid), health);
	                SendClientMessageToAll(COLOR_YELLOW,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setmoney", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setmoney [Playerid/PartOfName] [money]");
				return 1;
			}
			new playa;
			new money;
			new plname[MAX_PLAYER_NAME];
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			GetPlayerName(playa, plname, sizeof(plname));
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerCash(playa, money);
						format(string, sizeof(string), "Ти сложи парите на %s да са му $%d !", plname, money);
				        SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		return 1;
	}
			if(strcmp(cmd, "/fuelcan", true) == 0)
	{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fuelcan [fuel]");
				return 1;
			}
			new money;
			money = strval(tmp);
new vehicleid;
new vid = GetPlayerVehicleID(playerid);
vehicleid = GetPlayerVehicleID(playerid);
						if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
			if (PlayerInfo[playerid][pTuba] >= 1)
			{
			if(money > PlayerInfo[playerid][pTuba])
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Твоята туба няма толкова бензин!");
			return 1;
			}
			PlayerInfo[playerid][pTuba2] -= money;
			fuel[vid] = fuel[vid] += money;
			if(fuel[vid] >= 100)
			{
			fuel[vid] = 100;
			}
				format(string, sizeof(string), "{66B2FF}Ти зареди твоята кола с %d литра бензин", money);
                SendClientMessage(playerid, COLOR_GREEN,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш туба !");
			}
		return 1;
	}
	if(strcmp(cmd, "/givemoneyall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givemoneyall [money]");
				return 1;
			}
			new money;
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					GivePlayerCash(i, money);
				}
				format(string, sizeof(string), "%s даде на $%d на всички играчи в сървъра", PlayerName(playerid), money);
                SendClientMessageToAll(COLOR_GREEN,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/givemoney", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givemoney [Playerid/PartOfName] [money]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GivePlayerCash(playa, money);
                        format(string, sizeof(string), "*{FFFFFF}%s {FFFFFF}ти даде пари на стойност {9AFF00}$%d {FFFFFF}*", PlayerName(playerid), money);
				        SendClientMessage(playa, COLOR_WHITE, string);
                        format(string, sizeof(string), "*{FFFFFF}Ти даде на {FFFFFF}%s {FFFFFF}пари на стойност {9AFF00}$%d {FFFFFF}*", PlayerName(playa), money);
				        SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/refuelcars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pManage] < 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			    return 1;
			}
			else
			{
				for(new cars=0; cars<MAX_VEHICLES; cars++)
				{
					if(!VehicleOccupied(cars))
					{
    fuel[cars] = fuel[cars] = 100; //restoring fuel to 100
    isrefuelling[playerid] = 0;//resetting anti-spam thingy :3
					}
				}
                format(string, sizeof(string), "%s Зареди всички коли", PlayerName(playerid));
	            SendClientMessageToAll(COLOR_GRAD1,string);
			}
		}
		return 1;
	}








    if(strcmp(cmd, "/respawncars", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pManage] >= 1)
            {
			    PlayerInfo[playerid][pRespawncars1] = 1*10;
                format(string, sizeof(string), "ADMIN: All vehicles will be respawned after 10 secounds by %s", PlayerName(playerid),playerid);
                SendClientMessageToAll(COLOR_RED, string);
                new ch;
	            new min;
	            new sek;
	            gettime(ch, min, sek);
	            chas2 = ch;
			 minuti2 = min;
	            sekundi2 = sek;
	            GetPlayerName(playerid, adminin2, sizeof(adminin2));
			}
		}
		return 1;
		}
if(strcmp(cmd, "/crespawncars", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pManage] >= 1)
            {
			    PlayerInfo[playerid][pRespawncars1] = 0;
                format(string, sizeof(string), "ADMIN: %s cancelled vehicle respawn!", PlayerName(playerid),playerid);
                SendClientMessageToAll(COLOR_RED, string);
			}
		}
		return 1;
		}



new vid = GetPlayerVehicleID(playerid);
if(IsPlayerInVehicle(playerid, carufo))
	{
			vid = GetPlayerVehicleID(playerid);
			RepairVehicle(vid);
			fuel[vid] = fuel[vid] = 100;
			TextDrawHideForPlayer(playerid,td_fuel[playerid]);
	}
    if(strcmp(cmd, "/frespawn", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_GROVE)
            {
                for(new cars=0; cars<90; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(grovecars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_GROVE, COLOR_LIGHTBLUE, string);
			}
		}
        if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_BALLAS)
            {
                for(new cars=0; cars<12; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(ballascars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_BALLAS, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_VAGOS)
            {
                for(new cars=0; cars<9999; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(vagoscars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_VAGOS, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_VIP)
            {
                for(new cars=1; cars<108; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(vipcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_VIP, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_TRIADS)
            {
                for(new cars=0; cars<16; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(azteccars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_TRIADS, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_Thugs)
            {
                for(new cars=0; cars<90; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(sbcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_Thugs, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_MS13)
            {
                for(new cars=0; cars<11; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(ecoastcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_MS13, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_CRIPZ)
            {
                for(new cars=0; cars<90; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(vcripzcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_CRIPZ, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_BOYZ)
            {
                for(new cars=1; cars<16; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(boyzcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_BOYZ, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_ZETAS)
            {
                for(new cars=1; cars<13; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(atcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_ZETAS, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_GPD)
            {
                for(new cars=1; cars<998; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(gpcars[cars]);
                        SetVehicleToRespawn(dfcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_SoA)
            {
                for(new cars=1; cars<23; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(rockcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_SoA, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
            {
                for(new cars=0; cars<100; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(ABcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_AsianBoyz, COLOR_LIGHTBLUE, string);
			}
		}
						if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_YAKUZA)
            {
                for(new cars=0; cars<29; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(yakuzacars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_YAKUZA, COLOR_LIGHTBLUE, string);
			}
		}
				if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_DPK)
            {
                for(new cars=0; cars<29; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(Dpkcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_DPK, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_BulgarianMafia)
            {
                for(new cars=0; cars<21; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(killazcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_BulgarianMafia, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_LatinKing)
            {
                for(new cars=1; cars<90; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(latincars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_LatinKing, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_FBI)
            {
                for(new cars=1; cars<12; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(fbicars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_FBI, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_NZ)
            {
                for(new cars=1; cars<14; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(cbkcars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_NZ, COLOR_LIGHTBLUE, string);
			}
		}
		if(IsPlayerConnected(playerid))
        {
			if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_RIFA)
            {
                for(new cars=1; cars<13; cars++)
                {
                    if(!VehicleOccupied(cars))
                    {
                        SetVehicleToRespawn(rifacars[cars]);
                    }
                }
                format(string, sizeof(string), "All Vehicles has been respawned by %s(%d)", PlayerName(playerid),playerid);
                SendFactionMessage(TEAM_RIFA, COLOR_LIGHTBLUE, string);
			}
		}
		return 1;
    }
		
//

    
                        	if(strcmp(cmd, "/auncuff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /auncuff [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			        		        			    			                             if (ProxDetectorS(3.0, playerid, giveplayerid))
                        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Неможеш да си махнеш белизниците"); return 1; }
			            RemovePlayerAttachedObject(playa, 0);
    					SetPlayerSpecialAction(playa, SPECIAL_ACTION_NONE);
    					PlayerInfo[playa][pAcuffed] = 0;
                        format(string, sizeof(string), "%s ти махна белизниците.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти махна белизниците на %s.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
                                  }
                        else
                        {
                        format(string, sizeof(string), "Ти не си близо до %s.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
                        }
					}
				}
			}
		}
		return 1;
       }
    
    
    
                    	if(strcmp(cmd, "/uncuff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /uncuff [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(PlayerInfo[playerid][pMember] == TEAM_GPD)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			        		        			    			                             if (ProxDetectorS(3.0, playerid, giveplayerid))
                        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Неможеш да си махнеш белизниците"); return 1; }
			            RemovePlayerAttachedObject(playa, 0);
    					SetPlayerSpecialAction(playa, SPECIAL_ACTION_NONE);
                        format(string, sizeof(string), "%s ти махна белизниците.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти махна белизниците на %s.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
                                  }
                        else
                        {
                        format(string, sizeof(string), "Ти не си близо до %s.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
                        }
					}
				}
			}
		}
		return 1;
       }
//

if(strcmp(cmd, "/mypoints", true) ==0)
{
// We make it again for TEAM_COPS
	if(gTeam[playerid] == TEAM_GPD) // For cops
    {
							format(string, sizeof(string), "Твоите точки са %d ",PlayerInfo[playerid][pPP]);
							SendClientMessage(playerid, COLOR_RED, string);
    }// Not a cop.
    return 1;
}


if(strcmp(cmd, "/tazeron", true) ==0)
{
// We make it again for TEAM_COPS
	if(gTeam[playerid] == TEAM_GPD) // For cops
    {
    	if(IsPlayerInAnyVehicle(playerid)) // Checks if the player is in a vehicle.
        {
        	SendClientMessage(playerid, 0xFF0000FF, "Ти не можеш да използваш тази команда в кола!");
         	return 1;
        }
        if(pTazer[playerid] == 0) // If the player has no tazer withdrawn.
        {
                  SendClientMessage(playerid, 0xFF0000FF, "Ти включи tazer,можеш да го изключиш с /tazeron!");
            GivePlayerWeapon(playerid, 23, 20); // Gives a SD.
            pTazer[playerid] = 1; // Sets the var to true.
            return 1;
        }
    }// Not a cop.
    return 1;
}


if(strcmp(cmd, "/tazeroff", true) ==0)
{
// We make it again for TEAM_COPS
	if(gTeam[playerid] == TEAM_GPD) // For cops
    {
    	if(IsPlayerInAnyVehicle(playerid)) // Checks if the player is in a vehicle.
        {
        	SendClientMessage(playerid, 0xFF0000FF, "Ти не можеш да използваш тази команда в кола!");
         	return 1;
        }
        if(pTazer[playerid] == 1)
        {
          SendClientMessage(playerid, 0xFF0000FF, "Ти изключи tazer,можеш да го включиш с /tazeron!");
            GivePlayerWeapon(playerid, 24, 100); // Gives a deagle.
            pTazer[playerid] = 0; // Sets the var to false.
            return 1;
        }
    }// Not a cop.
    return 1;
}

                    	if(strcmp(cmd, "/drag", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /drag [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
	if(gTeam[playerid] == TEAM_GPD) // For cops
    {
		new Float:idX, Float:idY, Float:idZ; //declaring new float variables (float is like 5.0 or 3.14159265359 (pi lol))
		GetPlayerPos(playa, idX, idY, idZ); //will set the player's, dragID's, coordinates into the variables: idX, idY and idZ
		if(IsPlayerInRangeOfPoint(playerid, 6.0, idX, idY, idZ)) //will check if PLAYERID (the dude typing /drag [id] is even close to the guy you want to drag. the 2.0 is a float standing for how far away you have to be. 2.0 is quite close but not too close in my opinion
		{
			//Now here to make the player follow you there are multiple ways to do it. Timer or a bool variable are good choices in my opinion (not bool variable, it gets mixed up if more players at once use /drag ^^)
			dragTimers[playerid] = SetTimerEx("dragFunction", 2000, true, "ii", playerid, playa); //first is the function, second is the interval 2000ms = 2 seconds, third is if you want it to repeat, "ii" stands for sending two intergers in this case playerid and dragID
			//dragTimers[playerid] means that it will set a "name" for the timer. In this case if the playerid is ID 5, the timer will be called "dragTimers[5]", stored in that one.
			return 1; //once at this point, command will not run anymore below
		}
		else
		{
			return 1; //cancels everything else below
		}
	}
	else
	{
		return 1; //cancels everything else below
	}
}
}


                    	if(strcmp(cmd, "/stopdrag", true) == 0)
	{
	//as playerid is passed into all commands, the name of the dragTimers timer would vary from player to player, meaning only the one doing /drag could do this command (HOPEFULLY!)
	KillTimer(dragTimers[playerid]); //this will kill the timer
	return 1;
}



                    	if(strcmp(cmd, "/acuff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /acuff [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Неможеш да сложиш белизници на себеси"); return 1; }
			            SetPlayerAttachedObject(playa, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
    					SetPlayerSpecialAction(playa, SPECIAL_ACTION_CUFFED);
                        format(string, sizeof(string), "%s ти сложи белизници.", PlayerName(playerid));
                        PlayerInfo[playa][pAcuffed] = 1;
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти сложи белизници на %s.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
       }


                    	if(strcmp(cmd, "/cuff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /cuff [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(PlayerInfo[playerid][pMember] == TEAM_GPD)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			        			    			                             if (ProxDetectorS(4.0, giveplayerid, playerid))
                        {
			            if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Неможеш да сложиш белизници на себеси"); return 1; }
			            SetPlayerAttachedObject(playa, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
    					SetPlayerSpecialAction(playa, SPECIAL_ACTION_CUFFED);
                        format(string, sizeof(string), "%s ти сложи белизници.", PlayerName(playerid));
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти сложи белизници на %s.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
                        }
                        else
                        {
                        format(string, sizeof(string), "Ти не си близо до %s.", PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
                        }
					}
				}
			}
		}
		return 1;
       }
//
            	if(strcmp(cmd, "/ewinner", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ewinner [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pEvent] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
                for(new i = 0; i < MAX_PLAYERS; i++)
                {
					format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~%s",GetName(playa));
				    GameTextForPlayer(i, string, 5000, 3);
				    PlayerInfo[i][pLimit] = 333333;
				    }
					}
				}
			}
		}
		return 1;
       }



            	if(strcmp(cmd, "/givedrug", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givedrug [playerid] [DRUG]");
				return 1;
			}
			new playa;
			new drug;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			drug = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pHeroin] += drug;
                        format(string, sizeof(string), "%s ти даде %d грама дрога.", PlayerName(playerid),drug);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти даде %d грама дрога на %s.", drug, PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
       }
            	if(strcmp(cmd, "/twinner", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /twinner [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pEvent] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						format(string, sizeof(string), "%s Спечели евента.",GetName(playa));
						SendClientMessageToAll(COLOR_RED, string);
					}
				}
			}
		}
		return 1;
       }

        	if(strcmp(cmd, "/giveacc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /giveacc [playerid] [ACC]");
				return 1;
			}
			new playa;
			new acc;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			acc = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pAccount] += acc;
                        format(string, sizeof(string), "%s ти даде $%d в банковя акаунт.", PlayerName(playerid),acc);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти даде $%d в банковя акаунт на %s.", acc, PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
       }
           	if(strcmp(cmd, "/giveep", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /giveep [playerid] [EP]");
				return 1;
			}
			new playa;
			new ep;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			ep = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][Exp] += ep;
                        format(string, sizeof(string), "%s ти даде %d EP.", PlayerName(playerid),ep);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти даде %d EP на %s.", ep, PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
     }
    	if(strcmp(cmd, "/giveeps", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /giveep [playerid] [EPS]");
				return 1;
			}
			new playa;
			new eps;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			eps = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][EpSkill] += eps;
                        format(string, sizeof(string), "%s ти даде %d EP Skill.", PlayerName(playerid),eps);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти даде %d EP Skill на %s.", eps, PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;

	}	if(strcmp(cmd, "/givems", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givems [playerid] [MS]");
				return 1;
			}
			new playa;
			new ms;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			ms = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][MoneySkill] += ms;
                        format(string, sizeof(string), "%s ти даде %d Money Skill.", PlayerName(playerid),ms);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти даде %d Money Skill на %s.", ms, PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
	}
			if(strcmp(cmd, "/giveaccall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /giveaccall [ACC]");
				return 1;
			}
			new acc;
			acc = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					PlayerInfo[i][pAccount] += acc;
				}
                format(string, sizeof(string), "%s даде на всички $%d в банковите акаунти", PlayerName(playerid), acc);
                SendClientMessageToAll(COLOR_GREEN,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ти не си админ!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/givemsall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givemsall [MS]");
				return 1;
			}
			new ms;
			ms = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					PlayerInfo[i][MoneySkill] += ms;
				}
                format(string, sizeof(string), "%s даде %d Money Skill на всички играчи в сървъра", PlayerName(playerid), ms);
                SendClientMessageToAll(COLOR_GREEN,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ти не си админ!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/giveepsall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /giveepsall [EPS]");
				return 1;
			}
			new eps;
			eps = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					PlayerInfo[i][EpSkill] += eps;
				}
                format(string, sizeof(string), "%s даде %d EP SKILL на всички играчи в сървъра", PlayerName(playerid), eps);
                SendClientMessageToAll(COLOR_GREEN,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Ти не си админ!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/setws", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setws [playerid] [WS]");
				return 1;
			}
			new playa;
			new level1;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level1 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][WsSkill] = level1;
                        format(string, sizeof(string), "%s те направи %d WS.", PlayerName(playerid),level1);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти направи %s %d WS.", PlayerName(playa),level1);
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/givelevel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givelevel [playerid] [level]");
				return 1;
			}
			new playa;
			new level1;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level1 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][Level] += level1;
                        SetPlayerScore(playa, PlayerInfo[playa][Level]);
                        format(string, sizeof(string), "%s те направи %d Level.", PlayerName(playerid),level1);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти направи %s %d Level.", PlayerName(playa),level1);
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setep", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setep [playerid] [EP]");
				return 1;
			}
			new playa;
			new exp1;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			exp1 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][Exp] = exp1;
                        format(string, sizeof(string), "%s сложи твоите EP-та да са %d.", PlayerName(playerid), exp1);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти сложи EP-тата на %s да са %d.", PlayerName(playa), exp1);
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setepall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setepall [EP]");
				return 1;
			}
			new exp;
			exp = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					PlayerInfo[i][Exp] = exp;
				}
                format(string, sizeof(string), "%s сложи EP-тата на всички играчи в сървъра да са им %d", PlayerName(playerid), exp);
                SendClientMessageToAll(COLOR_RED,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
           	if(strcmp(cmd, "/giveep", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /giveep [playerid] [EP]");
				return 1;
			}
			new playa;
			new ep;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			ep = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][Exp] += ep;
                        format(string, sizeof(string), "%s ти даде %d EP.", PlayerName(playerid),ep);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти даде %d EP на %s.", ep, PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
     }
	if(strcmp(cmd, "/giveep", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givexp [playerid] [EP]");
				return 1;
			}
			new playa;
			new exp1;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			exp1 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] == 5)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][Exp] += exp1;
                        format(string, sizeof(string), "%s ти даде %d EP.", PlayerName(playerid),exp1);
                        SendClientMessage(playa, COLOR_GREEN, string);
                        format(string, sizeof(string), "Ти даде %d EP на %s.", exp1, PlayerName(playa));
                        SendClientMessage(playerid, COLOR_GREEN, string);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/giveepall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /giveepall [EP]");
				return 1;
			}
			new exp;
			exp = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
                for(new i = 0; i < MAX_PLAYERS; i++)
	            {
					PlayerInfo[i][Exp] += exp;
				}
                format(string, sizeof(string), "%s даде %d EP на всички играчи в сървъра", PlayerName(playerid), exp);
                SendClientMessageToAll(COLOR_GREEN,string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш команда!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/givekill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givekill [Playerid/PartOfName] [kills]");
				return 1;
			}
			new playa;
			new kills1;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			kills1 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						PlayerInfo[playa][pKills] += kills1;
						SetPlayerScore(playa, PlayerInfo[playa][pKills]);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/givekillall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givekillall [kills]");
				return 1;
			}
			new kills1;
			tmp = strtok(cmdtext, idx);
			kills1 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
	   			for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(IsPlayerConnected(i))
					{
						PlayerInfo[i][pKills] += kills1;
						SetPlayerScore(i, PlayerInfo[i][pKills]);
						return 1;
					}
				}
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/unblock", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unblock [name]");
				SendClientMessage(playerid, COLOR_GREY, "Full name, this includes underscores.");
				return 1;
			}
			if (PlayerInfo[playerid][pManage] >= 1)
			{
			    format(string, sizeof(string), "%s.ini",tmp);
	    	    if(dini_Exists(string))
	    	    {
	    	        if(dini_Int(string, "Block") > 0)
	    	        {
	        		    dini_IntSet(string, "Block", 0);
	        		    dini_IntSet(string, "Warnings", 0);
            		    SendRconCommand(string);
            		    SendRconCommand("reloadbans");
                        format(string, 256, "%s е отблокиран от %s.",tmp, PlayerName(playerid));
                       	SendClientMessageToAll(COLOR_GREEN,string);
            		    return 1;
            	    }
            	    else
            	    {
            		    SendRconCommand(string);
            		    SendRconCommand("reloadbans");
            		    return 1;
            	    }
	    	    }
	    	    else
	    	    {
	        	    SendClientMessage(playerid, COLOR_GRAD2, "Невалидно име!");
	    	    }
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new string2[256];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unban [name]");
				SendClientMessage(playerid, COLOR_GREY, "Full name, this includes underscores.");
				return 1;
			}
			if (PlayerInfo[playerid][pManage] >= 1)
			{
			    format(string, sizeof(string), "%s.ini",tmp);
	    	    if(dini_Exists(string))
	    	    {
	    	        if(dini_Int(string, "Ban") > 0)
	    	        {
	        		    dini_IntSet(string, "Ban", 0);
	        		    dini_IntSet(string, "Warnings", 0);
            		    string2 = dini_Get(string, "IP");
            		    format(string, sizeof(string), "unbanip %s", string2);
            		    SendRconCommand(string);
            		    SendRconCommand("reloadbans");
                        format(string, 256, "%s е отбаннат %s.",tmp, PlayerName(playerid));
                       	SendClientMessageToAll(COLOR_GREEN,string);
                    dini_IntSet(string, "Banned", 0);
            		string2 = dini_Get(string, "IP");
            		format(string, sizeof(string), "unbanip %s", string2);
            		SendRconCommand(string);
            		SendRconCommand("reloadbans");
            		    return 1;
            	    }
            	    else
            	    {
            	        SendClientMessage(playerid, COLOR_GRAD2, "Този играч не е баннат.");
            	        string2 = dini_Get(string, "IP");
            		    format(string, sizeof(string), "unbanip %s", string2);
            		    SendRconCommand(string);
            		    SendRconCommand("reloadbans");
            		    	        		    dini_IntSet(string, "Ban", 0);
	        		    dini_IntSet(string, "Warnings", 0);
            		    string2 = dini_Get(string, "IP");
            		    format(string, sizeof(string), "unbanip %s", string2);
            		    SendRconCommand(string);
            		    SendRconCommand("reloadbans");
                        format(string, 256, "%s е отбаннат %s.",tmp, PlayerName(playerid));
                       	SendClientMessageToAll(COLOR_GREEN,string);
                    dini_IntSet(string, "Banned", 0);
            		string2 = dini_Get(string, "IP");
            		format(string, sizeof(string), "unbanip %s", string2);
            		SendRconCommand(string);
            		SendRconCommand("reloadbans");
            		    return 1;
            	    }
	    	    }
	    	    else
	    	    {
	        	    SendClientMessage(playerid, COLOR_GRAD2, "Невалидно име!");
	    	    }
			}
		}
		return 1;
	}
			if(strcmp(cmd, "/nunwarn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
			result[idx - offset] = cmdtext[idx];
			idx++;
			}
			result[idx - offset] = EOS;
			new h,m,s;
			gettime(h,m,s);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /nunwarn [Full nickname] [Reason]");
				return 1;
			}
			if (PlayerInfo[playerid][pManage] >= 1)
			{
			    format(string, sizeof(string), "%s.ini",tmp);
	    	    if(dini_Exists(string))
	    	    {
	    	    	PlayerInfo[giveplayerid][pWarns] -= 0;
	    	    	if(PlayerInfo[giveplayerid][pWarns] -= 1)
            		SendRconCommand(string);
            		SendRconCommand("reloadbans");
		            format(string, 256,"[ %d:%d:%d ] %s Премахна предупреждение на %s's [Reason: %s]",h,m,s, PlayerName(playerid), tmp, (result), pWarns);
		            SendClientMessageToAll(COLOR_GREEN, string);
            		return 1;
	    	    }
	    	    else
	    	    {
	        	    SendClientMessage(playerid, COLOR_GRAD2, "Невалидно име!");
	    	    }
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/nwarn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
			result[idx - offset] = cmdtext[idx];
			idx++;
			}
			result[idx - offset] = EOS;
			new h,m,s;
			gettime(h,m,s);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /nwarn [Full nickname] [Reason]");
				return 1;
			}
			
			
			if (PlayerInfo[playerid][pManage] == 1)
			{
			    format(string, sizeof(string), "%s.ini",tmp);
	    	    if(dini_Exists(string))
	    	    {
	    	    	if(PlayerInfo[giveplayerid][pWarns] += 1)
	    	    	PlayerInfo[giveplayerid][pWarns] += 1;
            		SendRconCommand(string);
            		SendRconCommand("reloadbans");
		            format(string, 256,"[ %d:%d:%d ] %s put warning of %s's [Reason: %s] %d/5",h,m,s, PlayerName(playerid), tmp, (result), pWarns);
		            SendClientMessageToAll(COLOR_GRAD1, string);
            		return 1;
	    	    }
	    	    else
	    	    {
	        	    SendClientMessage(playerid, COLOR_GRAD2, "Невалидно име!");
	    	    }
			}
		}
		return 1;
	}
	
	
//

















//

			if(strcmp(cmd, "/lastonline", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			new h,m,s;
			gettime(h,m,s);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /lastonline [Full Nickname]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] <= 1)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за командата!");
			return 1;
			}
			         				    	new month1[32];
	                	if(PlayerInfo[playerid][pMounth] == 1) { month1 = "Януари"; }
                	else if(PlayerInfo[playerid][pMounth] == 2) { month1 = "февруари"; }
                	else if(PlayerInfo[playerid][pMounth] == 3) { month1 = "Март"; }
                	else if(PlayerInfo[playerid][pMounth] == 4) { month1 = "Април"; }
                	else if(PlayerInfo[playerid][pMounth] == 5) { month1 = "Май"; }
                	else if(PlayerInfo[playerid][pMounth] == 6) { month1 = "Юни"; }
                	else if(PlayerInfo[playerid][pMounth] == 7) { month1 = "Юли"; }
					else if(PlayerInfo[playerid][pMounth] == 8) { month1 = "Август"; }
					else if(PlayerInfo[playerid][pMounth] == 9) { month1 = "Септември"; }
					else if(PlayerInfo[playerid][pMounth] == 10) { month1 = "Октомври"; }
					else if(PlayerInfo[playerid][pMounth] == 11) { month1 = "Ноември"; }
					else if(PlayerInfo[playerid][pMounth] == 12) { month1 = "Декември"; }
						 format(string, sizeof(string), "%s.ini",tmp);
	    	    if(dini_Exists(string))
	    	    {
	    	    new tx1[256];
	    	    new tx2[256];
	    	    new tx3[256];
	    	    new tx4[256];
	    	    new tx0[256];
	    	    new tx5[256];
	      tx0 = dini_Get(tmp, "pSekundi");
	      tx1 = dini_Get(tmp, "pMinuti");
          tx2 = dini_Get(tmp, "p4as");
          tx3 = dini_Get(tmp,"pDay");
          tx4 = dini_Get(tmp, "pMounth");
		  tx5 = dini_Get(tmp, "pYear");
		    	format(string, sizeof(string), "{33CC00}В акаунта %s е влизано последно на %d.%d.%d г. в %d:%d:%d часа!",tmp,tx3,tx4,tx5,tx1,tx2,tx3);
	    		SendClientMessage(playerid, COLOR_WHITE,string);
	    		}
}
		return 1;
	}

	
	
	if(strcmp(cmd, "/rban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new string2[256];
			tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
			result[idx - offset] = cmdtext[idx];
			idx++;
			}
			result[idx - offset] = EOS;
			new h,m,s;
			gettime(h,m,s);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /rban [Full nickname] [Reason]");
				return 1;
			}
			
			
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    format(string, sizeof(string), "%s.ini",tmp);
	    	    if(dini_Exists(string))
	    	    {
	        	    dini_IntSet(string, "Banned", 1);
	        	    dini_IntSet(string, "Block", 1);
            		string2 = dini_Get(string, "IP");
            		format(string, sizeof(string), "banip %s", string2);
            		SendRconCommand(string);
            		SendRconCommand("reloadbans");
		            

		            
            		return 1;
	    	    }
	    	    else
	    	    {
	        	    SendClientMessage(playerid, COLOR_GRAD2, "Невалидно име!");
	    	    }
			}
		}
		return 1;
	}
	
	
	
	
	
		if(strcmp(cmd, "/fakeban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new string2[256];
			tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
			result[idx - offset] = cmdtext[idx];
			idx++;
			}
			result[idx - offset] = EOS;
			new h,m,s;
			gettime(h,m,s);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fakeban [Full nickname] [Reason]");
				return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
		            format(string, 256,"[ %d:%d:%d ] %s banned %s's IP and Account [Reason: %s]",h,m,s, PlayerName(playerid), tmp, (result));
		            SendClientMessageToAll(COLOR_RED, string);
			}
		}
		return 1;
	}

	
	
	
	
	
	
	
	
	

	if(strcmp(cmd, "/nban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
			result[idx - offset] = cmdtext[idx];
			idx++;
			}
			result[idx - offset] = EOS;
			new h,m,s;
			gettime(h,m,s);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /nban [Full nickname] [Reason]");
				return 1;
			}
			
																				if(PlayerInfo[giveplayerid][pAWarns] >= 3)
						{
						format(string, sizeof(string), "Ти имаш 3 админ предупреждения и не можеш да използваш тази команда");
						SendClientMessageToAll(COLOR_RED, string);
						return 1;
						}
						
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
			    format(string, sizeof(string), "%s.ini",tmp);
	    	    if(dini_Exists(string))
	    	    {
	        	    dini_IntSet(string, "Block", 1);
		            format(string, 256,"ADMIN: %s блокира акаунта %s [Reason: %s]",PlayerName(playerid), tmp, (result));
		            SendClientMessageToAll(COLOR_RED, string);
            		return 1;
	    	    }
	    	    else
	    	    {
	        	    SendClientMessage(playerid, COLOR_GRAD2, "Невалидно име!");
	    	    }
			}
		}
		return 1;
	}
	//
	//
		if(strcmp(cmd, "/houseveh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pHouseO] == 0)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /houseveh [carid] [color1] [color2]");
				return 1;
			}
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "Номерата на превозните средства трябва да са от 400 до 612!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /houseveh [carid] [color1] [color2]");
				return 1;
			}
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 || color1 > 255) { SendClientMessage(playerid, COLOR_GREY, "Номерата на цветовете трябва да са от 0 до 255!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /houseveh [carid] [color1] [color2]");
				return 1;
			}
			new color2;
			color2 = strval(tmp);
			if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, COLOR_GREY, "Номерата на цветовете трябва да са от 0 до 255!"); return 1; }
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
		}
		return 1;
	}


	if(strcmp(cmd, "/veh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pAdmin] <= 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /veh [carid] [color1] [color2]");
				return 1;
			}
			new car;
			car = strval(tmp);
			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "Номерата на превозните средства трябва да са от 400 до 612!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /veh [carid] [color1] [color2]");
				return 1;
			}
			new color1;
			color1 = strval(tmp);
			if(color1 < 0 || color1 > 255) { SendClientMessage(playerid, COLOR_GREY, "Номерата на цветовете трябва да са от 0 до 255!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /veh [carid] [color1] [color2]");
				return 1;
			}
			new color2;
			color2 = strval(tmp);
			if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, COLOR_GREY, "Номерата на цветовете трябва да са от 0 до 255!"); return 1; }
			new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
				new carid = CreateVehicle(car, X,Y,Z, 0.0, color1, color2, -1);
			LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
			CreatedCars[CreatedCar] = carid;
			CreatedCar ++;
			PutPlayerInVehicle(playerid, carid, 0);
			new vehicle;
            vehicle = GetPlayerVehicleID(playerid);
			format(string, sizeof(string), "Vehicle ID %d spawned!",vehicle);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	
	
	
	
	
		if(strcmp(cmd, "/tires", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pDonateRank] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
			    return 1;
			}
			if (PlayerInfo[playerid][pO3] == 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Тази команда ти е забранена!");
			    return 1;
			}
			if(PlayerInfo[playerid][pFixme] <= 0)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
				    	new Panels, Doors, Lights, Tires;
GetVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors, Lights, Tires);
UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), Panels, Doors, Lights, (Tires | 0b0101));
				    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				    SendClientMessage(playerid, COLOR_WHITE, "* Вие поправихте вашето превозно средство *");
				    PlayerInfo[playerid][pFixme] = 5*60;
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Не е изминало нужното време от последното използване на командата!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/fix", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pDonateRank] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права за да ползваш командата!");
			    return 1;
			}
			if (PlayerInfo[playerid][pO3] == 1)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Тази команда ти е забранена!");
			    return 1;
			}
			if(PlayerInfo[playerid][pFixme] <= 0)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
				    SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
				    RepairVehicle(GetPlayerVehicleID(playerid));
				    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
				    PlayerInfo[playerid][pFixme] = 5*60;
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Не е изминало нужното време от последното използване на командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/fixveh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	       	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			    return 1;
			}
			if(IsPlayerInAnyVehicle(playerid))
			{
   				SetVehicleHealth(GetPlayerVehicleID(playerid), 1000.0);
			    RepairVehicle(GetPlayerVehicleID(playerid));
			    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			    SendClientMessage(playerid, COLOR_WHITE, "* Вие поправихте вашето превозно средство *");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/destroycar", true)== 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 3)
	    {
	        new removeVeh = GetPlayerVehicleID(playerid);
            SendClientMessage(playerid, COLOR_GRAD1, "Ти унищожи превозното средство.");
            DestroyVehicle(removeVeh);
	        return 1;
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
		}
	}
    if(strcmp(cmd, "/destroycars", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] <= 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			    return 1;
			}
			for(new i = 0; i < CreatedCar; i++)
    	    {
			    DestroyVehicle(CreatedCars[i]);
			}
			CreatedCar = 0;
			SendClientMessage(playerid, COLOR_GREY, "Всички спаунати превозни средства са унищожени!");
		}
		return 1;
	}
//
	if(strcmp(cmd, "/buywep", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(IsPlayerInRangeOfPoint(playerid, 6, 295.8774,-38.3258,1001.5156) || IsPlayerInRangeOfPoint(playerid, 3, 2699.5886,-2849.0471,81.7668))
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /buywep [weaponid]");
				return 1;
			}
			new gun;
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /buywep [weaponid]");
				SendClientMessage(playerid, COLOR_GRAD2, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
				SendClientMessage(playerid, COLOR_GRAD2, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
				SendClientMessage(playerid, COLOR_GRAD2, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
				SendClientMessage(playerid, COLOR_GRAD2, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9) 33: Country Rifle");
				SendClientMessage(playerid, COLOR_GRAD2, "34: Sniper Rifle");
				return 1;
			}
						if(PlayerInfo[playerid][pCash] >= 94005)
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			if (gun > 1||gun < 34)
			{
			            new weaponname[32];
			            GetWeaponName(gun, weaponname, sizeof(weaponname));
			            GivePlayerGun(playerid, gun);
			            HouseInfo[h][Earnings] += 94005;
			            SavePlayerHouse(h);
			            GivePlayerMoney(playerid,-94005);
}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Невалидно Gun ID.");
			}
}
}
		return 1;
	}
//
	if(strcmp(cmd, "/giveweaponevent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pEvent] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
            {
              SendClientMessage(playerid, COLOR_GREY, "Нямаш права за да ползваш командата!");
              return 1;
            }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /giveweaponevent [Playerid/PartOfName] [weaponid]");
				return 1;
			}
			new giveplayerid2;
			new gun;
			giveplayerid2 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /giveweaponevent [Playerid/PartOfName] [weaponid]");
				SendClientMessage(playerid, COLOR_GRAD2, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
				SendClientMessage(playerid, COLOR_GRAD2, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
				SendClientMessage(playerid, COLOR_GRAD2, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
				SendClientMessage(playerid, COLOR_GRAD2, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9) 33: Country Rifle");
				SendClientMessage(playerid, COLOR_GRAD2, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
				SendClientMessage(playerid, COLOR_GRAD2, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
				return 1;
			}
			if (gun > 1||gun < 47)
			{
			    if(IsPlayerConnected(giveplayerid2))
			    {
			        if(giveplayerid2 != INVALID_PLAYER_ID)
			        {
			            if(gun == 21)
			            {
			                SetPlayerSpecialAction(giveplayerid2, SPECIAL_ACTION_USEJETPACK);
			                format(string, sizeof(string), "  Ти даде JetPack на %s", PlayerName(giveplayerid2));
			                SendClientMessage(playerid, COLOR_GRAD2, string);
			                return 1;
			            }
			            new weaponname[32];
			            GetWeaponName(gun, weaponname, sizeof(weaponname));
			            GivePlayerGun(giveplayerid2, gun);
			            format(string, sizeof(string), "* Ти даде оръжие %s на %s *", weaponname, PlayerName(giveplayerid2));
                        SendClientMessage(playerid, COLOR_YELLOW, string);
			            format(string, sizeof(string), "* %s ти даде оръжие %s *", PlayerName(playerid), weaponname);
			            SendClientMessage(giveplayerid2, COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Невалидно Gun ID.");
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/givegun", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 4)
            {
              SendClientMessage(playerid, COLOR_GREY, "Нямаш права за да ползваш командата!");
              return 1;
            }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givegun [Playerid/PartOfName] [weaponid]");
				return 1;
			}
			new giveplayerid2;
			new gun;
			giveplayerid2 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givegun [Playerid/PartOfName] [weaponid]");
				SendClientMessage(playerid, COLOR_GRAD2, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
				SendClientMessage(playerid, COLOR_GRAD2, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
				SendClientMessage(playerid, COLOR_GRAD2, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
				SendClientMessage(playerid, COLOR_GRAD2, "25: Shotgun 26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 29: AK-47 31: M4 32: Tec-9) 33: Country Rifle");
				SendClientMessage(playerid, COLOR_GRAD2, "34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge 40: Detonator");
				SendClientMessage(playerid, COLOR_GRAD2, "41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Vision 46: Parachute");
				return 1;
			}
			if (gun > 1||gun < 47)
			{
			    if(IsPlayerConnected(giveplayerid2))
			    {
			        if(giveplayerid2 != INVALID_PLAYER_ID)
			        {
			            if(gun == 21)
			            {
			                SetPlayerSpecialAction(giveplayerid2, SPECIAL_ACTION_USEJETPACK);
			                format(string, sizeof(string), "  Ти даде JetPack на %s", PlayerName(giveplayerid2));
			                SendClientMessage(playerid, COLOR_GRAD2, string);
			                return 1;
			            }
			            new weaponname[32];
			            GetWeaponName(gun, weaponname, sizeof(weaponname));
			            GivePlayerGun(giveplayerid2, gun);
			            format(string, sizeof(string), "* %s ти даде оръжие %s *", PlayerName(giveplayerid2),weaponname);
				        SendClientMessage(giveplayerid2, COLOR_YELLOW, string);
			            format(string, sizeof(string), "Gun: %s даде оръжие %s на %s!", PlayerName(playerid), weaponname,PlayerName(giveplayerid2));
						SendAdminMessage(COLOR_RED, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Невалидно Gun ID.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/weather", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 5)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Използвай: /weather [weatherid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Weather ID трябва да е от 0 до 45!"); return 1; }
			SetPlayerWeather(playerid, weather);
			SendClientMessage(playerid, COLOR_YELLOW, "   Времето е сменено!");
		}
		return 1;
	}
	if(strcmp(cmd, "/weatherall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 5)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Използвай: /weatherall [weatherid]");
			    return 1;
			}
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Weather ID трябва да е от 0 до 45!"); return 1; }
			SetWeather(weather);
			SendClientMessage(playerid, COLOR_YELLOW, "Времето е сменено на всички играчи в сървъра!");
		}
		return 1;
	}

			if(strcmp(cmd, "/makeevent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makeevent [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pAdmin] >= 6 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
 						PlayerInfo[para1][pEvent] = 1;
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* Вие вече сте Event админ. Поздравления! *", PlayerName(playerid));
						SendClientMessage(para1, COLOR_BL1, string);
						format(string, sizeof(string), "* %s вече е Event админ.*", giveplayer);
						SendClientMessageToAll(COLOR_GREEN, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	        if (strcmp("/afon", cmdtext, true) == 0)
        {
        			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
                Act[playerid] = 1;
                GameTextForPlayer(playerid, "~w~Anti fall off bike is now ~g~on", 5000, 5);
                }
                return 1;
        }
        if (strcmp("/afoff", cmdtext, true) == 0)
        {
        			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
                GameTextForPlayer(playerid, "~w~Anti fall off bike is now ~r~off", 5000, 5);
                Act[playerid] = 0;
                }
                return 1;
        }
	
					if(strcmp(cmd, "/isms", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /isms [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
									        new plevel = PlayerInfo[para1][MoneySkill];
						format(string, sizeof(string), "%s - Money Skill: %d", giveplayer,plevel);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
						if(strcmp(cmd, "/ises", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ises [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
									        new plevel = PlayerInfo[para1][EpSkill];
						format(string, sizeof(string), "%s - EP Skill: %d", giveplayer,plevel);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
				if(strcmp(cmd, "/islevel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /islevel [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
									        new plevel = PlayerInfo[para1][Level];
						format(string, sizeof(string), "%s - Level: %d", giveplayer,plevel);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
			if(strcmp(cmd, "/isgfc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /isgfc [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                    	new admin[32];
                	if(PlayerInfo[para1][pGFC] == 1) { admin = "Да"; }
                	else if(PlayerInfo[para1][pGFC] == 0) { admin = "Не"; }
						format(string, sizeof(string), "%s - Gold Play Fuel Company %s", giveplayer,admin);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
		if(strcmp(cmd, "/isleader", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /isleader [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                    	new admin[32];
                	if(PlayerInfo[para1][pRank] == 6 || PlayerInfo[para1][pTest] >= 1) { admin = "Да"; }
                	else if(PlayerInfo[para1][pRank] <= 5) { admin = "Не"; }
						format(string, sizeof(string), "%s - Лидер %s", giveplayer,admin);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
					if(strcmp(cmd, "/scriptercolors", true) == 0)
	{
			SendClientMessage(playerid, COLOR_GRAD1, "{FF0066} FF0066 - {FF0099} FF0099 - {FF00CC} - {FF00FF} FF00FF");
		return 1;
	}


			if(strcmp(cmd, "/restahouse", true) == 0)
	{
			if (PlayerInfo[playerid][pAdmin] >= 6 || IsPlayerAdmin(playerid))
			{
						format(string, sizeof(string), "ADMIN: %s промени цената на вс. къщи", PlayerName(playerid));
						SendClientMessageToAll(COLOR_WHITE, string);
						for(new h; h<MAX_HOUSES; h++){
     	if(HouseInfo[h][hLevel] == 1 && HouseInfo[h][Bus] == 0)
     	{
format(HouseInfo[h][hSell], 24, "1850000");
HouseInfo[h][hSell] = 1850000;
     	}
     	      if(HouseInfo[h][hLevel] == 2 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "2300000");
HouseInfo[h][hSell] = 2300000;
      }
      if(HouseInfo[h][hLevel] == 3 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "3400000");
HouseInfo[h][hSell] = 3400000;
      }
      if(HouseInfo[h][hLevel] == 4 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "4470000");
HouseInfo[h][hSell] = 4470000;
      }
      if(HouseInfo[h][hLevel] == 5 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "5400000");
HouseInfo[h][hSell] = 5400000;
      }
      if(HouseInfo[h][hLevel] == 6 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "6370000");
HouseInfo[h][hSell] = 6370000;
      }
      if(HouseInfo[h][hLevel] == 7 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "7470000");
HouseInfo[h][hSell] = 7470000;
      }
      if(HouseInfo[h][hLevel] == 8 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "8470000");
HouseInfo[h][hSell] = 8470000;
      }
      if(HouseInfo[h][hLevel] == 9 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "9570000");
HouseInfo[h][hSell] = 9570000;
      }
      if(HouseInfo[h][hLevel] == 10 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "10470000");
HouseInfo[h][hSell] = 10470000;
      }
      if(HouseInfo[h][hLevel] == 11 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "11550000");
HouseInfo[h][hSell] = 11550000;
      }
      if(HouseInfo[h][hLevel] == 12 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "26550000");
HouseInfo[h][hSell] = 26550000;
      }
      if(HouseInfo[h][hLevel] == 13 && HouseInfo[h][Bus] == 0)
      {
format(HouseInfo[h][hSell], 24, "13560000");
HouseInfo[h][hSell] = 13560000;
      }
						}
						}
		return 1;
	}


	
		if(strcmp(cmd, "/restabiz", true) == 0)
	{
			if (PlayerInfo[playerid][pAdmin] >= 6 || IsPlayerAdmin(playerid))
			{
						format(string, sizeof(string), "ADMIN: %s промени имената,Payout на вс. бизнеси", PlayerName(playerid));
						SendClientMessageToAll(COLOR_WHITE, string);
						for(new h; h<MAX_HOUSES; h++){
     	if(HouseInfo[h][hLevel] == 1 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "24/7");
format(HouseInfo[h][bPay], 24, "2500");
HouseInfo[h][bPay] = 2500;
     	}
     	      if(HouseInfo[h][hLevel] == 2 && HouseInfo[h][Bus] == 1)
      {
     	format(HouseInfo[h][hName], 24, "Casino");
format(HouseInfo[h][bPay], 24, "3500");
HouseInfo[h][bPay] = 3500;
      }
      if(HouseInfo[h][hLevel] == 3 && HouseInfo[h][Bus] == 1)
      {
     	format(HouseInfo[h][hName], 24, "Ammu-Nation");
format(HouseInfo[h][bPay], 24, "4500");
HouseInfo[h][bPay] = 4500;
      }
      if(HouseInfo[h][hLevel] == 4 && HouseInfo[h][Bus] == 1)
      {
     	format(HouseInfo[h][hName], 24, "Horserace");
format(HouseInfo[h][bPay], 24, "5000");
HouseInfo[h][bPay] = 5000;
      }
      if(HouseInfo[h][hLevel] == 5 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Hotel");
format(HouseInfo[h][bPay], 24, "5500");
HouseInfo[h][bPay] = 5500;
      }
      if(HouseInfo[h][hLevel] == 6 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Sex Shop");
format(HouseInfo[h][bPay], 24, "6200");
HouseInfo[h][bPay] = 6200;
      }
      if(HouseInfo[h][hLevel] == 7 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Clothes");
format(HouseInfo[h][bPay], 24, "6500");
HouseInfo[h][bPay] = 6500;
      }
      if(HouseInfo[h][hLevel] == 8 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Bar");
format(HouseInfo[h][bPay], 24, "7500");
HouseInfo[h][bPay] = 7500;
      }
      if(HouseInfo[h][hLevel] == 9 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Burger Shot");
format(HouseInfo[h][bPay], 24, "8500");
HouseInfo[h][bPay] = 8500;
      }
      if(HouseInfo[h][hLevel] == 10 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Gym");
format(HouseInfo[h][bPay], 24, "8900");
HouseInfo[h][bPay] = 8900;
      }
      if(HouseInfo[h][hLevel] == 11 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "DM BIZ");
format(HouseInfo[h][bPay], 24, "9500");
HouseInfo[h][bPay] = 9500;
      }
      if(HouseInfo[h][hLevel] == 12 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Car School");
format(HouseInfo[h][bPay], 24, "125000");
HouseInfo[h][bPay] = 125000;
      }
      if(HouseInfo[h][hLevel] == 13 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "None");
format(HouseInfo[h][bPay], 24, "500");
HouseInfo[h][bPay] = 500;
      }
      if(HouseInfo[h][hLevel] == 14 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Advert");
format(HouseInfo[h][bPay], 24, "13500");
HouseInfo[h][bPay] = 13500;
      }
            if(HouseInfo[h][hLevel] == 15 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Drug Factory");
format(HouseInfo[h][bPay], 24, "14500");
HouseInfo[h][bPay] = 14500;
      }
      if(HouseInfo[h][hLevel] == 16 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Barber");
format(HouseInfo[h][bPay], 24, "14500");
HouseInfo[h][bPay] = 14500;
      }
      if(HouseInfo[h][hLevel] == 17 && HouseInfo[h][Bus] == 1)
      {
format(HouseInfo[h][hName], 24, "Tatoo");
format(HouseInfo[h][bPay], 24, "14500");
HouseInfo[h][bPay] = 14500;
      }
       if(HouseInfo[h][hLevel] == 18 && HouseInfo[h][Bus] == 1)
      {
      format(HouseInfo[h][hName], 24, "Strip Club");
format(HouseInfo[h][bPay], 24, "14500");
HouseInfo[h][bPay] = 14500;
      }
      if(HouseInfo[h][hLevel] == 19 && HouseInfo[h][Bus] == 1)
      {
      format(HouseInfo[h][hName], 24, "Special 1");
format(HouseInfo[h][bPay], 24, "1450010");
HouseInfo[h][bPay] = 1450010;
      }
      SavePlayerHouse(h);
						}
						}
		return 1;
	}
	
		if(strcmp(cmd, "/isadmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /isadmin [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                    	new admin[32];
                	if(PlayerInfo[para1][pAdmin] >= 1 || PlayerInfo[para1][pTest] >= 1) { admin = "Да"; }
                	else if(PlayerInfo[para1][pAdmin] == 0) { admin = "Не"; }
						format(string, sizeof(string), "%s - Admin %s", giveplayer,admin);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}



		if(strcmp(cmd, "/isvip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /isvip [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                    	new admin[32];
                	if(PlayerInfo[para1][pDonateRank] >= 1) { admin = "Да"; }
                	else if(PlayerInfo[para1][pDonateRank] == 0) { admin = "Не"; }
						format(string, sizeof(string), "%s - VIP %s", giveplayer,admin);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}






		if(strcmp(cmd, "/cbccheck", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /cbccheck [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
			
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s - CB Chanel %d", giveplayer, PlayerInfo[playerid][pCBC]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}



		if(strcmp(cmd, "/isjailed", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /isjailed [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                    	new admin[32];
						if(PlayerInfo[para1][pJailed] == 0)
						{
						format(string, sizeof(string), "Този играч не е в админ затвора!", giveplayer);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						}
						if(PlayerInfo[para1][pJailed] >= 1)
						{
						new admin[90];
                	if(PlayerInfo[para1][pJailed] == 1) { admin = "Използва превозни средства от работа за собствени цели"; }
                	else if(PlayerInfo[para1][pJailed] == 2) { admin = "Прочети правилата"; }
                	else if(PlayerInfo[para1][pJailed] == 3) { admin = "Спам"; }
                	else if(PlayerInfo[para1][pJailed] == 4) { admin = "Бие ADMIN ON DUTY"; }
						format(string, sizeof(string), "Този играч е в админ затвора и причината е - %s!", admin);
						SendClientMessage(playerid, COLOR_RED, string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}





	
		if(strcmp(cmd, "/isevent", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /isevent [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                    	new admin[32];
                	if(PlayerInfo[para1][pEvent] == 1) { admin = "Да"; }
                	else if(PlayerInfo[para1][pEvent] == 0) { admin = "Не"; }
						format(string, sizeof(string), "%s - Event %s", giveplayer,admin);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
		if(strcmp(cmd, "/ismanage", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ismanage [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                    	new admin[32];
                	if(PlayerInfo[para1][pManage] == 1) { admin = "Да"; }
                	else if(PlayerInfo[para1][pManage] == 0) { admin = "Не"; }
						format(string, sizeof(string), "%s - Manage %s", giveplayer,admin);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
				if(strcmp(cmd, "/checkawarns", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /checkawarns [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 2 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "%s Има - %d Warns", giveplayer,PlayerInfo[para1][pAWarns]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
			if(strcmp(cmd, "/checkwarns", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /checkwarns [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 2 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));

						format(string, sizeof(string), "%s Има - %d Warns", giveplayer,PlayerInfo[para1][pWarns]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
			if(strcmp(cmd, "/checkbank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /checkbank [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 2 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						
						format(string, sizeof(string), "{336666}Играчът %s има $%d в неговата обща сума", giveplayer,PlayerInfo[para1][pAccount]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
	
	
	
	
	
	
			if(strcmp(cmd, "/ismuted", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ismuted [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 1 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						if(PlayerInfo[para1][pMuted] == 0)
						{
						format(string, sizeof(string), "Този играч не е заглушен!", giveplayer);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						}
						if(PlayerInfo[para1][pMuted] == 1)
						{
						new admin[78];
                	if(PlayerInfo[para1][pMuteReason] == 1) { admin = "Псуване/Обиждане"; }
                	else if(PlayerInfo[para1][pMuteReason] == 2) { admin = "Лъже играчите"; }
                	else if(PlayerInfo[para1][pMuteReason] == 3) { admin = "Спам"; }
                	else if(PlayerInfo[para1][pMuteReason] == 4) { admin = "Спам/Псуване/Обиждане"; }
                	else if(PlayerInfo[para1][pMuteReason] == 5) { admin = "Грешно използване на лидерския чат"; }
						format(string, sizeof(string), "Този играч е заглушен и причината е - %s!", admin);
						SendClientMessage(playerid, COLOR_RED, string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
	
	
			if(strcmp(cmd, "/istogged", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /istogged [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			if (PlayerInfo[playerid][pAdmin] >= 3 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                    	new admin[32];
                	if(PlayerInfo[para1][pHide] == 1 || PlayerInfo[para1][pHide2] == 1) { admin = "Да"; }
                	else if(PlayerInfo[para1][pHide] == 0 || PlayerInfo[para1][pHide2] == 0) { admin = "Не"; }
						format(string, sizeof(string), "%s - Скрил чат %s", giveplayer,admin);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
			if(strcmp(cmd, "/makemanage", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makemanage [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pAdmin] >= 6 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
 						PlayerInfo[para1][pManage] = 1;
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "* Вие вече сте Manage Admin. Поздравления! *", PlayerName(playerid));
						SendClientMessage(para1, COLOR_BL1, string);
						format(string, sizeof(string), "* %s вече е Manage Admin.*", giveplayer);
						SendClientMessageToAll(COLOR_GREEN, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/getadmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /getadmin [playerid]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						PlayerInfo[para1][pAdmin] = 0;
						PlayerInfo[para1][pTest] = 0;
						PlayerInfo[para1][pManage] = 0;
						PlayerInfo[para1][pEvent] = 0;
						level = strval(tmp);
						format(string, sizeof(string), "*%s премахна твоите администраторски права. *", PlayerName(playerid));
						SendClientMessage(para1, COLOR_ORANGE, string);
						format(string, sizeof(string), "* Ти премахна администраторските правата на %s *", giveplayer,level);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "* %s премахна админстраторските правата на %s *", PlayerName(playerid), giveplayer);
						SendClientMessageToAll(COLOR_ORANGE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш командата!");
			}
		}
		return 1;
	}
				if(strcmp(cmd, "/getvip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /getvip [playerid]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						PlayerInfo[para1][pDonateRank] = 0;
						level = strval(tmp);
						format(string, sizeof(string), "*%s премахна твоите VIP права. *", PlayerName(playerid));
						SendClientMessage(para1, COLOR_RED, string);
						format(string, sizeof(string), "* Ти премахна VIP правата на %s *", giveplayer,level);
						SendClientMessage(playerid, COLOR_RED, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
			if(strcmp(cmd, "/getmanage", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /getmanage [playerid]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6 || IsPlayerAdmin(playerid))
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						PlayerInfo[para1][pManage] = 0;
						level = strval(tmp);
						format(string, sizeof(string), "*%s премахна твоите Manage права. *", PlayerName(playerid));
						SendClientMessage(para1, COLOR_BL1, string);
						format(string, sizeof(string), "* Ти премахна Manage правата на %s *", giveplayer,level);
						SendClientMessage(playerid, COLOR_GREEN, string);
						format(string, sizeof(string), "* %s премахна Manage правата на %s *", PlayerName(playerid), giveplayer);
						SendClientMessageToAll(COLOR_GREEN, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	//
			if(strcmp(cmd, "/hitman", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /hitman [Playerid/PartOfName] [Пари]");
				return 1;
			}
			new para1;
			new m;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			m = strval(tmp);
			if(m < 1 || m > 100000000) return SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са от 100 до 100 000 000.");
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
			        						        			if (PlayerInfo[playerid][pCash] >= m)
			{
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						PlayerInfo[para1][pHM] = m;
						PlayerInfo[para1][pHitman] = 1;
						GivePlayerCash(playerid,-m);
						format(string, sizeof(string), "HITMAN:%s даде цена за главата на %s които го убие ще получи $%d", PlayerName(playerid), PlayerName(para1), m);
						SendClientMessageToAll(COLOR_RED, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Трябва да имаш тези пари!");
			}
		}
  }
		return 1;
	}
	//
	
			if(strcmp(cmd, "/duel", true) == 0)
	{
	if(PlayerInfo[playerid][aDuty] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си ADMIN ON DUTY!");
		return 1;
	}
 		if(IsPlayerConnected(playerid))
   		{
    		tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /duel [playerid] [money]");
				return 1;
			}
			new duel = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			duel = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
	    				if(giveplayerid != INVALID_PLAYER_ID)
					    {
					    	if (PlayerInfo[playerid][pCash] >= duel)
			{
								    	if (PlayerInfo[playerid][pDuelMoney] == 0)
			{
											    	if (PlayerInfo[giveplayerid][pDuelMoney] == 0)
			{
								    	if (PlayerInfo[giveplayerid][pCash] >= duel)
			{
			                 if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да поканиш себеси на дуел"); return 1; }
                            if(duel < 100 || duel > 1000000) return SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са от 100 до 1 000 000.");
			                new string2[256];
							new pName[MAX_PLAYER_NAME];
                            GetPlayerName(playerid, pName, 24);
                           	format(string2, sizeof(string2), "Duel: %s те покани на дуел със залог $%d. Напиши /yes за да приемеш или /no за да откажеш!", pName ,duel);
	                        SendClientMessage(giveplayerid, COLOR_YELLOW,string2);
	                        format(string2, sizeof(string2), "Duel: Ти изпрати покана за дуел на %s. Ако изкаш да отмениш поканата си напиши /cduel", GetName(giveplayerid), duel);
	                        SendClientMessage(playerid, COLOR_YELLOW,string2);
							PlayerInfo[giveplayerid][pDuel] = duel;
							PlayerInfo[giveplayerid][pDuelMoney] = 1;
							PlayerInfo[playerid][pDuelMoney] = 1;
							PlayerInfo[playerid][pDuel] = duel;
							PlayerInfo[giveplayerid][pDuelH] = playerid;
							PlayerInfo[playerid][pDuelMoney2] = 1;

							}
else
{
new string2[256];
	                        format(string2, sizeof(string2), "Този играч няма достатъчно пари.");
	                        SendClientMessage(playerid, COLOR_GRAD1,string2);
}

							}
else
{
new string2[256];
	                        format(string2, sizeof(string2), "Този играч е поканен на дуел.");
	                        SendClientMessage(playerid, COLOR_GRAD1,string2);
}
						}
					}
	 				else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Ти си поканил някой на дуел");
					}
											}
	 				else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Ти си поканил/поканен на дуел");
					}
					}
	 				else
					{
						SendClientMessage(playerid, COLOR_GRAD1, " Невалидно ID.");
					}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/transfer", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
   		{
    		tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /transfer [playerid] [money]");
				return 1;
			}
			new duel = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			duel = strval(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
	    				if(giveplayerid != INVALID_PLAYER_ID)
					    {
								    	if (PlayerInfo[playerid][pAccount] >= duel)
			{
			                 if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да дадеш на себеси пари!"); return 1; }
                            if(duel < 1 || duel > 1000000) return SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са от 1 до 1 000 000 !");
			                new string2[256];
							new pName[MAX_PLAYER_NAME];
                            GetPlayerName(playerid, pName, 24);
                           	format(string2, sizeof(string2), "%s изпрати пари в твоята обща сума на стойност $%d.",GetName(playerid), duel);
	                        SendClientMessage(giveplayerid, COLOR_YELLOW,string2);
	                        format(string2, sizeof(string2), "Ти изпрати $%d в общата сума на %s.",duel ,GetName(giveplayerid));
	                        SendClientMessage(playerid, COLOR_WHITE,string2);
	                        PlayerInfo[playerid][pAccount] -= duel;
	                        PlayerInfo[giveplayerid][pAccount] += duel;

		}
		}
		}
		}
		else
		{
		SendClientMessage(playerid,COLOR_GRAD1,"Нямаш толкова пари в общата си сума!");
		}
		return 1;
	}
	
		if(strcmp(cmd, "/ignore", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ignore [Playerid/PartOfName]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						format(string, sizeof(string), "%s те игнорира от личните си съобщения!", PlayerName(playerid));
						SendClientMessage(para1, COLOR_YELLOW, string);
						format(string, sizeof(string), "Ти игнорира %s от твоите лични съобщения!", PlayerName(para1));
						SendClientMessage(playerid, COLOR_YELLOW, string);
pIgnoringPlayer[playerid][para1] = true;

					}
				}
		}
		return 1;
	}
	
	
			if(strcmp(cmd, "/unignore", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unignore [Playerid/PartOfName]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						pIgnoringPlayer[playerid][para1] = false;
						format(string, sizeof(string), "%s премахна игнорирането от неговите лични съобщения!", PlayerName(playerid));
						SendClientMessage(para1, COLOR_YELLOW, string);
						format(string, sizeof(string), "Ти премахна игнорирането на %s от твоите лични съобщения!", PlayerName(para1));
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
		}
		return 1;
	}
	
	
	
			if(strcmp(cmd, "/tunehelp", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_YELLOW, "TUNE HELP:Има един тунинг гараж в Los Santos и един в Las Venturas.");
		    SendClientMessage(playerid, COLOR_YELLOW, "TUNE HELP:За да тунингуваш твоето превозно средство трябва да си VIP или да си до гараж,командата е /tune.");
		}
		return 1;
	}
	
	
	
				if(strcmp(cmd, "/gangs", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			    SendClientMessage(playerid, COLOR_RED, "Criminal: Grove, Ballas, Vagos, VIP, Aztec, Boyz, VCripz, SoA");
			    SendClientMessage(playerid, COLOR_RED, "Criminal: BlackMafia, Bulgarian Mafia, MS13,  Rifa,DPK,Yakuza");
                SendClientMessage(playerid, COLOR_RED, "Criminal: ThugLife, AB,Boys");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Legal: GPD, FBI");
                SendClientMessage(playerid, COLOR_WHITE, "Netural: Civilian");
		}
		return 1;
	}
	
	    if(strcmp(cmd, "/changepass", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid])
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /changepass [newpass]");
					return 1;
				}
				if(strfind( result , "," , true ) == -1)
    			{
		   			strmid(PlayerInfo[playerid][pKey], (result), 0, strlen((result)), 255);
					format(string, sizeof(string), "SERVER: Ти промени твоята парола на {FFFF00}%s{FFFFFF}.", (result));
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Невалиден символ: , !");
				}
			}
		}
		return 1;
	}
	
	
	
	
	
		if(strcmp(cmd, "/mdcshow", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /mdcshow [Playerid/PartOfName]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pRank] == 6 && PlayerInfo[para1][pWantedLevel] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
                         SetPlayerColor(para1,COLOR_BLUE);
                format(string, sizeof(string), "[MDC]%s е с син цвят", PlayerName(para1));
                SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда!");
			}
		}
		return 1;
	}
	
	
	


		if(strcmp(cmd, "/mdchide", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /mdchide [Playerid/PartOfName]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pRank] == 6 && PlayerInfo[para1][pWantedLevel] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
				    if(PlayerInfo[para1][pMember] == TEAM_GROVE)
	{
    SetPlayerColor(playerid,COLOR_GREEN);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_BALLAS)
	{
    SetPlayerColor(playerid,COLOR_PURPLE);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_VAGOS)
	{
    SetPlayerColor(playerid,COLOR_YELLOW);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_VIP)
	{
    SetPlayerColor(playerid,0xFF4500FF);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_TRIADS)
	{
    SetPlayerColor(playerid,0x33CCFFAA);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_BOYZ)
	{
    SetPlayerColor(playerid,DANANGBOYS_COLOR);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_CRIPZ)
	{
    SetPlayerColor(playerid,CRIPZ_COLOR);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_GPD)
	{
    SetPlayerColor(playerid,COLOR_WHITE);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_SoA)
	{
    SetPlayerColor(playerid,COLOR_RED);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_ZETAS)
	{
    SetPlayerColor(playerid,0xCCCCCC);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_AsianBoyz)
	{
    SetPlayerColor(playerid,0x0FD49CFF);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_MS13)
	{
    SetPlayerColor(playerid,COLOR_MS13);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_BulgarianMafia)
	{
    SetPlayerColor(playerid,0xCC66CCFF);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_RIFA)
	{
    SetPlayerColor(playerid,0x1682D959);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_LatinKing)
	{
    SetPlayerColor(playerid,0xFFE100FF);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_FBI)
	{
    SetPlayerColor(playerid,COLOR_BlackStreet);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_NZ)
	{
    SetPlayerColor(playerid,0x6D000080);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_Thugs)
	{
    SetPlayerColor(playerid,0x2480E3FF);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_YAKUZA)
	{
    SetPlayerColor(playerid,COLOR_YAKUZA);
	}
				    if(PlayerInfo[para1][pMember] == TEAM_CIVILIAN)
	{
    SetPlayerColor(playerid,COLOR_WHITE);
	}
					    if(PlayerInfo[para1][pMember] == TEAM_DPK)
	{
    SetPlayerColor(playerid,COLOR_ORANGE);
	}
                format(string, sizeof(string), "[MDC]%s е с обикновен цвят", PlayerName(para1));
                SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда!");
			}
		}
		return 1;
	}
		if(strcmp(cmdtext, "/saveto", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
                format(string, 256, "ADMIN: %s запамети териториите и офисите.",PlayerName(playerid));
                SendClientMessageToAll(COLOR_WHITE, string);
SaveFactions();
SaveOffices();
SaveOffices2();
SaveOffices3();
SaveTurfs3();
			}
	return 1;
     }
     
	if(strcmp(cmdtext, "/loadto", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
		format(string, 256, "ADMIN: %s зареди териториите и офисите.",PlayerName(playerid));
  SendClientMessageToAll(COLOR_WHITE, string);
LoadFactions();
LoadOffices();
LoadOffices2();
LoadOffices3();
LoadTurfs3();
		}
	return 1;
     }


	if(strcmp(cmdtext, "/viptext", true) == 0)
	{
		if(PlayerInfo[playerid][pDonateRank] >= 3)
		{
            if(VIPLabel[playerid] == 0)
            {
	            new dstring[26];
	            format(dstring,sizeof(dstring),"VIP");
	            PlayerLabel = Create3DTextLabel(dstring, 0x8B0000FF, 0.0, 0.0, 25.0, 15.0, 0, 1);
	            Attach3DTextLabelToPlayer(PlayerLabel, playerid, 0.0, 0.0, 0.20);
                format(string, 256, "VIP: Ти добави 3D текста над главата си.");
                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                VIPLabel[playerid] = 1;
            }
            else
            {
			    Delete3DTextLabel(Text3D:PlayerLabel);
                format(string, 256, "VIP: Ти премахна 3D текста над главата си.");
                SendClientMessage(playerid, COLOR_LIGHTRED, string);
                VIPLabel[playerid] = 0;
			}
		}
	return 1;
     }
     


	if(strcmp(cmdtext, "/togcb", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
            if(VIPLabel4[playerid] == 0)
            {
                 PlayerInfo[playerid][pTogCB] = 1;
                format(string, 256, "Сега можеш да четеш съобщенията от всеки CB Chanel!");
                SendClientMessage(playerid, COLOR_GREEN, string);
                VIPLabel4[playerid] = 1;
            }
            else
            {
            PlayerInfo[playerid][pTogCB] = 0;
                format(string, 256, "Вече не можеш да четеш съобщенията от всеки CB Chanel!");
                SendClientMessage(playerid, COLOR_RED, string);
                VIPLabel4[playerid] = 0;
			}
		}
	return 1;
     }

	 
     
     	if(strcmp(cmdtext, "/readta", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
            if(REDTA[playerid] == 0)
            {
                format(string, 256, "{33FF66}Сега ще виждаш и пишеш в TEST ADMIN чата!");
                SendClientMessage(playerid, COLOR_ORANGE, string);
                REDTA[playerid] = 1;
            }
            else
            {
                format(string, 256, "{33FF66}Сега няма да можеш да виждаш и пишеш в TEST ADMIN чата!");
                SendClientMessage(playerid, COLOR_ORANGE, string);
                REDTA[playerid] = 0;
			}
		}
	return 1;
     }
     
     
     
     	if(strcmp(cmdtext, "/togadmin", true) == 0)
	{
		if(PlayerInfo[playerid][pTest] >= 1)
		{
            if(Hide22[playerid] == 0)
            {
                PlayerInfo[playerid][pHide2] = 1;
                format(string, 256, "Сега няма да можеш да виждаш какво пишат в ADMIN чата!");
                SendClientMessage(playerid, COLOR_RED, string);
                Hide22[playerid] = 1;
            }
            else
            {
                PlayerInfo[playerid][pHide2] = 0;
                format(string, 256, "Сега ще виждаш какво пишат в ADMIN чата!");
                SendClientMessage(playerid, COLOR_RED, string);
                Hide22[playerid] = 0;
			}
		}
	return 1;
     }
     
     
     	if(strcmp(cmdtext, "/togtestadmin", true) == 0)
	{
		if(PlayerInfo[playerid][pTest] >= 1)
		{
            if(Hide21[playerid] == 0)
            {
                PlayerInfo[playerid][pHide] = 1;
                format(string, 256, "Ти няма да можеш да четеш какво пишат другите в TEST ADMIN CHAT.");
                SendClientMessage(playerid, COLOR_WHITE, string);
                Hide21[playerid] = 1;
            }
            else
            {
                PlayerInfo[playerid][pHide] = 0;
                format(string, 256, "Ти ще можеш да четеш какво пишат другите в TEST ADMIN CHAT.");
                SendClientMessage(playerid, COLOR_WHITE, string);
                Hide21[playerid] = 0;
			}
		}
	return 1;
     }
     
     
     
     

		if(strcmp(cmd, "/tspec", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			            if(Tspec2[playerid] == 0)
            {
                        Tspec2[playerid] = 1;
			            PlayerInfo[playerid][pTspec] = 1;
						format(string, sizeof(string), "Ти забрани да те наблюдават.");
						SendClientMessage(playerid, COLOR_GRAD1, string);
						            }
            else
            {
            			            PlayerInfo[playerid][pTspec] = 0;
						format(string, sizeof(string), "Ти позволи да те наблюдават.");
						SendClientMessage(playerid, COLOR_GRAD1, string);
						}
						
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	

		if(strcmp(cmd, "/tgoto", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
						            if(Tgoto2[playerid] == 0)
            {
                        Tgoto2[playerid] = 1;
			            PlayerInfo[playerid][pTgoto] = 1;
						format(string, sizeof(string), "Ти забрани телепортирването до теб.");
						SendClientMessage(playerid, COLOR_GRAD1, string);
												            }
            else
            {
            			            PlayerInfo[playerid][pTgoto] = 0;
            			            Tgoto2[playerid] = 0;
						format(string, sizeof(string), "Ти позволи да се телепортират до теб.");
						SendClientMessage(playerid, COLOR_GRAD1, string);
						}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}










if(strcmp(cmd, "/top", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
						format(string, sizeof(string), ">>>>>>>>>> %s - %d убийства <<<<<<<<<<",DmonInfo[0][Kills],DmonInfo[0][Rekord]);
						SendClientMessage(playerid, 0x7AFF466A, string);
		}
		return 1;
	}


		if(strcmp(cmd, "/officeinfo", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
						format(string, sizeof(string), "Офис 1 - %s Офис 2 - %s Офис 3 - %s Офис 4 - %s Офис 5 - %s",OfInfo[0][OfficeOwner1],OfInfo[0][OfficeOwner2],OfInfo[0][OfficeOwner3],OfInfo[0][OfficeOwner4],OfInfo[0][OfficeOwner5]);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "Офис 6 - %s Офис 7 - %s Офис 8 - %s Офис 9 - %s Офис 10 - %s",OfInfo[0][OfficeOwner6],OfInfo[0][OfficeOwner7],OfInfo[0][OfficeOwner8],OfInfo[0][OfficeOwner9],OfInfo[0][OfficeOwner10]);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "Офис 11 - %s Офис 12 - %s Офис 13 - %s Офис 14 - %s Офис 15 - %s",OfInfo[0][OfficeOwner11],OfInfo[0][OfficeOwner12],OfInfo[0][OfficeOwner13],OfInfo[0][OfficeOwner14],OfInfo[0][OfficeOwner15]);
						SendClientMessage(playerid, COLOR_ORANGE, string);
						format(string, sizeof(string), "Офис 16 - %s Офис 17 - %s Офис 18 - %s Офис 19 - %s Офис 20 - %s",OfInfo[0][OfficeOwner16],OfInfo[0][OfficeOwner17],OfInfo[0][OfficeOwner18],OfInfo[0][OfficeOwner19],OfInfo[0][OfficeOwner20]);
						SendClientMessage(playerid, COLOR_ORANGE, string);
		}
		return 1;
	}



		if(strcmp(cmd, "/officehelp", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
						format(string, sizeof(string), "Използвай /officehelp[1-20]");
						SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
			if(strcmp(cmd, "/buyoffice", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
						format(string, sizeof(string), "Използвай /buyoffice[1-20]");
						SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
			if(strcmp(cmd, "/selloffice", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
						format(string, sizeof(string), "Използвай /selloffice[1-20]");
						SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	
		if(strcmp(cmd, "/officehelp1", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner1]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 1", string, "Close","");
		}
		return 1;
	}
		if(strcmp(cmd, "/officehelp2", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner2]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 2", string, "Close","");
		}
		return 1;
	}
		if(strcmp(cmd, "/officehelp3", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner3]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 3", string, "Close","");
		}
		return 1;
	}
		if(strcmp(cmd, "/officehelp4", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner4]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 4", string, "Close","");
		}
		return 1;
	}
		if(strcmp(cmd, "/officehelp5", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner5]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 5", string, "Close","");
		}
		return 1;
	}
		if(strcmp(cmd, "/officehelp6", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner6]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 6", string, "Close","");
		}
		return 1;
	}
		if(strcmp(cmd, "/officehelp7", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner7]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 7", string, "Close","");
		}
		return 1;
	}
		if(strcmp(cmd, "/officehelp8", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner8]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 8", string, "Close","");
		}
		return 1;
	}
		if(strcmp(cmd, "/officehelp9", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner9]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 9", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp10", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner10]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 10", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp11", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner11]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 10", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp12", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner12]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 10", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp13", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner13]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 13", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp14", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner14]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 14", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp15", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner15]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 15", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp16", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner16]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 16", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp17", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner17]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 17", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp18", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner18]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 18", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp19", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner19]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 19", string, "Close","");
		}
		return 1;
	}
			if(strcmp(cmd, "/officehelp20", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
                format(string, sizeof(string),"{FFFFFF}OFFICE HELP: {336600}Притежател: %s{FF0000}\nLevel:30\nMS:20\nES:20", OfInfo[0][OfficeOwner20]);
                ShowPlayerDialog(playerid, 1, DIALOG_STYLE_MSGBOX, "Офис 20", string, "Close","");
		}
		return 1;
	}
	
	
		if(strcmp(cmd, "/makesuspect", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makesuspect [Playerid/PartOfName] [Suspect Level(0-6)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pMember] == TEAM_GPD || PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						PlayerInfo[para1][pWantedLevel] = level;
						if(!(0 <= level <= 6)) return SendClientMessage(playerid, COLOR_GRAD1, "Нивата Suspect са от 0 левел т.е. без до 6 левел!");
						format(string, sizeof(string), "* %s ви направи %d Level Suspect .Поздравления! *", PlayerName(playerid), level);
						SendClientMessage(para1, COLOR_BL1, string);
						format(string, sizeof(string), "* Ти направи %s Suspect левел %d. *", giveplayer,level);
						SendClientMessage(playerid, COLOR_BL1, string);
						  format(string, sizeof(string), "%s се издирва [Suspect от %s - %d Suspect Level]", PlayerName(para1), PlayerName(playerid), level);
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
																		if(PlayerInfo[playerid][pWantedLevel] == 0)
					{
SetPlayerWantedLevel(playerid,0);
					}
												if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}


	
		if(strcmp(cmd, "/makevip", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makevip [Playerid/PartOfName] [VIP Level(1-7)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						PlayerInfo[para1][pDonateRank] = level;
						if(!(1 <= level <= 7)) return SendClientMessage(playerid, COLOR_GRAD1, "VIP левелите са от 1 левел до 7 левел!");
						format(string, sizeof(string), "* %s ви направи %d Level VIP .Поздравления! *", PlayerName(playerid), level);
						SendClientMessage(para1, COLOR_RED, string);
						format(string, sizeof(string), "* Ти направи %s VIP левел %d. *", giveplayer,level);
						SendClientMessage(playerid, COLOR_RED, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	//
			if(strcmp(cmd, "/riskplayer", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /riskplayer [Playerid/PartOfName]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pEvent] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
			        			if (PlayerInfo[para1][pTick] == 1)
			{
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "%s беше избран за играта риск печели,риск губи", giveplayer);
						SendRiskMessage(COLOR_ORANGE, string);
									}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч няма билет");
			}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
		}
	//



	if(strcmp(cmd, "/tod", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /tod [0-23]");
				return 1;
			}
			new hour;
			hour = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 5)
			{
	            SetWorldTime(hour);
				format(string, sizeof(string), "Часът е сменен на %d.", hour);
				SendClientMessageToAll(COLOR_GRAD1, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
	
	
	
	
	if(strcmp(cmd, "/setname", true) == 0)
	{
		new tmpp[255];
		tmpp = strtok(cmdtext, idx);
		if(!strlen(tmpp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setname [Playerid/PartOfName] [Name]");
			return 1;
		}
		new string2[32];
		giveplayerid = ReturnUser(tmpp);
		tmp = strtok(cmdtext, idx);
		if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
		        format(string, sizeof(string), "%s.ini", tmp);
                if(fexist(string))
		        {
			        SendClientMessage(playerid, COLOR_GRAD2, "   Това име е регистрирано!");
			        return 1;
		        }
		        if(IsPlayerConnected(giveplayerid))
		        {
					format(string, sizeof(string), "* Вие сменихте никнейма на %s *", PlayerName(giveplayerid));
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* Твоето име беше сменено от %s *", PlayerName(playerid));
					SendClientMessage(giveplayerid, COLOR_YELLOW, string);
	                format(string, sizeof(string), "%s.ini", PlayerName(giveplayerid));
				    dini_Remove(string);
				    format(string2, sizeof(string2), "%s.ini", tmp);
				    dini_Create(string2);
				    SetPlayerName(giveplayerid, tmp);

				}
				else
				{
				    format(string, sizeof(string), "Посоченото ID не е в сървъра.");
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се логнеш, за да използваш тази команда!");
		}
	  	return 1;
	}
	if(strcmp(cmd, "/hisetname", true) == 0)
	{
		new tmpp[255];
		tmpp = strtok(cmdtext, idx);
		if(!strlen(tmpp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Използвай: hi/setname [Playerid/PartOfName] [Name]");
			return 1;
		}
		new string2[32];
		giveplayerid = ReturnUser(tmpp);
		tmp = strtok(cmdtext, idx);
		if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
		        format(string, sizeof(string), "%s.ini", tmp);
                if(fexist(string))
		        {
			        SendClientMessage(playerid, COLOR_GRAD2, "   Това име е регистрирано!");
			        return 1;
		        }
		        if(IsPlayerConnected(giveplayerid))
		        {
				    format(string, sizeof(string), "%s.ini", PlayerName(giveplayerid));
				    dini_Remove(string);
				    format(string2, sizeof(string2), "%s.ini", tmp);
				    dini_Create(string2);
				    SetPlayerName(giveplayerid, tmp);
				}
				else
				{
				    format(string, sizeof(string), "Посоченото ID не е в сървъра.");
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се логнеш, за да използваш тази команда!");
		}
	  	return 1;
	}
//-----------------------------------CUFF------------------------------
//------------------------------UNCUFF------------------------------------------
//===============================[Police Commands]==============================
    if(strcmp(cmd, "/duty", true) == 0)
  {
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == TEAM_GPD)
			{
				if (PlayerToPoint(3, playerid,256.9983,63.6520,1003.6406))
				{
														if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
                        SendClientMessage(playerid, COLOR_GRAD1, "Ти си заподозрян,затова не можеш да използваш тази команда.");
						SetPlayerColor(playerid,COLOR_GRAD1);
					return 1;
					}
				    new ranktext[256];
    				switch(PlayerInfo[playerid][pRank])
				    {
     					case 1: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank1]);
	        			case 2: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank2]);
				        case 3: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank3]);
				        case 4: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank4]);
				        case 5: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank5]);
		         		case 6: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank6]);
		         		case 7: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank5]);
				    }
					if(OnDuty[playerid]==0)
			        {
                        if(PlayerInfo[playerid][pMember] == TEAM_GPD)
                        SendClientMessage(playerid, COLOR_WHITE, "Ти влезе на смяна.");
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						OnDuty[playerid] = 1;
											if(PlayerInfo[playerid][pRank] == 1 && PlayerInfo[playerid][pDeltaForce] != 1)
			        {
			        SetPlayerSkin(playerid,280);
			        			         format(string, sizeof(string), "%s влезе на смяна смяна", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						OnDuty[playerid] = 1;
												SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] == 2 && PlayerInfo[playerid][pDeltaForce] != 1)
			        {
			        SetPlayerSkin(playerid,281);
			        			         format(string, sizeof(string), "%s влезе на смяна смяна", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						OnDuty[playerid] = 1;
												SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] == 3 && PlayerInfo[playerid][pDeltaForce] != 1)
			        {
			        SetPlayerSkin(playerid,284);
			        			         format(string, sizeof(string), "%s влезе на смяна смяна", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						OnDuty[playerid] = 1;
												SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] == 4 && PlayerInfo[playerid][pDeltaForce] != 1)
			        {
			        SetPlayerSkin(playerid,282);
			        			         format(string, sizeof(string), "%s влезе на смяна смяна", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						OnDuty[playerid] = 1;
												SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] == 5 && PlayerInfo[playerid][pDeltaForce] != 1)
			        {
			        SetPlayerSkin(playerid,285);
			        			         format(string, sizeof(string), "%s влезе на смяна смяна", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						OnDuty[playerid] = 1;
												SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pDeltaForce] != 1)
			        {
			         format(string, sizeof(string), "%s влезе на смяна смяна", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						OnDuty[playerid] = 1;
			        SetPlayerSkin(playerid,288);
			        						SetPlayerColor(playerid,POLICE_COLOR);
			        }
			        											if(PlayerInfo[playerid][pDeltaForce] >= 1)
			        {
			         format(string, sizeof(string), "%s влезе на смяна смяна", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						OnDuty[playerid] = 1;
						DFDuty[playerid] = 1;
			        SetPlayerSkin(playerid,287);
			        						SetPlayerColor(playerid,COLOR_DF);
			        }
			        
			        
			        
			        
			        
			        
			        
					}
					else if(OnDuty[playerid]==1)
					{
                        SendClientMessage(playerid, COLOR_WHITE, "Ти излезе от смяна.");
                        if(PlayerInfo[playerid][pMember] == TEAM_GPD)
	                 	SetPlayerColor(playerid, COLOR_WHITE);
			            SetPlayerSkin(playerid,240);
			            OnDuty[playerid] = 0;
			            						format(string, sizeof(string), "%s излезе от смяна", PlayerName(playerid));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Ти не си на мястото за смяна!");
					return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Ти не си член на Gold Play Police Department!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/black", true) == 0)
  {
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMember] == TEAM_ZETAS)
			{
				if (PlayerToPoint(3, playerid,1116.2616,-972.3250,42.7656))
				{
				    new ranktext[256];
    				switch(PlayerInfo[playerid][pRank])
				    {
     					case 1: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank1]);
	        			case 2: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank2]);
				        case 3: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank3]);
				        case 4: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank4]);
				        case 5: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank5]);
		         		case 6: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank6]);
				    }
					if(Func[playerid]==0)
			        {
                        if(PlayerInfo[playerid][pMember] == TEAM_ZETAS)
                        SendClientMessage(playerid, COLOR_WHITE, "Ти включи функцията.");
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Func[playerid] = 1;
					}
					else if(Func[playerid]==1)
					{
                        SendClientMessage(playerid, COLOR_WHITE, "Ти излезе функцията.");
                        if(PlayerInfo[playerid][pMember] == TEAM_ZETAS)
						format(string, sizeof(string), "", PlayerName(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						Func[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Ти не си на мястото за смяна!");
					return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Ти не си член на Black Mafia!");
			}
		}
		return 1;
	}
    //===============================[General]======================================
    if(strcmp(cmd, "/changepass", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid])
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[256];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /changepass [newpass]");
					return 1;
				}
				if(strfind( result , "," , true ) == -1)
    			{
		   			strmid(PlayerInfo[playerid][pKey], (result), 0, strlen((result)), 255);
					format(string, sizeof(string), "{FFFFFF}Ти смени своята парола на: {9AFF00}%s.", (result));
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_WHITE, "Невалиден символ: , !");
				}
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/runmute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /runmute [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][ptrMuted] = 0;
			            format(string, sizeof(string), "%s е отглушен в REPORT CHAT от %s",PlayerName(playa) , PlayerName(playerid));
			            SendClientMessageToAll(COLOR_GREEN,string);
		            }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  !");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/rnmute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
            {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /rnmute [playerid] [time] [Reason]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			new time = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(playa))
			    {
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[256];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
					}
					if(playa != INVALID_PLAYER_ID)
					{
	    				PlayerInfo[playa][ptrMuted] = time*60;
						PlayerInfo[playa][prMuted] = 1;
					}
					if(playa != INVALID_PLAYER_ID)
					{
	    				PlayerInfo[playa][ptrMuted] = time*60;
						PlayerInfo[playa][prMuted] = 1;
						format(string, sizeof(string), "%s was R&N muted by %s for %d minute(s). [Reason: %s]",PlayerName(playa), PlayerName(playerid), time, (result));
						SendClientMessageToAll(COLOR_RED,string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}

	if (strcmp(cmd, "/id", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /id [playerid]");
				return 1;
			}
            giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				    if(giveplayerid != INVALID_PLAYER_ID)
	            {
	            new pname[MAX_PLAYER_NAME];
 GetPlayerName(playerid, pname, sizeof(pname));
                    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					format(string, 256, "Name: %s (ID: %d)",giveplayer, giveplayerid);
					SendClientMessage(playerid, COLOR_YELLOW, string);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Няма играч с такова име в сървъра!");
			}
		}
		return 1;
	}
		if (strcmp(cmd, "/cb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /cb [1-9999]");
				return 1;
			}
			new cbc = strval(tmp);
			if(cbc < 1 || cbc > 9999) return SendClientMessage(playerid, COLOR_GRAD1, "Числото трябва да е от 1 до 999.");
			PlayerInfo[playerid][pCBC] = cbc;
			format(string, sizeof(string), "{FF9933}CB Channel:Ти си смени твоя CB Channel на %d.", cbc);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}

    return 1;
    }
        		if (strcmp(cmd, "/togchat", true) == 0)
	{
if(TogChat[playerid] == 0)
            {
		    tmp = strtok(cmdtext, idx);
			PlayerInfo[playerid][pCBC] = 999999;
			format(string, sizeof(string), "SERVER: Сега няма да можеш да виждаш какво пишат в главня чат!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			}
			if(TogChat[playerid] == 1)
            {
		    tmp = strtok(cmdtext, idx);
			PlayerInfo[playerid][pCBC] = 999999;
			format(string, sizeof(string), "SERVER: Сега ще можеш да виждаш какво пишат в главня чат!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			}
			return 1;
		}
		
    		if (strcmp(cmd, "/cboff", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext, idx);
			PlayerInfo[playerid][pCBC] = 0;
			format(string, sizeof(string), "{FF9933}CB Channel:Ти изключи твоя CB Channel!");
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		}

    return 1;
    }
    	if (strcmp(cmd, "/checklotto", true) == 0)
	{
			format(string, sizeof(string), "{FF00FF}Стойноста на джакпота е %d!", Jackpot);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
}
    
	if (strcmp(cmd, "/lotto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /lotto [1-100]");
				return 1;
			}
			new lottonr = strval(tmp);
			if(PlayerInfo[playerid][pLotto] >= 1)
			{
			
			return 1;
			}
			if(lottonr < 1 || lottonr > 100) return SendClientMessage(playerid, COLOR_GRAD1, " Числата в лотарията трябва да са от 1 до 100.");
			PlayerInfo[playerid][pLotto] = lottonr;
			format(string, sizeof(string), "{FF00FF}Ти закупи фиш и числото на което заложи е %d.", lottonr);
			SendClientMessage(playerid, COLOR_WHITE, string);
			new hh, mm, ss;
             gettime( hh, mm, ss );//-> Gives at ??:00 -> every hour (10:00/11:00 and etc)
			format(string, sizeof(string), "{FF00FF}Тегленето на лотарията ще бъде в %d:00 часа. Джакпотът е %d!",hh , Jackpot);
			SendClientMessage(playerid, COLOR_WHITE, string);
			GivePlayerCash(playerid, -200);
			return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си купи фиш за лотарията!");
		}

    return 1;
    }
//
	if(strcmp(cmd, "/vipusers",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_GREEN,"Онлайн VIP играчи:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pDonateRank] >= 1)
					{
					    format(string, sizeof(string), "{FFB366}%s (ID: %d) - VIP Level: %d",PlayerName(i),playerid, PlayerInfo[playerid][pDonateRank]);
				    	SendClientMessage(playerid, COLOR_RED,string);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/bounties",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_GREEN,"Онлайн играчи със заложени цени на главите им:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pHM] >= 1)
					{
					    format(string, sizeof(string), "{FFB366}%s (ID: %d) - Цена: %d",PlayerName(i),playerid, PlayerInfo[i][pHM]);
				    	SendClientMessage(playerid, COLOR_RED,string);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/gfc",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Онлайн членове на Gold Play Fuel Company:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
				new gfctext[32];
	                	if(PlayerInfo[playerid][pGFCDuty] == 1) { gfctext = "On Duty"; }
                	else if(PlayerInfo[playerid][pGFCDuty] == 0) { gfctext = "Off Duty"; }
					if(PlayerInfo[i][pGFC] >= 1 && PlayerInfo[i][pAdmin] <= 5)
					{
					    format(string, sizeof(string), "%s (ID: %d) %s",PlayerName(i),playerid, gfctext);
				    	SendClientMessage(playerid, COLOR_RED,string);
					}
					if(PlayerInfo[i][pGFC] >= 1 && PlayerInfo[i][pAdmin] >= 6)
					{
					format(string, sizeof(string), "%s(ID: %d) %s {FFFF00}[Шеф]",PlayerName(i),playerid, gfctext);
				    SendClientMessage(playerid, COLOR_RED,string);
					}
				}
			}
		}
		return 1;
	}
//


	if(strcmp(cmd, "/acuffed",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Онлайн хора с белезници от администратор:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pAcuffed] >= 1)
					{
					    format(string, sizeof(string), "%s е с белезници от администратор",PlayerName(i));
				    	SendClientMessage(playerid, COLOR_WHITE,string);
					}
				}
			}
		}
		return 1;
	}



	if(strcmp(cmd, "/allevent",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Онлайн хора с евент права:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pEvent] >= 1)
					{
					    format(string, sizeof(string), "%s е с евент права",PlayerName(i));
				    	SendClientMessage(playerid, COLOR_WHITE,string);
					}
				}
			}
		}
		return 1;
	}


	if (strcmp(cmdtext, "/jailed", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    SendClientMessage(playerid, COLOR_GREEN, "Онлайн играчи в админ затвора:");
			    for(new i = 0; i < MAX_PLAYERS; i++)
			    {
				    if(IsPlayerConnected(i))
				    {
				    new count = 0;
					    if(PlayerInfo[i][pJailed] == 1 || PlayerInfo[i][pJail] == 1)
				        {
						    GetPlayerName(i, sendername, sizeof(sendername));
						    format(string, 256, "{FFFFFF}%s (ID:%d).", sendername, i);
					     count = 1;
						}
						if (count == 0) SendClientMessage(playerid,COLOR_RED,"Няма онлайн играчи в затвора.");
	            	return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}




	if(strcmp(cmd, "/allmanage",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Онлайн хора с Manage права:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pManage] >= 1)
					{
					    format(string, sizeof(string), "%s е с Manage права",PlayerName(i));
				    	SendClientMessage(playerid, COLOR_WHITE,string);
					}
				}
			}
		}
		return 1;
	}




	if(strcmp(cmd, "/crl",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_GREEN,"Лидери на обир:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pRoberN] >= 1)
					{
					    format(string, sizeof(string), "%s е лидер на обир",PlayerName(i));
				    	SendClientMessage(playerid, COLOR_WHITE,string);
					}
				}
			}
		}
		return 1;
	}



	if(strcmp(cmd, "/cmb",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Човек с MoneyBox:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pKufar] >= 1)
					{
					    format(string, sizeof(string), "%s е с Money Box",PlayerName(i));
				    	SendClientMessage(playerid, COLOR_WHITE,string);
					}
				}
			}
		}
		return 1;
	}


	if(strcmp(cmd, "/leaders",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Онлайн лидери на банди/мафии:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pMember] != TEAM_CIVILIAN && PlayerInfo[i][pRank] == 6 && PlayerInfo[i][pGL] == 0)
					{
					    format(string, sizeof(string), "{33CCFF}Лидер: %s на банда/мафия - {E59305}%s",PlayerName(i), TeamInfo[PlayerInfo[i][pMember]][TeamName]);
				    	SendClientMessage(playerid, COLOR_WHITE,string);
					}
					if(PlayerInfo[i][pMember] != TEAM_CIVILIAN && PlayerInfo[i][pRank] == 6 && PlayerInfo[i][pGL] == 1)
					{
					    format(string, sizeof(string), "{33CCFF}Главен Лидер: %s на банда/мафия - {E59305}%s",PlayerName(i), TeamInfo[PlayerInfo[i][pMember]][TeamName]);
				    	SendClientMessage(playerid, COLOR_WHITE,string);
					}
					if(PlayerInfo[i][pMember] != TEAM_CIVILIAN && PlayerInfo[i][pRank] == 7)
					{
					    format(string, sizeof(string), "{33CCFF}Пом Лидер: %s на банда/мафия - {E59305}%s",PlayerName(i), TeamInfo[PlayerInfo[i][pMember]][TeamName]);
				    	SendClientMessage(playerid, COLOR_WHITE,string);
					}
				}
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/mdc",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Онлайн заподозряни:");
  			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pMember] != TEAM_CIVILIAN && PlayerInfo[i][pWantedLevel] >= 1)
					{
					    format(string, sizeof(string), "Suspect: %s - %d",PlayerName(i),PlayerInfo[i][pWantedLevel]);
				    	SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
					}
				}
			}
		}
		return 1;
	}
//

			if(strcmp(cmd, "/turfs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
           new para1;
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			tmp = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
			    SendClientMessage(playerid, COLOR_RED, "Използвай Grove - 1,Ballas - 2 и тн.");
                SendClientMessage(playerid, COLOR_RED, "Grove, Ballas, Vagos, Aztec, Boyz, VCripz, SoA");
			    SendClientMessage(playerid, COLOR_RED, "BlackMafia, Bulgarian Mafia, MS13,  Rifa,DPK,Yakuza");
                SendClientMessage(playerid, COLOR_RED, "ThugLife, AB,Boys");
                return 1;
                }
                //
                //
                
			            if(strcmp(x_job,"1",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Grove Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_GROVE][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"2",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Ballas Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_BALLAS][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"3",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Vagos Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_VAGOS][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"4",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Aztecas Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_TRIADS][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"5",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Boyz Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_BOYZ][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"6",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- VCripz Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_CRIPZ][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"7",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- SoA Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_SoA][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"8",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_ZETAS][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"9",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Asian Boyz Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_AsianBoyz][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"10",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Rifa Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_RIFA][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"11",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Latin King Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_LatinKing][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"12",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_NZ][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"13",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Thugs Life Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_Thugs][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"14",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- Yakuza Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_YAKUZA][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
						            if(strcmp(x_job,"15",true) == 0)
            {
				SendClientMessage(playerid, COLOR_WHITE, "--- DPK Територии ---");
				format(string, sizeof(string), "Територии - %d",TeamInfo[TEAM_DPK][TurfWarsWon]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
			}
			//
			//
			//
			
			
			
			
			//
			//
		}
		return 1;
	}
if (strcmp(cmd, "/admins", true) == 0) // Admin list if they're online
{
	new string[999];
	new pname[MAX_PLAYER_NAME];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		GetPlayerName(i,pname,sizeof(pname));
		if(PlayerInfo[i][pAdmin] > 0)
		{
		new admin[999], status[999];
		if(PlayerInfo[i][pTest] == 1) { admin = "Test Admin"; }
                	else if(PlayerInfo[i][pAdmin] == 1) { admin = "Helper"; }
                	else if(PlayerInfo[i][pAdmin] == 4) { admin = "Grand Admin"; }
                	else if(PlayerInfo[i][pAdmin] == 2) { admin = "Administrator"; }
                	else if(PlayerInfo[i][pAdmin] == 3) { admin = "Moderator"; }
                	else if(PlayerInfo[i][pAdmin] == 6) { admin = "Owner";}
					else if(PlayerInfo[i][pAdmin] == 7) { admin = "Scripter";}
					else if(PlayerInfo[i][pAdmin] == 5) { admin = "Master Admin";}
      				if(PlayerInfo[i][aDuty] == 0) { status = "{FF0000}Off-Duty"; }
      				else if(PlayerInfo[i][aDuty] == 1) { status = "{00FF00}On-Duty"; }
      				if(PlayerInfo[i][AFKstatus] == 1) { status = "{FF9900}Away from Keyboard"; }
			format(string,sizeof(string),"{FFFFFF}%s {00CCFF}%s: {FFFFFF}%s (ID: %d)\n", string, PlayerName(i), admin, sendername, i);
			ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{00CCFF}Online Admins",string,"Okay","Close");
		}
	}
	return 1;
}

if (strcmp(cmdtext, "/admins", true) == 0)
	{
    if(IsPlayerConnected(playerid))
    {
        for(new i = 0; i < MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pTest] > 0)
                {
                	new admin[999], status[999];
                	new str[64];
                	   new titlestring[64];
                	   new szNewString[620];
                	if(PlayerInfo[i][pTest] == 1) { admin = "Test Admin"; }
                	else if(PlayerInfo[i][pAdmin] == 1) { admin = "Helper"; }
                	else if(PlayerInfo[i][pAdmin] == 4) { admin = "Grand Admin"; }
                	else if(PlayerInfo[i][pAdmin] == 2) { admin = "Administrator"; }
                	else if(PlayerInfo[i][pAdmin] == 3) { admin = "Moderator"; }
                	else if(PlayerInfo[i][pAdmin] == 6) { admin = "Owner";}
					else if(PlayerInfo[i][pAdmin] == 7) { admin = "Scripter";}
					else if(PlayerInfo[i][pAdmin] == 5) { admin = "Master Admin";}
      				if(PlayerInfo[i][aDuty] == 0) { status = "{FF0000}Off-Duty"; }
      				else if(PlayerInfo[i][aDuty] == 1) { status = "{00FF00}On-Duty"; }
      				if(PlayerInfo[i][AFKstatus] == 1) { status = "{FF9900}Away from Keyboard"; }
          			GetPlayerName(i, sendername, sizeof(sendername));
          			format(szNewString, sizeof(szNewString), "%s {00CCFF}%s: {FFFFFF}%s (ID: %d)       Status:%s \n", string, admin, sendername, i ,status);
          			count++;
                }
            }
        }
        if(count >= 1) { ShowPlayerDialog(playerid, 21323123, DIALOG_STYLE_MSGBOX, "Онлайн администратори:", string, "Затвори",
		""); }
        else { SendClientMessage(playerid, COLOR_GREY, "Няма онлайн админи."); }
 }
    return 1;
}
//
if(strcmp(cmd, "/destroybiz1", true) == 0)
	{
 for(new h; h<MAX_HOUSES; h++){
 if(HouseInfo[h][Bus] == 1)
 {
      if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
			if(PlayerInfo[playerid][pAdmin] >= 6)
             {
				DestroyPlayerHouse(playerid, h);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		}
		}
		return 1;
	}

if(strcmp(cmd, "/destroybiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /destroybiz [biz id]");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /destroybiz [biz id]");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 6)
             {
				DestroyPlayerHouse(playerid, type);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
//
if(strcmp(cmd, "/destroyhouse1", true) == 0)
	{
 for(new h; h<MAX_HOUSES; h++){
 if(HouseInfo[h][Bus] == 0)
 {
      if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
			if(PlayerInfo[playerid][pAdmin] >= 6)
             {
				DestroyPlayerHouse(playerid, h);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		}
		}
		return 1;
	}
	
if(strcmp(cmd, "/destroyhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /destroyhouse [house id]");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /destroyhouse [house id]");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 6)
             {
				DestroyPlayerHouse(playerid, type);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}

	if(strcmp(cmd, "/loadbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /loadbiz [biz id]");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /loadbiz [biz id]");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 6)
             {
				LoadPlayerBiz(type);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/loadhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /loadhouse [house id]");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /loadhouse [house id]");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 6)
             {
				LoadPlayerHouse(type);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/bizgps", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pBizO] <= 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бизнес");
		return 1;
	} SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
			for(new h; h<MAX_HOUSES; h++){
			if(HouseInfo[h][Bus] == 1)
			{
		    if(strcmp(HouseInfo[h][hOwner],GetName(playerid), false ) == 0){
		    	SetPlayerCheckpoint(playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ], 3.0);
		    }
		}
		}
		}
		return 1;
	}
			if(strcmp(cmd, "/housegps", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pHouseO] <= 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща");
		return 1;
	}
	SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
			for(new h; h<MAX_HOUSES; h++){
			if(HouseInfo[h][Bus] == 0)
			{
		    if(strcmp(HouseInfo[h][hOwner],GetName(playerid), false ) == 0){
		    	SetPlayerCheckpoint(playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ], 3.0);
		    }
		    }
		}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/fee", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fee [1-500]");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fee [1-500]");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pBizO] <= 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бизнес");
		return 1;
	}
			for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
		    if(strcmp(HouseInfo[h][hOwner],GetName(playerid), false ) == 0){
		if(type < 0 && PlayerInfo[playerid][pAdmin] <= 6 || type > 500 && PlayerInfo[playerid][pAdmin] <= 6) return SendClientMessage(playerid, COLOR_WHITE, "Парите трябва да са по голями от 0$ и по малки от $500");
				HouseInfo[h][Fee] = type; SavePlayerHouse(h);
}
}
}
		}
		return 1;
	}
	
	///
	////
 /////
if(strcmp(cmd, "/scriptersell", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /scriptersell [price]");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /scriptersell [price]");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] <= 6)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бизнес");
		return 1;
	}
			for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
		if(type < 0) return SendClientMessage(playerid, COLOR_WHITE, "Цената трябва да е по голяма от 0$");
				HouseInfo[h][hSellable] = 1; HouseInfo[h][hSell] = type; SavePlayerHouse(h);
				PlayerInfo[playerid][pEarnings] = 0;
				format(HouseInfo[h][hOwner], 24, "None");
}
}
		}
		return 1;
	}
 /////
	////
	////
		if(strcmp(cmd, "/sellbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sellbiz [price]");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sellbiz [price]");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pBizO] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бизнес");
		return 1;
	}
			for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
     			if(strcmp(HouseInfo[h][hOwner],GetName(playerid), false ) == 0){
		if(type < 0) return SendClientMessage(playerid, COLOR_WHITE, "Цената трябва да е по голяма от 0$");
				HouseInfo[h][hSellable] = 1; HouseInfo[h][hSell] = type; SavePlayerHouse(h);
				PlayerInfo[playerid][pBizO] = 0;
				PlayerInfo[playerid][pEarnings] = 0;
				format(HouseInfo[h][hOwner], 24, "None");
				}
}
}
		}
		return 1;
	}
				if(strcmp(cmd, "/buyarmour", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    if(IsPlayerInRangeOfPoint(playerid, 3.5, 2568.3730,-1296.8691,1037.7734))
		{
		if(PlayerInfo[playerid][pCash] >= 20000)
		{
			if(PlayerInfo[playerid][pHouseO] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща");
		return 1;
	}
SendClientMessage(playerid, COLOR_GREEN, "Ти си купи 10 Armour пакета за твоята къща.");
            	for(new h; h<MAX_HOUSES; h++){
            	if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			HouseInfo[h][Armour] += 10;
			 GivePlayerCash(playerid, -20000);
			 HouseInfo[h][Earnings] += 20000;
			 SavePlayerHouse(h);
			 }

}
}
}
}
		return 1;
	}
			if(strcmp(cmd, "/buyhealth", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    if(IsPlayerInRangeOfPoint(playerid, 3.5, 2568.3730,-1296.8691,1037.7734))
		{
		if(PlayerInfo[playerid][pCash] >= 20000)
		{
			if(PlayerInfo[playerid][pHouseO] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща");
		return 1;
	}
SendClientMessage(playerid, COLOR_GREEN, "Ти си купи 10 Health пакета за твоята къща.");
            	for(new h; h<MAX_HOUSES; h++){
            	if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			HouseInfo[h][Heal] += 10;
			 GivePlayerCash(playerid, -20000);
			 HouseInfo[h][Earnings] += 20000;
			 SavePlayerHouse(h);
			 }
}
}
}
}
		return 1;
	}
	if(strcmp(cmd, "/bizid", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] <= 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за тази команда");
		return 1;
	}
			for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
		    if(HouseInfo[h][Bus] == 1)
		    {
		    format(string, sizeof(string), "BIZZ - {FF0000}%d.", h);
						SendClientMessage(playerid, COLOR_WHITE, string);

}
}
}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/houseid", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] <= 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за тази команда");
		return 1;
	}
			for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
		    if(HouseInfo[h][Bus] == 1)
		    {
		    format(string, sizeof(string), "HOUSE - {FF0000}%d.", h);
						SendClientMessage(playerid, COLOR_WHITE, string);

}
}
}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/sellhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sellhouse [price]");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /sellhouse [price]");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pHouseO] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш къща");
		return 1;
	}
			for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
     			if(strcmp(HouseInfo[h][hName],GetName(playerid), false ) == 0){
		if(type < 0) return SendClientMessage(playerid, COLOR_WHITE, "Цената трябва да е по голяма от 0$");
				HouseInfo[h][hSellable] = 1; HouseInfo[h][hSell] = type; SavePlayerHouse(h);
				PlayerInfo[playerid][pHouseO] = 0;
				}
}
}
		}
		return 1;
	}
if(strcmp(cmd, "/hair", true) == 0)
	{
    new hair;
    if(IsPlayerInRangeOfPoint(playerid, 20, 421.4878, -78.2720, 1001.8047))
    {
           new para1;
			new hair[256];
			hair = strtok(cmdtext, idx);
			if(!strlen(hair)) {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /hair [1-5]");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
if(strcmp(hair,"1",true) == 0)
            {
                if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
                        SetPlayerAttachedObject( playerid, 3, 18640, 2, 0.081841, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
                SendClientMessage(playerid,COLOR_WHITE, "");
                GivePlayerMoney(playerid, -200);
                				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
HouseInfo[h][Earnings] += 200;
SavePlayerHouse(h);
}
}
            }
if(strcmp(hair,"2",true) == 0)
            {
                if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
                        SetPlayerAttachedObject( playerid, 3, 18975, 2, 0.128191, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
                SendClientMessage(playerid, COLOR_WHITE, "You character hair now is Afro 2");
                GivePlayerMoney(playerid, -210);
                				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
HouseInfo[h][Earnings] += 210;
SavePlayerHouse(h);
}
}
            }
            if(strcmp(hair,"3",true) == 0)
            {
                if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
                        SetPlayerAttachedObject( playerid, 3, 19077, 2, 0.124588, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
                SendClientMessage(playerid, COLOR_WHITE, "You character hair now is Police Hair");
                GivePlayerMoney(playerid, -250);
            }
            if(strcmp(hair,"4",true) == 0)
            {
                if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
                        SetPlayerAttachedObject( playerid, 3, 19136, 2, 0.141113, 0.006911, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
                SendClientMessage(playerid, COLOR_WHITE, "You character hair now is Rockstar Hair");
                GivePlayerMoney(playerid, -350);
                				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
HouseInfo[h][Earnings] += 350;
SavePlayerHouse(h);
}
}
            }
            if(strcmp(hair,"5",true) == 0)
            {
                if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
                        SetPlayerAttachedObject( playerid, 3, 19274, 2, 0.099879, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
                SendClientMessage(playerid, COLOR_WHITE, "You character hair now is Clown Hair");
                GivePlayerMoney(playerid, -150);
                				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
HouseInfo[h][Earnings] += 150;
SavePlayerHouse(h);
}
}
            }
        }
        return SendClientMessage(playerid, COLOR_GRAD1, "");
}

if(strcmp(cmd, "/hdefault", true) == 0)
	{
    if(IsPlayerInRangeOfPoint(playerid, 20, 421.4501,-80.2515,1001.8047)) return SendClientMessage(playerid, 0xFF0000AA, "[ERROR]You must in barber to use this command");
    if(IsPlayerAttachedObjectSlotUsed(playerid,3)) RemovePlayerAttachedObject(playerid,3);
    SendClientMessage(playerid, COLOR_WHITE, "Ти промени своята прическа.");
    GivePlayerMoney(playerid, -50);
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
HouseInfo[h][Earnings] += 50;
SavePlayerHouse(h);
}
}
    return 1;
}
	if(strcmp(cmd, "/createbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /createbiz [price] [level]");
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: 1 - 24/7 2 - Casino 3 - Ammo 4 - Horserace 5 - Hotel 6 - Sex Shop 7 - Clothes");
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: 8 - Bar 9 - Burger Shop 10 - Gym 11 - Dm Biz 12 - Car School 13 - N.E 14 - Advert 15 - Drug Factory.");
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: 16 - Barber 17 - Tatoo 18 - Strip Club Special Biz1 - 19.");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
   			new model;
			model = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
		    	SendClientMessage(playerid, COLOR_WHITE, "Използвай: /createbiz [price] [level]");
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: 1 - 24/7 2 - Casino 3 - Ammo 4 - Horserace 5 - Hotel 6 - Sex Shop 7 - Clothes");
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: 8 - Bar 9 - Burger Shop 10 - Gym 11 - Dm Biz 12 - Car School 13 - N.E 14 - Advert 15 - Drug Factory.");
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: 16 - Barber 17 - Tatoo 18 - Strip Club Special Biz1 - 19.");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 6)
             {
             		if(model < 0) return SendClientMessage(playerid, COLOR_WHITE, "Сложете число от 1");
		if(type < 0) return SendClientMessage(playerid, COLOR_WHITE, "Не може да направите тази къща");
				CreatePlayerHouser(playerid, model, type);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "**Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/createhouse", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /createhouse [price] [level]");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
   			new model;
			model = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /createhouse [price] [level]");
				return 1;
			}
			new type;
			type = strval(tmp);
			if(PlayerInfo[playerid][pAdmin] >= 6)
             {
             		if(model < 0) return SendClientMessage(playerid, COLOR_WHITE, "Сложете число от 1 до 5м");
		if(type < 0 || type > 9999) return SendClientMessage(playerid, COLOR_WHITE, "Не може да направите тази къща");
				CreatePlayerHouse(playerid, model, type);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "**Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	

	if(strcmp(cmd, "/createpickup", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /createpickup [Model Id] [Type]");
				SendClientMessage(playerid, COLOR_GREY, "SERVER: | 1240 - Health | 1242 - Armour | 1241 - Ad Pill | 1247 - Bribe |");
				return 1;
			}
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
   			new model;
			model = strval(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "USAGE: /createpickup [Model Id] [Type]");
				SendClientMessage(playerid, COLOR_GREY, "SERVER: | 1240 - Health | 1242 - Armour | 1241 - Ad Pill | 1247 - Bribe |");
				return 1;
			}
			new type;
			type = strval(tmp);
			if (PlayerInfo[playerid][pEvent] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
			    if((model >= 1210 && model <= 1325) && (model >= 321 && model <= 372)) { SendClientMessage(playerid, COLOR_GRAD2, "SERVER:Моделите са 1210,1325,321,373!"); return 1; }
			    if(type < 1 || type > 3) { SendClientMessage(playerid, COLOR_GRAD2, "SERVER: Типовете са: 1,2,3"); return 1; }
				CreateDynamicPickup(model, type, X,Y,Z);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "**Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}



	    if(strcmp(cmd, "/checkrobmoney", true) == 0)
	{
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
						format(string, sizeof(string), "[НОРМАЛЕН ОБИР]Обрани са $ %d.", robmoneyn);
						SendClientMessage(playerid, COLOR_WHITE, string);
				}
		return 1;
	}

	    if(strcmp(cmd, "/checkatmrobmoney", true) == 0)
	{
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
						format(string, sizeof(string), "[ОБИР НА БАНКОМАТ]Обрани са $ %d.", robmoney);
						SendClientMessage(playerid, COLOR_WHITE, string);
				}
		return 1;
	}


	    if(strcmp(cmd, "/checkbankrobmoney", true) == 0)
	{
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
						format(string, sizeof(string), "[ОБИР НА БАНКА]Обрани са $ %d.", robmoneyb);
						SendClientMessage(playerid, COLOR_WHITE, string);
				}
		return 1;
	}

	if (strcmp(cmd, "/stats", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
 		    if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid, playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се логнеш, за да използваш тази команда!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ipm", true) == 0)
	{
		if(PlayerInfo[playerid][pIgnorePM])
		{
			PlayerInfo[playerid][pIgnorePM] = 0;

			SendClientMessage(playerid, COLOR_YELLOW, "* Вие игнорирахте личните съобщения *");
		} else {
			PlayerInfo[playerid][pIgnorePM] = 1;

			SendClientMessage(playerid, COLOR_YELLOW, "* Вие премахнахте игнорирането на личните съобщения *");
		}

		return 1;
	}
	if(strcmp(cmd, "/ignoreall", true) == 0)
	{
			PlayerInfo[playerid][pIgnorePM] = 1;
			SendClientMessage(playerid, COLOR_YELLOW, "Ти игнорира всички от твойте лични съобщения!");
		return 1;
	}
	if(strcmp(cmd, "/unignoreall", true) == 0)
	{
			PlayerInfo[playerid][pIgnorePM] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Ти махна игнорирането на всички от твойте лични съобщения!");
		return 1;
	}
	if(strcmp(cmd, "/pm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Трябва да си логнат, за да използваш командата!");
	            return 1;
	        }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Използвай: /pm [playerid/PartOfName] [text]");
				return 1;
			}
			giveplayerid = strval(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(PlayerInfo[giveplayerid][pIgnorePM] == 1)
					{
						SendClientMessage(playerid, COLOR_RED, "Играчът е игнорирал своите лични съобщения !");

						return 1;
					}
										if(PlayerInfo[playerid][pIgnorePM] == 1)
					{
						SendClientMessage(playerid, COLOR_RED, "Ти си игнорирал своите лични съобщения !");

						return 1;
					}
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[256];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Използвай: /pm [playerid/PartOfName] [text]");
						return 1;
					}
					PlayerInfo[playerid][pNPM] = giveplayerid;
					format(string, sizeof(string), "* PM from %s(ID: %d): %s", PlayerName(playerid), playerid, (result));
					SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* PM to %s(ID: %d): %s", giveplayer, giveplayerid, (result));
					SendClientMessage(playerid,  COLOR_YELLOW, string);//to6o
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(IsPlayerConnected(i))
					    {
					        if(PlayerInfo[i][pAdmin] >= 1)
							{
							    if(PlayerInfo[i][aTog] == 1)
							    {
								    format(string, sizeof(string), "* PM from %s[%d] to %s[%d]: %s", PlayerName(playerid), playerid, giveplayer, giveplayerid, (result));
									SendClientMessage(i,  COLOR_YELLOW, string);//to6o
								}
							}
						}
					}
					return 1;
				}
			}
			else
			{
					format(string, sizeof(string), "   Посоченото ID не е в сървъра.", giveplayerid);
					SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rules",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
			new rules[2230];
            strins(rules,"{FFFFFF}1.Всякакъв флууд(повтаряне) е забранено и дразнещно!\n",strlen(rules));
            strins(rules,"{30B504}2.Всякакъв вид писане на неценцензурирани думи\n",strlen(rules));
            strins(rules,"{30B504}- Наказва се с заглушаване в чата\n",strlen(rules));
            strins(rules,"{FF0000}3.Използването на всякакви хакове е строго забранено и наказуемо!\n",strlen(rules));
            strins(rules,"{FF0000}- Наказва се по преценка на админа\n",strlen(rules));
            strins(rules,"{FFFFFF}4.Даването на всякакви IP-та на сървъри в сървъра или карането на хора да влизат в тях е забранено!                     .\n",strlen(rules));
            strins(rules,"{FFFFFF}- Наказва се с бан\n",strlen(rules));
            strins(rules,"{30B504}5.Забранено е използването на PEDSTATS и CHEAT ENGINE!.\n",strlen(rules));
            strins(rules,"{30B504}- Наказва се по преценка на админа\n",strlen(rules));
            strins(rules,"{FF0000}6.Забранени са всякакви бъгове бъгове като бърз скин, SAWNOFF noreload и тнт!\n",strlen(rules));
            strins(rules,"{FF0000}- Наказва се по преценка на админа\n",strlen(rules));
            strins(rules,"{FFFFFF}7.Забранено е да карате с превозно средство за работа за собствени цели!\n",strlen(rules));
            strins(rules,"{FFFFFF}- Наказва се с Jail\n",strlen(rules));
            strins(rules,"{30B504}8.Забранено е да лъжете играчите!\n",strlen(rules));
            strins(rules,"{30B504}- Наказва се с заглушаване в чата\n",strlen(rules));
            strins(rules,"{FF0000}9.Забранено е биенето на играчи, които участват в Street Race!\n",strlen(rules));
            strins(rules,"{FF0000}- Наказва се по преценка на админа\n",strlen(rules));
            strins(rules,"{FFFFFF}10.Забранено е биенето на играч, които е ADMIN On Duty\n",strlen(rules));
            strins(rules,"{FFFFFF}- Наказва се с Jail\n\n\n",strlen(rules));
            strins(rules,"{CF9E0D}При не спазването на правилата вие може да бъдете баннати от сървъра\n",strlen(rules));
            strins(rules,"{CF9E0D}- Също така може да ви бъде блокиран акаунта!\n",strlen(rules));
            strins(rules,"{CF9E0D}Ако не влизате повече от 1 седмица,вашият акаунт може да бъде изтрит!\n",strlen(rules));
            strins(rules,"{336600}Приемаш ли правилата?\n",strlen(rules));
            ShowPlayerDialog(playerid,6,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПР{336600}АВИ{FF0000}ЛА",rules,"Не приемам","Приемам");
			return 1;
		}
	}
	if(strcmp(cmd, "/carid", true) == 0)
	{
	    if(IsPlayerInAnyVehicle(playerid))
	    {
			format(string, sizeof(string), "Your vehicle id is: %d",GetPlayerVehicleID(playerid));
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD1,"Find Vehicle First!");
		}
		return 1;
	}
	if(strcmp(cmd, "/pay", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /pay [Playerid/PartOfName] [amount]");
				return 1;
			}
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /pay [Playerid/PartOfName] [amount]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 100000000)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Парите трябва да са от 1 до 100 000 000.");
			    return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			    			                             if (ProxDetectorS(3.0, playerid, giveplayerid))
                        {
				    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					playermoney = GetPlayerCash(playerid);
					if (moneys > 0 && playermoney >= moneys)
					{
						GivePlayerCash(playerid, (0 - moneys));
						GivePlayerCash(giveplayerid, moneys);
						format(string, sizeof(string), "{FFFFFF}Ти даде пари на {FFFFFF}%s {FFFFFF}на стойност {40BF00}$%d.", giveplayer, moneys);
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "{FFFFFF}Ти получи пари на стойност {40BF00}$%d {FFFFFF}от {FFFFFF}%s.", moneys, PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Ти не си близо до играчът на които изкаш да дадеш пари");
					}
					
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Invalid transaction amount.");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.t");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}

	
	
	
	
	//
	
	
	
	
	
	
	if(strcmp(cmd, "/efight", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pInEvent] >= 1)
				        {
				           	new pname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, sizeof(pname));
				        PlayerInfo[i][pFight] = 0;
				        PlayerInfo[playerid][pTText4] = 1;
				        }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {
 }
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	//
	if(strcmp(cmd, "/eenter", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pEvent] == 1 && PlayerInfo[playerid][pInEvent] == 1)
			{
						tmp = strtok(cmdtext, idx);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
			idx++;
			}
			new offset = idx;
			while ((idx < length) && ((idx - offset)))
			{
			idx++;
			}
			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
				    if(IsPlayerConnected(i))
				    {
				        if(PlayerInfo[i][pInEvent] >= 1)
				        {
				           	new pname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, sizeof(pname));
				        PlayerInfo[i][pEnter] = 0;
				        PlayerInfo[playerid][pTText3] = 1;
				        }
				        else
						{
				        	if(i != INVALID_PLAYER_ID)
					        {
					        				        	if(i != INVALID_PLAYER_ID)
					        {
 }
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}

//
	if(strcmp("/object", cmdtext, true, 10) == 0)
	{
 if(PlayerInfo[playerid][pInEvent] == 1 && PlayerInfo[playerid][pEvent] == 1)
 {
	    ShowPlayerDialog(playerid, DIALOG_SOE, DIALOG_STYLE_LIST, "Objects", \
		"------------------\nСъздаи обект\nНай близкя обект до тебе","Цък","Излизам");
		}
		return 1;
	}
//
//
	if(strcmp(cmdtext, "/tune", true) == 0)
	{
			        if (PlayerInfo[playerid][pDonateRank] >= 4 || IsPlayerInRangeOfPoint(playerid, 10.0, 1247.1062,-2055.2410,59.7890) || IsPlayerInRangeOfPoint(playerid, 10.0, 2201.1172,927.1325,10.8203)  || IsPlayerInRangeOfPoint(playerid, 10.0, 2201.2285,939.4367,10.8203))
			{
		new playerstate = GetPlayerState(playerid);
 		if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в превозно средство!");
			return 1;
		}
		else
		{

    		if(playerstate != PLAYER_STATE_DRIVER)
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си в превозно средство!");
 				return 1;

			}
			else
			{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) >= 400)
	       			{
			    		ShowMenuForPlayer(TuningMenu, playerid);
			    		TogglePlayerControllable(playerid,0);
			    		}
			    		else
		 {
			    		SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно VIP права");
		 }
				}
			}
		}
		return 1;
	}
//
	
    if (!strcmp("/refuel",cmdtext,true,10)) {
 	    if(IsPlayerInRangeOfPoint(playerid, 10, 2149.8328,2748.2905,10.5474) && F1 >= 5 || IsPlayerInRangeOfPoint(playerid, 10, 1944.1652,-1769.8917,13.1157) && F2 >= 5  || IsPlayerInRangeOfPoint(playerid, 10, 2116.6611,922.4604,10.5474) && F3 >= 5  || IsPlayerInRangeOfPoint(playerid, 10, 2204.3835,2473.3994,10.5474) && F4 >= 5)
	    {
        if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,0xFFC800FF,"Ти не си в превозно средство!");
        ShowPlayerDialog(playerid,68,DIALOG_STYLE_INPUT,"{0000FF}Бензиностанция","{7AFF46}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашето превозно средство.\n{993300}1 литър {FFFFFF}= {009900}1 долар","Презареди","Затвори");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте до бензиностанция или няма бензин");
		    return 1;
		}
		return 1;
	}
//
    ////////////////////////////////////////
            	if(strcmp(cmd, "/fc", true) == 0)
	{
	              if (PlayerInfo[playerid][pTuba] >= 1)
	              {
					format(string, sizeof(string), "{66B2FF}Вие имате %d литра бензин в вашата туба", PlayerInfo[playerid][pTuba2]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
	 }
	 else
	 {
	 SendClientMessage(playerid, COLOR_GRAD1, "Нямаш туба !");
	 }
					return 1;
				}

    if(strcmp(cmd, "/refillfc", true) == 0)
	{
 	    if(IsPlayerInRangeOfPoint(playerid, 10, 2149.8328,2748.2905,10.5474) && F1 >= 5 || IsPlayerInRangeOfPoint(playerid, 10, 1944.1652,-1769.8917,13.1157) && F2 >= 5  || IsPlayerInRangeOfPoint(playerid, 10, 2116.6611,922.4604,10.5474) && F3 >= 5  || IsPlayerInRangeOfPoint(playerid, 10, 2204.3835,2473.3994,10.5474) && F4 >= 5)
	    {
        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"{0000FF}Бензиностанция","{7AFF46}Добре дошли в бензиностанцията !\n{FFFFFF}Моля въведете с колко литра искате да заредите вашата туба.\n{993300}1 литър {FFFFFF}= {009900}1 долар","Презареди","Затвори");
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD1, "Вие не сте до бензиностанция или няма бензин");
		    return 1;
		}
		return 1;
	}
    /////////////////////////////////////////////
    	if(strcmp(cmd, "/mybank", true) == 0)
	{
	              if (PlayerInfo[playerid][pDonateRank] == 7)
	              {
					format(string, sizeof(string), "Вие имате $%d в банката", PlayerInfo[playerid][pAccount]);
					SendClientMessage(playerid, COLOR_YELLOW, string);
	 }
	 else
	 {
	 SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно VIP права");
	 }
					return 1;
				}
				
	if (strcmp("/eoff", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти изключи двигателят на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleEngine(vehicleid, VEHICLE_PARAMS_OFF);
		return 1;
	}
	if (strcmp("/eon", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти включи двигателят на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleEngine(vehicleid, VEHICLE_PARAMS_ON);
		return 1;
	}
	if (strcmp("/alarmoff", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти изключи алармата на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleAlarm(vehicleid, VEHICLE_PARAMS_OFF);
		return 1;
	}
	if (strcmp("/alarmon", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти включи алармата на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleAlarm(vehicleid, VEHICLE_PARAMS_ON);
		return 1;
	}
	if (strcmp("/bonnetoff", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти отвори капака на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleBonnet(vehicleid, VEHICLE_PARAMS_OFF);
		return 1;
	}
	if (strcmp("/bonneton", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти затвори капака на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleBonnet(vehicleid, VEHICLE_PARAMS_ON);
		return 1;
	}
	if (strcmp("/loff", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти изключи фаровете на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleLights(vehicleid, VEHICLE_PARAMS_OFF);
		return 1;
	}
	if (strcmp("/lon", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти включи фаровете на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleLights(vehicleid, VEHICLE_PARAMS_ON);
		return 1;
	}
	if (strcmp("/bootoff", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти затвори багажника на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleBoot(vehicleid, VEHICLE_PARAMS_OFF);
		return 1;
	}
	if (strcmp("/booton", cmdtext, true, 10) == 0)
	{
	    new vehicleid;
		vehicleid = GetPlayerVehicleID(playerid);
    	if(!vehicleid) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в превозно средство!");
        format(string, 256, "* Ти отвори багажника на превозното средство *");
        SendClientMessage(playerid, 0x7AFF466A, string);
        ToggleBoot(vehicleid, VEHICLE_PARAMS_ON);
		return 1;
	}
	        if(strcmp("/ec", cmdtext, true, 11) == 0)
    {
        new Float:x,Float:y,Float:z;
        GetPlayerPos(playerid, x, y, z);
			if (PlayerInfo[playerid][pEvent] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
				format(string, sizeof(string), "{33CC33}%s стартира брояча на евента,бъдете в готовност", PlayerName(playerid));
				ProxDetector(99999999999999999999999999999999999999999999999999999999999999999999.0, playerid, string, COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
                SetTimer("ECounting",1000,false);
                 }
                else
                {
                        SendClientMessage(playerid, COLOR_LIGHTBLUE,"Нямаш права за да ползваш командата!");
        }
        if(IsPlayerInRangeOfPoint(playerid, RANGEOFSTARTER, x, y, z))
		{
        }
        return 1;
}

        if(strcmp("/c", cmdtext, true, 11) == 0)
    {
        new Float:x,Float:y,Float:z;
        GetPlayerPos(playerid, x, y, z);
        if(Count == 0)
        {
				format(string, sizeof(string), "*** %s started count ***", PlayerName(playerid));
				ProxDetector(99999999999999999999999999999999999999999999999999999999999999999999999.0, playerid, string, COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE,COLOR_LIGHTBLUE);
                SetTimer("Counting",1000,false);
                 }
                else
                {
                        SendClientMessage(playerid, COLOR_ORANGE,"Моля, изчакайте малко!");
        }
        if(IsPlayerInRangeOfPoint(playerid, RANGEOFSTARTER, x, y, z))
		{
        }
        return 1;
}
    //
    
    //ATM STAFF
    //ATM STAFF
    //
    
    
    
    
    
    
    
    else if(strcmp(cmd, "/tpcor", true) == 0)
        {
                if(IsPlayerConnected(playerid))
                {
                        if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_WHITE, "[!] Вие не сте администратор."); // [pAdmin] < 5) - можете да смените на желания от вас админ левел, на който да може да се използва тази команда
                        tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{F74848}» Въведете{FFFFFF}: /tpcor x y z");
                        new coorx;
                        coorx = strval(tmp);
                        tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{F74848}» Въведете{FFFFFF}: /tpcor x y z");
                        new coory;
                        coory = strval(tmp);
                        tmp = strtok(cmdtext, idx);
                        if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "{F74848}» Въведете{FFFFFF}: /tpcor x y z");
                        new coorz;
                        coorz = strval(tmp);
                        SetPlayerPos(playerid, coorx,coory,coorz);
                        format(string, sizeof(string), "Вие се телепортирахте успешно!", coorx,coory,coorz);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                }
                return 1;
        }
    
    
	if(!strcmp(cmdtext, "/windows", true) || !strcmp(cmdtext, "/wi", true)) // By LordMan
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Трябва да се логнеш !");
	            return 1;
	        }
	        new playercar = GetPlayerVehicleID(playerid);
	        if(IsPlayerInAnyVehicle(playerid))
	        {
	            if(VehicleWindows[playercar] == 0)
	            {
	            	VehicleWindows[GetPlayerVehicleID(playerid)] = 1;
      				format(string, sizeof(string), "* %s Дигна прозореца.", sendername);
      				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      				return 1;
				}
				else if(VehicleWindows[playercar] == 1)
				{
				    VehicleWindows[GetPlayerVehicleID(playerid)] = 0;
      				format(string, sizeof(string), "* %s Свали прозореца.", sendername);
      				ProxDetector(30.0, playerid, string, COLOR_CHAT1,COLOR_CHAT2,COLOR_CHAT3,COLOR_CHAT4,COLOR_CHAT5);
      				return 1;
				}
				return 1;
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Трябва да си в кола!");
	            return 1;
	        }
	    }
	    return 1;
	}
    ///
    if(strcmp(cmd, "/lockbiz", true) == 0)
	{
	if(IsPlayerConnected(playerid)){
		for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
     			if(strcmp(HouseInfo[h][hOwner],GetName(playerid), false ) == 0){
     				if(HouseInfo[h][hLocked] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Бизнеса е заключен");
				    HouseInfo[h][hLocked] = 1; SavePlayerHouse(h);
				    SendClientMessage(playerid, COLOR_WHITE, "Ти заключи бизнеса си");
          		} else return SendClientMessage(playerid, COLOR_WHITE, "Ти не притежаваш бизнес");
		    } } }
	return 1;
}

if(strcmp(cmd, "/unlockbiz", true) == 0)
	{
	if(IsPlayerConnected(playerid)){
		for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
     			if(strcmp(HouseInfo[h][hOwner],GetName(playerid), false ) == 0){
     			    if(HouseInfo[h][hLocked] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Този бизнес не е заключен");
				    HouseInfo[h][hLocked] = 0; SavePlayerHouse(h);
				    SendClientMessage(playerid, COLOR_WHITE, "Ти си отключи бизнеса.");
          		} else return SendClientMessage(playerid, COLOR_WHITE, "Ти не притежаваш бизнес");
		    } } }
	return 1;
}
    ///
    if(strcmp(cmd, "/lockhouse", true) == 0)
	{
	if(IsPlayerConnected(playerid)){
		for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
     			if(strcmp(HouseInfo[h][hName],GetName(playerid), false ) == 0){
     				if(HouseInfo[h][hLocked] == 1) return SendClientMessage(playerid, COLOR_WHITE, ".:: [ERROR]: Къщата е заклиучена.");
				    HouseInfo[h][hLocked] = 1; SavePlayerHouse(h);
				    SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Ти заклиучи къщатаси.");
          		} else return SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Ти не притежаваш тази къща.");
		    } } }
	return 1;
}

if(strcmp(cmd, "/unlockhouse", true) == 0)
	{
	if(IsPlayerConnected(playerid)){
		for(new h; h<MAX_HOUSES; h++){
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
     			if(strcmp(HouseInfo[h][hName],GetName(playerid), false ) == 0){
     			    if(HouseInfo[h][hLocked] == 0) return SendClientMessage(playerid, COLOR_WHITE, ".:: [ERROR]: Тази къща не е заклиучена.");
				    HouseInfo[h][hLocked] = 0; SavePlayerHouse(h);
				    SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Ти отклиучи своета къщата.");
          		} else return SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Ти не притежаваш тази къща.");
		    } } }
	return 1;
}
	///
	///
				if(strcmp(cmd, "/kubche", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /kubche [text]");
				return 1;
			}
			if(PlayerInfo[playerid][pEvent] == 0)
			{
			SendClientMessage(playerid, COLOR_GRAD1,"Нямаш права за тази команда!");
			return 1;
			}
			new string4[20];
   new stri[128];
                format(stri,128,"%s",result);
    SetObjectMaterialText(kubche,stri, 0, OBJECT_MATERIAL_SIZE_256x128,"Arial", 80, 0, 0xFFFF8200, 0xFF000000, OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
                
           }
		return 1;
	}
	
			if(strcmp(cmd, "/bizname", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /bizname [name]");
				return 1;
			}
				if(strfind( result , ",", true ) == -1)
{
				if(strfind( result , "~n~", true ) == -1)
{
				if(strfind( result , "~~", true ) == -1)
{
				if(strfind( result , "~b~", true ) == -1)
{
				if(strfind( result , "~r~", true ) == -1)
{
				if(strfind( result , "~g~", true ) == -1)
{
				if(strfind( result , "~w~", true ) == -1)
{
				if(strfind( result , "~p~", true ) == -1)
{
				if(strfind( result , "~~", true ) == -1)
{
				if(strfind( result , "~ ~", true ) == -1)
{
				if(strfind( result , "~", true ) == -1)
{
				if(strfind( result , "|", true ) == -1)
{
				if(strfind( result , "||", true ) == -1)
{
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X,Y,Z);
			new string2[32];
			//
			for(new h; h<MAX_HOUSES; h++){

						if(PlayerInfo[playerid][pBizO] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш бизнес");
		return 1;
	}
 if(strcmp(HouseInfo[h][hOwner],GetName(playerid), false ) == 0){
	new Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X, Y, Z);
   if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
			format(HouseInfo[h][hName], 24, "%s", result);
			SavePlayerHouse(h);
		}
		}
		}
		}
		}
		}
		}
		}
		}
		}
		}
		}
		}
		}
		}
		}
		}
		return 1;
	}

			if(strcmp(cmd, "/bizhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"Командите за къща са:/buybiz - купуваш си бизнес,/enterb - влизаш в бизнеса /bizgps.");
			SendClientMessage(playerid, COLOR_WHITE,"/exit - излизаш от къща,/sellbiz - продаваш бизнес /lockbiz - заключваш /unlobkbiz - отключваш.");
			SendClientMessage(playerid, COLOR_WHITE,"/fee,/bizname,/earnings,/bizinfo");
		}
		return 1;
	}
			if(strcmp(cmd, "/househelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_WHITE,"Командите за къща са:/buyhouse - купуваш си къща,/enter - влизаш в къщата /housegps.");
			SendClientMessage(playerid, COLOR_WHITE,"/exit - излизаш от къща,/sellhouse - продаваш къща /lockhouse - заключваш /unlockhouse - отключваш.");
			SendClientMessage(playerid, COLOR_WHITE,"Има около 60 къщи в сървъра,ще се добавят нови.");
		}
		return 1;
	}
		if(strcmp(cmd, "/bankhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			SendClientMessage(playerid, COLOR_WHITE,"*** BANK *** /bankwithdraw /bankrob");
		}
		return 1;
	}
	////////
	    if(strcmp(cmd,"/animlist",true)==0)
	{
    	SendClientMessage(playerid,COLOR_GREEN,"{FFAD33}.:: Анимации ::.");
	    SendClientMessage(playerid,COLOR_WHITE,"{66B2FF}/fall - /fallback - /injured - /akick - /push - /lowbodypush - /handsup - /drunk - /getarrested - /laugh - /sup");
        SendClientMessage(playerid,COLOR_WHITE,"{66B2FF}/basket - /headbutt - /medic - /spray - /robman - /taichi - /lookout - /kiss - /cellin - /cellout - /crossarms - /lay");
        SendClientMessage(playerid,COLOR_WHITE,"{66B2FF}/deal - /crack - /smokeanim - /groundsit - /chat - /chat2 - /dance - /fucku - /strip - /vomit - /eat - /chairsit - /reload");
        SendClientMessage(playerid,COLOR_WHITE,"{66B2FF}/koface - /kostomach - /rollfall - /carjacked1 - /carjacked2 - /rcarjack1 - /rcarjack2 - /lcarjack1 - /lcarjack2 - /bat");
        SendClientMessage(playerid,COLOR_WHITE,"{66B2FF}/lifejump - /exhaust - /leftslap - /carlock - /hoodfrisked - /lightcig - /tapcig - /box - /lay2 - /chant - finger");
        SendClientMessage(playerid,COLOR_WHITE,"{66B2FF}/shouting - /knife - /cop - /elbow - /kneekick - /airkick - /gkick - /gpunch - /fstance - /lowthrow - /highthrow - /aim");
        SendClientMessage(playerid,COLOR_GREEN,"За да спреш анимацията натисни  SPACE, LMB или ENTER");
        return true;
	}
	////////////////////////////////////////////////////////////////////////////////
		// carjacked
    if(strcmp(cmd, "/carjacked1", true) == 0) {
		 ApplyAnimation(playerid,"PED","CAR_jackedLHS",4.0,0,1,1,1,0);
         return 1;
    }

    // carjacked
    if(strcmp(cmd, "/carjacked2", true) == 0) {
		 ApplyAnimation(playerid,"PED","CAR_jackedRHS",4.0,0,1,1,1,0);
         return 1;
    }

	// HANDSUP
 	if(strcmp(cmd, "/handsup", true) == 0) {
		//SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
		ApplyAnimation(playerid, "ROB_BANK","SHP_HandsUp_Scr", 4.0, 0, 1, 1, 1, 0);
        return 1;
    }

    // CELLPHONE IN
 	if(strcmp(cmd, "/cellin", true) == 0) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
        return 1;
    }

    // CELLPHONE OUT
 	if(strcmp(cmd, "/cellout", true) == 0) {
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
        return 1;
    }

    // Drunk
    if(strcmp(cmd, "/drunk", true) == 0) {
		ApplyAnimation(playerid,"PED","WALK_DRUNK",4.1,1,1,1,1,1);
		return 1;
    }

	// Place a Bomb
	// Police Arrest
    if (strcmp("/getarrested", cmdtext, true) == 0) {
	      ApplyAnimation(playerid,"ped", "ARRESTgun", 4.0, 0, 1, 1, 1, -1); // Gun Arrest
		  return 1;
    }
	// Laugh
    if (strcmp("/laugh", cmdtext, true) == 0) {
          ApplyAnimation(playerid, "RAPPING", "Laugh_01", 4.0, 0, 0, 0, 0, 0); // Laugh
		  return 1;
	}
	// Rob Lookout
    if (strcmp("/lookout", cmdtext, true) == 0) {
          ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.0, 0, 0, 0, 0, 0); // Rob Lookout
		  return 1;
	}
	// Rob Threat
    if (strcmp("/robman", cmdtext, true) == 0) {
          ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.0, 1, 0, 0, 0, 0); // Rob
		  return 1;
	}
	// Arms crossed
    if (strcmp("/crossarms", cmdtext, true) == 0) {
          ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.0, 0, 1, 1, 1, -1); // Arms crossed
		  return 1;
	}
	// Lay Down
    if (strcmp("/lay", cmdtext, true) == 0) {
          ApplyAnimation(playerid,"BEACH", "bather", 4.0, 1, 0, 0, 0, 0); // Lay down
		  return 1;
    }
	// Vomit
    if (strcmp("/vomit", cmdtext, true) == 0) {
	      ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0); // Vomit BAH!
		  return 1;
	}
	// Eat Burger
    if (strcmp("/eat", cmdtext, true) == 0) {
	      ApplyAnimation(playerid, "FOOD", "EAT_Burger", 3.0, 0, 0, 0, 0, 0); // Eat Burger
		  return 1;
	}
	// Wave
    if (strcmp("/wave", cmdtext, true) == 0) {
	      ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0); // Wave
		  return 1;
	}
	// Slap Ass
    if (strcmp("/slapass", cmdtext, true) == 0) {
   		ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0); // Ass Slapping
 		return 1;
	}
	// Dealer
    if (strcmp("/deal", cmdtext, true) == 0) {
          ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0); // Deal Drugs
		  return 1;
	}
	// Crack Dieing
    if (strcmp("/crack", cmdtext, true) == 0) {
          ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0); // Dieing of Crack
		  return 1;
	}
	// Smoking animations
	if(strcmp(cmd, "/smokeanim", true) == 0)
    {
        if (!strlen(cmdtext[7])) return SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /smoke [1-4]");
    	switch (cmdtext[7])
    	{
        	case '1': ApplyAnimation(playerid,"SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0); // male
        	case '2': ApplyAnimation(playerid,"SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0); //female
        	case '3': ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop", 4.0, 1, 0, 0, 0, 0); // standing-fucked
        	case '4': ApplyAnimation(playerid,"SMOKING","M_smk_out", 4.0, 1, 0, 0, 0, 0); // standing
        	default: SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /smoke [1-4]");
    	}
    	return 1;
    }
	// Sit
    if (strcmp("/groundsit", cmdtext, true) == 0 || strcmp("/gro", cmdtext, true) == 0) {
          ApplyAnimation(playerid,"BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0); // Sit
		  return 1;
    }
    // Idle Chat
    if(strcmp(cmd, "/chat", true) == 0) {
		 ApplyAnimation(playerid,"PED","IDLE_CHAT",4.0,1,0,0,1,1);
         return 1;
    }
    // Idle Chat2
    if(strcmp(cmd, "/chat2", true) == 0) {
		 ApplyAnimation(playerid,"MISC","Idle_Chat_02",4.0,1,0,0,1,1);
         return 1;
    }
    // Fucku
    if(strcmp(cmd, "/fucku", true) == 0) {
		 ApplyAnimation(playerid,"PED","fucku",4.0,0,0,0,0,0);
         return 1;
    }
    // TaiChi
    if(strcmp(cmd, "/taichi", true) == 0) {
		 ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.0,1,0,0,0,0);
         return 1;
    }

    // ChairSit
    if(strcmp(cmd, "/chairsit", true) == 0) {
		 ApplyAnimation(playerid,"PED","SEAT_down",4.1,0,1,1,1,0);
         return 1;
    }

    // Fall on the ground
    if(strcmp(cmd, "/fall", true) == 0) {
		 ApplyAnimation(playerid,"PED","KO_skid_front",4.1,0,1,1,1,0);
         return 1;
    }

    // Fall
    if(strcmp(cmd, "/fallback", true) == 0) {
		 ApplyAnimation(playerid, "PED","FLOOR_hit_f", 4.0, 1, 0, 0, 0, 0);
         return 1;
    }

    // kiss
    if(strcmp(cmd, "/kiss", true) == 0) {
		 ApplyAnimation(playerid, "KISSING", "Playa_Kiss_02", 3.0, 1, 1, 1, 1, 0);
         return 1;
    }

    // Injujred
    if(strcmp(cmd, "/injured", true) == 0) {
		 ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.0, 1, 0, 0, 0, 0);
         return 1;
    }

    // Homie animations
    if(strcmp(cmd, "/sup", true) == 0)
    {
        if (!strlen(cmdtext[5])) return SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /sup [1-3]");
    	switch (cmdtext[5])
    	{
        	case '1': ApplyAnimation(playerid,"GANGS","hndshkba",4.0,0,0,0,0,0);
         	case '2': ApplyAnimation(playerid,"GANGS","hndshkda",4.0,0,0,0,0,0);
         	case '3': ApplyAnimation(playerid,"GANGS","hndshkfa_swt",4.0,0,0,0,0,0);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /sup [1-3]");
    	}
    	return 1;
    }

    // Rap animations
    if(strcmp(cmd, "/rap", true) == 0)
    {
        if (!strlen(cmdtext[5])) return SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /rap [1-4]");
    	switch (cmdtext[5])
    	{
    	    case '1': ApplyAnimation(playerid,"RAPPING","RAP_A_Loop",4.0,1,0,0,0,0);
        	case '2': ApplyAnimation(playerid,"RAPPING","RAP_C_Loop",4.0,1,0,0,0,0);
        	case '3': ApplyAnimation(playerid,"GANGS","prtial_gngtlkD",4.0,1,0,0,0,0);
        	case '4': ApplyAnimation(playerid,"GANGS","prtial_gngtlkH",4.0,1,0,0,1,1);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /rap [1-4]");
    	}
    	return 1;
    }

    // Violence animations
    if(strcmp(cmd, "/push", true) == 0) {
		 ApplyAnimation(playerid,"GANGS","shake_cara",4.0,0,0,0,0,0);
         return 1;
    }

    if(strcmp(cmd, "/akick", true) == 0) {
		 ApplyAnimation(playerid,"POLICE","Door_Kick",4.0,0,0,0,0,0);
         return 1;
    }

    if(strcmp(cmd, "/lowbodypush", true) == 0) {
		 ApplyAnimation(playerid,"GANGS","shake_carSH",4.0,0,0,0,0,0);
         return 1;
    }

    // Spray
    if(strcmp(cmd, "/spray", true) == 0) {
		 ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.0,0,0,0,0,0);
         return 1;
    }

    // Headbutt
    if(strcmp(cmd, "/headbutt", true) == 0) {
		 ApplyAnimation(playerid,"WAYFARER","WF_Fwd",4.0,0,0,0,0,0);
         return 1;
    }

    // Medic
    if(strcmp(cmd, "/medic", true) == 0) {
		 ApplyAnimation(playerid,"MEDIC","CPR",4.0,0,0,0,0,0);
         return 1;
    }

    // KO Face
    if(strcmp(cmd, "/koface", true) == 0) {
		 ApplyAnimation(playerid,"PED","KO_shot_face",4.0,0,1,1,1,0);
         return 1;
    }

    // KO Stomach
    if(strcmp(cmd, "/kostomach", true) == 0) {
		 ApplyAnimation(playerid,"PED","KO_shot_stom",4.0,0,1,1,1,0);
         return 1;
    }

    // Jump for your life!
    if(strcmp(cmd, "/lifejump", true) == 0) {
		 ApplyAnimation(playerid,"PED","EV_dive",4.0,0,1,1,1,0);
         return 1;
    }

    // Exhausted
    if(strcmp(cmd, "/exhaust", true) == 0) {
		 ApplyAnimation(playerid,"PED","IDLE_tired",3.0,1,0,0,0,0);
         return 1;
    }

    // Left big slap
    if(strcmp(cmd, "/leftslap", true) == 0) {
		 ApplyAnimation(playerid,"PED","BIKE_elbowL",4.0,0,0,0,0,0);
         return 1;
    }

    // Big fall
    if(strcmp(cmd, "/rollfall", true) == 0) {
		 ApplyAnimation(playerid,"PED","BIKE_fallR",4.0,0,1,1,1,0);
         return 1;
    }

    // Locked
    if(strcmp(cmd, "/carlock", true) == 0) {
		 ApplyAnimation(playerid,"PED","CAR_doorlocked_LHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    if(strcmp(cmd, "/rcarjack1", true) == 0) {
		 ApplyAnimation(playerid,"PED","CAR_pulloutL_LHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    if(strcmp(cmd, "/lcarjack1", true) == 0) {
		 ApplyAnimation(playerid,"PED","CAR_pulloutL_RHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    if(strcmp(cmd, "/rcarjack2", true) == 0) {
		 ApplyAnimation(playerid,"PED","CAR_pullout_LHS",4.0,0,0,0,0,0);
         return 1;
    }

    // carjack
    if(strcmp(cmd, "/lcarjack2", true) == 0) {
		 ApplyAnimation(playerid,"PED","CAR_pullout_RHS",4.0,0,0,0,0,0);
         return 1;
    }

    // Hood frisked
    if(strcmp(cmd, "/hoodfrisked", true) == 0) {
		 ApplyAnimation(playerid,"POLICE","crm_drgbst_01",4.0,0,1,1,1,0);
         return 1;
    }

    // Lighting cigarette
    if(strcmp(cmd, "/lightcig", true) == 0) {
		 ApplyAnimation(playerid,"SMOKING","M_smk_in",3.0,0,0,0,0,0);
         return 1;
    }

    // Tap cigarette
    if(strcmp(cmd, "/tapcig", true) == 0) {
		 ApplyAnimation(playerid,"SMOKING","M_smk_tap",3.0,0,0,0,0,0);
         return 1;
    }

    // Bat stance
    if(strcmp(cmd, "/bat", true) == 0) {
		 ApplyAnimation(playerid,"BASEBALL","Bat_IDLE",4.0,1,1,1,1,0);
         return 1;
    }

    // Boxing
    if(strcmp(cmd, "/box", true) == 0) {
		 ApplyAnimation(playerid,"GYMNASIUM","GYMshadowbox",4.0,1,1,1,1,0);
         return 1;
    }

    // Lay 2
    if(strcmp(cmd, "/lay2", true) == 0) {
		 ApplyAnimation(playerid,"SUNBATHE","Lay_Bac_in",3.0,0,1,1,1,0);
         return 1;
    }

    // Gogogo
    if(strcmp(cmd, "/chant", true) == 0) {
		 ApplyAnimation(playerid,"RIOT","RIOT_CHANT",4.0,1,1,1,1,0);
         return 1;
    }

    // Finger
    if(strcmp(cmd, "/finger", true) == 0) {
		 ApplyAnimation(playerid,"RIOT","RIOT_FUKU",2.0,0,0,0,0,0);
         return 1;
    }

    // Shouting
    if(strcmp(cmd, "/shouting", true) == 0) {
		 ApplyAnimation(playerid,"RIOT","RIOT_shout",4.0,1,0,0,0,0);
         return 1;
    }

    // Cop stance
    if(strcmp(cmd, "/cop", true) == 0) {
		 ApplyAnimation(playerid,"SWORD","sword_block",50.0,0,1,1,1,1);
         return 1;
    }

    // Elbow
    if(strcmp(cmd, "/elbow", true) == 0) {
		 ApplyAnimation(playerid,"FIGHT_D","FightD_3",4.0,0,1,1,0,0);
         return 1;
    }

    // Knee kick
    if(strcmp(cmd, "/kneekick", true) == 0) {
		 ApplyAnimation(playerid,"FIGHT_D","FightD_2",4.0,0,1,1,0,0);
         return 1;
    }

    // Fight stance
    if(strcmp(cmd, "/fstance", true) == 0) {
		 ApplyAnimation(playerid,"FIGHT_D","FightD_IDLE",4.0,1,1,1,1,0);
         return 1;
    }

    // Ground punch
    if(strcmp(cmd, "/gpunch", true) == 0) {
		 ApplyAnimation(playerid,"FIGHT_B","FightB_G",4.0,0,0,0,0,0);
         return 1;
    }

    // Air kick
    if(strcmp(cmd, "/airkick", true) == 0) {
		 ApplyAnimation(playerid,"FIGHT_C","FightC_M",4.0,0,1,1,0,0);
         return 1;
    }

    // Ground kick
    if(strcmp(cmd, "/gkick", true) == 0) {
		 ApplyAnimation(playerid,"FIGHT_D","FightD_G",4.0,0,0,0,0,0);
         return 1;
    }

    // Low throw
    if(strcmp(cmd, "/lowthrow", true) == 0) {
		 ApplyAnimation(playerid,"GRENADE","WEAPON_throwu",3.0,0,0,0,0,0);
         return 1;
    }

    // Ground kick
    if(strcmp(cmd, "/highthrow", true) == 0) {
		 ApplyAnimation(playerid,"GRENADE","WEAPON_throw",4.0,0,0,0,0,0);
         return 1;
    }

    // Deal stance
    if(strcmp(cmd, "/dealstance", true) == 0) {
		 ApplyAnimation(playerid,"DEALER","DEALER_IDLE",4.0,1,0,0,0,0);
         return 1;
    }

    // Deal stance
    if(strcmp(cmd, "/pee", true) == 0) {
		 SetPlayerSpecialAction(playerid, SPECIAL_ACTION_PISSING);
         return 1;
    }

    // Knife animations
    if(strcmp(cmd, "/knife", true) == 0)
    {
        if (!strlen(cmdtext[7])) return SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /knife [1-4]");
    	switch (cmdtext[7])
    	{
    	    case '1': ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Damage",4.0,0,1,1,1,0);
        	case '2': ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Die",4.0,0,1,1,1,0);
        	case '3': ApplyAnimation(playerid,"KNIFE","KILL_Knife_Player",4.0,0,0,0,0,0);
        	case '4': ApplyAnimation(playerid,"KNIFE","KILL_Partial",4.0,0,1,1,1,1);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /knife [1-4]");
    	}
    	return 1;
    }

    // Basket-ball
    if(strcmp(cmd, "/basket", true) == 0)
    {
        if (!strlen(cmdtext[8])) return SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /basket [1-6]");
    	switch (cmdtext[8])
    	{
        	case '1': ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.0,1,0,0,0,0);
        	case '2': ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.0,0,0,0,0,0);
        	case '3': ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.0,0,0,0,0,0);
        	case '4': ApplyAnimation(playerid,"BSKTBALL","BBALL_run",4.1,1,1,1,1,1);
        	case '5': ApplyAnimation(playerid,"BSKTBALL","BBALL_def_loop",4.0,1,0,0,0,0);
        	case '6': ApplyAnimation(playerid,"BSKTBALL","BBALL_Dnk",4.0,1,0,0,0,0);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /basket [1-6]");
    	}
    	return 1;
    }

    // Reloading guns
    if(strcmp(cmd, "/reload", true) == 0)
    {
        if (!strlen(cmdtext[8])) return SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /reload [deagle/smg/ak/m4]");
       	if (strcmp("deagle",cmdtext[8],true) == 0)
   	    {
   			ApplyAnimation(playerid,"COLT45","colt45_reload",4.0,0,0,0,0,1);
 	    }
 	    else if (strcmp("smg",cmdtext[8],true) == 0 || strcmp("ak",cmdtext[8],true) == 0 || strcmp("m4",cmdtext[8],true) == 0)
   	    {
   			ApplyAnimation(playerid,"UZI","UZI_reload",4.0,0,0,0,0,0);
 	    }
       	else SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /reload [deagle/smg/ak/m4]");
    	return 1;
    }

    if(strcmp(cmd, "/gwalk", true) == 0)
    {
        if (!strlen(cmdtext[6])) return SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /gwalk [1/2]");
        new style = strval(cmdtext[6]);
       	if (style == 1)
   	    {
   			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
 	    }
 	    else if (style == 2)
   	    {
   			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
 	    }
       	else SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /gwalk [1/2]");
    	return 1;
    }

    //Aiming animation
    if(strcmp(cmd, "/aim", true) == 0)
    {
        if (!strlen(cmdtext[5])) return SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /aim [1-.]");
    	switch (cmdtext[5])
    	{
        	case '1': ApplyAnimation(playerid,"PED","gang_gunstand",4.0,1,1,1,1,1);
        	case '2': ApplyAnimation(playerid,"PED","Driveby_L",4.0,0,1,1,1,1);
        	case '3': ApplyAnimation(playerid,"PED","Driveby_R",4.0,0,1,1,1,1);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /aim [1-3]");
    	}
    	return 1;
    }

    // Leaning animation
    if(strcmp(cmd, "/lean", true) == 0)
    {
        if (!strlen(cmdtext[6])) return SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /lean [1-2]");
    	switch (cmdtext[6])
    	{
        	case '1': ApplyAnimation(playerid,"GANGS","leanIDLE",4.0,0,1,1,1,0);
        	case '2': ApplyAnimation(playerid,"MISC","Plyrlean_loop",4.0,0,1,1,1,0);
        	default: SendClientMessage(playerid,0xEFEFF7AA,"USAGE: /lean [1-2]");
    	}
    	return 1;
    }

    if(strcmp(cmd, "/run", true) == 0)
    {
		ApplyAnimation(playerid,"PED","sprint_civi",floatstr(cmdtext[5]),1,1,1,1,1);
		printf("%f",floatstr(cmdtext[5]));
    	return 1;
    }

    // Clear
    if(strcmp(cmd, "/clearanim", true) == 0) {
		 //ClearAnimations(playerid);
		 ApplyAnimation(playerid, "CARRY", "crry_prtial", 1.0, 0, 0, 0, 0, 0);
         return 1;
    }


    // Bed Sleep R
    if(strcmp(cmd, "/inbedright", true) == 0) {
		 ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_R",4.0,1,0,0,0,0);
         return 1;
    }
    // Bed Sleep L
    if(strcmp(cmd, "/inbedleft", true) == 0) {
		 ApplyAnimation(playerid,"INT_HOUSE","BED_Loop_L",4.0,1,0,0,0,0);
         return 1;
    }


	// START DANCING
 	if(strcmp(cmd, "/dance", true) == 0) {

			// Get the dance style param
      		tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid,0xFF0000FF,"USAGE: /dance [style 1-4]");
				return 1;
			}

			dancestyle = strval(tmp);
			if(dancestyle < 1 || dancestyle > 4) {
			    SendClientMessage(playerid,0xFF0000FF,"USAGE: /dance [style 1-4]");
			    return 1;
			}

			if(dancestyle == 1) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
			} else if(dancestyle == 2) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
			} else if(dancestyle == 3) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
			} else if(dancestyle == 4) {
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
			}
 	  		return 1;
	}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////




	if (strcmp(cmdtext, "/god", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pAdmin] >= 3)
        	{
		        if(PlayerInfo[playerid][DutyG] == 0)
		        {
		            PlayerInfo[playerid][DutyG] = 1;
		            SendClientMessage(playerid, COLOR_GREEN,"* Вие вече сте God Mode! *");
					SetPlayerColor(playerid, COLOR_ADMIN);
					SetPlayerHealth(playerid, 9999399);
					SetPlayerArmour(playerid, 9999939);
				}
                else if(PlayerInfo[playerid][DutyG] == 1)
                {
				    PlayerInfo[playerid][DutyG] = 0;
					SendClientMessage(playerid, COLOR_RED,"* Вие вече не сте God Mode! *");
					SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
					SetPlayerHealth(playerid, 100);
					SetPlayerArmour(playerid, 100);
                }
				}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си админ!");
			}
		}
		return 1;
	}


	if (strcmp(cmdtext, "/aduty", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
        	{
		        if(PlayerInfo[playerid][aDuty] == 0)
		        {
		            PlayerInfo[playerid][aDuty] = 1;
		            SendClientMessage(playerid, COLOR_GREEN,"Ти сега си On-Duty и трябва да помагаш на играчите!");
					SetPlayerColor(playerid, COLOR_ADMIN);
					SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
				}
                else if(PlayerInfo[playerid][aDuty] == 1)
                {
				    PlayerInfo[playerid][aDuty] = 0;
					SendClientMessage(playerid, COLOR_RED,"Ти сега си Off-Duty и можеш да играеш спокойно!");
					SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
					SetPlayerHealth(playerid, 100);
					SetPlayerArmour(playerid, 100);
                }
				Delete3DTextLabel(Text3D:PlayerLabel);
                VIPLabel[playerid] = 0;
				}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си админ!");
			}
		}
		return 1;
	}
        
     	if (strcmp(cmdtext, "/tduty", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pTest] >= 1)
        	{
        	 new para1;
		        if(PlayerInfo[playerid][aDuty] == 0)
		        {
		            PlayerInfo[playerid][aDuty] = 1;
		            SendClientMessage(playerid, COLOR_GREEN,"Вие вече сте On Duty, за да го премахнете напишете /aduty");
					SetPlayerColor(playerid, COLOR_ADMIN);
					SetPlayerHealth(playerid, 100);
					SpawnPlayer(playerid);
					SetPlayerArmour(playerid, 100);
				}
                else if(PlayerInfo[playerid][aDuty] == 1)
                {
				    PlayerInfo[playerid][aDuty] = 0;
					SendClientMessage(playerid, COLOR_RED,"Вие вече сте Off Duty и неможете да помагате на другите");
					SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
					SpawnPlayer(para1);
					SetPlayerHealth(playerid, 100);
					SetPlayerArmour(playerid, 100);
                }
				Delete3DTextLabel(Text3D:PlayerLabel);
                VIPLabel[playerid] = 0;
				}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
        
    if (strcmp("/world1", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 1);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 1!");
		return 1;
		}
    }
    if (strcmp("/world2", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 1);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 2!");
		return 1;
		}
    }
    if (strcmp("/world3", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 3);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 3!");
		return 1;
		}
    }
    if (strcmp("/world4", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 4);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 4!");
		return 1;
		}
    }
    if (strcmp("/world5", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 5);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 5!");
		return 1;
		}
    }
    if (strcmp("/world6", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 6);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 6!");
		return 1;
		}
    }
    if (strcmp("/world7", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 7);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 7!");
		return 1;
		}
    }
    if (strcmp("/world8", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 8);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 8!");
		return 1;
		}
    }
    if (strcmp("/world9", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 9);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 9!");
		return 1;
		}
    }
    if (strcmp("/world10", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		SetPlayerVirtualWorld(playerid, 10);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти смени твоят Virtual World на 10!");
		return 1;
		}
    }
        if (strcmp("/risktp", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 1042.7651,1010.8513,11.0000);
        SendClientMessage(playerid, COLOR_WHITE, "Ти се телепортира на Risk");
		return 1;
		}
    }
    if (strcmp("/busjob", cmdtext, true, 10) == 0)
    {
    if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, -547.1551,2593.2791,53.5838);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на Bus Job!");
		return 1;
		}
    }
    if (strcmp("/sweepjob", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 583.4620,1223.7452,11.7113);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на Sweep Job!");
		return 1;
		}
    }
    
        if (strcmp("/carshop", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 1418.7048,-1699.9265,13.5469);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на Car Shop!");
		return 1;
		}
    }
              if (strcmp("/fish2", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, -1353.8081,2057.5544,53.1172);
		return 1;
		}
    }
    
            if (strcmp("/office", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 1796.0139,-1299.4607,13.4476);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на Офисите!");
		return 1;
		}
    }
    
                if (strcmp("/vipgang", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 1433.5029,-1881.9899,13.5469);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на VIP Gang!");
		return 1;
		}
    }
    
        if (strcmp("/towtruck", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 2136.5347,960.1835,10.8203);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на Tow Truck!");
		return 1;
		}
    }
    
    
        if (strcmp("/lsbank", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 1481.0829,-1768.2849,18.7958);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на Los Santos Bank!");
		return 1;
		}
    }
    
        if (strcmp("/pizzajob", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 1365.1487,250.2403,19.5669);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на Pizza Job!");
		return 1;
		}
    }
            if (strcmp("/coalminejob", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 837.1899,825.6196,12.5880);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на Coalmine Job!");
		return 1;
		}
    }
                if (strcmp("/pilotjob", cmdtext, true, 10) == 0)
    {
   if (PlayerInfo[playerid][pAdmin] >= 5)
		{
		SetPlayerPos(playerid, 1594.4180,1449.2341,10.8288);
        SendClientMessage(playerid, COLOR_YELLOW, "Ти се телепортира на Pilot Job!");
		return 1;
		}
    }
//-----------------------------------------
if(strcmp(cmd, "/buyws", true) == 0)
{
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен използвай /buyws confirm");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"confirm",true) == 0)
            {
        new stringa[256]; // String.
        if(IsPlayerConnected(playerid) == 1) // Checks if player is connected.
        {
            new points[248]; // Points.
            new nxtlevel = PlayerInfo[playerid][WsSkill]+1; // As soon as its executed, It adds +1 to your score.
            new expamount = nxtlevel*levelexp; // EP amount, Its 2 CURRENTLY but you can raise it by adding +number after levelEP
            if(PlayerInfo[playerid][Exp] < expamount) // Checks if player's EP amount is above the required one or not.
            {
                format(points,sizeof(points)," Трябват ти %d EP за да вдигнеш твоя Weapon Skill!", expamount, PlayerInfo[playerid][Exp]); // Format, This is pretty obvious.
                SendClientMessage(playerid,COLOR_GRAD1,points); // Sends the message
                return 1;
            }
            else
            {
                if(PlayerInfo[playerid][WsSkill] == 50){
		        SendClientMessage(playerid, COLOR_GRAD1,"Ти си достигнал Максимума!");
		        return 1;
	        	}
                if(PlayerInfo[playerid][WsSkill] >= 50){
		        SendClientMessage(playerid, COLOR_GRAD1,"Ти си достигнал Максимума!");
		        return 1;
	        	}
                PlayerInfo[playerid][Exp] -= expamount; //  Sets the EP amount to 0 as you level'd up.
                PlayerInfo[playerid][WsSkill]++; // Adds a level.
                format(stringa,sizeof(stringa),"Поздравления Ти вдигна твоя Weapon Skill на %d!", PlayerInfo[playerid][WsSkill]); // Format.
                SendClientMessage(playerid,COLOR_ORANGE,stringa); // Sends the message.
                return 1;
            }
            }
        }
        return 1;
}
//-----------------------------------------
//-----------------------------------------
//==============================================================================
if(strcmp(cmd, "/buyes", true) == 0)
{
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен използвай /buyes confirm");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"confirm",true) == 0)
            {
        new stringa[256]; // String.
        if(IsPlayerConnected(playerid) == 1) // Checks if player is connected.
        {
            new points[248]; // Points.
            new nxtlevel = PlayerInfo[playerid][EpSkill]+1; // As soon as its executed, It adds +1 to your score.
            new expamount = nxtlevel*50; // Exp amount, Its 2 CURRENTLY but you can raise it by adding +number after levelexp
            if(PlayerInfo[playerid][Exp] < expamount) // Checks if player's exp amount is above the required one or not.
            {
                format(points,sizeof(points)," Трябват ти %d EP, а в момента имаш %d!", expamount, PlayerInfo[playerid][Exp]); // Format, This is pretty obvious.
                SendClientMessage(playerid,COLOR_GRAD1,points); // Sends the message
                return 1;
            }
            else
            {
                PlayerInfo[playerid][Exp] -= expamount; //  Sets the EXP amount to 0 as you level'd up.
                PlayerInfo[playerid][EpSkill]++; // Adds a level.
                format(stringa,sizeof(stringa),"* Ти вдигна твоя Ep Skill на %d, Поздравления! *", PlayerInfo[playerid][EpSkill]); // Format.
                SendClientMessage(playerid,COLOR_ORANGE,stringa); // Sends the message.
                }
                return 1;
            }
        }
        return 1;
}
//
  if(strcmp(cmd, "/selloffice1", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis1] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis1] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office1] = 0;
strmid(OfInfo[0][OfficeOwner1], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice2", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis2] <= 2)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis2] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office2] = 0;
strmid(OfInfo[0][OfficeOwner2], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice3", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis3] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis3] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office3] = 0;
strmid(OfInfo[0][OfficeOwner3], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice4", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis4] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis4] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office4] = 0;
strmid(OfInfo[0][OfficeOwner4], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice5", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis5] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis5] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office5] = 0;
strmid(OfInfo[0][OfficeOwner5], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice6", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis6] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis6] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office6] = 0;
strmid(OfInfo[0][OfficeOwner6], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice7", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis7] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis7] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office7] = 0;
strmid(OfInfo[0][OfficeOwner7], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice8", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis8] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis8] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office8] = 0;
strmid(OfInfo[0][OfficeOwner8], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice9", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis9] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis9] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office9] = 0;
strmid(OfInfo[0][OfficeOwner9], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice10", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis10] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis10] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office10] = 0;
strmid(OfInfo[0][OfficeOwner10], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice11", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis11] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis11] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office11] = 0;
strmid(OfInfo[0][OfficeOwner11], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice12", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis12] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis12] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office12] = 0;
strmid(OfInfo[0][OfficeOwner12], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice13", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis13] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis13] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office13] = 0;
strmid(OfInfo[0][OfficeOwner13], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice14", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis14] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis14] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office14] = 0;
strmid(OfInfo[0][OfficeOwner14], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice15", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis15] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis15] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office15] = 0;
strmid(OfInfo[0][OfficeOwner15], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice16", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis16] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis16] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office16] = 0;
strmid(OfInfo[0][OfficeOwner16], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice17", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis17] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis17] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office17] = 0;
strmid(OfInfo[0][OfficeOwner17], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice18", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis18] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis18] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office18] = 0;
strmid(OfInfo[0][OfficeOwner18], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice19", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis19] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis19] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office19] = 0;
strmid(OfInfo[0][OfficeOwner19], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }
  if(strcmp(cmd, "/selloffice20", true) == 0)
 {
           	if(PlayerInfo[playerid][pOfis20] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш този офис");
		return 1;
	}
	PlayerInfo[playerid][pOfis] = 0;
    PlayerInfo[playerid][pOfis20] = 0;
	PlayerInfo[playerid][pCash] += 5000000;
    OfInfo[0][Office20] = 0;
strmid(OfInfo[0][OfficeOwner20], ("Без собственик"), 0, strlen(("Без собственик")), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Ти продаде своя офис и получи 1/3 от цената на офиса.");
    return 1;
  }





































































































//
  if(strcmp(cmd, "/buyoffice1", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
	          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
	if(PlayerInfo[playerid][pOfis1] >= 1 || PlayerInfo[playerid][pOfis2] >= 1 || PlayerInfo[playerid][pOfis3] >= 1 || PlayerInfo[playerid][pOfis4] >= 1 || PlayerInfo[playerid][pOfis5] >= 1 || PlayerInfo[playerid][pOfis6] >= 1 || PlayerInfo[playerid][pOfis7] >= 1 || PlayerInfo[playerid][pOfis8] >= 1 || PlayerInfo[playerid][pOfis9] >= 1 || PlayerInfo[playerid][pOfis10] >= 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да имаш повече от един офис!");
		return 1;
	}
	if(PlayerInfo[playerid][pOfis11] >= 1 || PlayerInfo[playerid][pOfis12] >= 1 || PlayerInfo[playerid][pOfis13] >= 1 || PlayerInfo[playerid][pOfis14] >= 1 || PlayerInfo[playerid][pOfis15] >= 1 || PlayerInfo[playerid][pOfis16] >= 1 || PlayerInfo[playerid][pOfis17] >= 1 || PlayerInfo[playerid][pOfis18] >= 1 || PlayerInfo[playerid][pOfis19] >= 1 || PlayerInfo[playerid][pOfis20] >= 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да имаш повече от един офис!");
		return 1;
	}
 if(OfInfo[0][Office1] == 0)
 {
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office1] = 1;
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    
strmid(OfInfo[0][OfficeOwner1], (name), 0, strlen((name)), 128);
    SaveOffices();
    SaveOffices2();
    SaveOffices3();
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
    if(strcmp(cmd, "/buyoffice2", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
	          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office2] == 0)
 {
  	new pname[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pname, sizeof(pname));
    PlayerInfo[playerid][pOfis2] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office2] = 1;
    SaveOffices();
    SaveOffices3();
    SaveOffices2();
        new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner2], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  //
    if(strcmp(cmd, "/buyoffice3", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office3] == 0)
 {
    PlayerInfo[playerid][pOfis3] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office3] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner3], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
    if(strcmp(cmd, "/buyoffice4", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office4] == 0)
 {
    PlayerInfo[playerid][pOfis4] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office4] = 1;
        SaveOffices();
        SaveOffices3();
                new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner4], (name), 0, strlen((name)), 128);
    SaveOffices2();
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  




  if(strcmp(cmd, "/buyoffice5", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office5] == 0)
 {
    PlayerInfo[playerid][pOfis5] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office5] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner5], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }





  if(strcmp(cmd, "/buyoffice6", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office6] == 0)
 {
    PlayerInfo[playerid][pOfis6] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office6] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner6], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }












  if(strcmp(cmd, "/buyoffice7", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office7] == 0)
 {

    PlayerInfo[playerid][pOfis7] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office7] = 1;
        SaveOffices();
        SaveOffices3();
                new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner7], (name), 0, strlen((name)), 128);
    SaveOffices2();
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }









  if(strcmp(cmd, "/buyoffice8", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office8] == 0)
 {

    PlayerInfo[playerid][pOfis8] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office8] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner8], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
  
  
  
  
    if(strcmp(cmd, "/buyoffice9", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office1] == 0)
 {

    PlayerInfo[playerid][pOfis9] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office9] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner9], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
  
  
  
  
  
  
    if(strcmp(cmd, "/buyoffice10", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office10] == 0)
 {

    PlayerInfo[playerid][pOfis10] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office10] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner10], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
  
  
  
    if(strcmp(cmd, "/buyoffice11", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office11] == 0)
 {

    PlayerInfo[playerid][pOfis11] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office11] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner11], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
    if(strcmp(cmd, "/buyoffice12", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office12] == 0)
 {

    PlayerInfo[playerid][pOfis12] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office12] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner12], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
  
  
    if(strcmp(cmd, "/buyoffice13", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office13] == 0)
 {

    PlayerInfo[playerid][pOfis13] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office13] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner13], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
  
  
  
  
    if(strcmp(cmd, "/buyoffice14", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office14] == 0)
 {

    PlayerInfo[playerid][pOfis14] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office14] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner14], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
  
    if(strcmp(cmd, "/buyoffice15", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
			          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office15] == 0)
 {

    PlayerInfo[playerid][pOfis15] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office15] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner15], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
    if(strcmp(cmd, "/buyoffice16", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
			          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office16] == 0)
 {

    PlayerInfo[playerid][pOfis16] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office16] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner16], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
  
    if(strcmp(cmd, "/buyoffice17", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
			          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office17] == 0)
 {

    PlayerInfo[playerid][pOfis17] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office17] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner17], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
    if(strcmp(cmd, "/buyoffice18", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
			          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office18] == 0)
 {

    PlayerInfo[playerid][pOfis18] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office18] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
            new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner18], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
    if(strcmp(cmd, "/buyoffice19", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
			          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office19] == 0)
 {
    PlayerInfo[playerid][pOfis19] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office19] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
        new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner19], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  
  
  
  
    if(strcmp(cmd, "/buyoffice20", true) == 0)
 {
          	if(PlayerInfo[playerid][pCash] <= 14999999)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари,трябва да имаш поне $15000000,за да купиш офиса");
		return 1;
	}
			          	if(PlayerInfo[playerid][EpSkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Ep Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][Level] <= 30)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Level,трябва да имаш поне 30,за да купиш офиса");
		return 1;
	}
		          	if(PlayerInfo[playerid][MoneySkill] <= 20)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно Money Skill,трябва да имаш поне 20,за да купиш офиса");
		return 1;
	}
 if(OfInfo[0][Office20] == 0)
 {
    PlayerInfo[playerid][pOfis20] = 1;
    PlayerInfo[playerid][pOfis1] = 1;
	PlayerInfo[playerid][pCash] -= 15000000;
    OfInfo[0][Office20] = 1;
        SaveOffices();
        SaveOffices3();
    SaveOffices2();
        new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    strmid(OfInfo[0][OfficeOwner20], (name), 0, strlen((name)), 128);
    SendClientMessage(playerid, COLOR_ORANGE, "Честито,Ти си купи офис.");
    }
    else
    {
                format(string,sizeof(string),"Този офис е купен"); // Format.
                SendClientMessage(playerid,COLOR_GRAD1,string); // Sends the message.
    }
    return 1;
  }
  //
if(strcmp(cmd, "/buyms", true) == 0)
{
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен използвай /buyms confirm");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"confirm",true) == 0)
            {
        new stringa[256]; // String.
        if(IsPlayerConnected(playerid) == 1) // Checks if player is connected.
        {
            new points[248]; // Points.
            new nxtlevel = PlayerInfo[playerid][MoneySkill]+1; // As soon as its executed, It adds +1 to your score.
            new expamount = nxtlevel*1000000; // Exp amount, Its 2 CURRENTLY but you can raise it by adding +number after levelexp
            if(PlayerInfo[playerid][pCash] < expamount) // Checks if player's exp amount is above the required one or not.
            {
                format(points,sizeof(points)," Трябват ти $%d а в момента имаш $%d !", expamount, PlayerInfo[playerid][pCash]); // Format, This is pretty obvious.
                SendClientMessage(playerid,COLOR_GRAD1,points); // Sends the message
                return 1;
            }
            else
            {
                PlayerInfo[playerid][pCash] -= expamount; //  Sets the EXP amount to 0 as you level'd up.
     		    ResetMoneyBar(playerid);
	            UpdateMoneyBar(playerid,PlayerInfo[playerid][pCash]);
                PlayerInfo[playerid][MoneySkill]++; // Adds a level.
                format(stringa,sizeof(stringa),"* Ти вдигна твоя Money Skill на %d, Поздравления! *", PlayerInfo[playerid][MoneySkill]); // Format.
                SendClientMessage(playerid,COLOR_ORANGE,stringa); // Sends the message.
                }
                return 1;
            }
        }
        return 1;
}
if(strcmp(cmd, "/buylevel", true) == 0)
{
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен използвай /buylevel confirm");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"confirm",true) == 0)
            {
        new stringa[256]; // String.
        if(IsPlayerConnected(playerid) == 1) // Checks if player is connected.
        {
            new points[248]; // Points.
            new nxtlevel = PlayerInfo[playerid][Level]+1; // As soon as its executed, It adds +1 to your score.
            new expamount = nxtlevel*levelexp; // EP amount, Its 2 CURRENTLY but you can raise it by adding +number after levelEP
            if(PlayerInfo[playerid][Exp] < expamount) // Checks if player's EP amount is above the required one or not.
            {
                format(points,sizeof(points)," Трябват ти %d EP за да вдигнеш твоя Level!", expamount, PlayerInfo[playerid][Exp]); // Format, This is pretty obvious.
                SendClientMessage(playerid,COLOR_GRAD1,points); // Sends the message
                return 1;
            }
            else
            {
                PlayerInfo[playerid][Exp] -= expamount; //  Sets the EP amount to 0 as you level'd up.
                PlayerInfo[playerid][Level]++; // Adds a level.
                format(stringa,sizeof(stringa),"* Ти вдигна твоя левел на %d, Поздравления! *", PlayerInfo[playerid][Level]); // Format.
                SendClientMessage(playerid,COLOR_ORANGE,stringa); // Sends the message.
                }
                return 1;
            }
        }
        return 1;
}
//
    if  (strcmp(cmdtext, "/buyo33333333333333333333333fficec333333333333ar", true)==0) // to set the vehicle that you register to be teleported
        {
        if (GetPlayerMoney(playerid) < CAR_COST)
            {
            SendClientMessage(playerid,COLOR_YELLOW,"Нямаш достатъчно пари.");
            return 1;
            }
        if  (!(IsPlayerInAnyVehicle(playerid)))
            {
            SendClientMessage(playerid,COLOR_YELLOW,"Вземете някоя кола за да я купите.");
            return 1;
            }
        if  (owner[GetPlayerVehicleID(playerid)]!=-1)
            {
            SendClientMessage(playerid,COLOR_YELLOW,"Този автомобил има собственик");
            return 1;
            }
        if  (ownedcar[playerid]!=-1)
            {
            SendClientMessage(playerid,COLOR_YELLOW,"Използвай /sellmycar за да си продадеш колата.");
            return 1;
            }
        ownedcar[playerid] = GetPlayerVehicleID(playerid);
        owner[ownedcar[playerid]] = playerid;
        SendClientMessage(playerid,COLOR_YELLOW,"Ти си купи нова кола.");
        GivePlayerCash(playerid,-CAR_COST);
        return 1;
        }
//
    if  (strcmp(cmdtext, "/sello33333333333333333333333333333333fficecar", true)==0)
        {
        if  (ownedcar[playerid]==-1)
            {
            SendClientMessage(playerid,COLOR_YELLOW,"Ти не претижаваш тази кола..");
            return 1;
            }
                if      (lockedCar[ownedcar[playerid]]==1)
                    {
                    lockedCar[ownedcar[playerid]]=0;
                for     (new i=0;i<MAX_PLAYERS;i++)
                    {
                    SetVehicleParamsForPlayer(ownedcar[playerid],i, 0, 0);
                    }
                    }
        owner[ownedcar[playerid]] = -1;
        ownedcar[playerid] = -1;
        SendClientMessage(playerid,COLOR_YELLOW,"Kато си продавате колата ще получите половината пари които сте дали за  кола");
        GivePlayerCash(playerid,CAR_COST/2);
        return 1;
        }
//
    if  (strcmp(cmd,"/ejecto", true)==0){
    			if (PlayerInfo[playerid][pAdmin] <= 5)
			{
			SendClientMessage(playerid,COLOR_GRAD1,"Нямаш права за да използваш тази команда!");
			}
                new vehicleid;
                new pid;
                new playerstate = GetPlayerState(playerid);
                tmp = strtok(cmdtext,idx);
                if      (!IsPlayerInAnyVehicle(playerid))
                        {
                        SendClientMessage(playerid,COLOR_YELLOW,"Ти не си в кола");
                        return 1;
                        }
                if      (playerstate == PLAYER_STATE_PASSENGER)
                        {
                        SendClientMessage(playerid,COLOR_GRAD1,"Неможеш да използваш тази команда!");
                        return 1;
                        }
                vehicleid = GetPlayerVehicleID(playerid);
                if      (!strlen(tmp))
                        {
                        SendClientMessage(playerid,COLOR_WHITE,"USAGE: /eject [playerid]");
                        return 1;
                        }
                pid = strval(tmp);
                if      (!IsPlayerConnected(pid))
                        {
                        SendClientMessage(playerid,COLOR_GRAD1,"Играчът не е влязъл...");
                        return 1;
                        }
                if      (!IsPlayerInVehicle(pid,vehicleid))
                        {
                        SendClientMessage(playerid,COLOR_GRAD1,"Играчът не е в кола...");
                        return 1;
                        }
                else
                        {
                        RemovePlayerFromVehicle(pid);
                        GameTextForPlayer(pid,"~r~YOU'VE BEEN EJECTED!",3000,5);
                        return 1;
                        }
                }
    if  (strcmp(cmd,"/ejectallo", true)==0){
    			if (PlayerInfo[playerid][pAdmin] <= 5)
			{
			                        SendClientMessage(playerid,COLOR_GRAD1,"Нямаш права за да използваш тази команда!");

			}
                new vehicleid;
                new playerstate = GetPlayerState(playerid);
                if      (!IsPlayerInAnyVehicle(playerid))
                        {
                        SendClientMessage(playerid,COLOR_YELLOW,"Ти не си в кола");
                        return 1;
                        }
                if      (playerstate == PLAYER_STATE_PASSENGER)
                        {
                        SendClientMessage(playerid,COLOR_GRAD1,"Неможеш да използваш тази команда!");
                        return 1;
                        }
                vehicleid = GetPlayerVehicleID(playerid);
                for (new i=0;i<MAX_PLAYERS;i++)
                    {
                        if      ((IsPlayerConnected(i))&&(IsPlayerInVehicle(i,vehicleid)))
                                {
                                RemovePlayerFromVehicle(i);
                                GameTextForPlayer(i,"~r~YOU'VE BEEN EJECTED!",3000,5);
                                return 1;
                                }
                        }
                }
//



	if(strcmp(cmd,"/arefuel",true)==0)
	{
	new vehicle;
	vehicle = GetPlayerVehicleID(playerid);
if(vehicle > 0)
{
					                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
	    					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
        if(PlayerInfo[playerid][pAdmin] >= 3)
        {
            if(PlayerInfo[playerid][pRefuel9] <= 0)
			{
                new vid = GetPlayerVehicleID(playerid);
		        fuel[vid] = fuel[vid] +100;
                SendClientMessage(playerid,COLOR_YELLOW,"Ти добави 100 литра бензин на твоето превозно средство");
				PlayerInfo[playerid][pRefuel9] = 6*60;
				}
				else
				{
				SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство");
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Не са минали 6 минути от последното използване на командата!");
			}
		}
     	return 1;
	}










	if(strcmp(cmd,"/vrefuel",true)==0)
	{
	new vehicle;
	vehicle = GetPlayerVehicleID(playerid);
if(vehicle > 0)
{
					                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
	    					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
        if(PlayerInfo[playerid][pDonateRank] >= 5)
        {
            if(PlayerInfo[playerid][pRefuel9] <= 0)
			{
                new vid = GetPlayerVehicleID(playerid);
		        fuel[vid] = fuel[vid] +20;
                SendClientMessage(playerid,COLOR_YELLOW,"Ти добави 20 литра бензин на твоето превозно средство");
				PlayerInfo[playerid][pRefuel9] = 6*60;
				}
				else
				{
				SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в превозно средство");
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Не са минали 6 минути от последното използване на командата!");
			}
		}
     	return 1;
	}
	
	if(strcmp(cmd,"/healme",true)==0)
	{
		    if(PlayerInfo[playerid][pDuelMoney2] >= 1 || PlayerInfo[playerid][pDuelMoney] >= 1)
	    {
	    				    format(string, sizeof(string), "Ти си в дуел и не можеш да ползваш тази команда!");
	                SendClientMessage(playerid, COLOR_WHITE,string);
	    return 1;
	    }
					                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
	    					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
        if(PlayerInfo[playerid][pDonateRank] >= 4)
        {
            if(PlayerInfo[playerid][pHealme] <= 0)
			{
		     	SetPlayerHealth(playerid, 100);
		     	SetPlayerArmour(playerid, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Ти зареди твоята кръв и жилетка на 100!");
				PlayerInfo[playerid][pHealme] = 6*60;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Не са минали 6 минути от последното използване на командата!");
			}
		}
     	return 1;
	}
//
//
	if(strcmp(cmd, "/viphelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new vipcommands[2230];
            strins(vipcommands,"{00FF00}VIP MOD системата е услуга която ви дава по-голям набор от команди и бонуси\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}VIP MOD системата може да се получи чрез канене на хора VIP левелите са до 7-ти левел\n\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}------------= Бонуси =--------------\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} \n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 1 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}Когато убиеш играч получаваш $250, а когато умреш губиш $50\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 2 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{336600}На всеки Payday получаваш 1EP и $1000\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 3 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}На всеки Payday получаваш 2EP и $2000\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}Времето за чакане на нова работа е 30 минути\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 4 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{336600}На всеки Payday получаваш 3EP и $3000\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Времето за чакане на нова работа е 30 минути\n",strlen(vipcommands));
		    strins(vipcommands,"{FFFFFF}При всеки SPAWN те пуска с 100 ARMOUR\n\n",strlen(vipcommands));
		    strins(vipcommands,"{336600}Ще имаш закачен 3D текст на главата - VIP\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Ще имаш лазер на оръжията - M4 и MP5\n",strlen(vipcommands));
		    strins(vipcommands,"{FFFFFF}Ще получаваш 2EP за всяка свършена работа\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 5 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{336600}На всеки Payday получаваш 4EP и $4000\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}При всеки SPAWN ще те пуска с 5 гранати\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 6 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}На всеки Payday получаваш 5EP и $5000\n",strlen(vipcommands));
            strins(vipcommands,"{336600}При всеки SPAWN ще те пуска с още 5 гранати\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Времето за чакане на нова работа е 20 минути\n",strlen(vipcommands));
		    strins(vipcommands,"{FFFFFF}Ще получаваш 3EP за всяка свършена работа\n",strlen(vipcommands));
            strins(vipcommands,"{336600}Когато си в кола и натиснеш Y превозното средство ще се FLIP-ва\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Kaто убиеш играч ще получаваш $500\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 7 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}На всеки Payday получаваш 6EP и $6000\n",strlen(vipcommands));
            strins(vipcommands,"{336600}Ще получаваш 4EP за всяка свършена работа\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Kaто убиеш играч ще получаваш $600\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}При всеки SPAWN ще те пуска с още 6 гранати\n",strlen(vipcommands));
            strins(vipcommands,"{336600}Времето за чакане на нова работа е 10 минути\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}Цъкни на бутона Команди за да видиш всички VIP команди \n",strlen(vipcommands));
            ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX,"{FFFFFF}VIP {336600}MOD {FF0000}BONUS",vipcommands,"Команди","Изход");
	    }
     	return 1;
	}
//help


    
	if (strcmp("/speed", cmdtext, true, 10) == 0)
	{
		        if(PlayerInfo[playerid][pManage] >= 1)
        	{
		        if(PlayerInfo[playerid][aDuty] == 1)
		        {
	if(Speed[playerid] == 1)
    {SendClientMessage(playerid, 0xFFFF00FF, "{FFFFFF}SERVER: Ти деактивира Fly Mode");
	 Speed[playerid]=0;
	 return 1;
	}
	if(Speed[playerid] == 0)
	{
 		SendClientMessage(playerid, 0xFFFF00FF, "{FFFFFF}SERVER: Ти активира Fly Mode");
 		SendClientMessage(playerid, 0xFFFF00FF, "{FFFFFF}SERVER: Натисни Лявото копче на мишката(LMB) или Alt, за да използваш Speed мода");
		Speed[playerid]=1;
		}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
		}
				}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти трябва да си Admin On Duty");
		}
		return 1;
	}
  }




	if (strcmp("/jump", cmdtext, true, 10) == 0)
	{
		        if(PlayerInfo[playerid][pManage] >= 1)
        	{
		        if(PlayerInfo[playerid][aDuty] == 1)
		        {
	if(Jump[playerid] == 1)
    {SendClientMessage(playerid, 0xFFFF00FF, "{FFFFFF}SERVER: Ти деактивира Jump Mode");
	 Jump[playerid]=0;
	 return 1;
	}
	if(Jump[playerid] == 0)
	{
 		SendClientMessage(playerid, 0xFFFF00FF, "{FFFFFF}SERVER: Ти активира Fly Mode");
		Jump[playerid]=1;
		}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
		}
				}
		else
		{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти трябва да си Admin On Duty");
		}
		return 1;
	}
  }






					if(strcmp(cmd, "/fly", true) == 0)
	{
		        if(PlayerInfo[playerid][pManage] >= 1)
        	{
		        if(PlayerInfo[playerid][aDuty] == 1)
		        {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp)) { if(fly[playerid] == 1) { fly[playerid] = 0; SendClientMessage(playerid,COLOR_YELLOW,"{FFFFFF}SERVER: Ти деактивира Fly Mode."); TogglePlayerControllable(playerid,true); return 1; } else if(fly[playerid] == 0) { fly[playerid] = 1; SendClientMessage(playerid,COLOR_YELLOW,"{5065D9}Fly мода е вкючен."); TogglePlayerControllable(playerid,false); return 1; } }
if(strcmp(tmp, "on", true) == 0) { fly[playerid] = 1; SendClientMessage(playerid,COLOR_YELLOW,"{FFFFFF}SERVER: Ти активира Fly Mode."); TogglePlayerControllable(playerid,false); return 1; }
else if(strcmp(tmp, "off", true) == 0) { fly[playerid] = 0; SendClientMessage(playerid,COLOR_YELLOW,"{FFFFFF}SERVER: Ти деактивира Fly Mode."); TogglePlayerControllable(playerid,true); return 1; }
}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Ти трябва да си Admin On Duty");
}

}
else
{
SendClientMessage(playerid,COLOR_GRAD1,"Нямаш права за да ползваш командата!");
}
return 1;
}




					if(strcmp(cmd, "/placebomb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pBombs] >= 1)
			{
			 PlayerInfo[playerid][pBombs] -= 1;
			 PlayerInfo[playerid][pPlacedB] = 1;
			 PlayerInfo[playerid][pActivatedB] = 1;
			 GetPlayerPos(playerid, C4P[playerid][0],C4P[playerid][1],C4P[playerid][2]);
			 SendClientMessage(playerid,COLOR_ORANGE,"Ти постави бомба");
			 BombC[playerid] = 1;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш нито една бомба");
			}
		}
     	return 1;
	}


					if(strcmp(cmd, "/bomb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pPlacedB] == 1)
			{
						if (PlayerInfo[playerid][pActivatedB] == 1)
			{
			 PlayerInfo[playerid][pPlacedB] = 0;
			 PlayerInfo[playerid][pActivatedB] = 0;
			 CreateExplosion(C4P[playerid][0],C4P[playerid][1],C4P[playerid][2]-9, 7, 1.0);
			 SendClientMessage(playerid,COLOR_ORANGE,"Ти взриви бомба");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Твоята бомба не е активирана");
			}
			
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти не си поставил бомба");
			}
		}
     	return 1;
	}





	if (strcmp("/refuel2", cmdtext, true, 10) == 0)
	{
ShowPlayerDialog(playerid,67,DIALOG_STYLE_INPUT,"Teleports","Place\t\tID\nLs Airport\t1\nLv Airport\t2","Choose","Close");
return 1;
}
//
					if(strcmp(cmd, "/ramping", true) == 0)
	{
				        if (PlayerInfo[playerid][pDonateRank] >= 4)
			{
	if(Enabled[playerid] == 1)
    {SendClientMessage(playerid, 0xFFFF00FF, "Рампите са изключени!");
	 Enabled[playerid]=0;
	 Pers[playerid]=0;
	 return 1;
	}
	if(Enabled[playerid] == 0)
	{
 		SendClientMessage(playerid, 0xFFFF00FF, "Рампите са включени!");
 		SendClientMessage(playerid, 0xFFFF00FF, "Натиснете (Ctrl или Left Alt) за да пуснете рампа!");
		Enabled[playerid]=1;
		Pers[playerid]=1655;
		}
		return 1;
	}
  }




					if(strcmp(cmd, "/myramp1", true) == 0)
	{
	if(Enabled[playerid] == 0) return SendClientMessage(playerid, 0xFF0000FF, "You have to enable ramping first! (/ramping)!");
	SendClientMessage(playerid, 0xFFFF00FF, "Ramp changed to Type 1!");
	Pers[playerid]=1655;
	return 1;
	}

					if(strcmp(cmd, "/myramp2", true) == 0)
	{
	if(Enabled[playerid] == 0) return SendClientMessage(playerid, 0xFF0000FF, "You have to enable ramping first! (/ramping)!");
	SendClientMessage(playerid, 0xFFFF00FF, "Ramp changed to Type 2!");
	Pers[playerid]=1632;
	return 1;
	}

					if(strcmp(cmd, "/myramp3", true) == 0)
	{
	if(Enabled[playerid] == 0) return SendClientMessage(playerid, 0xFF0000FF, "You have to enable ramping first! (/ramping)!");
	SendClientMessage(playerid, 0xFFFF00FF, "Ramp changed to Type 3!");
	Pers[playerid]=1631;
	return 1;
	}


					if(strcmp(cmd, "/myramp4", true) == 0)
	{
	if(Enabled[playerid] == 0) return SendClientMessage(playerid, 0xFF0000FF, "You have to enable ramping first! (/ramping)!");
	SendClientMessage(playerid, 0xFFFF00FF, "Ramp changed to Type 4!");
	Pers[playerid]=8302;
	return 1;
	}


					if(strcmp(cmd, "/myramp5", true) == 0)
	{
	if(Enabled[playerid] == 0) return SendClientMessage(playerid, 0xFF0000FF, "You have to enable ramping first! (/ramping)!");
	SendClientMessage(playerid, 0xFFFF00FF, "Ramp changed to Type 5!");
	Pers[playerid]=1503;
	return 1;
	}

					if(strcmp(cmd, "/myramp", true) == 0)
	{
	SendClientMessage(playerid, 0xFF0000FF, "Използвай:  /myramp [1-5]!");
	return 1;
	}





	
	
	
	
	
	
	
		if(strcmp(cmd, "/ramphelp", true) == 0)
	{
		        if (PlayerInfo[playerid][pDonateRank] >= 4)
			{
	SendClientMessage(playerid, 0xFF0000FF, "Информация за рампите:");
	SendClientMessage(playerid, 0xFFFFFFFF, "Използвай /ramping, за да ги включиш.");
	SendClientMessage(playerid, 0xFFFFFFFF, "Използвай /ramp [1-5], за да промениш своята рампа.");
	SendClientMessage(playerid, 0xFFFFFFFF, "За да пуснеш рампа натисти (Ctrl или Left Alt)");
	SendClientMessage(playerid, 0xFFFFFFFF, "За да премахнеш рампите напиши отново /ramping.");
		}
	return 1;
	}
	
	
	
	
	
	
	
	if(strcmp(cmd, "/mph", true) == 0)
	{
        format(string, 256, "* Скороста вече ще я показва в m/s *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        Mph[playerid] = 1;
		return 1;
	}
		if(strcmp(cmd, "/kph", true) == 0)
	{
        format(string, 256, "* Скороста вече ще я показва в km/h *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        Mph[playerid] = 0;
		return 1;
	}
//
	if(strcmp(cmd, "/speedo", true) == 0)
	{
 if(timed4[playerid] == 0)
 {
        format(string, 256, "* Вие премахнахте вашия Speedo от екрана *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        TextDrawHideForPlayer(playerid, SPEEDOS[playerid]);
        TextDrawHideForPlayer(playerid, timed[playerid]);
        TextDrawHideForPlayer(playerid, VehHealthBar[playerid]);
        TextDrawHideForPlayer(playerid, td_fuel[playerid]);
        return 1;
        }
         if(timed4[playerid] == 1)
 {
        format(string, 256, "* Вие сложихте вашия Speedo на екрана *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        TextDrawShowForPlayer(playerid, SPEEDOS[playerid]);
        TextDrawShowForPlayer(playerid, timed[playerid]);
        TextDrawShowForPlayer(playerid, VehHealthBar[playerid]);
        TextDrawShowForPlayer(playerid, td_fuel[playerid]);
         return 1;
        }
		return 1;
	}
	
	if(strcmp(cmd, "/time", true) == 0)
	{
 if(timed[playerid] == 0)
 {
        format(string, 256, "* Вие премахнахте вашия часовник от екрана *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        TextDrawHideForPlayer(playerid, ClockData[playerid]);
        timed[playerid] = 1;
        return 1;
        }
         if(timed[playerid] == 1)
 {
        format(string, 256, "* Вие сложихте вашия часовник на екрана *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        TextDrawShowForPlayer(playerid, ClockData[playerid]);
        timed[playerid] = 0;
         return 1;
        }
		return 1;
	}
	if(strcmp(cmd, "/statistic", true) == 0)
	{
 if(timed2[playerid] == 1)
 {
        format(string, 256, "* Вие сложихте статистиката на вашия екран *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        TextDrawShowForPlayer(playerid, Text[playerid]);
        TextDrawShowForPlayer(playerid, Text1[playerid]);
        timed2[playerid] = 0;
         return 1;
        }
         if(timed2[playerid] == 0)
 {
        format(string, 256, "* Вие премахнахте статистиката на вашия екран *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        TextDrawHideForPlayer(playerid, Text[playerid]);
        TextDrawHideForPlayer(playerid, Text1[playerid]);
        timed2[playerid] = 1;
         return 1;
        }
		return 1;
	}
if(strcmp(cmd, "/goldplay", true) == 0)
	{
 if(timed3[playerid] == 1)
 {
        format(string, 256, "* Вие добавихте Gold-Play на екрана *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        TextDrawShowForPlayer(playerid, Txt1);
         return 1;
        }
         if(timed3[playerid] == 0)
 {
        format(string, 256, "* Вие премахнахте Gold-Play от екрана *");
        SendClientMessage(playerid, COLOR_YELLOW, string);
        TextDrawHideForPlayer(playerid, Txt1);
         return 1;
        }
		return 1;
	}

//
	if(strcmp(cmd, "/turfhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new cmds[2230];
            strins(cmds,"{FF0000}За да стартираш Turf War, трябва да си поне пом.лидер,и трябва да напишеш /turfattack.\n",strlen(cmds));
            strins(cmds,"{FF0000}Трябва вашета банда да има най много убиства или територията ще си остане на другата банда.\n",strlen(cmds));
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{FF0000}TURF HELP",cmds,"Изход","");
		}
		return 1;
	}
	if(strcmp(cmd, "/exit", true) == 0)
	{
 if(PlayerInfo[playerid][pInHouse] == 0 && PlayerInfo[playerid][pInBiz] == 0)
 {
 SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в къща или бизнес");
 return 1;
 }
            if (GetPlayerState(playerid) == 2)
            {
               new tmpcar = GetPlayerVehicleID(playerid);
               SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
               TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
               SetPlayerVirtualWorld(playerid,0);
               PlayerInfo[playerid][pInHouse] = 0;
               PlayerInfo[playerid][pInBiz] = 0;
            }
            else
            {
               SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
               SetPlayerVirtualWorld(playerid,0);
               PlayerInfo[playerid][pInHouse] = 0;
               PlayerInfo[playerid][pInBiz] = 0;
            }
            PlayerInfo[playerid][pInHouse] = 0;
            PlayerInfo[playerid][pInBiz] = 0;
            SetPlayerVirtualWorld(playerid,0);
            SetPlayerInterior(playerid, 0);
	 return 1;
  }

	if(strcmp(cmd, "/buybiz", true) == 0)
	{
	if(IsPlayerConnected(playerid)){
	    for(new h; h<MAX_HOUSES; h++){
	    if(HouseInfo[h][Bus] >= 1)
	    {
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
		        	if(HouseInfo[h][hSellable] == 0)
					{
					SendClientMessage(playerid, COLOR_GRAD1, "Този бизнес не се продава");
		        	}
			            if(GetPlayerMoney(playerid) < HouseInfo[h][hSell]) return SendClientMessage(playerid, COLOR_WHITE, ".:: [ERROR]: Ти нямаш достатачно пари.");
			            	if(PlayerInfo[playerid][Level] < HouseInfo[h][hLevel])
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво за тази къща!");
	return 1;
	}
	if(PlayerInfo[playerid][pBizO] >= 1 && PlayerInfo[playerid][pAdmin] <= 6)
{
	SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да имаш два бизнеса!");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 0 && PlayerInfo[playerid][EpSkill] < 1 && HouseInfo[h][hLevel] == 1)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 3 && PlayerInfo[playerid][EpSkill] < 2 && HouseInfo[h][hLevel] == 2)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 5 && PlayerInfo[playerid][EpSkill] < 3 && HouseInfo[h][hLevel] == 3)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 6 && PlayerInfo[playerid][EpSkill] < 5 && HouseInfo[h][hLevel] == 4)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 7 && PlayerInfo[playerid][EpSkill] < 6 && HouseInfo[h][hLevel] == 5)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 8 && PlayerInfo[playerid][EpSkill] < 7 && HouseInfo[h][hLevel] == 6)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 8 && PlayerInfo[playerid][EpSkill] < 8 && HouseInfo[h][hLevel] == 7)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 9 && PlayerInfo[playerid][EpSkill] < 8 && HouseInfo[h][hLevel] == 8)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 9 && PlayerInfo[playerid][EpSkill] < 9 && HouseInfo[h][hLevel] == 9)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 9 && PlayerInfo[playerid][EpSkill] < 10 && HouseInfo[h][hLevel] == 10)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 12 && PlayerInfo[playerid][EpSkill] < 12 && HouseInfo[h][hLevel] == 11)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 14 && PlayerInfo[playerid][EpSkill] < 14 && HouseInfo[h][hLevel] == 12)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 18 && PlayerInfo[playerid][EpSkill] < 15 && HouseInfo[h][hLevel] == 13)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
		if(PlayerInfo[playerid][MoneySkill] < 19 && PlayerInfo[playerid][EpSkill] < 16 && HouseInfo[h][hLevel] == 14)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
		if(PlayerInfo[playerid][MoneySkill] < 19 && PlayerInfo[playerid][EpSkill] < 17 && HouseInfo[h][hLevel] == 15)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
			if(PlayerInfo[playerid][MoneySkill] < 19 && PlayerInfo[playerid][EpSkill] < 17 && HouseInfo[h][hLevel] == 16)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
			if(PlayerInfo[playerid][MoneySkill] < 19 && PlayerInfo[playerid][EpSkill] < 17 && HouseInfo[h][hLevel] == 17)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
			if(PlayerInfo[playerid][MoneySkill] < 19 && PlayerInfo[playerid][EpSkill] < 17 && HouseInfo[h][hLevel] == 18)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 100 && PlayerInfo[playerid][EpSkill] < 100 && HouseInfo[h][hLevel] == 19)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	
	
				            	if(PlayerInfo[playerid][pBizO] == 1 && PlayerInfo[playerid][pAdmin] <= 6)
{
	SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да имаш два бизнеса!");
	return 1;
	}
	PlayerInfo[playerid][pBizO] = 1;
						HouseInfo[h][hSellable] = 0; GivePlayerMoney(playerid, -HouseInfo[h][hSell]);
						format(HouseInfo[h][hOwner], 24, "%s", GetName(playerid)); SavePlayerHouse(h);
						SavePlayerHouse(h);
						format(HouseInfo[h][hName], 24, "%s", GetName(playerid)); SavePlayerHouse(h);
						format(HouseInfo[h][hOwner], 24, "%s", GetName(playerid)); SavePlayerHouse(h);
						SavePlayerHouse(h);
						PlayerInfo[playerid][pEarnings] = 0;
						new earnings = HouseInfo[h][Earnings];
						PlayerInfo[playerid][pEarnings] += earnings;
						     new bizpayday = HouseInfo[h][bPay];
      PlayerInfo[playerid][pBizPayday] = bizpayday;
		    format(PlayerInfo[playerid][pBiz1], 24, "%d", h);
		    PlayerInfo[playerid][pBiz2] = HouseInfo[h][hExitY];
		    PlayerInfo[playerid][pBiz3] = HouseInfo[h][hExitZ];
			        	SendClientMessage(playerid, COLOR_WHITE, "{80BFFF} Честито вие си купихте бизнес.");
		    } } }
		    }
	return 1;
}
	if(strcmp(cmd, "/buyhouse", true) == 0)
	{
	if(IsPlayerConnected(playerid)){
	    for(new h; h<MAX_HOUSES; h++){
	    if(HouseInfo[h][Bus] == 0)
	    {
		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
		        if(strcmp(HouseInfo[h][hName],GetName(playerid), false ) != 0){
		        	if(HouseInfo[h][hSellable] == 1){
			            if(GetPlayerMoney(playerid) < HouseInfo[h][hSell]) return SendClientMessage(playerid, COLOR_WHITE, ".:: [ERROR]: Ти нямаш достатачно пари.");
			            	if(PlayerInfo[playerid][Level] < HouseInfo[h][hLevel])
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно голямо ниво за тази къща!");
	return 1;
	}
	if(PlayerInfo[playerid][pHouseO] >= 1 && PlayerInfo[playerid][pAdmin] <= 6)
{
	SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да имаш две къщи!");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 0 && PlayerInfo[playerid][EpSkill] < 1 && HouseInfo[h][hLevel] == 1)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 3 && PlayerInfo[playerid][EpSkill] < 2 && HouseInfo[h][hLevel] == 2)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 5 && PlayerInfo[playerid][EpSkill] < 3 && HouseInfo[h][hLevel] == 3)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 6 && PlayerInfo[playerid][EpSkill] < 5 && HouseInfo[h][hLevel] == 4)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 7 && PlayerInfo[playerid][EpSkill] < 6 && HouseInfo[h][hLevel] == 5)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 8 && PlayerInfo[playerid][EpSkill] < 7 && HouseInfo[h][hLevel] == 6)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 8 && PlayerInfo[playerid][EpSkill] < 8 && HouseInfo[h][hLevel] == 7)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 9 && PlayerInfo[playerid][EpSkill] < 8 && HouseInfo[h][hLevel] == 8)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 9 && PlayerInfo[playerid][EpSkill] < 9 && HouseInfo[h][hLevel] == 9)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 9 && PlayerInfo[playerid][EpSkill] < 10 && HouseInfo[h][hLevel] == 10)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 12 && PlayerInfo[playerid][EpSkill] < 12 && HouseInfo[h][hLevel] == 11)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 14 && PlayerInfo[playerid][EpSkill] < 14 && HouseInfo[h][hLevel] == 12)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
	if(PlayerInfo[playerid][MoneySkill] < 18 && PlayerInfo[playerid][EpSkill] < 15 && HouseInfo[h][hLevel] == 13)
	{
	SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно ES и MS за тази къща");
	return 1;
	}
			    format(PlayerInfo[playerid][pHouse1], 24, "%d", h);
		    PlayerInfo[playerid][pHouse2] = HouseInfo[h][hExitY];
		    PlayerInfo[playerid][pHouse3] = HouseInfo[h][hExitZ];
	PlayerInfo[playerid][pHouseO] = 1;
						HouseInfo[h][hSellable] = 0; GivePlayerMoney(playerid, -HouseInfo[h][hSell]);
						format(HouseInfo[h][hOwner], 24, "%s", GetName(playerid));
			        	format(HouseInfo[h][hName], 24, "%s", GetName(playerid)); SavePlayerHouse(h);
			        	SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Честито вие си купихте къща къща.");
          			} else return SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Тази къща несе продава.");
   				} else return SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Тази къща не се продава.");
		    } } }
		    }
	return 1;
}
//
	if(strcmp(cmd, "/info", true) == 0)
	{
	if(IsPlayerConnected(playerid)){
	    for(new h; h<MAX_HOUSES; h++){

		    if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
		    if(HouseInfo[h][hLevel] == 1)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "1 EP Skill и 0 Money Skill.");
	  }
	     if(HouseInfo[h][hLevel] == 2)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "2 EP Skill и 3 Money Skill.");
	  }
	     if(HouseInfo[h][hLevel] == 3)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "3 EP Skill и 5 Money Skill.");
	  }
	     if(HouseInfo[h][hLevel] == 4)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "5 EP Skill и 6 Money Skill.");
	  }
	     if(HouseInfo[h][hLevel] == 5)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "6 EP Skill и 7 Money Skill.");
	  }
	     if(HouseInfo[h][hLevel] == 6)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "7 EP Skill и 7 Money Skill.");
	  }
      if(HouseInfo[h][hLevel] == 7)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "8 EP Skill и 8 Money Skill.");
	  }
	     if(HouseInfo[h][hLevel] == 8)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "8 EP Skill и 9 Money Skill.");
	  }
	     if(HouseInfo[h][hLevel] == 9)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "9 EP Skill и 9 Money Skill.");
	  }
	     if(HouseInfo[h][hLevel] == 10)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "10 EP Skill и 9 Money Skill.");
	  }
	  if(HouseInfo[h][hLevel] == 11)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "12 EP Skill и 12 Money Skill.");
	  }
	   if(HouseInfo[h][hLevel] == 12)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "14 EP Skill и 14 Money Skill.");
	  }  if(HouseInfo[h][hLevel] == 13)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "15 EP Skill и 18 Money Skill.");
}
	  if(HouseInfo[h][hLevel] == 14)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "19 EP Skill и 20 Money Skill.");
}
	   if(HouseInfo[h][hLevel] == 15)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "19 EP Skill и 21 Money Skill.");
}
	   if(HouseInfo[h][hLevel] == 16)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "19 EP Skill и 21 Money Skill.");
}
	   if(HouseInfo[h][hLevel] == 17)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "19 EP Skill и 21 Money Skill.");
}
	   if(HouseInfo[h][hLevel] == 18)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "19 EP Skill и 21 Money Skill.");
}
	   if(HouseInfo[h][hLevel] == 19)
		    {
		            	SendClientMessage(playerid, COLOR_GREEN3, "100 EP Skill и 100 Money Skill.");
}


		    }
		    }
		    }
	return 1;
}

//
if(strcmp(cmd, "/enter", true) == 0)
 {
 for(new h; h<MAX_HOUSES; h++){
 if(HouseInfo[h][Bus] == 0)
 {
      if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])){
       new Level = HouseInfo[h][hLevel];
       if(HouseInfo[h][hLocked] == 1)
       {
 SendClientMessage(playerid, COLOR_WHITE,  "Тази къща е заключена");
return 1;
  }
     SetPlayerVirtualWorld(playerid, HouseInfo[h][hVirtualWorld]);
     PlayerInfo[playerid][pInHouse] = 1;
     GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
	 format(PlayerInfo[playerid][pInHouseID], 24, "%d", h);
	 SetPlayerVirtualWorld(playerid, HouseInfo[h][hVirtualWorld]);
     if(HouseInfo[h][hLevel] == 1)
  {
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,222.9534, 1287.7649, 1082.1406);
  SetPlayerInterior(playerid,1);
  }
  if(HouseInfo[h][hLevel] == 2)
  {
   
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,261.0827, 1284.6899, 1080.2578);
  SetPlayerInterior(playerid,4);
  }
  if(HouseInfo[h][hLevel] == 3)
  {
   
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,260.6734, 1237.7909, 1084.2578);
  SetPlayerInterior(playerid,9);
  }
  if(HouseInfo[h][hLevel] == 4)
  {
   
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,376.7426, 1417.3226, 1081.3281);
  SetPlayerInterior(playerid,15);
  }
  if(HouseInfo[h][hLevel] == 5)
  {
   
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,295.2874, 1473.2769, 1080.2578);
  SetPlayerInterior(playerid,15);
  }
  if(HouseInfo[h][hLevel] == 6)
  {
    
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,327.9431, 1478.3801, 1084.4375);
  SetPlayerInterior(playerid,15);
  }
  if(HouseInfo[h][hLevel] == 7)
  {
   
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,2270.1050, -1210.3917, 1047.5625);
  SetPlayerInterior(playerid,10);
  }
  if(HouseInfo[h][hLevel] == 8)
  {
   
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,447.1211, 1397.8444, 1084.3047);
  SetPlayerInterior(playerid,2);
  }
  if(HouseInfo[h][hLevel] == 9)
  {
   
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,2196.0063, -1204.6326, 1049.0234);
  SetPlayerInterior(playerid,6);
  }
  if(HouseInfo[h][hLevel] == 10)
  {
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,235.3416, 1187.2882, 1080.2578);
  SetPlayerInterior(playerid,3);
  }
  if(HouseInfo[h][hLevel] == 11)
  {
   
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,490.9987, 1399.4164, 1080.2578);
  SetPlayerInterior(playerid,2);
  }
  if(HouseInfo[h][hLevel] == 12)
  {
   
	 
	 SavePlayerHouse(h);
  SetPlayerPos(playerid,227.1212, 1114.1840, 1080.9972);
  SetPlayerInterior(playerid,5);
  }
  if(HouseInfo[h][hLevel] == 13)
  {

	 
  SetPlayerInterior(playerid,7);
  SavePlayerHouse(h);
  SetPlayerPos(playerid,225.6624, 1022.5345, 1084.0145);
  }

     } }
      if(HouseInfo[h][Bus] >= 1)
 {
      if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ]))
   {
       new Level = HouseInfo[h][hLevel];
       if(GetPlayerMoney(playerid) < HouseInfo[h][Fee]) return SendClientMessage(playerid, COLOR_WHITE, "Нямаш достатъчно пари за да влезеш в бизнеса");
              if(HouseInfo[h][hLocked] == 1)
       {
 SendClientMessage(playerid, COLOR_WHITE,  "Този бизнес е заключен");
return 1;
  }
     SetPlayerVirtualWorld(playerid, HouseInfo[h][hVirtualWorld]);
     PlayerInfo[playerid][pInBiz] = 1;
     new fee = HouseInfo[h][Fee];
     new house[64];
     GivePlayerCash(playerid,-fee);
     GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
     new earnings = HouseInfo[h][Fee];
  HouseInfo[h][Earnings] += earnings;
     if(HouseInfo[h][hLevel] == 1)
  {
  SetPlayerPos(playerid,-26.691598,-55.714897,1003.546875);
  SetPlayerInterior(playerid,6);
  }
  if(HouseInfo[h][hLevel] == 2)
  {
  SetPlayerPos(playerid,-2640.762939,1406.682006,906.460937);
  SetPlayerInterior(playerid,3);
  }
  if(HouseInfo[h][hLevel] == 3)
  {
  SetPlayerPos(playerid,286.148986,-40.644397,1001.515625);
  SetPlayerInterior(playerid,1);
  }

  if(HouseInfo[h][hLevel] == 4)
  {
  SetPlayerPos(playerid,833.269775,10.588416,1004.179687);
  SetPlayerInterior(playerid,3);
  }

  if(HouseInfo[h][hLevel] == 5)
  {
  SetPlayerPos(playerid,2215.454833,-1147.475585,1025.796875);
  SetPlayerInterior(playerid,15);
  }

  if(HouseInfo[h][hLevel] == 6)
  {
  SetPlayerPos(playerid,-103.559165,-24.225606,1000.718750);
  SetPlayerInterior(playerid,3);
  }

  if(HouseInfo[h][hLevel] == 7)
  {
  SetPlayerPos(playerid,207.054992,-138.804992,1003.507812);
  SetPlayerInterior(playerid,3);
  }

  if(HouseInfo[h][hLevel] == 8)
  {
  SetPlayerPos(playerid,942.171997,-16.542755,1000.929687);
  SetPlayerInterior(playerid,3);
  }

  if(HouseInfo[h][hLevel] == 9)
  {
  SetPlayerPos(playerid,375.962463,-65.816848,1001.507812);
  SetPlayerInterior(playerid,10);
  }
  if(HouseInfo[h][hLevel] == 10)
  {
  SetPlayerPos(playerid,772.111999,-3.898649,1000.728820);
  SetPlayerInterior(playerid,5);
  }

  if(HouseInfo[h][hLevel] == 11)
  {
  SetPlayerPos(playerid,1302.519897,-1.787510,1001.028259);
  SetPlayerInterior(playerid,18);
  }
  if(HouseInfo[h][hLevel] == 12)
  {
  SetPlayerPos(playerid,-2029.798339,-106.675910,1035.171875);
  SetPlayerInterior(playerid,3);
  }
  if(HouseInfo[h][hLevel] == 13)
  {
  SetPlayerVirtualWorld(playerid,0);
  SendClientMessage(playerid,COLOR_GRAD1,"В този бизнес не може да се влезе");
  }
if(HouseInfo[h][hLevel] == 14)
  {
  SetPlayerPos(playerid,1710.433715,-1669.379272,20.225049);
  SetPlayerInterior(playerid,18);
  }
  if(HouseInfo[h][hLevel] == 15)
  {
  SetPlayerPos(playerid,2543.462646,-1308.379882,1026.728393);
  SetPlayerInterior(playerid,2);
  }
    if(HouseInfo[h][hLevel] == 16)
  {
  SetPlayerPos(playerid,418.652984,-82.639793,1001.804687);
  SetPlayerInterior(playerid,3);
  }
  if(HouseInfo[h][hLevel] == 17)
  {
  SetPlayerPos(playerid,-204.439987,-26.453998,1002.273437);
  SetPlayerInterior(playerid,16);
  }
  if(HouseInfo[h][hLevel] == 18)
  {
  SetPlayerPos(playerid,1204.809936,-11.586799,1000.921875);
  SetPlayerInterior(playerid,2);
  }
  if(HouseInfo[h][hLevel] == 19)
  {
  SetPlayerPos(playerid,2707.2920,-2844.4292,81.7090);
  SetPlayerInterior(playerid,0);
  }
}
}
  }
     /////////////////////////////////////////////////////
  return 1;
 }
if(strcmp(cmd, "/enterb", true) == 0)
	{
      for(new h; h<MAX_HOUSES; h++)
	  {
 if(HouseInfo[h][Bus] >= 1)
 {
      if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ]))
	  {
       new Level = HouseInfo[h][hLevel];
       if(GetPlayerMoney(playerid) < HouseInfo[h][Fee]) return SendClientMessage(playerid, COLOR_WHITE, "Нямаш достатъчно пари за да влезеш в бизнеса");
              if(HouseInfo[h][hLocked] == 1)
       {
 SendClientMessage(playerid, COLOR_WHITE,  "Този бизнес е заключен");
return 1;
	 }
					SetPlayerVirtualWorld(playerid, HouseInfo[h][hVirtualWorld]);
					PlayerInfo[playerid][pInBiz] = 1;
					new fee = HouseInfo[h][Fee];
					new house[64];
					GivePlayerCash(playerid,-fee);
					GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
					if(HouseInfo[h][hLevel] == 1)
	 {
	 SetPlayerPos(playerid,-26.691598,-55.714897,1003.546875);
	 SetPlayerInterior(playerid,6);
	 }
	 if(HouseInfo[h][hLevel] == 2)
	 {
	 SetPlayerPos(playerid,-2640.762939,1406.682006,906.460937);
	 SetPlayerInterior(playerid,3);
	 }
	 if(HouseInfo[h][hLevel] == 3)
	 {
	 SetPlayerPos(playerid,286.148986,-40.644397,1001.515625);
	 SetPlayerInterior(playerid,1);
	 }

	 if(HouseInfo[h][hLevel] == 4)
	 {
	 SetPlayerPos(playerid,833.269775,10.588416,1004.179687);
	 SetPlayerInterior(playerid,3);
	 }

	 if(HouseInfo[h][hLevel] == 5)
	 {
	 SetPlayerPos(playerid,2215.454833,-1147.475585,1025.796875);
	 SetPlayerInterior(playerid,15);
	 }

	 if(HouseInfo[h][hLevel] == 6)
	 {
	 SetPlayerPos(playerid,-103.559165,-24.225606,1000.718750);
	 SetPlayerInterior(playerid,3);
	 }

	 if(HouseInfo[h][hLevel] == 7)
	 {
	 SetPlayerPos(playerid,207.054992,-138.804992,1003.507812);
	 SetPlayerInterior(playerid,3);
	 }

	 if(HouseInfo[h][hLevel] == 8)
	 {
	 SetPlayerPos(playerid,942.171997,-16.542755,1000.929687);
	 SetPlayerInterior(playerid,3);
	 }

	 if(HouseInfo[h][hLevel] == 9)
	 {
	 SetPlayerPos(playerid,375.962463,-65.816848,1001.507812);
	 SetPlayerInterior(playerid,10);
	 }
	 if(HouseInfo[h][hLevel] == 10)
	 {
	 SetPlayerPos(playerid,772.111999,-3.898649,1000.728820);
	 SetPlayerInterior(playerid,5);
	 }

	 if(HouseInfo[h][hLevel] == 11)
	 {
	 SetPlayerPos(playerid,1302.519897,-1.787510,1001.028259);
	 SetPlayerInterior(playerid,18);
	 }
	 if(HouseInfo[h][hLevel] == 12)
	 {
	 SetPlayerPos(playerid,-2029.798339,-106.675910,1035.171875);
	 SetPlayerInterior(playerid,3);
	 }
	 if(HouseInfo[h][hLevel] == 13)
	 {
	 SendClientMessage(playerid,COLOR_GRAD1,"В този бизнес не може да се влезе");
	 }
if(HouseInfo[h][hLevel] == 14)
	 {
  SetPlayerPos(playerid,1710.433715,-1669.379272,20.225049);
  SetPlayerInterior(playerid,18);
	 }
}
}
     }
return 1;
}
	if(strcmp(cmd, "/help", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new cmds[2230];
            strins(cmds,"{00FF00}---Основни команди---\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/stats - показва вашата статистика\n",strlen(cmds));
            strins(cmds,"{336600}/pm - пращане на лично съобщение до играч\n",strlen(cmds));
            strins(cmds,"{FF0000}/ipm - за да игнорирате или премахнете игнорирането на лични съобщения\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/ignore - игнорира даден играч от твойте лични съобщения\n",strlen(cmds));
            strins(cmds,"{336600}/unignore - маха игнорирането на даден играч от твойте лични съобщения\n",strlen(cmds));
            strins(cmds,"{FF0000}/ignoreall - игнорира всички от твойте лични съобщения\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/unignoreall - премахва игнорирането на всички от твойте лични съобщения\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/buylevel - за да вдигнете вашия левел\n",strlen(cmds));
            strins(cmds,"{336600}/buyes - за да вдигнете вашия Ep Skill левел\n",strlen(cmds));
            strins(cmds,"{336600}/buyms - за да вдигнете вашия Money Skill левел\n",strlen(cmds));
            strins(cmds,"{336600}/buyws - за да вдигнете вашия Weapon Skill левел\n",strlen(cmds));
            strins(cmds,"{FF0000}/buyhouse - за да купите къща\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/buybiz - за да купите бизнес\n",strlen(cmds));
            strins(cmds,"{336600}/enter - за да влезете в къща или бизнес\n",strlen(cmds));
            strins(cmds,"{FF0000}/exit - за да излезете от къща или бизнес\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/changepass - сменяне на парола\n",strlen(cmds));
            strins(cmds,"{336600}/spawn - за да промениш твоя spawn\n",strlen(cmds));
            strins(cmds,"{FF0000}/report - докладване на хакери\n",strlen(cmds));
            strins(cmds,"{FF0000}/preport - докладване на полицаи\n",strlen(cmds));
            strins(cmds,"{FF0000}/n - за да зададете въпрос относно сървъра, кое къде се намира и т.н.\n",strlen(cmds));
            strins(cmds,"{FF0000}/gps - за да си избереш място което искаш да посетиш\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/time - показва/скрива часовника на екрана\n",strlen(cmds));
            strins(cmds,"{336600}/goldplay - показва/скрива Gold-Play на екрана\n",strlen(cmds));
            strins(cmds,"{FF0000}/statistic - показва/скрива статистиката на екрана\n",strlen(cmds));
            strins(cmds,"{FF0000}/id - показва ID-то на играч\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/pay  - дава пари на играч\n",strlen(cmds));
            strins(cmds,"{336600}/admins - показва онлайн админите\n",strlen(cmds));
            strins(cmds,"{FF0000}/gfc  - показва онлайн членовете на Gold Play Fuel Company\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/lotto - залагане на лото\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/checklotto - за да провериш стойноста на джакпота на лото\n",strlen(cmds));
            strins(cmds,"{336600}/c - пуска брояч\n",strlen(cmds));
            strins(cmds,"{FF0000}/rules - показва правилата на сървъра\n",strlen(cmds));
			strins(cmds,"{336600}/vipusers - показва онлайн VIP играчите\n",strlen(cmds));
            strins(cmds,"{FF0000}/leaders - показва онлайн лидерите\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/idveh - за да видите ID-то на превозно средство\n",strlen(cmds));
            strins(cmds,"{336600}/bank - за да отворите менюто на банката\n",strlen(cmds));
            strins(cmds,"{FF0000}/atm - за да отворите менюто на банкомат\n",strlen(cmds));
            ShowPlayerDialog(playerid,4,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{266A2E}МАН{FF0000}ДИ",cmds,"Напред","Изход");
		}
		return 1;
	}
	if(strcmp(cmd, "/buyv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pCash] >= 1000000)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 30, -2026.5165,-114.5547,1035.1719))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
						if(PlayerInfo[playerid][Level] >= 10)
			{
									if(PlayerInfo[playerid][pVlak] == 0)
			{
			PlayerInfo[playerid][pVlak] = 1;
			SendClientMessage(playerid, COLOR_GRAD1,"Ти си купи книжка за влак!");
			GivePlayerCash(playerid, -1000000);
			HouseInfo[h][Earnings] += 1000000;
			SavePlayerHouse(h);
						return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно пари!");
		}

//
						return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си поне 10-ти левел!");
		}


//
//
						return 1;
        } else {
		}

	}
			}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/buys", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    			if(PlayerInfo[playerid][pCash] >= 1000000)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 30, -2026.5165,-114.5547,1035.1719))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
									if(PlayerInfo[playerid][Level] >= 20)
			{
												if(PlayerInfo[playerid][pSamolet] == 0)
			{
			PlayerInfo[playerid][pSamolet] = 1;
			SendClientMessage(playerid, COLOR_GRAD1,"Ти си купи книжка за самолет!");
			GivePlayerCash(playerid, -1000000);
			HouseInfo[h][Earnings] += 1000000;
			SavePlayerHouse(h);
						return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно пари!");
		}
						return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си поне 20-ти левел!");
		}

						return 1;
        } else {
		}
			}
			}
			}

		}
		return 1;
	}
	if(strcmp(cmd, "/buyh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    			if(PlayerInfo[playerid][pCash] >= 1000000)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 30, -2026.5165,-114.5547,1035.1719))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
									if(PlayerInfo[playerid][Level] >= 20)
			{
												if(PlayerInfo[playerid][pSamolet] == 0)
			{
			PlayerInfo[playerid][pHili] = 1;
			SendClientMessage(playerid, COLOR_GRAD1,"Ти си купи книжка за хеликоптер!");
			GivePlayerCash(playerid, -1000000);
			HouseInfo[h][Earnings] += 1000000;
			SavePlayerHouse(h);
						return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно пари!");
		}
//
						return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си поне 20-ти левел!");
		}

						return 1;
        } else {
		}
			}
			}
			}

		}
		return 1;
	}
	if(strcmp(cmd, "/buyb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	         if(IsPlayerInRangeOfPoint(playerid, 30, -2026.5165,-114.5547,1035.1719))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			if(PlayerInfo[playerid][pCash] >= 1000000)
			{
														if(PlayerInfo[playerid][Level] >= 15)
			{
																	if(PlayerInfo[playerid][pBoat] == 0)
			{
			PlayerInfo[playerid][pBoat] = 1;
			SendClientMessage(playerid, COLOR_GRAD1,"Ти си купи книжка за лодка!");
			GivePlayerCash(playerid, -1000000);
			HouseInfo[h][Earnings] += 1000000;
			SavePlayerHouse(h);
			
						return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Нямаш достатъчно пари!");
		}

						return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си поне 15-ти левел!");
		}

						return 1;
        } else {
		}
//
			}
			}
			}
		}
		return 1;
	}
//--------------------------[JOBS]----------------------------------------------
	if (strcmp("/pizza", cmdtext, true, 10) == 0)
	{
        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 448)
      	{
			if(PlayerInfo[playerid][pPiza1] != 0)
			{
	        format(string, sizeof(string), "Неможеш да работиш тази работа в момента.");
            SendClientMessage(playerid, COLOR_GRAD1, string);
        return 0;
    }
            pizza[playerid] = 1;
     		SetPlayerColor(playerid, COLOR_JOB);
            ToggleEngine(carpizza[1], VEHICLE_PARAMS_ON);
            ToggleEngine(carpizza[2], VEHICLE_PARAMS_ON);
            ToggleEngine(carpizza[3], VEHICLE_PARAMS_ON);
            ToggleEngine(carpizza[4], VEHICLE_PARAMS_ON);
			SetPlayerCheckpoint(playerid, PizzaCheckPoint1, 7.0);
	        format(string, sizeof(string), "Pizza Deliver: Ти започна работа като доставчик на пица и сега трябва да следваш червените маркери.");
            SendClientMessage(playerid, COLOR_GREEN, string);
			return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в мотора, за да започнеш работа!");
		}

    return 1;
    }




	if (strcmp("/bus", cmdtext, true, 10) == 0)
	{
        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 431)
      	{
			if(PlayerInfo[playerid][pBus1] != 0)
			{
	        format(string, sizeof(string), "Неможеш да работиш тази работа в момента.");
            SendClientMessage(playerid, COLOR_GRAD1, string);
        return 0;
    }
            bus[playerid] = 1;
     		SetPlayerColor(playerid, COLOR_JOB);
            ToggleEngine(carbus[1], VEHICLE_PARAMS_ON);
            ToggleEngine(carbus[2], VEHICLE_PARAMS_ON);
            ToggleEngine(carbus[3], VEHICLE_PARAMS_ON);
            ToggleEngine(carbus[4], VEHICLE_PARAMS_ON);
            ToggleEngine(carbus[5], VEHICLE_PARAMS_ON);
			SetPlayerCheckpoint(playerid, busCheckPoint1, 7.0);
	        format(string, sizeof(string), "Bus: Ти започна работа като шофьр на бус, сега трябва да следваш червените маркери.");
            SendClientMessage(playerid, COLOR_GREEN, string);
			return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в буса, за да започнеш работа!");
		}

    return 1;
    }


	if (strcmp("/sweep", cmdtext, true, 10) == 0)
	{
        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 574)
      	{
			if(PlayerInfo[playerid][pSweep1] == 1)
			{
	        format(string, sizeof(string), "Неможеш да работиш тази работа в момента.");
            SendClientMessage(playerid, COLOR_GRAD1, string);
        return 0;
    }
            bus[playerid] = 1;
     		SetPlayerColor(playerid, COLOR_JOB);
            ToggleEngine(carsweep[1], VEHICLE_PARAMS_ON);
            ToggleEngine(carsweep[2], VEHICLE_PARAMS_ON);
            ToggleEngine(carsweep[3], VEHICLE_PARAMS_ON);
            ToggleEngine(carsweep[4], VEHICLE_PARAMS_ON);
			SetPlayerCheckpoint(playerid, SweepCheckPoint1, 7.0);
	        format(string, sizeof(string), "Sweep: Ти започна работа като чистач на улици, сега трябва да следваш червените маркери.");
            SendClientMessage(playerid, COLOR_GREEN, string);
			return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Трябва да си в превозното средство, за да започнеш работа!");
		}

    return 1;
    }



	if(strcmp(cmd, "/robgps", true) == 0)
    {
    ShowPlayerDialog(playerid, DIALOG_ROB, DIALOG_STYLE_LIST, "ROB GPS", "\n\nRob 1\nRob 2\nRob 3", "Select", "Close");
   return 1;
   }
	if(strcmp(cmd, "/gps", true) == 0)
    {
    ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "GPS", "\n\nМагазина за коли\nРаботата Coalmine\nРаботата Pilot\nБизнеса за книжки\nБанката в Лос Сантос\nРаботата Pizza\nБизнеса 24/7\nРабората Bus\nРаботата Sweep\nТръковете\nБизнеса за боини изкуства\nЛас Вентурас\nЛос Сантос\nСан Фиеро\nРиск печели,Риск губи\nGold Play Офис", "Select", "Close");
   return 1;
   }
 if(strcmp(cmd, "/bank", true) == 0)
    {
if(!IsPlayerInRangeOfPoint(playerid, 3, 2316.6194,-10.2736,26.7422))
		        {
		         SendClientMessage(playerid, COLOR_GRAD1, "Трябва да си в банката, за да използваш командата!");
		            return 1;
		        }
ShowPlayerDialog(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "Банка", "Обща сума\nИзтегли пари\nВнеси пари", "Избери", "Назад");
   return 1;
   }

   
   if(strcmp(cmd, "/atm", true) == 0)
    {
    if(IsPlayerInRangeOfPoint(playerid, 3, 1239.9829,-2041.6614,59.9389) || IsPlayerInRangeOfPoint(playerid, 3, 1538.0908,-1616.5916,13.5469) || IsPlayerInRangeOfPoint(playerid, 3, 2140.0640,-1158.2324,23.9922) || IsPlayerInRangeOfPoint(playerid, 3, 2194.0444,1986.1279,12.2969) || IsPlayerInRangeOfPoint(playerid, 3, 1718.4507,1315.4329,10.8125) || IsPlayerInRangeOfPoint(playerid, 3, 256.8503,67.3138,1003.6406) || IsPlayerInRangeOfPoint(playerid, 3, 257.5424,68.5065,1003.6406))
		        {
    ShowPlayerDialog(playerid, DIALOG_ATM, DIALOG_STYLE_LIST, "Банкомат", "Обща сума\nИзтегли пари\nПлати нарушение", "Избери", "Назад");
    }
    else
    {
    SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си близо до банкомат, за да ползваш командата!");
    }
   return 1;
   }
   
   
	if(strcmp(cmd, "/gfcgps", true) == 0)
    {
    										if(PlayerInfo[playerid][pGD] == 1 && PlayerInfo[playerid][pGFC] == 1)
			{
    ShowPlayerDialog(playerid, DIALOG_GFC2, DIALOG_STYLE_LIST, "{6699FF}GFC GPS", "\n\nБензиностанция 1\nБензиностанция 2\nБензиностанция 3\nБензиностанция 4", "Select", "Close");
    }
    else
    {
    format(string, sizeof(string), "Ти трябва да си на GFC смяна");
            SendClientMessage(playerid, COLOR_GRAD1, string);
    }
   return 1;
   }
    



    
    
    
    
    
    
 	if (strcmp("/gfcduty", cmdtext, true, 10) == 0)
	{
										if(PlayerInfo[playerid][pGD] == 0 && PlayerInfo[playerid][pGFC] == 1)
			{

			PlayerInfo[playerid][pGD] = 1;
		 format(string, sizeof(string), "{6699FF}Ти влезе на смяна.");
            SendClientMessage(playerid, COLOR_YELLOW, string);
return 1;
}
				if(PlayerInfo[playerid][pGFC] == 1 && PlayerInfo[playerid][pGD] == 1)
			{
			PlayerInfo[playerid][pGD] = 0;
					 format(string, sizeof(string), "{6699FF}Ти излезе от смяна.");
            SendClientMessage(playerid, COLOR_YELLOW, string);
			return 1;
			}

    return 1;
    }

	if (strcmp("/coalmine", cmdtext, true, 10) == 0)
	{
        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 406)
      	{
			if(PlayerInfo[playerid][pCoalmine1] != 0)
			{
				        format(string, sizeof(string), "В момента неможеш да работиш тази работа.");
            SendClientMessage(playerid, COLOR_GRAD1, string);
   return 0;
    }
            coalmine[playerid] = 1;
     		SetPlayerColor(playerid, COLOR_JOB);
            ToggleEngine(carcoalmine[1], VEHICLE_PARAMS_ON);
            ToggleEngine(carcoalmine[2], VEHICLE_PARAMS_ON);
            ToggleEngine(carcoalmine[3], VEHICLE_PARAMS_ON);
            ToggleEngine(carcoalmine[4], VEHICLE_PARAMS_ON);
			SetPlayerCheckpoint(playerid, CoalmineCheckPoint1, 7.0);
	        format(string, sizeof(string), "Coalmine: Ти започна работа като шофьор на самосвал и сега трябва да следваш червените маркери.");
            SendClientMessage(playerid, COLOR_GREEN, string);
			return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Трябва да се качиш в самосвала, за да започнеш работа!");
		}

    return 1;
    }
	if (strcmp("/pilot", cmdtext, true, 10) == 0)
	{
        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 513)
      	{
			if(PlayerInfo[playerid][pPilot1] != 0)
			{
	        format(string, sizeof(string), "В момента неможеш да работиш тази работа.");
            SendClientMessage(playerid, COLOR_GRAD1, string);
        return 0;
    }
            pilot[playerid] = 1;
     		SetPlayerColor(playerid, COLOR_JOB);
            ToggleEngine(carpilot[1], VEHICLE_PARAMS_ON);
            ToggleEngine(carpilot[2], VEHICLE_PARAMS_ON);
            ToggleEngine(carpilot[3], VEHICLE_PARAMS_ON);
            ToggleEngine(carpilot[4], VEHICLE_PARAMS_ON);
			SetPlayerCheckpoint(playerid, pilotCheckPoint1, 7.0);
	        format(string, sizeof(string), "Pilot: Ти започна работа като пилот и сега трябва да следваш червените маркери.");
            SendClientMessage(playerid, COLOR_GREEN, string);
			return 1;
        } else {
        SendClientMessage(playerid, COLOR_GRAD1,"Трябва да се качиш в самолета, за да започнеш работа!");
		}

    return 1;
    }
////////////////////////////////////////////////////////////////////////////////
	if(strcmp(cmd, "/tow", true) == 0)
    {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в Tow Truck!");
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:dist, Float:closedist=8, closeveh;
	new Float:x, Float:y, Float:z;
	{
	    if(IsTrailerAttachedToVehicle(vehicleid))
	    {
		    DetachTrailerFromVehicle(vehicleid);
		    SendClientMessage(playerid, COLOR_WHITE, "Ти откачи превозното средство!");
       	}
    }
	for(new i=1; i < MAX_VEHICLES; i++)
	{
		if(i != vehicleid && GetVehiclePos(i, x, y, z))
		{
			dist = GetPlayerDistanceFromPoint(playerid, x, y, z);
			if(dist < closedist)
			{
				closedist = dist;
				closeveh = i;
			}
		}
	}
	if(!closeveh) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си до превозно средство!");
	AttachTrailerToVehicle(closeveh, vehicleid);
	SendClientMessage(playerid, COLOR_WHITE, "Успешно закачи превозното средство.");
	return 1;
    }
	if(strcmp(cmd, "/detach", true) == 0)
    {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да се качиш в Tow Truck!");
	new vehicleid = GetPlayerVehicleID(playerid);
	new Float:dist, Float:closedist=8, closeveh;
	new Float:x, Float:y, Float:z;
	{
	    if(IsTrailerAttachedToVehicle(vehicleid))
	    {
		    DetachTrailerFromVehicle(vehicleid);
		    SendClientMessage(playerid, COLOR_WHITE, "Ти откачи превозното средство!");
       	}
    }
	for(new i=1; i < MAX_VEHICLES; i++)
	{
		if(i != vehicleid && GetVehiclePos(i, x, y, z))
		{
			dist = GetPlayerDistanceFromPoint(playerid, x, y, z);
			if(dist < closedist)
			{
				closedist = dist;
				closeveh = i;
			}
		}
	}
	if(!closeveh) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си до превозно средство!");
	AttachTrailerToVehicle(closeveh, vehicleid);
	SendClientMessage(playerid, COLOR_WHITE, "Успешно закачи превозното средство.");
	return 1;
    }

//==============================================================================
	if(strcmp(cmd, "/factioncmds", true) == 0 || strcmp(cmd, "/fcmds", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE,"{FFFFFF}/acceptfaction(/af) /cancelfaction(/cf) /leavefaction(/lf) /acceptfaction(/af) /turfhelp");
		    SendClientMessage(playerid, COLOR_WHITE,"{FFFFFF}Помощник лидер: /turfattack /fmute /funmuteall /fmuteall /funmute /fwarn /funwarn /frespawn /frefuel");
		    SendClientMessage(playerid, COLOR_WHITE,"{FFFFFF}Лидер: /invite /uninvite /special /unspecial /setrank /changerankname /leader /unleader");
			if (PlayerInfo[playerid][pMember] == TEAM_GROVE)
			{
			    SendClientMessage(playerid, COLOR_GREEN,"{00AF00}Grove Street Families Помощник лидер: {FFFFFF}/hidegrove /showgrove");
			}
									if (PlayerInfo[playerid][pMember] == TEAM_FBI)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{8B8BC8}Federal Bureau Of Investigation: {FFFFFF}/fbirules /fbicamera");
			}
						if (PlayerInfo[playerid][pMember] == TEAM_FBI)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{8B8BC8}Federal Bureau Of Investigation Помощник лидер: {FFFFFF}/hidegfbi /showfbi");
			}
						if (PlayerInfo[playerid][pMember] == TEAM_RIFA)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"San Fierro Rifa: {FFFFFF}/rifacamera /rifarules");
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"San Fierro Rifa Помощник лидер: {FFFFFF}/hiderifa /showrifa");
			}
			if (PlayerInfo[playerid][pMember] == TEAM_MS13)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"MS-13 Помощник лидер : {FFFFFF}/hidems /showms");
			}
	        if (PlayerInfo[playerid][pMember] == TEAM_GPD)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{0044FF}GPD: {FFFFFF}/mypoints /drag /stopdrag /tazeron /tazeroff /mdc /cuff /uncuff /duty /spike /rspike");
			    SendClientMessage(playerid, COLOR_WHITE,"{0044FF}GPD Главен Лидер: {FFFFFF}/makedf /getdf");
			    SendClientMessage(playerid, COLOR_WHITE,"{0044FF}GPD Лидер: {FFFFFF}/mdcshow /mdchide /showgpd /hidegpd /makesuspect");
			}
						if (PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{0FD49C}Asian Boyz: {FFFFFF} /abrules /abcamera");
			}
									if (PlayerInfo[playerid][pMember] == TEAM_Thugs)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{2480E3}Thug Life: {FFFFFF} /thrules /thcamera");
			}
												if (PlayerInfo[playerid][pMember] == TEAM_Thugs)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{2480E3}Thug Life Помощник лидер: {FFFFFF} /showth /hideth");
			}
			if (PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{0FD49C}Asian Boyz Помощник лидер: {FFFFFF} /hideab /showab");
			}
			if (PlayerInfo[playerid][pMember] == TEAM_BOYZ)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{B5B5B5}Boyz N The Hood Помощник лидер: {CCCCCC}/showboyz /hideboyz");
			}
			if (PlayerInfo[playerid][pMember] == TEAM_YAKUZA)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{CCCCCC}Yakuza Помощник лидер: {CCCCCC}/showyakuza /hideyakuza");
			}
			if (PlayerInfo[playerid][pMember] == TEAM_SoA)
			{
			    SendClientMessage(playerid, COLOR_WHITE,"{FF0000}Sons Of Anarchy Помощник лидер: {FFFFFF}/hidesons /showsons");
			}
						if (PlayerInfo[playerid][pMember] == TEAM_CRIPZ)
			{
			    SendClientMessage(playerid, COLOR_BLUE,"Cripz: {FFFFFF}/hidevcripz /showvcripz");
			}
			if (PlayerInfo[playerid][pMember] == TEAM_VIP)
			{
			    SendClientMessage(playerid, COLOR_RED,"{FF0000}VIP: {FFFFFF}/ls /lv /vipbase");
			}
		}
		return 1;
	}
//================================[Fight-Styles]================================
if (strcmp(cmdtext, "/boxing", true) == 0)
{
			if(PlayerInfo[playerid][pCash] >= 2000)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 3, 769.0439,7.9043,1000.7111))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			HouseInfo[h][Earnings] += 2000;
			SavePlayerHouse(h);
        GivePlayerCash(playerid, -2000);
PlayerInfo[playerid][pBoxing] = 1;
PlayerInfo[playerid][pGrabKick] = 0;
PlayerInfo[playerid][pElblow] = 0;
PlayerInfo[playerid][pKungfu] = 0;
    if(GetPlayerFightingStyle(playerid) == FIGHT_STYLE_BOXING)return SendClientMessage(playerid,0xFFFFFFFF,"{FFFFFF}Вие използвате този стил на биене!");
    SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
    SendClientMessage(playerid, 0xFFFF00AA, "{FFFFFF}Вие сменихте вашият стил на биене!");
    }
    }
    }
    }
    return 1;
}
if (strcmp(cmdtext, "/kungfu", true) == 0)
{
			if(PlayerInfo[playerid][pCash] >= 2000)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 3, 769.0439,7.9043,1000.7111))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			HouseInfo[h][Earnings] += 2000;
			SavePlayerHouse(h);
        GivePlayerCash(playerid, -2000);
        PlayerInfo[playerid][pBoxing] = 0;
PlayerInfo[playerid][pGrabKick] = 0;
PlayerInfo[playerid][pElblow] = 0;
PlayerInfo[playerid][pKungfu] = 1;
    if(GetPlayerFightingStyle(playerid) == FIGHT_STYLE_KUNGFU)return SendClientMessage(playerid,0xFFFFFFFF,"{FFFFFF}Вие използвате този стил на биене!");
    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
    SendClientMessage(playerid, 0xFFFF00AA, "{FFFFFF}Вие сменихте вашият стил на биене!");
    }
    }
    }
    }
    return 1;
}
if (strcmp(cmdtext, "/grabkick", true) == 0)
{
			if(PlayerInfo[playerid][pCash] >= 2000)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 3, 769.0439,7.9043,1000.7111))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			HouseInfo[h][Earnings] += 2000;
			SavePlayerHouse(h);
PlayerInfo[playerid][pBoxing] = 0;
PlayerInfo[playerid][pElblow] = 0;
PlayerInfo[playerid][pKungfu] = 0;
        GivePlayerCash(playerid, -2000);
PlayerInfo[playerid][pGrabKick] = 1;
    if(GetPlayerFightingStyle(playerid) == FIGHT_STYLE_GRABKICK)return SendClientMessage(playerid,0xFFFFFFFF,"{FFFFFF}Вие използвате този стил на биене!");
    SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
    SendClientMessage(playerid, 0xFFFF00AA, "{FFFFFF}Вие сменихте вашият стил на биене!");
    }
    }
    }
    }
    return 1;
}
if (strcmp(cmdtext, "/elbow", true) == 0)
{
			if(PlayerInfo[playerid][pCash] >= 2000)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 3, 769.0439,7.9043,1000.7111))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			HouseInfo[h][Earnings] += 2000;
			SavePlayerHouse(h);
PlayerInfo[playerid][pBoxing] = 0;
PlayerInfo[playerid][pGrabKick] = 0;
PlayerInfo[playerid][pKungfu] = 0;
        GivePlayerCash(playerid, -2000);
PlayerInfo[playerid][pElblow] = 1;
    if(GetPlayerFightingStyle(playerid) == FIGHT_STYLE_ELBOW)return SendClientMessage(playerid,0xFFFFFFFF,"{FFFFFF}Вие използвате този стил на биене!");
    SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
    SendClientMessage(playerid, 0xFFFF00AA, "{FFFFFF}Вие сменихте вашият стил на биене!");
    }
    }
    }
    }
    return 1;
}
if (strcmp(cmdtext, "/train", true) == 0)
{
    SendClientMessage(playerid, 0xFFFF00AA, "{FFFFFF}/elbow /grabkick /boxing /kungfu");
    return 1;
}
if (strcmp(cmdtext, "/mhelp", true) == 0 || strcmp(cmdtext, "/mh", true) == 0)
{
            SendClientMessage(playerid, 0xFFFF00AA, "Manage Admin команди");
			SendClientMessage(playerid, 0xFFFF00AA, "{33CCCC}/fly - позволява/премахва летенето /unban - маха бан /unwarn - маха предупреждение");
			 SendClientMessage(playerid, 0xFFFF00AA, "{33CCCC}/respawncars - спаунва всички коли /refuelcars - зарежда всички коли с 100Л /nwarn - дава предупреждение на играч който не е в сървъра");
			  SendClientMessage(playerid, 0xFFFF00AA, "{33CCCC}/nunwarn - премахва предупреждение на играч който не е в сървъра /jump - позволява/премахва големия скок /speed - позволява/премахва високата скорост");
			  SendClientMessage(playerid, 0xFFFF00AA, "{33CCCC}/crespawncars - спира спаунването на всички коли /unblock - премахва блокирания достъп на играч до сървъра");
			return 1;
			}
if (strcmp(cmdtext, "/dmv", true) == 0)
{
    SendClientMessage(playerid, 0xFFFF00AA, "{FFFFFF}/buyv /buyh /buys /buyb");
    return 1;
}
if (strcmp(cmdtext, "/vehelp", true) == 0)
{
    SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/eon {FF0000}| {FF9900}/eoff {000000}- {66FF33}Включване {FF0000}| {66FF33}Изключване на двигателя");
    SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/lon {FF0000}| {FF9900}/loff {000000}- {66FF33}Включване {FF0000}| {66FF33}Изключване на фаровете");
    SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/aon {FF0000}| {FF9900}/aoff {000000}- {66FF33}Включване {FF0000}| {66FF33}Спиране на алармата");
    SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/bontetoon {FF0000}| {FF9900}/bontetooff {000000}- {66FF33}Включване {FF0000}| {66FF33}Спиране на предния капак");
    SendClientMessage(playerid, 0xFFFF00AA, "{FF9900}/booton {FF0000}| {FF9900}/bootoff {000000}- {66FF33}Включване {FF0000}| {66FF33}Затваряне на багажника");
    return 1;
}
//===========================[AFK-System]=======================================
	if(strcmp(cmd, "/afk", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if (PlayerInfo[playerid][AFKstatus] == 1)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Ти вече си AFK!");
                return 1;
            }
            else if (PlayerInfo[playerid][AFKstatus] == 0)
            {
            new pname[MAX_PLAYER_NAME];
                GetPlayerName(playerid, pname, sizeof(pname));
	            ResetPlayerWeapons(playerid);
	            SetPlayerInterior(playerid,15);
		        SetPlayerColor(playerid, COLOR_AFK);
				SetPlayerPos(playerid,2215.454833,-1147.475585,1025.796875);
	            format(string, sizeof(string), "{C0FF00}AFK: %s излезе в почивка!", pname,playerid);
                SendClientMessageToAll(COLOR_GREEN3, string);
				SendClientMessage(playerid, COLOR_GREEN3,"{C0FF00}AFK: Използвай /back като се върнеш!");
				PlayerInfo[playerid][AFKstatus] = 1;
				SetPlayerVirtualWorld(playerid, playerid);
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(HouseInfo[h][hLevel] == 5 && HouseInfo[h][Bus] == 1)
			{
			 HouseInfo[h][Earnings] += 125;
			 }
			 }
			 
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/back", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if (PlayerInfo[playerid][AFKstatus] == 0)
            {
                SendClientMessage(playerid, COLOR_GRAD1, "Ти вече се върна!");
                return 1;
            }
            else if (PlayerInfo[playerid][AFKstatus] == 1)
            {
            new pname[MAX_PLAYER_NAME];
                GetPlayerName(playerid, pname, sizeof(pname));
	            SetPlayerHealth(playerid, 0);
	            SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
				format(string, sizeof(string), "{33CC33}AFK:%s се върна в играта!", pname,playerid);
                SendClientMessageToAll(COLOR_GREEN3, string);
                PlayerInfo[playerid][AFKstatus] = 0;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/afks",true)==0)
	{
        SendClientMessage(playerid, COLOR_YELLOW, "Онлайн AFK играчи:");
		if(IsPlayerConnected(playerid))
		{
		    for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(IsPlayerConnected(i))
			    {
                    if(PlayerInfo[i][AFKstatus] == 1)
					{
					    format(string, 256, "%s {FFFFFF}(ID:%d)", PlayerName(i),playerid);
					    SendClientMessage(playerid, COLOR_GREEN3, string);
					}
			    }
			}
			return 1;
		}
	}
if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/ah", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			{
			new ahelp[2230];
			if(PlayerInfo[playerid][pTest] == 1)
			{
            strins(ahelp,"{00FF00}..:::____|Test|___:::..\n",strlen(ahelp));
			strins(ahelp,"{FFFF00}/togtestadmin /askin /temute /teunmute \n /tekick\n /teakill /(t)est chat /tduty \n\n",strlen(ahelp));
			}
            strins(ahelp,"{00FF00}..:::____|Helper|___:::..\n",strlen(ahelp));
			strins(ahelp,"{FFFF00}/aka /askin /mute /unmute /muted /ismuted\n /vmuted  /kick /aduty /jailed /isjailed /checkvw\n/slap  /unjail /akill /(a)dmin chat /spec /specoff\n\n",strlen(ahelp));
            strins(ahelp,"{00FF00}..:::____|Administrator|___:::..\n",strlen(ahelp));
			strins(ahelp,"{FFFF00}/lastonline /asay /freeze /unfreeze /vmute /vunmute /readta /bizid /cmb\n /houseid /checkwarns /explode /blowup /sban /ta /checkbank  /checkawarns \n/skick /ban /goto /gethere /warn /rnmute /runmute /crl /togcb\n\n",strlen(ahelp));
            strins(ahelp,"{00FF00}..:::____|Moderator|___:::..\n",strlen(ahelp));
			strins(ahelp,"{FFFF00}/aviptext /startvote /destroycar /jail /rban /fakeban /fine  /veh /disarm /acuffed /god /allevent /checkvote /allmanage /arefuel\n /fixveh /acuff /auncuff /islevel /ises /isms /afon /afoff /tgoto /tspec /setint /setworld /caskrescars /askrescars /endvote \n /check ipcheck /ismanage /istogged /isevent /isvip /isgfc /isadmin /isleader /cbccheck\n\n",strlen(ahelp));
            strins(ahelp,"{00FF00}..:::____|Grand Admin|___:::..\n",strlen(ahelp));
			strins(ahelp,"{FFFF00} /amute /destroycars /checkfuelcars /givegun /togapm /sethpall\n/setarmorall  /checkrobmoney /checkatmrobmoney /checkbankrobmoney /checkaskres\n /muteall /unmuteall /sethp /setarmor /checkrescars\n\n",strlen(ahelp));
            strins(ahelp,"{00FF00}..:::____|Master Admin|___:::..\n",strlen(ahelp));
			strins(ahelp,"{FFFF00} /nban /weather /weatherall /tod /vipgang \n/sweepjob /towtruck /lsbank /risktp /busjob\n /pilotjob /pizzajob /coalminejob /carshop /office\n\n",strlen(ahelp));
			if(PlayerInfo[playerid][pAdmin] == 6)
			{
            strins(ahelp,"{00FF00}..:::____|Owner|___:::..\n",strlen(ahelp));
			strins(ahelp,"{FFFF00}/maxcameraspeed /createcamera  /stopalldrags /cbar1 /cbar2 /rallstrips /tombn /tomb /getcar /spawncar /givecar \n /nban /maketvipall /gettvipall /ejecto /ejectallo /givedrug  /giveacc /giveaccall /getvip\n",strlen(ahelp));
			strins(ahelp," /makegfc /gvr /gvb /givekillall /bar1 /bar2 /adminmute /unadminmute  /makeevent /giveepall /makevip \n /getadmin /givemoneysall /setep /setepall /setname /makegleader /makeleader /makeadmin\n /givemoney /awarn  /givelevel/gmx /setews /getmanage /loadto \n /setmoney /setkill /givekill /giveep /makemanage /saveto\n\n",strlen(ahelp));
			}
			if(PlayerInfo[playerid][pAdmin] == 7)
			{
            strins(ahelp,"{00FF00}..:::____|Scripter|___:::..\n",strlen(ahelp));
			strins(ahelp,"{FFFF00}/maxcameraspeed /createcamera  /stopalldrags /cbar1 /cbar2 /rallstrips /tombn /tomb /getcar /spawncar /givecar \n /nban /maketvipall /gettvipall /ejecto /ejectallo /givedrug  /giveacc /giveaccall /getvip\n",strlen(ahelp));
			strins(ahelp," /makegfc /gvr /gvb /givekillall /bar1 /bar2 /adminmute /unadminmute  /makeevent /giveepall /makevip \n /getadmin /givemoneysall /setep /setepall /setname /makegleader /makeleader /makeadmin\n /givemoney /awarn  /givelevel/gmx /setews /getmanage /loadto \n /setmoney /setkill /givekill /giveep /makemanage /saveto\n\n",strlen(ahelp));
			}
            strins(ahelp,"{00FF00}..:::____|Event|___:::..\n",strlen(ahelp));
			strins(ahelp,"{FFFF00}/kubche /riskplayer /risk riskticket /ename /dname /ecl /object /eo /einvisible /removelimit \n /esethpall /esetarmorall /giveweaponevent /startevent /startevent1 /ec \n /efight /eenter /efreeze /egivegunall /dfix /efix /eunfreeze \n /dinvisible /esetskinall /esetskin /hideevent /red /blue /egiveep\n",strlen(ahelp));
			strins(ahelp,"/ewinner /ewinner2 /efreezeall /createobject /eunfreezeall /setlimit /egivemoney \n /rwin /bwin /ncolor /createpickup /showevent /djetpack /ajetpack \n",strlen(ahelp));
			ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{FF0000}АДМИН КОМАНДИ:",ahelp,"Изход","");
			}  
		}
		return 1;
	}
		if(strcmp(cmd, "/tchat", true) == 0 || strcmp(cmd, "/t", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Пишете: (/t)chat [Чат]");
				return 1;
			}
			format(string, sizeof(string), "{33FF66}Administrator %s: %s" , PlayerName(playerid), result);
			if (PlayerInfo[playerid][pTest] >= 1)
			{
				SendTestMessage(COLOR_WHITE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си тест админ!");
			}
		}
		return 1;
	}
	
			if(strcmp(cmd, "/ta", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Пишете: /ta [text]");
				return 1;
			}
				    new admin[32];
                	if(PlayerInfo[playerid][pTest] == 1) { admin = "Test Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 1) { admin = "Helper"; }
                	else if(PlayerInfo[playerid][pAdmin] == 4) { admin = "Grand Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 2) { admin = "Administrator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 3) { admin = "Moderator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 6) { admin = "Owner";}
					else if(PlayerInfo[playerid][pAdmin] == 7) { admin = "Scripter";}
					else if(PlayerInfo[playerid][pAdmin] == 5) { admin = "Master Admin";}
			format(string, sizeof(string), "{33FF66}Administrator %s: %s",admin , PlayerName(playerid), result);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendTestMessage(COLOR_WHITE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	
			if(strcmp(cmd, "/preport", true) == 0 || strcmp(cmd, "/preport", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /preport [ID] [Какво е направил]");
				return 1;
			}
			format(string, sizeof(string), "[FACTION CHAT]Police Report From %s: %s", PlayerName(playerid), result);
			if (PlayerInfo[playerid][pMember] == TEAM_GPD)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "");
			}
		}
		return 1;
	}
	if (strcmp("/report", cmdtext, true, 10) == 0)
  {
              if(PlayerInfo[playerid][prMuted] != 0)
            {
                SendClientMessage(playerid, COLOR_ADMINCMD, " Ти си заглушен в REPORT CHAT.");
                return 1;
            }
   ShowPlayerDialog(playerid, 102, DIALOG_STYLE_INPUT, "Report", "Напиши ID на играча и причина за доклада", "Изпрати", "Close");
   return 1;
  }
  
			if(strcmp(cmd, "/bug", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /bug [Текст]");
				return 1;
			}
			format(string, sizeof(string), "{33CC33}BUG: от %s: %s", PlayerName(playerid), result);
			SendAdminMessage(COLOR_LIGHTBLUE, string);
		}
		return 1;
	}
				if(strcmp(cmd, "/pr", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /pr [Текст]");
				return 1;
			}
			format(string, sizeof(string), "{33CC33}Предложение от %s: %s", PlayerName(playerid), result);
			SendAdminMessage(COLOR_LIGHTBLUE, string);
		}
		return 1;
	}
		if(strcmp(cmd, "/n", true) == 0 || strcmp(cmd, "/noob", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	                if(PlayerInfo[playerid][prMuted] != 0)
            {
                SendClientMessage(playerid, COLOR_ADMINCMD, " Ти си заглушен в NOOB CHAT.");
                return 1;
            }
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /noob [Въпрос]");
				return 1;
			}
			format(string, sizeof(string), "{33CC33}HELP: Въпрос от %s: %s", PlayerName(playerid), result);
			if (PlayerInfo[playerid][Level] <= 20)
			{
				SendAdminMessage(COLOR_LIGHTBLUE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти си над 20-ти левел,затова не можеш да използваш тази команда!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/r", true) == 0 || strcmp(cmd, "/reply", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /r [text]");
				return 1;
			}
						if (PlayerInfo[playerid][pDonateRank] >= 2)
			{
			new pm1 = PlayerInfo[playerid][pNPM];
			format(string, sizeof(string), "* PM from %s(ID: %d): %s", PlayerName(playerid), playerid, (result));
			SendClientMessage(PlayerInfo[playerid][pNPM], COLOR_YELLOW, string);
			format(string, sizeof(string), "* PM to %s(ID: %d): %s", PlayerName(pm1), pm1, (result));
			SendClientMessage(playerid, COLOR_YELLOW, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш команда!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/asay", true) == 0 || strcmp(cmd, "/asay", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	    new admin[32];
                	if(PlayerInfo[playerid][pTest] == 1) { admin = "Test Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 1) { admin = "Helper"; }
                	else if(PlayerInfo[playerid][pAdmin] == 4) { admin = "Grand Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 2) { admin = "Administrator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 3) { admin = "Moderator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 6) { admin = "Owner";}
					else if(PlayerInfo[playerid][pAdmin] == 7) { admin = "Scripter";}
					else if(PlayerInfo[playerid][pAdmin] == 5) { admin = "Master Admin";}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Пишете: /asay [Чат]");
				return 1;
			}
			format(string, sizeof(string), "{FF33FF}Admin %s: %s" ,PlayerName(playerid), result);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessageToAll(COLOR_WHITE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатачно права за да ползваш команда!");
			}
		}
		return 1;
	}
//
if(strcmp(cmd, "/plate", true) == 0)
    {
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_WHITE, "Използвайте: /plate [text]");
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр.");
			if(PlayerInfo[playerid][pCash] >= 500)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 10, 1838.5139,-1856.2627,13.3828))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(PlayerToPoint(PTP_RADIUSS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ]))
			{
			 GivePlayerCash(playerid, -500);
			 HouseInfo[h][Earnings] += 500;
			 SavePlayerHouse(h);
			 new vehicleid = GetPlayerVehicleID(playerid);
SetVehicleNumberPlate(vehicleid,tmp);
RemovePlayerFromVehicle(playerid);
new Float:x, Float:y, Float:z, Float:zr;
	new vh;
	vh = GetPlayerVehicleID(playerid);
	GetVehiclePos(vh, x, y, z);
	GetVehicleZAngle(vh, zr);
	RemovePlayerFromVehicle(playerid);
	SetVehicleToRespawn(vh);
	SetVehiclePos(vh, x, y, z);
	SetVehicleZAngle(vh, zr);
SendClientMessage(playerid, COLOR_WHITE, "Ти промени текста на твоята кола");
for(new i = GetVehiclePoolSize(); i > 0; i--)
{
	SetVehicleToRespawn(playerid);
}
			 }
			 }
			 }
			 }
    return 1;
    }
//
		if(strcmp(cmd, "/plate2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /plate [text]");
				SendClientMessage(playerid, COLOR_WHITE, "Цена:$500");
				return 1;
			}
        if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си шофьр.");
			if(PlayerInfo[playerid][pCash] >= 500)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 10, 1838.5139,-1856.2627,13.3828))
			{
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(PlayerToPoint(PTP_RADIUSS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ]))
			{
			 GivePlayerCash(playerid, -500);
			 HouseInfo[h][Earnings] += 500;
			 SavePlayerHouse(h);
			 new playervehicle, Float:vehicle_pos[4];
                playervehicle = GetPlayerVehicleID( playerid );
                format(vehiclePlate[playervehicle], 128, "%s", result );
                new buffer[20];
for(new v = 0; v < MAX_VEHICLES; v++)
{
format(buffer, sizeof(buffer), "LS-A%d%d", v, random(10));
SetVehicleNumberPlate(playervehicle, result);
format(buffer, sizeof(buffer), "LS-A%d%d", v, random(10));
SetVehicleNumberPlate(v, result);
}

SetVehicleNumberPlate( playervehicle, result );
SendClientMessage(playerid, COLOR_WHITE, "Ти промени текста на твоята кола");
			 }
			 }
							}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари");
			}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си VIP");
			}
		}
		return 1;
	}
	
		if(strcmp(cmd, "/advert", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /advert [text]");
				SendClientMessage(playerid, COLOR_WHITE, "Цена:$500");
				return 1;
			}
			if (PlayerInfo[playerid][pDonateRank] >= 5)
			{
			if(PlayerInfo[playerid][pCash] >= 500)
			{
	         if(IsPlayerInRangeOfPoint(playerid, 3, 1720.6229,-1670.7140,20.2244) || IsPlayerInRangeOfPoint(playerid, 3, 2710.0598,-2850.3059,81.7090))
			{
			format(string, sizeof(string), "Advert From %s(%d): %s",PlayerName(playerid),playerid, result);
				SendClientMessageToAll(COLOR_YELLOW, string);
				for(new h; h<MAX_HOUSES; h++)
			 {
			if(GetPlayerVirtualWorld(playerid) == HouseInfo[h][hVirtualWorld])
			{
			 GivePlayerCash(playerid, -500);
			 HouseInfo[h][Earnings] += 500;
			 SavePlayerHouse(h);
			 SendClientMessage(playerid, COLOR_YELLOW, "Ти пусна обява");
			 }
			 }
			 }
							}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш достатъчно пари");
			}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си VIP");
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/getcar", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /getcar [playerid] [Car]");
			    SendClientMessage(playerid, COLOR_RED, "1-12");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /getcar [playerid] [Car]");
			    SendClientMessage(playerid, COLOR_RED, "1-12");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
					{
						if (strcmp(level, "1", true) == 0)
						{
	    				PlayerInfo[para1][pCar1] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 1 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
						if (strcmp(level, "2", true) == 0)
						{
	    				PlayerInfo[para1][pCar2] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 2 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
						if (strcmp(level, "3", true) == 0)
						{
	    				PlayerInfo[para1][pCar3] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 3 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
						if (strcmp(level, "4", true) == 0)
						{
	    				PlayerInfo[para1][pCar4] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 4 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "5", true) == 0)
						{
	    				PlayerInfo[para1][pCar5] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 5 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "6", true) == 0)
						{
	    				PlayerInfo[para1][pCar6] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 6 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "7", true) == 0)
						{
	    				PlayerInfo[para1][pCar7] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 7 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "8", true) == 0)
						{
	    				PlayerInfo[para1][pCar8] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 8 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "9", true) == 0)
						{
	    				PlayerInfo[para1][pCar9] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 9 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "10", true) == 0)
						{
	    				PlayerInfo[para1][pCar10] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 10 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "11", true) == 0)
						{
	    				PlayerInfo[para1][pCar11] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 11 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
																	if (strcmp(level, "12", true) == 0)
						{
	    				PlayerInfo[para1][pCar12] = 0;
						format(string, sizeof(string), "%s Му бе взета кола 12 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
//












//
	if(strcmp(cmd, "/spawncar", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /spawncar [Car]");
			    SendClientMessage(playerid, COLOR_RED, "1-12");
				return 1;
			}
			new level[32];
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			
							new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						if (strcmp(level, "1", true) == 0)
						{
						PutPlayerInVehicle(playerid,carflux,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(carflux, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
						if (strcmp(level, "2", true) == 0)
						{
						PutPlayerInVehicle(playerid,carflux4,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(carflux4, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
						if (strcmp(level, "3", true) == 0)
						{
						PutPlayerInVehicle(playerid,carflux2,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(carflux2, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
						if (strcmp(level, "4", true) == 0)
						{
						PutPlayerInVehicle(playerid,caro,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(caro, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
												if (strcmp(level, "5", true) == 0)
						{
						PutPlayerInVehicle(playerid,carpedal,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(carpedal, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
												if (strcmp(level, "6", true) == 0)
						{
						PutPlayerInVehicle(playerid,caro2,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(caro2, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
												if (strcmp(level, "7", true) == 0)
						{
						
						PutPlayerInVehicle(playerid,caro3,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(caro3, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
												if (strcmp(level, "8", true) == 0)
						{
						PutPlayerInVehicle(playerid,carflux3,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(carflux3, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
												if (strcmp(level, "9", true) == 0)
						{
						PutPlayerInVehicle(playerid,carholy,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(carholy, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
												if (strcmp(level, "10", true) == 0)
						{
						SendClientMessage(playerid, COLOR_ORANGE, "UFO-то се спауна до тебе");
SetVehiclePos(carufo, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
                LinkVehicleToInterior(carufo, 1);
                ShipObject[carufo] = CreateObject(18846, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(ShipObject[carufo], carufo, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
                						PutPlayerInVehicle(playerid,carufo,0);
						}
												if (strcmp(level, "11", true) == 0)
						{
						PutPlayerInVehicle(playerid,carstrix4,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(carstrix4, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
																	if (strcmp(level, "12", true) == 0)
						{
						PutPlayerInVehicle(playerid,carmoto,0);
						SendClientMessage(playerid, COLOR_ORANGE, "Колата е спауната до тебе");
SetVehiclePos(carmoto, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
						}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/givecar", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givecar [playerid] [Car]");
			    SendClientMessage(playerid, COLOR_RED, "1-12");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /givecar [playerid] [Car]");
			    SendClientMessage(playerid, COLOR_RED, "1-12");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
					{
						if (strcmp(level, "1", true) == 0)
						{
	    				PlayerInfo[para1][pCar1] = 1;
						format(string, sizeof(string), "%s Получи кола 1 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
						if (strcmp(level, "2", true) == 0)
						{
	    				PlayerInfo[para1][pCar2] = 1;
						format(string, sizeof(string), "%s Получи кола 2 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
						if (strcmp(level, "3", true) == 0)
						{
	    				PlayerInfo[para1][pCar3] = 1;
						format(string, sizeof(string), "%s Получи кола 3 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
						if (strcmp(level, "4", true) == 0)
						{
	    				PlayerInfo[para1][pCar4] = 1;
						format(string, sizeof(string), "%s Получи кола 4 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "5", true) == 0)
						{
	    				PlayerInfo[para1][pCar5] = 1;
						format(string, sizeof(string), "%s Получи кола 5 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "6", true) == 0)
						{
	    				PlayerInfo[para1][pCar6] = 1;
						format(string, sizeof(string), "%s Получи кола 6 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "7", true) == 0)
						{
	    				PlayerInfo[para1][pCar7] = 1;
						format(string, sizeof(string), "%s Получи кола 7 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "8", true) == 0)
						{
	    				PlayerInfo[para1][pCar8] = 1;
						format(string, sizeof(string), "%s Получи кола 8 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "9", true) == 0)
						{
	    				PlayerInfo[para1][pCar9] = 1;
						format(string, sizeof(string), "%s Получи кола 9 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "10", true) == 0)
						{
	    				PlayerInfo[para1][pCar10] = 1;
						format(string, sizeof(string), "%s Получи кола 10 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
												if (strcmp(level, "11", true) == 0)
						{
	    				PlayerInfo[para1][pCar11] = 1;
						format(string, sizeof(string), "%s Получи кола 11 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
																	if (strcmp(level, "12", true) == 0)
						{
	    				PlayerInfo[para1][pCar12] = 1;
						format(string, sizeof(string), "%s Получи кола 12 от %s",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_GRAD1,string);
						}
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
	
	

	
	
	
//
	if(strcmp(cmd, "/temute", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pTest] >= 1)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /temute [playerid] [Opiton]");
			    SendClientMessage(playerid, COLOR_YELLOW, "Opitons: 1: Псуване/Обиждане, 2: Лъже играчите, 3: Спам");
			    SendClientMessage(playerid, COLOR_YELLOW, "Opitons: 4: Спам/Псуване/Обиждане, 5: Грешо използване на лидерския чат");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /temute [playerid] [Opiton]");
			    SendClientMessage(playerid, COLOR_YELLOW, "Opitons: 1: Псуване/Обиждане, 2: Лъже играчите, 3: Спам");
			    SendClientMessage(playerid, COLOR_YELLOW, "Opitons: 4: Спам/Псуване/Обиждане, 5: Грешо използване на лидерския чат");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
					{
						if (strcmp(level, "1", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 10*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 10 minutes. [Reason: Псуване/Обиждане]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 1;
						}
						if (strcmp(level, "2", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 15*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 15 minutes. [Reason: Лъже играчите]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 2;
						}
						if (strcmp(level, "3", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 10*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 10 minutes. [Reason: Спам]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 3;
						}
						if (strcmp(level, "4", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 20*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 20 minutes. [Reason: Спам/Псуване/Обиждане]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 4;
						}
						if (strcmp(level, "5", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 10*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 10 minutes. [Reason: Грешно използване на лидерския чат]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 5;
						}
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/mute", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /mute [playerid] [Opiton]");
			    SendClientMessage(playerid, COLOR_YELLOW, "Opitons: 1: Псуване/Обиждане, 2: Лъже играчите, 3: Спам");
			    SendClientMessage(playerid, COLOR_YELLOW, "Opitons: 4: Спам/Псуване/Обиждане, 5: Грешо използване на лидерския чат");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /mute [playerid] [Opiton]");
			    SendClientMessage(playerid, COLOR_YELLOW, "Opitons: 1: Псуване/Обиждане, 2: Лъже играчите, 3: Спам");
			    SendClientMessage(playerid, COLOR_YELLOW, "Opitons: 4: Спам/Псуване/Обиждане, 5: Грешо използване на лидерския чат");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
					{
						if (strcmp(level, "1", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 10*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 10 minutes. [Reason: Псуване/Обиждане]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 1;
						}
						if (strcmp(level, "2", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 15*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 15 minutes. [Reason: Лъже играчите]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 2;
						}
						if (strcmp(level, "3", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 10*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 10 minutes. [Reason: Спам]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 3;
						}
						if (strcmp(level, "4", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 20*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 20 minutes. [Reason: Спам/Псуване/Обиждане]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 4;
						}
						if (strcmp(level, "5", true) == 0)
						{
	    				PlayerInfo[para1][ptMuted] = 10*60;
						PlayerInfo[para1][pMuted] = 1;
						format(string, sizeof(string), "%s was muted by %s for 10 minutes. [Reason: Грешно използване на лидерския чат]",GetName(para1), PlayerName(playerid));
						SendClientMessageToAll(COLOR_RED,string);
						PlayerInfo[para1][pMuteReason] = 5;
						}
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/ncolor", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
					if (PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
					{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ncolor [playerid] [Color]");
			    SendClientMessage(playerid, COLOR_RED, "1 - Бяло 2 - Зелено 3 - Сиво 4 - Жълто 5 - Оранжево");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /ncolor [playerid] [Color]");
			    SendClientMessage(playerid, COLOR_RED, "1 - Бяло 2 - Зелено 3 - Сиво 4 - Жълто 5 - Оранжево");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
					{
						if (strcmp(level, "1", true) == 0)
						{
SetPlayerColor(para1, COLOR_WHITE);
						}
						if (strcmp(level, "2", true) == 0)
						{
SetPlayerColor(para1, COLOR_GREEN);
						}
						if (strcmp(level, "3", true) == 0)
						{
SetPlayerColor(para1, COLOR_GRAD1);
						}
						if (strcmp(level, "4", true) == 0)
						{
SetPlayerColor(para1, COLOR_YELLOW);
						}
                        if (strcmp(level, "5", true) == 0)
						{
SetPlayerColor(para1, COLOR_ORANGE);
						}
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
//
      if(strcmp(cmdtext, "/gotomark", true) == 0)
   {
       if(IsPlayerConnected(playerid))
       {
              			if (PlayerInfo[playerid][pAdmin] >= 4)
			{

            if (GetPlayerState(playerid) == 2)
            {
               new tmpcar = GetPlayerVehicleID(playerid);
               SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
               TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
            }
            else
            {
               SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
            }
format(string, sizeof(string), "Mark: %s се телепортира до маркираната си позиция!", PlayerName(playerid));
			SendAdminMessage(COLOR_RED,string);
            SetPlayerInterior(playerid, 0);
                        }
            else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
         }
      return 1;
   }
   
      if(strcmp(cmdtext, "/mark", true) == 0)
   {
       if(IsPlayerConnected(playerid))
       {
       			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			
            GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
            SendClientMessage(playerid, COLOR_WHITE, "* Позицията е запазена *");
            format(string, sizeof(string), "Mark: %s си маркира позиция!",PlayerName(playerid));
			SendAdminMessage(COLOR_RED,string);
            }
            else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
      }
      return 1;
   }
//
	if(strcmp(cmd, "/makeadmin", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 6 || IsPlayerAdmin(playerid))
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makeadmin [playerid] [Level]");
			    SendClientMessage(playerid, COLOR_YELLOW, "1 - Test 2 - Helper 3 - Administrator 4 - Moderator 5 - Grand Admin 6 - Master Admin 7 - Owner 8 - Scripter");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makeadmin [playerid] [Level]");
			    SendClientMessage(playerid, COLOR_YELLOW, "1 - Test 2 - Helper 3 - Administrator 4 - Moderator 5 - Grand Admin 6 - Master Admin 7 - Owner 8 - Scripter");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
					{
						if (strcmp(level, "1", true) == 0)
						{
						PlayerInfo[para1][pTest] = 1;
						format(string, sizeof(string), "Вие вече сте част от екипа на Gold Play.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "Честито %s даде тест админ права на %s",PlayerName(playerid), GetName(para1));
                        SendClientMessageToAll(COLOR_ORANGE,string);
						}
				    	if (strcmp(level, "8", true) == 0)
						{
						PlayerInfo[para1][pTest] = 0;
						PlayerInfo[para1][pAdmin] = 7;
						format(string, sizeof(string), "Вие вече сте админ с Scripter права.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, " Честито %s даде Scripter права на %s",PlayerName(playerid), GetName(para1));
                        SendClientMessageToAll(COLOR_ORANGE,string);
						}
						if (strcmp(level, "2", true) == 0)
						{
						PlayerInfo[para1][pTest] = 0;
						PlayerInfo[para1][pAdmin] = 1;
						format(string, sizeof(string), "Вие вече сте админ с Helper права.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "Честито %s даде Helper права на %s ",PlayerName(playerid), GetName(para1));
                        SendClientMessageToAll(COLOR_ORANGE,string);
						}
						if (strcmp(level, "3", true) == 0)
						{
						PlayerInfo[para1][pTest] = 0;
						PlayerInfo[para1][pAdmin] = 2;
						format(string, sizeof(string), "Вие вече сте админ с Administrator права.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "Честито %s даде Administrator права на %s",PlayerName(playerid), GetName(para1));
                        SendClientMessageToAll(COLOR_ORANGE,string);
						}
						if (strcmp(level, "4", true) == 0)
						{
						PlayerInfo[para1][pTest] = 0;
						PlayerInfo[para1][pAdmin] = 3;
						format(string, sizeof(string), "Вие вече сте админ с Moderator права.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "Честито %s даде Moderator права на %s",PlayerName(playerid), GetName(para1));
                        SendClientMessageToAll(COLOR_ORANGE,string);
						}
						if (strcmp(level, "5", true) == 0)
						{
						PlayerInfo[para1][pTest] = 0;
						PlayerInfo[para1][pAdmin] = 4;
						format(string, sizeof(string), "Вие вече сте админ с Grand Admin права.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "Честито %s даде Grand Admin права на %s",PlayerName(playerid), GetName(para1));
                        SendClientMessageToAll(COLOR_ORANGE,string);
						}
						if (strcmp(level, "6", true) == 0)
						{
						PlayerInfo[para1][pTest] = 0;
						PlayerInfo[para1][pAdmin] = 5;
						format(string, sizeof(string), "Вие вече сте админ с Master Admin права.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "Честито %s даде Master Admin права на %s",PlayerName(playerid), GetName(para1));
                        SendClientMessageToAll(COLOR_ORANGE,string);
						}
						if (strcmp(level, "7", true) == 0)
						{
						PlayerInfo[para1][pTest] = 0;
						PlayerInfo[para1][pAdmin] = 6;
						format(string, sizeof(string), "Вие вече сте админ с Owner права.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "Честито %s даде Owner права на %s",PlayerName(playerid), GetName(para1));
                        SendClientMessageToAll(COLOR_ORANGE,string);
						}
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/pjail", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /pjail [playerid] [Opiton]");
			    SendClientMessage(playerid, COLOR_RED, "1 - WANTED");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /jail [playerid] [Opiton]");
			    SendClientMessage(playerid, COLOR_RED, "1 - WANTED");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
					{
						if (strcmp(level, "1", true) == 0)
						{
						PlayerInfo[para1][pJail] = 1;
						PlayerInfo[para1][pJailTime] = 1*60;
						SpawnPlayer(playerid);
						}
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/jail", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /jail [playerid] [Opiton]");
			    SendClientMessage(playerid, COLOR_YELLOW, "1: Използва превозни средства от работа за собствени цели, 2: Прочети правилата,");
			    SendClientMessage(playerid, COLOR_YELLOW, "3: Бие ADMIN ON DUTY, 4: Разваля евент");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /jail [playerid] [Opiton]");
			    SendClientMessage(playerid, COLOR_YELLOW, "1: Използва превозни средства от работа за собствени цели, 2: Прочети правилата,");
			    SendClientMessage(playerid, COLOR_YELLOW, "3: Бие ADMIN ON DUTY, 4: Разваля евент");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
					{
						if (strcmp(level, "1", true) == 0)
						{
						ResetPlayerWeaponsEx(para1);
						PlayerInfo[para1][pJailed] = 1;
						PlayerInfo[para1][pJailTime] = 10*60;
						SetPlayerInterior(para1, 4);
						PlayerCuffed[giveplayerid] = 1;
						SetPlayerAttachedObject(para1, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
						SetPlayerSpecialAction (para1, SPECIAL_ACTION_CUFFED);
						TogglePlayerControllable(para1, 1);
						PlayerCuffed[giveplayerid] = 1;
						SetPlayerPos(para1, 302.180999,300.722991,999.148437);
						format(string, sizeof(string), "Ти си в затвора за 10 минути.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "%s е вкаран в затвора от %s за 10 минути. Причина: Използва превозни средства от работа за собствени цели", GetName(para1), PlayerName(playerid));
                        SendClientMessageToAll(COLOR_GRAD1,string);
						}
						if (strcmp(level, "2", true) == 0)
						{
						ResetPlayerWeaponsEx(para1);
						PlayerInfo[para1][pJailed] = 2;
						PlayerInfo[para1][pJailTime] = 5*60;
						SetPlayerInterior(para1, 4);
						PlayerCuffed[giveplayerid] = 1;
						SetPlayerAttachedObject(para1, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
						SetPlayerSpecialAction (para1, SPECIAL_ACTION_CUFFED);
						TogglePlayerControllable(para1, 1);
						PlayerCuffed[giveplayerid] = 1;
						SetPlayerPos(para1, 302.180999,300.722991,999.148437);
						format(string, sizeof(string), "Ти си в затвора за 5 минути.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "%s е вкаран в затвора от %s за 5 минути. Причина: Прочети правилата", GetName(para1), PlayerName(playerid));
                        SendClientMessageToAll(COLOR_GRAD1,string);
						}
						if (strcmp(level, "3", true) == 0)
						{
						ResetPlayerWeaponsEx(para1);
						PlayerInfo[para1][pJailed] = 3;
						PlayerInfo[para1][pJailTime] = 15*60;
						SetPlayerInterior(para1, 4);
						PlayerCuffed[giveplayerid] = 1;
						SetPlayerAttachedObject(para1, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
						SetPlayerSpecialAction (para1, SPECIAL_ACTION_CUFFED);
						TogglePlayerControllable(para1, 1);
						PlayerCuffed[giveplayerid] = 1;
						SetPlayerPos(para1, 302.180999,300.722991,999.148437);
						format(string, sizeof(string), "Ти си в затвора за 15 минути.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "%s е вкаран в затвора от %s за 15 минути. Причина: Бие ADMIN ON DUTY", GetName(para1), PlayerName(playerid));
                        SendClientMessageToAll(COLOR_GRAD1,string);
						}
						if (strcmp(level, "4", true) == 0)
						{
						ResetPlayerWeaponsEx(para1);
						PlayerInfo[para1][pJailed] = 4;
						PlayerInfo[para1][pJailTime] = 5*60;
						SetPlayerInterior(para1, 4);
						PlayerCuffed[giveplayerid] = 1;
						SetPlayerAttachedObject(para1, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
						SetPlayerSpecialAction (para1, SPECIAL_ACTION_CUFFED);
						TogglePlayerControllable(para1, 1);
						PlayerCuffed[giveplayerid] = 1;
						SetPlayerPos(para1, 302.180999,300.722991,999.148437);
						format(string, sizeof(string), "Ти си в затвора за 15 минути.");
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, 256, "%s е вкаран в затвора от %s за 5 минути. Причина: Разваля евент", GetName(para1), PlayerName(playerid));
                        SendClientMessageToAll(COLOR_GRAD1,string);
						}
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/makeleader", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makeleader [playerid] [Team]");
			    SendClientMessage(playerid, COLOR_RED, "Criminal: Grove, Ballas, Vagos, VIP, Aztec, Boyz, VCripz, SoA");
			    SendClientMessage(playerid, COLOR_RED, "Criminal: BlackMafia, Bulgarian Mafia, MS13,  Rifa,DPK,Yakuza");
                SendClientMessage(playerid, COLOR_RED, "Criminal: ThugLife, AB,Boys");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Legal: GPD, FBI");
                SendClientMessage(playerid, COLOR_WHITE, "Netural: Civilian");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makeleader [playerid] [Team]");
			    SendClientMessage(playerid, COLOR_RED, "Criminal: Grove, Ballas, Vagos, VIP, Aztec, Boyz, VCripz, SoA");
			    SendClientMessage(playerid, COLOR_RED, "Criminal: BlackMafia, Bulgarian Mafia, MS13,  Rifa,DPK,Yakuza");
                SendClientMessage(playerid, COLOR_RED, "Criminal: ThugLife, AB,Boys");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Legal: GPD, FBI");
                SendClientMessage(playerid, COLOR_WHITE, "Netural: Civilian");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
					{
					PlayerInfo[para1][pDeltaForce] = 0;
						if (strcmp(level, "Grove", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_GROVE;
							gTeam[para1] = TEAM_GROVE;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
                            SpawnPlayer(para1);
                            PlayerInfo[para1][pGL] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[1][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
					        format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[1][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
							RemovePlayerAttachedObject(para1, 0);
						}
						if (strcmp(level, "Ballas", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_BALLAS;
                            gTeam[para1] = TEAM_BALLAS;
                            OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
                            SpawnPlayer(para1);
                            PlayerInfo[para1][pGL] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[2][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[2][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
						}
						if (strcmp(level, "Vagos", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_VAGOS;
							gTeam[para1] = TEAM_VAGOS;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
                            SpawnPlayer(para1);
                            PlayerInfo[para1][pGL] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[3][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[3][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);

							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "VIP", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_VIP;
                            gTeam[para1] = TEAM_VIP;
                            OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							PlayerInfo[para1][pGL] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[4][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[4][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "AZTEC", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_TRIADS;
							gTeam[para1] = TEAM_TRIADS;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							PlayerInfo[para1][pGL] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[5][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[5][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "Boyz", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_BOYZ;
							gTeam[para1] = TEAM_BOYZ;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pGL] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[6][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[6][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "VCripz", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_CRIPZ;
							gTeam[para1] = TEAM_CRIPZ;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pGL] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[7][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[7][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
                            SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "GPD", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_GPD;
							gTeam[para1] = TEAM_GPD;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pGL] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[8][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[8][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "AB", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_AsianBoyz;
							gTeam[para1] = TEAM_AsianBoyz;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							PlayerInfo[para1][pGL] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[9][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[9][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
                        if (strcmp(level, "DPK", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_DPK;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pGL] = 0;
							gTeam[para1] = TEAM_DPK;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[20][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[20][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						                        if (strcmp(level, "YAKUZA", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_YAKUZA;
							gTeam[para1] = TEAM_YAKUZA;
							PlayerInfo[para1][pGL] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на Yakuza", GetName(para1));
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в Yakuza от %s.",GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "SoA", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_SoA;
							gTeam[para1] = TEAM_SoA;
							PlayerInfo[para1][pGL] = 0;
							PlayerInfo[para1][pRank] = 6;
							OnDuty[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[10][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[10][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "BlackMafia", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_ZETAS;
							gTeam[para1] = TEAM_ZETAS;
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pGL] = 0;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[11][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[11][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
                        if (strcmp(level, "MS13", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_MS13;
							gTeam[para1] = TEAM_MS13;
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pGL] = 0;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[12][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[12][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
                        }
                        if (strcmp(level, "Rifa", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_RIFA;
							gTeam[para1] = TEAM_RIFA;
							PlayerInfo[para1][pGL] = 0;
							PlayerInfo[para1][pRank] = 6;
							OnDuty[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[13][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[13][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
								SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "BulgarianMafia", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_BulgarianMafia;
							gTeam[para1] = TEAM_BulgarianMafia;
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pGL] = 0;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[15][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[15][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "LatinKing", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_LatinKing;
							gTeam[para1] = TEAM_LatinKing;
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pGL] = 0;
							OnDuty[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[16][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[16][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "FBI", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_FBI;
							gTeam[para1] = TEAM_FBI;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pGL] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[17][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[17][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "Boys", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_NZ;
							gTeam[para1] = TEAM_NZ;
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pGL] = 0;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[18][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[18][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "ThugLife", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_Thugs;
							gTeam[para1] = TEAM_Thugs;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							PlayerInfo[para1][pGL] = 0;
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за лидер на %s", GetName(para1), TeamInfo[19][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за лидер в %s от %s.", TeamInfo[19][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
					    if (strcmp(level, "Civilian", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_CIVILIAN;
							gTeam[para1] = TEAM_CIVILIAN;
							PlayerInfo[para1][pRank] = 0;
							PlayerInfo[para1][pGL] = 0;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), "%s премахна от лидерство %s и сега той е Civilian",GetName(playerid), GetName(para1));
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти вече не си лидер, вече си Civilian от админ %s.", GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
						}
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/makegleader", true) == 0)
	{
	 	if(IsPlayerConnected(playerid))
        {
			if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makegleader [playerid] [Team]");
			    SendClientMessage(playerid, COLOR_RED, "Criminal: Grove, Ballas, Vagos, VIP, Aztec, Boyz, VCripz, SoA");
			    SendClientMessage(playerid, COLOR_RED, "Criminal: BlackMafia, Bulgarian Mafia, MS13,  Rifa,DPK,Yakuza");
                SendClientMessage(playerid, COLOR_RED, "Criminal: ThugLife, AB,Boys");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Legal: GPD, FBI");
                SendClientMessage(playerid, COLOR_WHITE, "Netural: Civilian");
				return 1;
			}
			new para1;
			new level[32];
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makegleader [playerid] [Team]");
			    SendClientMessage(playerid, COLOR_RED, "Criminal: Grove, Ballas, Vagos, VIP, Aztec, Boyz, VCripz, SoA");
			    SendClientMessage(playerid, COLOR_RED, "Criminal: BlackMafia, Bulgarian Mafia, MS13,  Rifa,DPK,Yakuza");
                SendClientMessage(playerid, COLOR_RED, "Criminal: ThugLife, AB,Boys");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Legal: GPD, FBI");
                SendClientMessage(playerid, COLOR_WHITE, "Netural: Civilian");
				return 1;
			}
			strmid(level, tmp, 0, sizeof(level), sizeof(level));
			    if(IsPlayerConnected(para1))
			    {
			    PlayerInfo[para1][pDeltaForce] = 0;
			        if(para1 != INVALID_PLAYER_ID)
					{
						if (strcmp(level, "Grove", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_GROVE;
							gTeam[para1] = TEAM_GROVE;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pGL] = 1;
                            SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[1][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
					        format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[1][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
							RemovePlayerAttachedObject(para1, 0);
						}
						if (strcmp(level, "Ballas", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_BALLAS;
                            gTeam[para1] = TEAM_BALLAS;
                            OnDuty[para1] = 0;
                            PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
                            SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[2][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[2][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
						}
						if (strcmp(level, "Vagos", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_VAGOS;
							gTeam[para1] = TEAM_VAGOS;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
                            SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[3][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[3][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "VIP", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_VIP;
                            gTeam[para1] = TEAM_VIP;
                            OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pGL] = 1;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[4][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[4][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "AZTEC", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_TRIADS;
							gTeam[para1] = TEAM_TRIADS;
							PlayerInfo[para1][pGL] = 1;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[5][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[5][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "Boyz", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_BOYZ;
							gTeam[para1] = TEAM_BOYZ;
							PlayerInfo[para1][pGL] = 1;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[6][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[6][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "VCripz", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_CRIPZ;
							gTeam[para1] = TEAM_CRIPZ;
							PlayerInfo[para1][pGL] = 1;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[7][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[7][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
                            SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "GPD", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_GPD;
							gTeam[para1] = TEAM_GPD;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							PlayerInfo[para1][pGL] = 1;
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[8][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[8][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "AB", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_AsianBoyz;
							gTeam[para1] = TEAM_AsianBoyz;
							PlayerInfo[para1][pGL] = 1;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[9][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[9][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
                        if (strcmp(level, "DPK", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_DPK;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pGL] = 1;
							gTeam[para1] = TEAM_DPK;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[20][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[20][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						                        if (strcmp(level, "YAKUZA", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_YAKUZA;
							gTeam[para1] = TEAM_YAKUZA;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на Yakuza", GetName(para1));
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в Yakuza от %s.",GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "SoA", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_SoA;
							gTeam[para1] = TEAM_SoA;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
							OnDuty[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[10][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[10][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
						if (strcmp(level, "BlackMafia", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_ZETAS;
							gTeam[para1] = TEAM_ZETAS;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[11][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[11][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
						}
                        if (strcmp(level, "MS13", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_MS13;
							gTeam[para1] = TEAM_MS13;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[12][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[12][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
														RemovePlayerAttachedObject(para1, 0);
							SetPVarInt(para1, "laser", 0);
                        }
                        if (strcmp(level, "Rifa", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_RIFA;
							gTeam[para1] = TEAM_RIFA;
							PlayerInfo[para1][pRank] = 6;
							PlayerInfo[para1][pGL] = 1;
							OnDuty[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[13][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[13][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
								SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "BulgarianMafia", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_BulgarianMafia;
							gTeam[para1] = TEAM_BulgarianMafia;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[15][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за  главен лидер в %s от %s.", TeamInfo[15][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "LatinKing", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_LatinKing;
							gTeam[para1] = TEAM_LatinKing;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
							OnDuty[para1] = 0;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[16][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[16][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "FBI", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_FBI;
							gTeam[para1] = TEAM_FBI;
							OnDuty[para1] = 0;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[17][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[17][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "Boys", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_NZ;
							gTeam[para1] = TEAM_NZ;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[18][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[18][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
                        if (strcmp(level, "ThugLife", true) == 0)
						{
							PlayerInfo[para1][pMember] = TEAM_Thugs;
							gTeam[para1] = TEAM_Thugs;
							PlayerInfo[para1][pGL] = 1;
							PlayerInfo[para1][pRank] = 6;
							SpawnPlayer(para1);
							OnDuty[para1] = 0;
							format(string, sizeof(string), " Честито %s беше назначен за главен лидер на %s", GetName(para1), TeamInfo[19][TeamName]);
							SendClientMessageToAll(COLOR_ORANGE, string);
							format(string, sizeof(string), "Ти беше назначен за главен лидер в %s от %s.", TeamInfo[19][TeamName],GetName(playerid));
							SendClientMessage(para1, COLOR_ORANGE, string);
							SetPVarInt(para1, "laser", 0);
														RemovePlayerAttachedObject(para1, 0);
                        }
					}
				}
			} else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp(cmdtext, "/togapm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pAdmin] >= 4)
        	{
		        if(PlayerInfo[playerid][aTog] == 0)
		        {
		            PlayerInfo[playerid][aTog] = 1;
					SendClientMessage(playerid, COLOR_GREEN,"* Сега можеш да четеш личните съобщения на другите играчи! *");
				}
				else if(PlayerInfo[playerid][aTog] == 1)
				{
				    PlayerInfo[playerid][aTog] = 0;
					SendClientMessage(playerid, COLOR_GRAD1,"* Вече неможеш да четеш личните съобщения на другите играчи! *");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	//
	//
	///
	//
	//
	//
	//
	//

	//
	//
	//
	//
	//
	//
	//
		if(strcmp(cmd, "/invite", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
   		{
    		tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /invite [playerid]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pMember] != TEAM_CIVILIAN)
			{
   				if(PlayerInfo[giveplayerid][pMember] == TEAM_CIVILIAN)
			    {
					if(IsPlayerConnected(giveplayerid))
					{
	    				if(giveplayerid != INVALID_PLAYER_ID)
					    {
	        				new form[128];
					        new faction = PlayerInfo[playerid][pMember];
							FactionRequest[giveplayerid] = faction;
							//
							new wstring[256];
					format(wstring, sizeof(wstring), "%s покани %s да влезе в твоята банда.",GetName(playerid), GetName(giveplayerid));
				SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, wstring);
							//
							format(form,sizeof(form),"Ти си поканен/а да влезеш в %s от %s",TeamInfo[faction][TeamName],GetName(playerid));
							SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,form);
							SendClientMessage(giveplayerid,COLOR_LIGHTBLUE, "Напиши /acceptfaction за да влезеш или /cancelfaction да откажеш!");
							format(form,sizeof(form),"Ти покани %s да влезе в %s. ",GetName(giveplayerid),TeamInfo[faction][TeamName]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,form);
                         	return 1;
						}
					}
	 				else
					{
						SendClientMessage(playerid, COLOR_GRAD1, " Невалидно ID.");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, " Човекът, който искаш да поканиш вече има банда/мафия и неможеш да го поканиш.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Ти не си лидер!");
			}
		}
		return 1;
	}
	//
	//
	//
	
	if(strcmp(cmd, "/uninvite", true) == 0)
	{
 		if(IsPlayerConnected(playerid))
   		{
    		tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /uninvite [playerid]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pMember] == PlayerInfo[giveplayerid][pMember] && PlayerInfo[playerid][pRank] >= 6 || PlayerInfo[playerid][pGL] == 1)
			{
   				if(PlayerInfo[giveplayerid][pMember] != TEAM_CIVILIAN)
			    {
			     				if(PlayerInfo[giveplayerid][pRank] <= 5)
			    {
					if(IsPlayerConnected(giveplayerid))
					{
	    				if(giveplayerid != INVALID_PLAYER_ID)
					    {

	        				new form[128];
					        new faction = PlayerInfo[playerid][pMember];
							format(form,sizeof(form),"Ти беше изгонен от банда/мафия %s от лидер %s",TeamInfo[faction][TeamName],GetName(playerid));
							SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,form);
							format(form,sizeof(form),"Ти изгони %s от %s",GetName(giveplayerid),TeamInfo[faction][TeamName]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE,form);
							PlayerInfo[giveplayerid][pMember] = TEAM_CIVILIAN;
							PlayerInfo[giveplayerid][pRank] = 0;
							gTeam[giveplayerid] = TEAM_CIVILIAN;
							SetPlayerSkin(giveplayerid, 28);
                            SetPVarInt(giveplayerid, "laser", 0);
							format(form, sizeof(form), "%s изгони %s от %s.",GetName(playerid),GetName(giveplayerid),TeamInfo[faction][TeamName]);
							SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, form);
							return 1;
						}
					}
	 				else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID.");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Човекът, който искаш да изгониш не е от твоята банда/мафия.");
				}
								}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да изгониш лидер.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/leavefaction", true) == 0|| strcmp(cmd, "/lf", true) == 0)
	{
			new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен използвай /leavefaction confirm или /lf confirm");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"confirm",true) == 0)
            {
 		if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN)
		{
  			new ranktext[256];
	    	switch(PlayerInfo[playerid][pRank])
		    {
      			case 1: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank1]);
	        	case 2: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank2]);
		        case 3: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank3]);
		        case 4: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank4]);
		        case 5: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank5]);
	         	case 6: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank6]);
		    }
            RemovePlayerAttachedObject(playerid, 0);
            SetPVarInt(playerid, "laser", 0);
		    OnDuty[playerid] = 0;
		    format(string, sizeof(string), "%s напусна бандата/мафията по негово желание.",GetName(playerid) );
			SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
			SetPlayerColor(playerid,0xFFFFFFFF);
  			PlayerInfo[playerid][pMember] = TEAM_CIVILIAN;
  			gTeam[playerid] = TEAM_CIVILIAN;
			SetPlayerSkin(playerid, 28);
			PlayerInfo[playerid][pDeltaForce] = 0;
			}
			return 1;
		}
		else
		{
  			SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в банда/мафия!");
			return 1;
		}
	}
	if(strcmp(cmd, "/acceptfaction", true) == 0 || strcmp(cmd, "/af", true) == 0)
	{
				new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_WHITE, "Ако си сигурен използвай /acceptfaction confirm или /af confirm");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"confirm",true) == 0)
            {
 		new faction = FactionRequest[playerid];
		if (FactionRequest[playerid] != TEAM_CIVILIAN)
		{
			if(PlayerInfo[playerid][pMember] == TEAM_CIVILIAN)
			{
   				new wstring[88];
   				format(wstring, sizeof(wstring), "Ти влезе в %s. Поздравления!",TeamInfo[faction][TeamName]);
			    SendClientMessage(playerid,COLOR_LIGHTBLUE, wstring);
				PlayerInfo[playerid][pMember] = FactionRequest[playerid];
				PlayerInfo[playerid][pRank] = 1;
				gTeam[playerid] = FactionRequest[playerid];
				FactionRequest[playerid] = TEAM_CIVILIAN;
				PlayerInfo[playerid][pDeltaForce] = 0;
				format(wstring, sizeof(wstring), "%s влезе в твоята банда/мафия.",GetName(playerid));
				SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, wstring);
				//
				    new rand = random(5);
    new crand = random(3);
    if(SpecPlayerReturnPos[playerid] == 1)
	{
	    SetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
	    SetPlayerFacingAngle(playerid, Unspec[playerid][sAngle]);
	    SetPlayerInterior(playerid, Unspec[playerid][sPint]);
	    SetPlayerVirtualWorld(playerid, Unspec[playerid][sVw]);
	    SpecPlayerReturnPos[playerid] = 0;
	    return 1;
	}
	switch(PlayerInfo[playerid][pMember])
    {
              case TEAM_YAKUZA:
	   {
         	SetPlayerPos(playerid,gYAKUZASP[rand][0],gYAKUZASP[rand][1],gYAKUZASP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gYAKUZASP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 101);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 101);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 47);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 48);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 30);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 7);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 3);
			}
       }
       case TEAM_DPK:
	   {
         	SetPlayerPos(playerid,gDarkSP[rand][0],gDarkSP[rand][1],gDarkSP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gDarkSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 185);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 185);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 120);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 208);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 117);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 118);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 118);
			}
       }
       case TEAM_BALLAS:
	   {
         	SetPlayerPos(playerid,gBallasSP[rand][0],gBallasSP[rand][1],gBallasSP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gBallasSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 104);
	     	    SetPlayerInterior(playerid, 5);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 104);
	     	    SetPlayerInterior(playerid, 5);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 102);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 102);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 102);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
                SetPlayerSkin(playerid, 103);
                SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 103);
			    SetPlayerInterior(playerid, 5);
			}
       }
       case TEAM_RIFA:
	   {
         	SetPlayerPos(playerid,gRIFASP[rand][0],gRIFASP[rand][1],gRIFASP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gRIFASP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	SetPlayerInterior(playerid,2);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 174);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 174);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 174);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 173);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 175);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 175);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 173);
			}
	   }
       case TEAM_VAGOS:
	   {
			SetPlayerPos(playerid,gVagosSP[rand][0],gVagosSP[rand][1],gVagosSP[rand][2]);
   			SetPlayerFacingAngle(playerid,gVagosSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 108);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 108);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 109);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 109);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 109);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 110);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 110);
			}
       }
       case TEAM_VIP:
	   {
         	SetPlayerPos(playerid,gVIPSP[rand][0],gVIPSP[rand][1],gVIPSP[rand][2]);
   			SetPlayerFacingAngle(playerid,gVIPSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 186);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 186);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 19);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 100);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 126);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 147);
			}

       }
       case TEAM_TRIADS:
	   {
    		SetPlayerPos(playerid,gTriadsSP[rand][0],gTriadsSP[rand][1],gTriadsSP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gTriadsSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	SetPlayerInterior(playerid,9);

	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 115);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 115);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 116);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 114);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 114);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 116);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 116);
			}
       }
       case TEAM_BOYZ:
	   {
    		SetPlayerPos(playerid,gBoyzSP[rand][0],gBoyzSP[rand][1],gBoyzSP[rand][2]);
	     	SetPlayerFacingAngle(playerid,gBoyzSP[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 123);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 123);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 123);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 217);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 101);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 47);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 29);
			}
       }
       case TEAM_CRIPZ:
	   {
    		SetPlayerPos(playerid,gCripzSP[crand][0],gCripzSP[crand][1],gCripzSP[crand][2]);
	     	SetPlayerFacingAngle(playerid,gCripzSP[crand][3]);
     		SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 21);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 21);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 21);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 176);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 156);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 176);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 177);
			}
       }
       case TEAM_GPD:
	   {
    		SetPlayerPos(playerid,GPDSP[crand][0],GPDSP[crand][1],GPDSP[crand][2]);
	     	SetPlayerFacingAngle(playerid,GPDSP[crand][3]);
     		SetCameraBehindPlayer(playerid);
     		SetPlayerInterior(playerid,6);

     	    if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, skins[random(3)]);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, skins[random(3)]);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, skins[random(3)]);
			}
       }
       case TEAM_ZETAS:
	   {
    		SetPlayerPos(playerid,ZETAS[crand][0],ZETAS[crand][1],ZETAS[crand][2]);
	     	SetPlayerFacingAngle(playerid,ZETAS[crand][3]);
     		SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 124);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 124);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 125);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 120);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
			    SetPlayerSkin(playerid, 46);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 30);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 23);
			}
       }
       case TEAM_SoA:
	   {
         	SetPlayerPos(playerid,SoA[rand][0],SoA[rand][1],SoA[rand][2]);
	     	SetPlayerFacingAngle(playerid,SoA[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 248);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 248);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 248);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 100);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 247);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 291);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 73);
			}
       }
	    case TEAM_MS13:
	   {
         	SetPlayerPos(playerid,MS13[rand][0],MS13[rand][1],MS13[rand][2]);
	     	SetPlayerFacingAngle(playerid,MS13[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 115);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 115);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 114);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 116);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 116);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 114);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 116);
			}
	   }
	   case TEAM_BulgarianMafia:
	   {
         	SetPlayerPos(playerid,BulgarianMafia[rand][0],BulgarianMafia[rand][1],BulgarianMafia[rand][2]);
	     	SetPlayerFacingAngle(playerid,BulgarianMafia[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 122);
	     	    SetPlayerInterior(playerid, 5);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 122);
	     	    SetPlayerInterior(playerid, 5);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 123);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 126);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 115);
				SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 174);
			    SetPlayerInterior(playerid, 5);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 116);
			    SetPlayerInterior(playerid, 5);
			}
	   }
	   case TEAM_FBI:
	   {
         	SetPlayerPos(playerid,BlackStreet[rand][0],BlackStreet[rand][1],BlackStreet[rand][2]);
	     	SetPlayerFacingAngle(playerid,BlackStreet[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 240);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 240);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 166);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 165);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 164);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 217);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 185);
			}
	   }
	   case TEAM_Thugs:
	   {
         	SetPlayerPos(playerid,SB[rand][0],SB[rand][1],SB[rand][2]);
	     	SetPlayerFacingAngle(playerid,SB[rand][3]);
	     	SetCameraBehindPlayer(playerid);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 1);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 293);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 293);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 293);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 177);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 126);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 180);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 21);
			}
	   }
	   	   case TEAM_NZ:
	   {
         	SetPlayerPos(playerid,NZ[rand][0],NZ[rand][1],NZ[rand][2]);
	     	SetPlayerFacingAngle(playerid,NZ[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 123);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 123);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 123);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 122);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 121);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 121);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 124);
			}
	   }
	   case TEAM_LatinKing:
	   {
         	SetPlayerPos(playerid,RussianMafia[rand][0],RussianMafia[rand][1],RussianMafia[rand][2]);
	     	SetPlayerFacingAngle(playerid,RussianMafia[rand][3]);
	     	SetCameraBehindPlayer(playerid);
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 126);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 126);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 115);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 109);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 108);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 47);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 48);
			}
	   }
       case TEAM_AsianBoyz:
	   {
	     	if(PlayerInfo[playerid][pRank] == 7)
	     	{
	     	    SetPlayerSkin(playerid, 47);
	     	}
	     	if(PlayerInfo[playerid][pRank] == 6)
	     	{
	     	    SetPlayerSkin(playerid, 47);
	     	}
	     	else if(PlayerInfo[playerid][pRank] == 5)
			{
			    SetPlayerSkin(playerid, 120);
			}
			else if(PlayerInfo[playerid][pRank] == 4)
			{
			    SetPlayerSkin(playerid, 122);
			}
			else if(PlayerInfo[playerid][pRank] == 3)
			{
				SetPlayerSkin(playerid, 126);
			}
			else if(PlayerInfo[playerid][pRank] == 2)
			{
			    SetPlayerSkin(playerid, 185);
			}
			else if(PlayerInfo[playerid][pRank] == 1)
			{
			    SetPlayerSkin(playerid, 292);
			}
       }
       case TEAM_CIVILIAN:
	   {
	         SetPlayerPos(playerid,CivilSP[rand][0],CivilSP[rand][1],CivilSP[rand][2]);
		     SetPlayerFacingAngle(playerid,CivilSP[rand][3]);
		     SetCameraBehindPlayer(playerid);
       }
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	//
					    if(PlayerInfo[playerid][pMember] == TEAM_GROVE)
	{
    SetPlayerColor(playerid,COLOR_GREEN);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_BALLAS)
	{
    SetPlayerColor(playerid,COLOR_PURPLE);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_VAGOS)
	{
    SetPlayerColor(playerid,COLOR_YELLOW);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_VIP)
	{
    SetPlayerColor(playerid,0xFF4500FF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_TRIADS)
	{
    SetPlayerColor(playerid,0x33CCFFAA);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_BOYZ)
	{
    SetPlayerColor(playerid,DANANGBOYS_COLOR);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ)
	{
    SetPlayerColor(playerid,CRIPZ_COLOR);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_GPD)
	{
    SetPlayerColor(playerid,COLOR_WHITE);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_SoA)
	{
    SetPlayerColor(playerid,COLOR_RED);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_ZETAS)
	{
    SetPlayerColor(playerid,0xCCCCCC);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
	{
    SetPlayerColor(playerid,0x0FD49CFF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_MS13)
	{
    SetPlayerColor(playerid,COLOR_MS13);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_BulgarianMafia)
	{
    SetPlayerColor(playerid,0xCC66CCFF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_RIFA)
	{
    SetPlayerColor(playerid,0x1682D959);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_LatinKing)
	{
    SetPlayerColor(playerid,0xFFE100FF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_FBI)
	{
    SetPlayerColor(playerid,COLOR_BlackStreet);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_NZ)
	{
    SetPlayerColor(playerid,0x6D000080);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_Thugs)
	{
    SetPlayerColor(playerid,0x2480E3FF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA)
	{
    SetPlayerColor(playerid,COLOR_YAKUZA);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_CIVILIAN)
	{
    SetPlayerColor(playerid,COLOR_WHITE);
	}
					    if(PlayerInfo[playerid][pMember] == TEAM_DPK)
	{
    SetPlayerColor(playerid,COLOR_ORANGE);
	}
	//
				//
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Ти си в банда/мафия!");
			}
		}
		else
		{
  			SendClientMessage(playerid,COLOR_GRAD1,"Не ти е предлагано да влизаш в банда!");
		}
		return 1;
	}
	
	
	if(strcmp(cmd, "/joinvip", true) == 0)
	{
			if(PlayerInfo[playerid][pMember] == TEAM_CIVILIAN)
			{
						if(PlayerInfo[playerid][Level] <= 20)
			{
   				new wstring[88];
   				format(wstring, sizeof(wstring), "Ти влезе в VIP.");
			    SendClientMessage(playerid,COLOR_LIGHTBLUE, wstring);
				PlayerInfo[playerid][pMember] = TEAM_VIP;
				PlayerInfo[playerid][pRank] = 1;
				SetPlayerSpawn(playerid);
				FactionRequest[playerid] = TEAM_VIP;
				format(wstring, sizeof(wstring), "%s влезе в твоята банда/мафия.",GetName(playerid));
				SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, wstring);
				return 1;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Ти си над 20-ти левел");
			}
						}
			else
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Ти си в банда/мафия!");
			}
		return 1;
	}

	
	
	if(strcmp(cmd, "/yes", true) == 0)
	{
	if(PlayerInfo[playerid][aDuty] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си ADMIN ON DUTY!");
		return 1;
	}
			if(PlayerInfo[playerid][pDuelMoney] == 1)
			{
			new duelh1 = PlayerInfo[playerid][pDuelH];
			SetPlayerArmour(PlayerInfo[playerid][pDuelH], 100);
            SetPlayerPos(PlayerInfo[playerid][pDuelH], 1373.1509,-33.9499,1000.9219);
		    SetPlayerInterior(PlayerInfo[playerid][pDuelH], 1);
            SetPlayerVirtualWorld(PlayerInfo[playerid][pDuelH], 2000 + playerid);
    		SetPlayerHealth(PlayerInfo[playerid][pDuelH], 100);
	     	PlayerInfo[playerid][pCou1] = 1*2;
	     	SetPlayerColor(playerid, COLOR_YELLOW);
	     	SetPlayerColor(duelh1, COLOR_YELLOW);
	     	PlayerInfo[playerid][pDuelMoney2] = 0;
	     	PlayerInfo[duelh1][pDuelMoney2] = 0;
	     	new string2[256];
	     	
	     		     		                        format(string2, sizeof(string2), "Duel: Ти прие поканата за дуел на %s.", GetName(duelh1));
	                        SendClientMessage(playerid, COLOR_YELLOW,string2);
	     	
	     	 	            SetPlayerFacingAngle(duelh1,310.20);
	     	 	            SetPlayerFacingAngle(playerid,103.65);
	     	
	     	PlayerInfo[duelh1][pDuelMoney] = 1;
	     	TogglePlayerControllable(duelh1,0);
	     	TogglePlayerControllable(playerid,0);
		    PlayerInfo[duelh1][pCou1] = 1*2;
	    	SetPlayerArmour(playerid, 100);
        	SetPlayerPos(playerid, 1410.3407,-1.3358,1000.9233);
			SetPlayerInterior(playerid, 1);
       	    SetPlayerVirtualWorld(playerid, 2000 + playerid);
    		SetPlayerHealth(playerid, 100);
    	    PlayerInfo[playerid][pDuelMoney] = 0;
				return 1;
		}
		else
		{
  			SendClientMessage(playerid,COLOR_GRAD1,"Ти не си поканен на дуел");
		}
		return 1;
	}
	if(strcmp(cmd, "/cancelfaction", true) == 0 || strcmp(cmd, "/cf", true) == 0)
	{
				new x_job[256];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job)) {
				SendClientMessage(playerid, COLOR_YELLOW, "Ако си сигурен използвай /cancelfaction confirm или /cf confirm");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
            if(strcmp(x_job,"confirm",true) == 0)
            {
 		new faction = FactionRequest[playerid];
		if (FactionRequest[playerid] != TEAM_CIVILIAN)
		{
  			new wstring[88];
			format(wstring, sizeof(wstring), "Ти отказа да влезеш в %s.",TeamInfo[faction][TeamName]);
 			SendClientMessage(playerid,COLOR_LIGHTBLUE, wstring);
			FactionRequest[playerid] = TEAM_CIVILIAN;
			format(wstring, sizeof(wstring), "%s отказа да влезе в твоята банда/мафия.",GetName(playerid));
			SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, wstring);
			}
			return 1;
		}
		else
		{
  			SendClientMessage(playerid,COLOR_GRAD1,"Не ти е предлагано да влизаш в банда!");
		}
		return 1;
	}
	if(strcmp(cmd, "/cduel", true) == 0)
	{
				if(PlayerInfo[playerid][pDuelMoney2] == 1)
			{
			new duelh1 = PlayerInfo[playerid][pDuelH];
			new string2[256];
            format(string2, sizeof(string2), "Duel: %s отказа поканата си за дуел", GetName(playerid));
	        SendClientMessage(PlayerInfo[playerid][pDuelH], COLOR_YELLOW,string2);
          format(string2, sizeof(string2), "Duel: Ти отмени поканата за дуел, която изпрати на %s", GetName(duelh1));
	        SendClientMessage(playerid, COLOR_YELLOW,string2);
 			PlayerInfo[playerid][pDuelMoney] = 0;
			PlayerInfo[duelh1][pDuelMoney] = 0;
			PlayerInfo[playerid][pDuelMoney] = 0;
			PlayerInfo[duelh1][pDuelMoney2] = 0;
			PlayerInfo[playerid][pDuelMoney2] = 0;
		}
		else
		{
  			SendClientMessage(playerid,COLOR_GRAD1,"Ти не си поканил никой на дуел");
		}
		return 1;
	}
		if(strcmp(cmd, "/no", true) == 0)
	{
				if(PlayerInfo[playerid][pDuelMoney] == 1)
			{
			new string2[256];
            format(string2, sizeof(string2), "Duel: %s отказа поканата си за дуел.", GetName(playerid));
	        SendClientMessage(PlayerInfo[playerid][pDuelH], COLOR_YELLOW,string2);
	                    format(string2, sizeof(string2), "Duel: Ти отказа поканата си за дуел.");
	        SendClientMessage(playerid, COLOR_YELLOW,string2);
 			PlayerInfo[playerid][pDuelMoney] = 0;
			new duelh1 = PlayerInfo[playerid][pDuelH];
			PlayerInfo[duelh1][pDuelMoney] = 0;
			PlayerInfo[playerid][pDuelMoney] = 0;
			PlayerInfo[duelh1][pDuelMoney2] = 0;
			PlayerInfo[playerid][pDuelMoney2] = 0;
		}
		else
		{
  			SendClientMessage(playerid,COLOR_GRAD1,"Ти не си поканен на дуел");
		}
		return 1;
	}
	if(strcmp(cmd, "/hidems", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_MS13 && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_MS13)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_MS13, COLOR_LIGHTBLUE, "Mara Salvatrucha 13 : премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Mara Salvatrucha 13!");
		}
		return 1;
	}
    if(strcmp(cmd, "/showms", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_MS13 && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_MS13)
	    		    {
						SetPlayerColor(i, 0x005295FF);
					}
				}
			}
			SendFactionMessage(TEAM_MS13, COLOR_LIGHTBLUE, "Mara Salvatrucha 13 : премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Mara Salvatrucha 13!");
		}
		return 1;
	}
		if(strcmp(cmd, "/hidevcripz", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_CRIPZ)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_CRIPZ, COLOR_LIGHTBLUE, "Vinewood Cripz премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Vinewood Cripz!");
		}
		return 1;
	}
	
	
	
	
	
	
			if(strcmp(cmd, "/showvcripz", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_CRIPZ)
	    		    {
		                SetPlayerColor(i, CRIPZ_COLOR);
					}
				}
			}
			SendFactionMessage(TEAM_CRIPZ, COLOR_LIGHTBLUE, "Vinewood Cripz премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Vinewood Cripz!");
		}
		return 1;
	}
	
	
	
	
	if(strcmp(cmd, "/hidegrove", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_GROVE && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_GROVE)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_GROVE, COLOR_LIGHTBLUE, "Grove Street Families премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Grove Street Families!");
		}
		return 1;
	}
		if(strcmp(cmd, "/rifarules", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	     		if(PlayerInfo[playerid][pMember] == TEAM_RIFA)
		{
			new cmds[2230];
            strins(cmds,"{3D91F2}San Fierro Rifa правила\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да биете играч от бандата освем ако тои така изка {3D91F2}(+ 1 Faction Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е спаменето в Faction чата {3D91F2}(По преценка на лидера)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да лъжете играчите в Faction чата {3D91F2}(По преценка на лидера)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да биете банди с които сме мир {3D91F2}(+ 1 Faction Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Когато лидера каже нещо трябва да се изпълнява {3D91F2}(+ 1 Faction Warn)\n",strlen(cmds));
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{3D91F2}San Fierro Rifa правила",cmds,"Изход","");
            }
            else
            {
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на San Fierro Rifa");
            }
		}
		return 1;
	}
	
				if(strcmp(cmd, "/riskrules", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new cmds[2230];
            strins(cmds,"{00BFFF}Правила за обикновените играчи\n\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е ваденето на всякакви оръжия!{FF0000}(Ще бъдете убит + ще ви бъде взет билета)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е псуването в чата на играта! {FF0000}(Ще бъдете убит + ще ви бъде взет билета)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е лъженето в чата на играта! {FF0000}(Ще бъдете убит + ще ви бъде взет билета)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да се молите да ви изберат за играта! {FF0000}(Ще бъдете убит + ще ви бъде взет билета)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да изкате по голяма награда, от тази която сте спечелили! {FF0000}(Ще бъдете убит + ще ви бъде взет билета)\n\n",strlen(cmds));
            strins(cmds,"{09FF00}Това са всички правила за {FF0000}обикновените играчи в играта Риск печели,Риск губи\n\n",strlen(cmds));
            strins(cmds,"{09FF00}Правила за администраторите в играта Риск печели,Риск губи\n\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да давате награди по ваша преценка!{FF0000}(+ 1 Admin Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да затваряте/отваряте играта на 2 минути!{FF0000}(+ 1 Admin Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да давате награда без правилен отговор!{FF0000}(+ 1 Admin Warn)\n",strlen(cmds));
            strins(cmds,"{FF0000}Забранено е всякакво злоупотребяване с правата! {FF0000}(+ зависи от злоупотребата Admin Warn)\n\n",strlen(cmds));
            strins(cmds,"{09FF00}Това са всички правила за {FF0000}администраторите в играта Риск печели,Риск губи\n\n",strlen(cmds));
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{00BFFF}Риск печели,Риск губи правила",cmds,"Изход","");
		}
		return 1;
	}
	
	
	
						if(strcmp(cmd, "/adminskypes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new cmds[2230];
			strins(cmds,"{FFFFFF}sTrIx - Скриптер и главен администратор на сървъра.\n",strlen(cmds));
			strins(cmds,"{336600}- Занимава се с гейммода, тества и добавя нови неща.\n",strlen(cmds));
			strins(cmds,"{FF0000}- Скайп за връзка: НЕ.\n\n",strlen(cmds));
			strins(cmds,"{FFFFFF}[ND]Maddox. - Помощник администратор.\n",strlen(cmds));
			strins(cmds,"{336600}- Занимава се с тестване на гейммода.\n",strlen(cmds));
			strins(cmds,"{FF0000}- Скайп за връзка: night.assassin2.\n\n",strlen(cmds));
			strins(cmds,"{FFFFFF}[NMD]VisionerY - Помощник администратор.\n",strlen(cmds));
			strins(cmds,"{336600}- Занимава се с тестване на гейммода.\n",strlen(cmds));
			strins(cmds,"{FF0000}- Скайп за връзка: НЕ.\n\n",strlen(cmds));
			strins(cmds,"{00FF00}* Ако имате въпроси или проблеми свързани с сървъра\n",strlen(cmds));
			strins(cmds,"{00FF00}можете да пишете на дадения скайп по всяко време.\n",strlen(cmds));
			strins(cmds,"{00FF00}* Сървъра може да спре по всяко време\n",strlen(cmds));
			strins(cmds,"{00FF00}причини: Свършил хост/UPDATE/или друга причина!\n",strlen(cmds));
			strins(cmds,"{00FF00}* Ако сървъра бъде спрян за повече от седмица пишете на Скайп night.assassin2.\n",strlen(cmds));
            //
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{FF0000}Skypes",cmds,"Изход","");
		}
		return 1;
	}
	
	
							if(strcmp(cmd, "/admininfo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new cmds[2230];
            strins(cmds,"{FF0000}Information\n\n",strlen(cmds));
            strins(cmds,"{00FF00}sTrIx {FFFFFF}- {FF0000}Scripter {00FF00}Работи по мода,обновява мода {FFFFFF}и {FF0000}тн\n",strlen(cmds));
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{FF0000}Information",cmds,"Изход","");
		}
		return 1;
	}
	
	
	
	
	
					if(strcmp(cmd, "/riskhelp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new cmds[2230];
            strins(cmds,"{00BFFF}Как се играе играта риск?\n\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Преди да влезеш в зградата трябва да си купиш билет с командата /buyticket{09FF00}(Ако нямаш билет няма да можеш да влезеш в сградата)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}За да пишеш в чата на играта използвай командата /riskchat{09FF00}(Ако пишеш в чата,а не в чата на играта никой няма да ти отговори)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Някой администратор със специални права може да{09FF00}(Избира играч,за играта)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Играта се играе с знания{09FF00}(Администратора ще те пита някой неща,ако отговориш правилно получаваш награда или продължаваш напред)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}В играта наградите започват от {09FF00}1милион до 100милиона {FFFFFF}или{09FF00} 1EP до 30EP\n\n",strlen(cmds));
            strins(cmds,"{FFFFFF}В играта има колело,което ако рискуваш може да {09FF00}утроиш,удвоиш печалбата си {FFFFFF}а може и да{09FF00} я загубиш или намалиш,{FFFFFF}това става с командата /riskk\n\n",strlen(cmds));
            strins(cmds,"{FF0000}Това е цялата информация за {09FF00}обикновените играчи\n\n",strlen(cmds));
            strins(cmds,"{00BFFF}Друго\n\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Ако си близо до зградата няма да можеш да {09FF00}ползваш оръжия\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Ако забележеш нарушение {09FF00}докладвай с командата /report\n",strlen(cmds));
            strins(cmds,"{FFFFFF}За да видиш правилата използвай {09FF00}командата /riskrules\n\n",strlen(cmds));
            strins(cmds,"{00BFFF}За администратори\n\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Чрез командата {09FF00}/risk отваряш/затваряш играта\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Чрез командата {09FF00}/riskplayer избираш играч за играта\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Чрез командата {09FF00}/riskticket промеш цената на билета за играта\n\n",strlen(cmds));
            strins(cmds,"{FF0000}Това е цялата информация за {09FF00}администратори\n\n",strlen(cmds));
            strins(cmds,"{FF0000}За да видиш правилата за играта използвай {09FF00}/riskrules\n\n",strlen(cmds));
            strins(cmds,"{FF0000}Играта се намира в {09FF00}Las Venturas до работата Coalmine,{FF0000}за да разбереш каде точно използвай командата{09FF00}/gps\n\n",strlen(cmds));
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{00BFFF}Риск печели,Риск губи информация",cmds,"Изход","");
		}
		return 1;
	}
	
			if(strcmp(cmd, "/thrules", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	     		if(PlayerInfo[playerid][pMember] == TEAM_Thugs)
		{
			new cmds[2230];
            strins(cmds,"{2480E3}Thug Life правила\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да биете играч от бандата освем ако тои така изка {2480E3}(+ 1 Faction Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е спаменето в Faction чата {2480E3}(По преценка на лидера)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да лъжете играчите в Faction чата {2480E3}(По преценка на лидера)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да биете банди с които сме мир {2480E3}(+ 1 Faction Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Когато лидера каже нещо трябва да се изпълнява {2480E3}(+ 1 Faction Warn)\n",strlen(cmds));
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{2480E3}Thug Life правила",cmds,"Изход","");
            }
            else
            {
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Thug Life");
            }
		}
		return 1;
	}
				if(strcmp(cmd, "/fbirules", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	     		if(PlayerInfo[playerid][pMember] == TEAM_FBI)
		{
			new cmds[2230];
            strins(cmds,"{8B8BC8}FBI правила\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да биете играч от бандата освем ако тои така изка {8B8BC8}(+ 1 Faction Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е спаменето в Faction чата {8B8BC8}(По преценка на лидера)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да лъжете играчите в Faction чата {8B8BC8}(По преценка на лидера)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да биете банди с които сме мир {8B8BC8}(+ 1 Faction Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Когато лидера каже нещо трябва да се изпълнява {8B8BC8}(+ 1 Faction Warn)\n",strlen(cmds));
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{8B8BC8}FBI правила",cmds,"Изход","");
            }
            else
            {
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Federal Bureau Of Investigation");
            }
		}
		return 1;
	}
			if(strcmp(cmd, "/abrules", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	     		if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
		{
			new cmds[2230];
            strins(cmds,"{3CDEB0}Asian Boyz правила\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да биете играч от бандата освем ако тои така изка {3CDEB0}(+ 1 Faction Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е спаменето в Faction чата {3CDEB0}(По преценка на лидера)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да лъжете играчите в Faction чата {3CDEB0}(По преценка на лидера)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Забранено е да биете банди с които сме мир {3CDEB0}(+ 1 Faction Warn)\n",strlen(cmds));
            strins(cmds,"{FFFFFF}Когато лидера каже нещо трябва да се изпълнява {3CDEB0}(+ 1 Faction Warn)\n",strlen(cmds));
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{3CDEB0}Asian Boyz правила",cmds,"Изход","");
            }
            else
            {
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Asian Boyz");
            }
		}
		return 1;
	}
	
	

	
	
				if(strcmp(cmd, "/hidegpd", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_GPD)
	    		    {
	    		    SetPlayerColor(playerid,COLOR_WHITE);
		                											if(OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(OnDuty[playerid]== 1 && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
											if(OnDuty[playerid]== 1  && PlayerInfo[playerid][pDeltaForce] != 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerColor(playerid,POLICE_COLOR);
			        }
			        			        											if(DFDuty[playerid]== 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        SetPlayerColor(playerid,COLOR_DF);
			        }


			        			        			        											if(DFDuty[playerid]== 1 && PlayerInfo[playerid][pMember] == TEAM_GPD)
			        {
			        DFDuty[playerid] = 0;
			        }
					}
				}
			}
			SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, "GPD премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на GPD");
		}
		return 1;
	}
	
	
	
	
				if(strcmp(cmd, "/showgpd", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_GPD)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, "GPD премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на GPD");
		}
		return 1;
	}
	
	
	
	
			if(strcmp(cmd, "/hidegpd", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_GPD)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_RIFA, COLOR_LIGHTBLUE, "GPD премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на GPD");
		}
		return 1;
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		if(strcmp(cmd, "/hiderifa", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_RIFA && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_RIFA)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_RIFA, COLOR_LIGHTBLUE, "San Fierro Rifa премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на San Fierro Rifa");
		}
		return 1;
	}
    if(strcmp(cmd, "/showgrove", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_GROVE && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_GROVE)
	    		    {
						SetPlayerColor(i, 0x33AA33AA);
					}
				}
			}
			SendFactionMessage(TEAM_GROVE, COLOR_LIGHTBLUE, "Grove Street Families премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Grove Street Families!");
		}
		return 1;
	}
	    if(strcmp(cmd, "/showrifa", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_RIFA && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_RIFA)
	    		    {
						SetPlayerColor(i, 0x1682D959);
					}
				}
			}
			SendFactionMessage(TEAM_RIFA, COLOR_LIGHTBLUE, "San Fierro Rifa премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на San Fierro Rifa");
		}
		return 1;
	}
	if(strcmp(cmd, "/hideth", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_Thugs && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_Thugs)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_Thugs, COLOR_LIGHTBLUE, "Thug Life премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Thug Life!");
		}
		return 1;
	}
    if(strcmp(cmd, "/showth", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_Thugs && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_Thugs)
	    		    {
						SetPlayerColor(i, 0x2480E3FF);
					}
				}
			}
			SendFactionMessage(TEAM_Thugs, COLOR_LIGHTBLUE, "Thug Life премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Thug Life!");
		}
		return 1;
	}
    if(strcmp(cmd, "/hideboyz", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_BOYZ && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_BOYZ)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_BOYZ, COLOR_WHITE, "Boyz N The Hood премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Boyz N The Hood!");
		}
		return 1;
	}
    if(strcmp(cmd, "/showboyz", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_BOYZ && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_BOYZ)
	    		    {
						SetPlayerColor(i, DANANGBOYS_COLOR);
					}
				}
			}
			SendFactionMessage(TEAM_BOYZ, DANANGBOYS_COLOR, "Boyz N The Hood премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Boyz N The Hood!");
		}
		return 1;
	}
    if(strcmp(cmd, "/showevent", true) == 0)
	{
 		if(PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pInEvent] >= 1)
	    		    {
						SetPlayerColor(i, COLOR_EVENT);
					}
				}
			}
			SendClientMessageToAll(COLOR_LIGHTBLUE, "Всички в евента са видими!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
		}
		return 1;
	}
	if(strcmp(cmd, "/hideevent", true) == 0)
	{
 		if(PlayerInfo[playerid][pInEvent] >= 1 && PlayerInfo[playerid][pEvent] >= 1)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pInEvent] >= 1)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendClientMessageToAll(COLOR_LIGHTBLUE, "Всички в евента са невидими!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
		}
		return 1;
	}
	if(strcmp(cmd, "/hidefbi", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_FBI && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_FBI)
	    		    {
		                SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_FBI, COLOR_LIGHTBLUE, "Federal Bureau Of Investigation премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Federal Bureau Of Investigation!");
		}
		return 1;
	}
    if(strcmp(cmd, "/showfbi", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_FBI && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_FBI)
	    		    {
						SetPlayerColor(i, COLOR_BlackStreet);
					}
				}
			}
			SendFactionMessage(TEAM_FBI, COLOR_LIGHTBLUE, "Federal Bureau Of Investigation премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Federal Bureau Of Investigation!");
		}
		return 1;
	}
			if(strcmp(cmd, "/hideyakuza", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_YAKUZA)
	    		    {
						SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_YAKUZA, COLOR_LIGHTBLUE, "Yakuza премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Yakuza!");
		}
		return 1;
	}
	if(strcmp(cmd, "/showyakuza", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_YAKUZA)
	    		    {
						SetPlayerColor(i, 0x62620040);
					}
				}
            }
			SendFactionMessage(TEAM_YAKUZA, COLOR_LIGHTBLUE, "Yakuza премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Yakuza!");
		}
		return 1;
	}
		if(strcmp(cmd, "/hidedpk", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_DPK && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_DPK)
	    		    {
						SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_DPK, COLOR_LIGHTBLUE, "DPK премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на DPK!");
		}
		return 1;
	}
	if(strcmp(cmd, "/showdpk", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_DPK && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_DPK)
	    		    {
						SetPlayerColor(i, 0x62620040);
					}
				}
            }
			SendFactionMessage(TEAM_DPK, COLOR_LIGHTBLUE, "DPK премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на DPK!");
		}
		return 1;
	}
	if(strcmp(cmd, "/hideab", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_AsianBoyz)
	    		    {
						SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
			}
			SendFactionMessage(TEAM_AsianBoyz, COLOR_LIGHTBLUE, "Asian Boyz премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Asian Boyz!");
		}
		return 1;
	}
	if(strcmp(cmd, "/showab", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_AsianBoyz)
	    		    {
						SetPlayerColor(i, 0x0FD49CFF);
					}
				}
            }
			SendFactionMessage(TEAM_AsianBoyz, COLOR_LIGHTBLUE, "Asian Boyz премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Asian Boyz!");
		}
		return 1;
	}
    if(strcmp(cmd, "/hidesons", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_SoA && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_SoA)
	    		    {
						SetPlayerColor(i, COLOR_INVISIBLE);
					}
				}
            }
			SendFactionMessage(TEAM_SoA, COLOR_LIGHTBLUE, "Sons Of Anarchy премина на невидим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Sons Of Anarchy!");
		}
		return 1;
	}
    if(strcmp(cmd, "/showsons", true) == 0)
	{
 		if(PlayerInfo[playerid][pMember] == TEAM_SoA && PlayerInfo[playerid][pRank] >= 6)
		{
 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == TEAM_SoA)
	    		    {
						SetPlayerColor(i, 0xAFAFAFFF);
					}
				}
            }
			SendFactionMessage(TEAM_SoA, COLOR_LIGHTBLUE, "Sons Of Anarchy премина на видим режим!");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на Sons Of Anarchy!");
		}
		return 1;
		
	}
    
    
    
    
    
    
    
    
    
    
    
    

    
    
    
    
    
    
	 if(strcmp(cmd, "/changerankname", true) == 0)
 {
   if(IsPlayerConnected(playerid))
     {
   if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] == 6)
   {
    tmp = strtok(cmdtext, idx);
    if(!strlen(tmp))
    {
     SendClientMessage(playerid, COLOR_WHITE, "Използвай: /changerankname [Rank ID 1-6] [Name]");
     return 1;
    }
    new id2;
    id2 = strval(tmp);

    new length = strlen(cmdtext);
    while ((idx < length) && (cmdtext[idx] <= ' '))
    {
     idx++;
    }
    new offset = idx;
    new result[256];
    while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
    {
     result[idx - offset] = cmdtext[idx];
     idx++;
    }
    result[idx - offset] = EOS;
    if(!strlen(result))
    {
     SendClientMessage(playerid, COLOR_WHITE, "Usage: /changerankname [Rank ID - 1-6] [Name]");
     return 1;
    }
    if(strfind( result , "|" , true ) == -1)
    {
     if(id2 == 1)
     {
      format(string, sizeof(string), "Ти промени името на Ранк: %d(%s) на: %s", id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank1],result);
      strmid(TeamInfo[PlayerInfo[playerid][pMember]][fRank1], (result), 0, strlen((result)), 128);
      SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
      SaveFactions();
      format(string, sizeof(string), "%s промени името на ранк: %d(%s) на: %s", GetName(playerid), id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank1],result);
      SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
     }
     else if(id2 == 2)
     {
        format(string, sizeof(string), "Ти промени името на Ранк: %d(%s) на: %s", id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank2],result);
      strmid(TeamInfo[PlayerInfo[playerid][pMember]][fRank2], (result), 0, strlen((result)), 128);
      SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
      SaveFactions();
      format(string, sizeof(string), "%s промени името на ранк: %d(%s) на: %s", GetName(playerid), id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank2],result);
      SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
     }
     else if(id2 == 3)
     {
        format(string, sizeof(string), "Ти промени името на Ранк: %d(%s) на: %s", id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank3],result);
      strmid(TeamInfo[PlayerInfo[playerid][pMember]][fRank3], (result), 0, strlen((result)), 128);
      SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
      SaveFactions();
      format(string, sizeof(string), "%s промени името на ранк: %d(%s) на: %s", GetName(playerid), id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank3],result);
      SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
     }
     else if(id2 == 4)
     {
        format(string, sizeof(string), "Ти промени името на Ранк: %d(%s) на: %s", id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank4],result);
      strmid(TeamInfo[PlayerInfo[playerid][pMember]][fRank4], (result), 0, strlen((result)), 128);
      SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
      SaveFactions();
      format(string, sizeof(string), "%s промени името на ранк: %d(%s) на: %s", GetName(playerid), id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank4],result);
      SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
     }
     else if(id2 == 5)
     {
        format(string, sizeof(string), "Ти промени името на Ранк: %d(%s) на: %s", id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank5],result);
      strmid(TeamInfo[PlayerInfo[playerid][pMember]][fRank5], (result), 0, strlen((result)), 128);
      SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
      SaveFactions();
      format(string, sizeof(string), "%s промени името на ранк: %d(%s) на: %s", GetName(playerid), id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank5],result);
      SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
     }
     else if(id2 == 6)
     {
        format(string, sizeof(string), "Ти промени името на Ранк: %d(%s) на: %s", id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank6],result);
      strmid(TeamInfo[PlayerInfo[playerid][pMember]][fRank6], (result), 0, strlen((result)), 128);
      SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
      SaveFactions();
      format(string, sizeof(string), "%s промени името на ранк: %d(%s) на: %s", GetName(playerid), id2, TeamInfo[PlayerInfo[playerid][pMember]][fRank6],result);
      SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
      						SaveFactions();
     }
    }
    else
    {
     SendClientMessage(playerid, COLOR_GRAD1, "Неразрешен символ: | ");
    }
   }
   else
   {
    SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер!");
   }
  }
  return 1;
 }
	if(strcmp(cmd, "/setrank", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setrank [playerid] [rank]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pMember] != TEAM_CIVILIAN)
			{
				if (PlayerInfo[para1][pMember] == PlayerInfo[playerid][pMember])
				{
				    if (PlayerInfo[para1][pRank] != 6)
					{
						if (level)
						{
			   				if(level >= 1 && level <= 5)
						    {
			  					if(IsPlayerConnected(para1))
				    			{
									if(para1 != INVALID_PLAYER_ID)
									{
										PlayerInfo[para1][pRank] = level;
										new ranktext[256];
								    	switch(PlayerInfo[para1][pRank])
									    {
							      			case 1: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank1]);
								        	case 2: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank2]);
									        case 3: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank3]);
									        case 4: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank4]);
									        case 5: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank5]);
								         	case 6: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank6]);
									    }
										format(string, sizeof(string), "%s промени твоят ранк на (%d)%s", GetName(playerid),level,ranktext);
										SendClientMessage(para1, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "Ти промени ранка на %s на (%d)%s", GetName(para1),level,ranktext);
										SendClientMessage(playerid, COLOR_GREEN, string);
										format(string, sizeof(string), "%s промени ранка на %s на (%d)%s", GetName(playerid), GetName(para1), level,ranktext);
										SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
										SpawnPlayer(para1);
									}

								}
								else
								{
									SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID.");
								}
							}
							else
							{
								SendClientMessage(playerid, COLOR_GRAD1, "Ранковете са от 1 до 5");
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да промениш собствения си ранк!");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Трабва да сложите число!");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "На човека, който искате да му промените ранка не е от твойта банда/мафия");
				}
			}
			else
   			{

				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер!");
			}
		}
		return 1;
	}
	
	
					if(strcmp(cmd, "/getdf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /getdf [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pGL] >= 1 && PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pMember] == TEAM_GPD  && PlayerInfo[para1][pMember] == TEAM_GPD)
			{
			  					if(IsPlayerConnected(para1))
				    			{
									     	if(PlayerInfo[playerid][pGL] != 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си главен лидер!");
		return 1;
	}
										PlayerInfo[para1][pDeltaForce] = 0;
										new ranktext[256];
								    	switch(PlayerInfo[para1][pRank])
									    {
								         	case 6: format(ranktext, sizeof(ranktext), "Delta Force", TeamInfo[PlayerInfo[playerid][pMember]][fRank6]);
									    }
										format(string, sizeof(string), "%s те премахна от Delta Force", GetName(playerid),ranktext);
										SendClientMessage(para1, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "Ти премахна %s от Delta Force", GetName(para1),ranktext);
										SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "%s премахна %s от Delta Force", GetName(playerid), GetName(para1),ranktext);
										SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
										SpawnPlayer(para1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този човек не е от вашата банда/мафия");
				}
			}
			else
   			{

				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си главен лидер!");
			}
		}
		return 1;
	}
	
					if(strcmp(cmd, "/makedf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makedf [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pGL] >= 1 && PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pMember] == TEAM_GPD  && PlayerInfo[para1][pMember] == TEAM_GPD)
			{
			  					if(IsPlayerConnected(para1))
				    			{
									     	if(PlayerInfo[playerid][pGL] != 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си главен лидер!");
		return 1;
	}
										PlayerInfo[para1][pDeltaForce] = 1;
										new ranktext[256];
								    	switch(PlayerInfo[para1][pRank])
									    {
								         	case 6: format(ranktext, sizeof(ranktext), "Delta Force", TeamInfo[PlayerInfo[playerid][pMember]][fRank6]);
									    }
										format(string, sizeof(string), "%s те направи Delta Force", GetName(playerid),ranktext);
										SendClientMessage(para1, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "Ти направи %s Delta Force", GetName(para1),ranktext);
										SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "%s направи %s Delta Force", GetName(playerid), GetName(para1),ranktext);
										SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
										SpawnPlayer(para1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този човек не е от вашата банда/мафия");
				}
			}
			else
   			{

				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си главен лидер!");
			}
		}
		return 1;
	}
	
	
	
	
	
	
	
	
				if(strcmp(cmd, "/leader", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /leader [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(PlayerInfo[para1][pRank] == 6)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да направиш този играч лидер");
			return 1;
			}
			if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pGL] >= 1 && PlayerInfo[playerid][pMember] != TEAM_CIVILIAN)
			{
				if (PlayerInfo[para1][pMember] == PlayerInfo[playerid][pMember])
				{
			  					if(IsPlayerConnected(para1))
				    			{
									if(para1 != INVALID_PLAYER_ID)
									{
									     	if(PlayerInfo[playerid][pGL] != 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си главен лидер!");
		return 1;
	}
										PlayerInfo[para1][pRank] = 6;
										new ranktext[256];
								    	switch(PlayerInfo[para1][pRank])
									    {
								         	case 6: format(ranktext, sizeof(ranktext), "Лидер", TeamInfo[PlayerInfo[playerid][pMember]][fRank6]);
									    }
										format(string, sizeof(string), "%s те направи лидер", GetName(playerid),ranktext);
										SendClientMessage(para1, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "Ти направи %s лидер", GetName(para1),ranktext);
										SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "%s направи %s лидер", GetName(playerid), GetName(para1),ranktext);
										SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
										SpawnPlayer(para1);
							}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да направиш себеси лидер!");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да направиш себеси лидер!");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този човек не е от вашата банда/мафия");
				}
			}
			else
   			{

				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си главен лидер!");
			}
		}
		return 1;
	}
			if(strcmp(cmd, "/special", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /special [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(PlayerInfo[para1][pRank] == 6)
			{
			SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да направиш този играч пом. лидер");
			return 1;
			}
			if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pMember] != TEAM_CIVILIAN)
			{
				if (PlayerInfo[para1][pMember] == PlayerInfo[playerid][pMember])
				{
				    if (PlayerInfo[para1][pRank] >= 0)
					{
									    if (PlayerInfo[para1][pRank] >= 0)
					{
			  					if(IsPlayerConnected(para1))
				    			{
									if(para1 != INVALID_PLAYER_ID)
									{
										PlayerInfo[para1][pRank] = 7;
										new ranktext[256];
								    	switch(PlayerInfo[para1][pRank])
									    {
								         	case 6: format(ranktext, sizeof(ranktext), "Помощник лидер", TeamInfo[PlayerInfo[playerid][pMember]][fRank7]);
									    }
										format(string, sizeof(string), "%s Те направи помощник лидер", GetName(playerid),ranktext);
										SendClientMessage(para1, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "Ти направи %s помощник лидер", GetName(para1),ranktext);
										SendClientMessage(playerid, COLOR_GREEN, string);
										format(string, sizeof(string), "%s Направи %s помощник лидер", GetName(playerid), GetName(para1),ranktext);
										SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
										SpawnPlayer(para1);
									}

								}
								else
								{
									SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID.");
								}
							}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да направиш себеси помощник лидер!");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да направиш себеси помощник лидер!");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този човек не е от вашата банда/мафия");
				}
			}
			else
   			{

				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер!");
			}
		}
		return 1;
	}
					if(strcmp(cmd, "/unleader", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unleader [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pGL] >= 1 && PlayerInfo[playerid][pMember] != TEAM_CIVILIAN)
			{
				if (PlayerInfo[para1][pMember] == PlayerInfo[playerid][pMember])
				{
			  					if(IsPlayerConnected(para1))
				    			{
									if(para1 != INVALID_PLAYER_ID)
									{
																		     	if(PlayerInfo[playerid][pGL] != 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ти не си главен лидер!");
		return 1;
	}
										PlayerInfo[para1][pRank] = 5;
										new ranktext[256];
								    	switch(PlayerInfo[para1][pRank])
									    {
								         	case 6: format(ranktext, sizeof(ranktext), "Лидер", TeamInfo[PlayerInfo[playerid][pMember]][fRank6]);
									    }
										format(string, sizeof(string), "Ти вече не си лидер");
										SendClientMessage(para1, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "%s вече не е лидер",GetName(para1));
										SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
										SpawnPlayer(para1);
							}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да направиш себеси лидер!");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да направиш себеси лидер!");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този човек не е от вашата банда/мафия");
				}
			}
			else
   			{

				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си главен лидер!");
			}
		}
		return 1;
	}
				if(strcmp(cmd, "/unspecial", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unspecial [playerid]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pRank] == 6 && PlayerInfo[playerid][pMember] != TEAM_CIVILIAN)
			{
				if (PlayerInfo[para1][pMember] == PlayerInfo[playerid][pMember])
				{
				    if (PlayerInfo[para1][pRank] != 6)
					{
				    if (PlayerInfo[para1][pRank] != 6)
					{
			  					if(IsPlayerConnected(para1))
				    			{
									if(para1 != INVALID_PLAYER_ID)
									{
										PlayerInfo[para1][pRank] = 5;
										new ranktext[256];
								    	switch(PlayerInfo[para1][pRank])
									    {
								         	case 6: format(ranktext, sizeof(ranktext), "Помощник лидер", TeamInfo[PlayerInfo[playerid][pMember]][fRank7]);
									    }
										format(string, sizeof(string), "Ти вече не си помощник лидер");
										SendClientMessage(para1, COLOR_LIGHTBLUE, string);
										format(string, sizeof(string), "%s вече не е помощник лидер",GetName(para1));
										SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
										SpawnPlayer(para1);
									}

								}
								else
								{
									SendClientMessage(playerid, COLOR_GRAD1, "Невалидно ID.");
								}
							}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да направиш себеси помощник лидер!");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Неможеш да направиш себеси помощник лидер!");
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Този човек не е от вашата банда/мафия");
				}
			}
			else
   			{

				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/faction", true) == 0 || strcmp(cmd, "/f", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pfMuted] != 0)
            {
                SendClientMessage(playerid, COLOR_ADMINCMD, " Ти си заглушен във FACTION CHAT.");
                return 1;
            }
            if(PlayerInfo[playerid][pMember] == TEAM_CIVILIAN)
            {
                SendClientMessage(playerid, COLOR_ADMINCMD, " Неможеш да използваш тази команда понеже ти не си в банда/мафия.");
                return 1;
            }
			new length = strlen(cmdtext);
			new team = gTeam[playerid];
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[256];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: (/f)action [team chat]");
				return 1;
			}
			new prank = PlayerInfo[playerid][pRank];
		    new ranktext[256];
 		    switch(prank)
   		{
  			case 1: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank1]);
    		case 2: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank2]);
      		case 3: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank3]);
      		case 4: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank4]);
        	case 5: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank5]);
        	case 6: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank6]);
        	case 7: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[playerid][pMember]][fRank5]);
	    }
            if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] == 1)
			{
                format(string, sizeof(string), "%s(1) %s(ID:%d): %s", ranktext, PlayerName(playerid), playerid, result);
                SendFactionMessage(team, COLOR_LIGHTBLUE, string);
		    }
            if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] == 2)
			{
                format(string, sizeof(string), "%s(2) %s(ID:%d): %s", ranktext, PlayerName(playerid), playerid, result);
                SendFactionMessage(team, COLOR_LIGHTBLUE, string);
		    }
            if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] == 3)
			{
                format(string, sizeof(string), "%s(3) %s(ID:%d): %s", ranktext, PlayerName(playerid), playerid, result);
                SendFactionMessage(team, COLOR_LIGHTBLUE, string);
			}
			if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] == 4)
			{
                format(string, sizeof(string), "%s(4) %s(ID:%d): %s", ranktext, PlayerName(playerid), playerid, result);
                SendFactionMessage(team, COLOR_LIGHTBLUE, string);
		    }
			if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] == 5)
			{
                format(string, sizeof(string), "%s(5) %s(ID:%d): %s", ranktext, PlayerName(playerid), playerid, result);
                SendFactionMessage(team, COLOR_LIGHTBLUE, string);
		    }
		    			if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] == 7)
			{
                format(string, sizeof(string), "%s(5) %s(ID:%d): %s", ranktext, PlayerName(playerid), playerid, result);
                SendFactionMessage(team, COLOR_ORANGE, string);
		    }
			if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] == 6)
			{
                format(string, sizeof(string), "%s(6) %s(ID:%d): %s", ranktext, PlayerName(playerid), playerid, result);
                SendFactionMessage(team, COLOR_GREEN, string);
		    }
		}
		return 1;
	}
	if(strcmp(cmd, "/fmute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
            {
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fmute [playerid][reason]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if (PlayerInfo[playerid][pRank] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(PlayerInfo[playa][pAdmin] > PlayerInfo[playerid][pAdmin])
			        {
					}
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[256];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
					}
			        if(playa != INVALID_PLAYER_ID)
			        {
						if(PlayerInfo[playa][pfMuted] == 0)
						{
							PlayerInfo[playa][pfMuted] = 1;
						    format(string, sizeof(string), "%s was muted by %s.",PlayerName(playa), PlayerName(playerid));
                            SendFactionMessage(PlayerInfo[playerid][pMember],COLOR_LIGHTBLUE,string);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/funmute", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /funmute [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pRank] >= 6)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pfMuted] = 0;
			            format(string, sizeof(string), "%s was unmuted by %s",PlayerName(playa) , PlayerName(playerid));
                        SendFactionMessage(PlayerInfo[playerid][pMember],COLOR_GREEN,string);
		            }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
			}
		}
		return 1;
	}
	
	
	if(strcmp(cmd, "/members",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN)
		    {
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Онлайн членове на бандата:");
		    	for(new i = 0; i < MAX_PLAYERS; i++)
				{
			    	if(IsPlayerConnected(i))
			    	{
			    	    new ranktext[256];
			   			switch(PlayerInfo[i][pRank])
					    {
			      			case 1: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[i][pMember]][fRank1]);
				        	case 2: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[i][pMember]][fRank2]);
					        case 3: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[i][pMember]][fRank3]);
					        case 4: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[i][pMember]][fRank4]);
					        case 5: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[i][pMember]][fRank5]);
					        case 6: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[i][pMember]][fRank6]);
					    }
					            new deltaf[32];
	                	if(PlayerInfo[i][pDeltaForce] == 1) { deltaf = "Да"; }
                	else if(PlayerInfo[i][pDeltaForce] == 0) { deltaf = "Не"; }
			        	if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && PlayerInfo[playerid][pMember] != TEAM_GPD && PlayerInfo[i][pMember] != TEAM_GPD)
						{
					    	format(string, sizeof(string), "%s (ID: %d) Rank: (%d)%s", PlayerName(i), i,PlayerInfo[i][pRank], ranktext);
					    	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
									        	if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember] && PlayerInfo[i][pMember] == TEAM_GPD && PlayerInfo[playerid][pMember] == TEAM_GPD)
						{
					    	format(string, sizeof(string), "%s (ID: %d) Rank: (%d)%s / Delta Force - %s", PlayerName(i), i,PlayerInfo[i][pRank], ranktext,deltaf);
					    	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
			    	}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Ти не си от банда/мафия!");
			}
		}
		return 1;
	}
	//
	//
	if(strcmp(cmd, "/leaderchat", true) == 0 || strcmp(cmd, "/lc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMember] != TEAM_CIVILIAN && PlayerInfo[playerid][pRank] == 6)
	        {
			    new faction = PlayerInfo[playerid][pMember];
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Използвай: (/l)eader(c)hat [Chat of leaders]");
					return 1;
	    		}
	    		if(PlayerInfo[playerid][pMuted] >= 1)
	    		{
	    		SendClientMessage(playerid, COLOR_GRAD1, "Ти си заглушен!");
	    		return 1;
	    		}
	    		format(string, sizeof(string), "[LEADER CHAT] %s на [%s]: %s",PlayerName(playerid), TeamInfo[faction][TeamName], result);
				SendLeaderMessage(0xD9CCC8FF, string);
			}
			else
			{
                SendClientMessage(playerid, COLOR_GRAD1, "Ти не си лидер на банда/мафия!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/listguns", true) == 0)
	{
		//if (PlayerInfo[playerid][pAdmin] < 1)//
		if (PlayerInfo[playerid][pDonateRank] < 1)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "Нямаш достатъчно VIP права за да ползваш командата!");
		    return 1;
	    }
		tmp = strtok(cmdtext,idx);
		if (!strlen(tmp))
	    {
		    SendClientMessage(playerid, COLOR_GREY, "Използвай: /listguns [Playerid/PartOfName]");
		    return 1;
	    }
		giveplayerid = ReturnUser(tmp);
		if (giveplayerid == INVALID_PLAYER_ID)
	    {
		    SendClientMessage(playerid, COLOR_GREY, "Посоченото ID не е в сървъра.");
		    return 1;
	    }
	    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	    format(string, sizeof(string), "* Оръжията на %s *", giveplayer);
	    SendClientMessage(playerid, COLOR_RED, string);
	    for (new weap = 1; weap < 47; weap++)
        {
            if(HaveWeapon(giveplayerid, weap) == weap)
            {
                new weapname[32];
                GetWeaponName(weap, weapname, sizeof(weapname));
			    format(string, sizeof(string), "%s", weapname);
	            SendClientMessage(playerid, COLOR_YELLOW, string);
            }
        }
		return 1;
	}
	if (strcmp(cmd, "/check", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			//if (PlayerInfo[playerid][pAdmin] >= 1)//
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "Използвай: /check [playerid]");
					return 1;
				}
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    ShowStats(playerid, giveplayerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Посоченото ID не е в сървъра.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/spec", true) == 0)
	{
  //if(PlayerInfo[playerid][pAdmin] >= 1)//
    if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
			    SendClientMessage(playerid, COLOR_WHITE, "Използвай: /spec [playerid]");
			    return 1;
		    }
		    specplayerid = strval(tmp);
		    if(!IsPlayerConnected(specplayerid))
			{
		        SendClientMessage(playerid, COLOR_GREY, "Посоченото ID не е в сървъра.");
			    return 1;
		    }
		    		         						if (PlayerInfo[specplayerid][pTspec] >= 1)
					{
					SendClientMessage(playerid, COLOR_GRAD1, "Този играч е забранил да го наблюдават!");
					return 1;
					}
		    if(PlayerSpectating[playerid] == 0)
		    {
		        GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
                Unspec[playerid][sPint] = GetPlayerInterior(playerid);
    	        Unspec[playerid][sVw] = GetPlayerVirtualWorld(playerid);
    	        GetPlayerFacingAngle(playerid, Unspec[playerid][sAngle]);
    	    }
	        TogglePlayerSpectating(playerid, 1);
			SetPlayerInterior(playerid, GetPlayerInterior(specplayerid));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(specplayerid));
			PlayerSpectating[playerid] = 1;
			if(IsPlayerInAnyVehicle(specplayerid))
			{
				new carid = GetPlayerVehicleID(specplayerid);
				PlayerSpectateVehicle(playerid, carid);
			}
			else
			{
				PlayerSpectatePlayer(playerid, specplayerid);
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_WHITE, "Нямаш права за да ползваш командата!");
            return 1;
        }
	return 1;
	}
 	if(strcmp(cmd, "/specoff", true) == 0)
	{
	    //if(PlayerInfo[playerid][pAdmin] >= 1)//
	     if (PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(PlayerSpectating[playerid] == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "Ти не наблюдаваш играч!");
			    return 1;
		    }
    	    TogglePlayerSpectating(playerid, 0);
    	    SpecPlayerReturnPos[playerid] = 1;
    	    PlayerSpectating[playerid] = 0;
		    return 1;
		}
	}
	    if(strcmp(cmdtext, "/checkvw", true) == 0)
    {
    	     if (PlayerInfo[playerid][pAdmin] >= 1)
		{
        format(string, sizeof(string), "Your virtual world: %i", GetPlayerVirtualWorld(playerid));
        SendClientMessage(playerid,COLOR_WHITE,string);
        }
        return 1;
    }
	    if(strcmp(cmdtext, "/checkhid", true) == 0)
    {
    	     if (PlayerInfo[playerid][pAdmin] >= 1)
		{
        format(string, sizeof(string), "House: %d", PlayerInfo[playerid][pInHouseID]);
        SendClientMessage(playerid,COLOR_WHITE,string);
        }
        return 1;
    }

    
    
	    if(strcmp(cmd, "/setworld", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setworld [playerid] [virtualworld id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			new vwid;
			tmp = strtok(cmdtext, idx);
			vwid = strvalEx(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			    		GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        SetPlayerVirtualWorld(playa, vwid);
                        format(string, sizeof(string), "* Ти смени ID VirtualWorld на %s*.", PlayerName(playa));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s смени твоя ID VirtualWorld на %d*.", PlayerName(playerid), vwid);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/setint", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /setint [playerid] [interiorid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			new intid;
			new vwid;
			tmp = strtok(cmdtext, idx);
			intid = strvalEx(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			    		GetPlayerName(playa, giveplayer, sizeof(giveplayer));
                        SetPlayerInterior(playa, intid);
						format(string, sizeof(string), "* Ти смени ID Interior на %s*.", PlayerName(playa));
						SendClientMessage(playerid, COLOR_WHITE, string);
						format(string, sizeof(string), "* %s смени твоя ID Interior на %d*.", PlayerName(playerid), intid);
						SendClientMessage(playerid, COLOR_YELLOW, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /kick [Playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
				        {
							format(string, sizeof(string), "SERVER:%s was kicked by THE SERVER [Reason: Kick a larger admin level]", PlayerName(playerid));
							SendClientMessageToAll(COLOR_RED, string);
							Kick(playerid);
							return 1;
				        }
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /kick [Playerid/PartOfName] [reason]");
							return 1;
						}
						format(string, sizeof(string), "ADMIN:%s was kicked by %s [Reason: %s]", giveplayer, PlayerName(playerid), (result));
						SendClientMessageToAll(COLOR_RED, string);
                        SetTimerEx("DelayedKick", 1000, false, "i", giveplayerid);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	    if(strcmp(cmd, "/tekick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /tekick [Playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pTest] >= 1)
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
				        {
							format(string, sizeof(string), "SERVER:%s was kicked by THE SERVER [Reason:Kick a larger admin level]", PlayerName(playerid));
							SendClientMessageToAll(COLOR_RED, string);
							Kick(playerid);
							return 1;
				        }
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /tekick [Playerid/PartOfName] [reason]");
							return 1;
						}
						format(string, sizeof(string), "ADMIN:%s was kicked by %s. [Reason: %s]", giveplayer, PlayerName(playerid), (result));
						SendClientMessageToAll(COLOR_RED, string);
						SetTimerEx("DelayedKick", 1000, false, "i", giveplayerid);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/slap", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /slap [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerHealth(playa, shealth);
						SetPlayerHealth(playa, shealth-5);
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+5);
						format(string, sizeof(string), "you have been slapped by %s", PlayerName(playerid));
						SendClientMessage(playa, COLOR_RED, string);
						format(string, sizeof(string), "you slapped %s", PlayerName(playa));
						SendClientMessage(playerid, COLOR_RED, string);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/warn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /warn [Playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /warn [Playerid/PartOfName] [reason]");
							return 1;
						}
						
																							if(PlayerInfo[giveplayerid][pAWarns] >= 3)
						{
						format(string, sizeof(string), "Ти имаш 3 админ предупреждения и не можеш да използваш тази команда");
						SendClientMessage(playerid, COLOR_RED, string);
						return 1;
						}
						
						PlayerInfo[giveplayerid][pWarns] += 0;
						if(PlayerInfo[giveplayerid][pWarns] == 4)
						{
							format(string, sizeof(string), "ADMIN:%s was blocked by THE SERVER [Reason: get fifth warning]", giveplayerid);
							SendClientMessageToAll(COLOR_RED, string);
							Kick(giveplayerid);
							PlayerInfo[giveplayerid][pBlock] = 1;
							return 1;
						}
						if(PlayerInfo[giveplayerid][pWarns] += 1)
						format(string, sizeof(string), "ADMIN:%s was warned by %s [%d/5]. [Reason: %s]", giveplayer, PlayerName(playerid), PlayerInfo[giveplayerid][pWarns], (result));
						SendClientMessageToAll(COLOR_RED, string);
						format(string, sizeof(string), "Ти си KICKED, защото получи предупреждение");
						SendClientMessage(giveplayerid, COLOR_RED, string);
						format(string, sizeof(string), "ADMIN:%s was kicked by %s. [Reason: Warn]", giveplayer, PlayerName(playerid), PlayerInfo[giveplayerid][pWarns], (result));
						SendClientMessageToAll(COLOR_RED, string);
					    DelayedKick(giveplayerid);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
		if(strcmp(cmd, "/awarn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /awarn [Playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
   if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /awarn [Playerid/PartOfName] [reason]");
							return 1;
							}
						PlayerInfo[giveplayerid][pAWarns] += 1;
						format(string, sizeof(string), "ADMIN:%s сложи админ предупреждение на %s [%d/5]. Причина: %s", PlayerName(playerid), giveplayer, PlayerInfo[giveplayerid][pAWarns], (result));
						SendClientMessageToAll(COLOR_GRAD1, string);

												if(PlayerInfo[giveplayerid][pAWarns] == 5)
						{
						format(string, sizeof(string), "SERVER:%s were taken admin rights by THE SERVER [Reason:garnered three warnings]",giveplayer);
						SendClientMessageToAll(COLOR_RED, string);
												PlayerInfo[giveplayerid][pAWarns] = 0;
												PlayerInfo[giveplayerid][pAdmin] = 0;
						PlayerInfo[giveplayerid][pEvent] = 0;
						PlayerInfo[giveplayerid][pManage] = 0;
						}
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/unawarn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
                if (PlayerInfo[playerid][pAdmin] >= 6 && PlayerInfo[playerid][pAWarns] <= 3)
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unawarn [playerid] [ammount warns]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 6 && PlayerInfo[playerid][pAWarns] <= 3)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
                        new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
                            if (PlayerInfo[playerid][pAdmin] >= 5 && PlayerInfo[playerid][pAWarns] <= 3)
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unawarn [Playerid] [ammount warns]");
							return 1;
						}
						PlayerInfo[giveplayerid][pAWarns] -= 1;
						format(string, sizeof(string), "ADMIN:%s премахна едно от админ предупрежденията на %s", PlayerName(playerid), giveplayer);
						SendClientMessageToAll(COLOR_GREEN, string);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}



	if(strcmp(cmd, "/fwarn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fwarn [Playerid/PartOfName] [reason]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
   if(PlayerInfo[playerid][pMember] == PlayerInfo[giveplayerid][pMember] && PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[giveplayerid][pRank] <= 5)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
			        	    		   if(PlayerInfo[giveplayerid][pRank] <= 5)
			{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /fwarn [Playerid/PartOfName] [reason]");
							return 1;
							}
						PlayerInfo[giveplayerid][pFWarns] += 0;
						if(PlayerInfo[giveplayerid][pFWarns] == 2)
						{
						PlayerInfo[giveplayerid][pBanned] = 1;
                        format(string, sizeof(string), "{0FC4F0}[FACTION CHAT] %s изгони %s от бандата, защото той събра 3 Faction предупреждения. Причина: %s", PlayerName(playerid), giveplayer, (result));
                        SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pMember] = TEAM_CIVILIAN;
						PlayerInfo[giveplayerid][pRank] = 0;
						gTeam[giveplayerid] = TEAM_CIVILIAN;
						SpawnPlayer(giveplayerid);
						}
						if(PlayerInfo[giveplayerid][pFWarns] += 1)
						format(string, sizeof(string), "{0FC4F0}%s сложи Faction предупреждение на %s [%d/3]. Причина: %s", PlayerName(playerid), giveplayer, PlayerInfo[giveplayerid][pFWarns], (result));
						SendFactionMessage(PlayerInfo[playerid][pMember], COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "{0FC4F0}%s ти сложи Faction предупреждение. Причина: %s", PlayerName(playerid), (result));
						SendClientMessage(giveplayerid, COLOR_RED, string);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		
		}
		else
  {
								format(string, sizeof(string), "Не можеш да сложиш предупреждение на лидер");
						SendClientMessage(playerid, COLOR_GRAD1, string);
  }
		return 1;
	}


	
	
		if(strcmp(cmd, "/unfwarn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
                if(PlayerInfo[playerid][pMember] == PlayerInfo[giveplayerid][pMember] && PlayerInfo[playerid][pRank] >= 6)
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unfwarn [playerid] [ammount warns]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(PlayerInfo[playerid][pMember] == PlayerInfo[giveplayerid][pMember] && PlayerInfo[playerid][pRank] >= 6)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
                        new result[256];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
                            if(PlayerInfo[playerid][pMember] == PlayerInfo[giveplayerid][pMember] && PlayerInfo[playerid][pRank] >= 6)
							SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unawarn [Playerid] [ammount warns]");
							return 1;
						}
						PlayerInfo[giveplayerid][pFWarns] -= 1;
						format(string, sizeof(string), "{0FC4F0}[FACTION CHAT] %s премахна едно от Faction предупрежденията на %s", PlayerName(playerid), giveplayer);
						SendClientMessageToAll(COLOR_GREEN, string);
						format(string, sizeof(string), "{0FC4F0}[FACTION CHAT] %s премахна едно от твоите Faction предупреждения", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						return 1;
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	    if (strcmp(cmd, "/startevent1", true) == 0)
    {
        if(PlayerInfo[playerid][pEvent] >= 1 )
        {
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[256];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
            result[idx - offset] = cmdtext[idx];
                idx++;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(result))
            {
                               SendClientMessage(playerid, COLOR_WHITE, "/startevent1 [Name]");
                               					return 1;
}
                for(new i = 0; i < MAX_PLAYERS; i++)
                {
                SetPlayerVirtualWorld(playerid, 1);
			        GetPlayerPos(playerid, EvnTp[i][0],EvnTp[i][1],EvnTp[i][2]);
			        PlayerInfo[playerid][pIntId] = GetPlayerInterior(playerid);
			        format(string, sizeof(string),"~r~ %s ~n~ ~w~ TYPE: ~g~/joinevent ~n~ ~b~ WITH AWARD!!!",result);
  				    GameTextForPlayer(i, string, 5000, 3);
                    PlayerInfo[playerid][pInEvent] = 1;
                    PlayerInfo[i][pEventOn] = 1;
                    PlayerInfo[i][pEventOn2] = 1*30;
                    PlayerInfo[i][pLimit] = 33333;
    format(string, sizeof(string), "{FF0000}%s: {00FF00}Напишете {F2FF00}/joinevent{00FF00} за да се присъедините към евента.{FFFFFF} С НАГРАДА!", result);
    SendClientMessage(i, COLOR_WHITE, string);
		}
		}
		return 1;
	}
		    if (strcmp(cmd, "/ecl", true) == 0)
    {
        if(PlayerInfo[playerid][pEvent] >= 1)
        {
                if(PlayerInfo[playerid][pEventOn] >= 1)
        {
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[256];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
            result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
                        for(new i; i<MAX_PLAYERS; i++)
			{
            PlayerInfo[i][pEventOn] = 0;
    PlayerInfo[playerid][pTText1] = 1;
    }
			}
									else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш права за да ползваш командата!");
			}
						}
									else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"В момента няма евент");
			}
		}
		return 1;
	}
	
		    if (strcmp(cmd, "/eo", true) == 0)
    {
        if(PlayerInfo[playerid][pEvent] >= 1)
        {
                if(PlayerInfo[playerid][pEventOn] == 0)
        {
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[256];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
            result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
            for(new i; i<MAX_PLAYERS; i++)
			{
									    				    if(IsPlayerConnected(i))
				    {
            PlayerInfo[i][pEventOn] = 1;
   	new pname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, sizeof(pname));
PlayerInfo[playerid][pTText2] = 1;
    }
	}
			}
									else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш права за да ползваш командата!");
			}
						}

		}
		return 1;
	}
	
		    if (strcmp(cmd, "/joinevent", true) == 0)
    {
    	new string2[256];
    	if(PlayerInfo[playerid][aDuty] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да използваш тази команда, докато си ADMIN ON DUTY!");
		return 1;
	}
        if(PlayerInfo[playerid][pEventOn] >= 1 )
        {
                        if(PlayerInfo[playerid][pLimit] >= PlayerInfo[playerid][pHora])
        {
                                if(PlayerInfo[playerid][pLimit] <= PlayerInfo[playerid][pHora])
        {
            format(string2, sizeof(string2), "{00FF00}EVENT:Достигнат е лимита");
    SendClientMessage(playerid, COLOR_GRAD1, string2);
		return 1;
		}
		                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[256];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
            result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
            			    for(new i = 0; i < MAX_PLAYERS; i++)
       			{
       			
       			}
       		SetPlayerInterior(playerid, intid);
            SetPlayerPos(playerid, EvnTp[playerid][0],EvnTp[playerid][1],EvnTp[playerid][2]);
            ResetPlayerWeapons(playerid);
            SetPlayerColor(playerid, COLOR_EVENT);
            ResetPlayerWeaponsEx(playerid);
            SetPlayerVirtualWorld(playerid, 1);
            SetPlayerHealth(playerid, 100);
            PlayerInfo[playerid][pInEvent] = 1;
            PlayerInfo[playerid][pFight] = 1;
            PlayerInfo[playerid][pEnter] = 1;
            PlayerInfo[playerid][pHora] += 1;
            SetPlayerArmour(playerid, 100);
            SendClientMessage(playerid, COLOR_RED , "ВНИМАНИЕ: Не удряй или стреляй и не натискай F, ENTER или TAB преди админа да е позволил !");
   	new pname[MAX_PLAYER_NAME];
    GetPlayerName(playerid, pname, sizeof(pname));
    format(string2, sizeof(string2), "{FF0000}%s {00FF00}се пресъедини към евента. За да се пресъединиш и ти напиши {FF0000}/joinevent .", pname);
    SendClientMessageToAll(COLOR_RED, string2);
			}
			}
		}
											else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"В момента няма евент");
			}
		return 1;
	}
	

		    if (strcmp(cmd, "/leaveevent", true) == 0)
    {
        if(PlayerInfo[playerid][pInEvent] >= 1 )
        {
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[256];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
            result[idx - offset] = cmdtext[idx];
                idx++;
            }
            result[idx - offset] = EOS;
            if(!strlen(result))
            {
            PlayerInfo[playerid][pInEvent] = 0;
            PlayerInfo[playerid][pHora] -=1;
                SetPlayerHealth(playerid, 0);
                SendClientMessage(playerid, COLOR_YELLOW , "{00FF00}EVENT:Ти напусна евента.");
                   	new pname[MAX_PLAYER_NAME];
                   	            PlayerInfo[playerid][pCBC] = 0;
	new string2[256];
    GetPlayerName(playerid, pname, sizeof(pname));
    format(string2, sizeof(string2), "{6699FF}%s напусна евента", pname);
    SendClientMessageToAll(COLOR_YELLOW, string2);
			}
		}
								else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"{00FF00}EVENT:Ти не си в евент");
			}
		return 1;
	}
	    if (strcmp(cmd, "/startevent", true) == 0)
    {
        if(PlayerInfo[playerid][pEvent] >= 1 )
        {
            new length = strlen(cmdtext);
            while ((idx < length) && (cmdtext[idx] <= ' '))
            {
                idx++;
            }
            new offset = idx;
            new result[256];
            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
            {
            result[idx - offset] = cmdtext[idx];
                idx++;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(result))
            {
                               SendClientMessage(playerid, COLOR_WHITE, "/startevent [Name]");
                               					return 1;
}
                for(new i = 0; i < MAX_PLAYERS; i++)
                {

                intid = GetPlayerInterior(playerid);
                PlayerInfo[playerid][pIntId] = GetPlayerInterior(playerid);
                SetPlayerVirtualWorld(playerid, 1);
			        GetPlayerPos(playerid, EvnTp[i][0],EvnTp[i][1],EvnTp[i][2]);
                   format(string, sizeof(string),"~r~ %s ~n~ ~w~ TYPE: ~g~/joinevent ~n~ ~b~ NO AWARD!!!",result);
  				    GameTextForPlayer(i, string, 5000, 3);
                    PlayerInfo[playerid][pInEvent] = 1;
                    PlayerInfo[i][pEventOn] = 1;
                    PlayerInfo[i][pEventOn2] = 1*30;
                    PlayerInfo[i][pLimit] = 33333;
    format(string, sizeof(string), "{FF0000}%s: {00FF00}Напишете {F2FF00}/joinevent{00FF00} за да се присъедините към евента.{FFFFFF} БЕЗ НАГРАДА!", result);
    SendClientMessage(i, COLOR_WHITE, string);
		}
		}
		return 1;
	}

	if (strcmp(cmdtext, "/clearchat", true, 10) == 0)
    {
  if(PlayerInfo[playerid][pAdmin] >= 4) {
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
        SendClientMessageToAll(0xDEEE20FF, " ");
format(string, sizeof(string), "ADMIN: Чатът на сървъра беше изтрит от %s", PlayerName(playerid));
SendClientMessageToAll(COLOR_RED, string);
        return 1;
    }
    return 0;
}
	if(strcmp(cmd, "/goto", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /goto [Playerid/PartOfName]");
				return 1;
			}
            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 2)
					{
                 	if(PlayerInfo[playerid][pJail] == 1)
        			{
				        SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				        return 1;
			        }
			                         	if(PlayerInfo[playerid][pJailed] == 1)
        			{
				        SendClientMessage(playerid, COLOR_GRAD1, "Ти си в затвора и не можеш да се телепортираш!");
				        return 1;
			        }
			        if(PlayerInfo[playerid][AFKstatus] == 1)
		            {
				        SendClientMessage(playerid, COLOR_GRAD1, "Ти си в AFK режим и не можеш да се телепортираш!");
			            return 1;
		         	}
		         						if (PlayerInfo[plo][pTgoto] >= 1)
					{
					SendClientMessage(playerid, COLOR_GRAD1, "Този играч е забранил телепортирането до него!");
					return 1;
					}
						GetPlayerPos(plo, plocx, plocy, plocz);
						SetPlayerInterior(playerid, GetPlayerInterior(plo));
						SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(plo));
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
				        format(string, sizeof(string), "* %s се телепортира до теб *", PlayerName(playerid));
				        SendClientMessage(plo, COLOR_YELLOW, string);
				        format(string, sizeof(string), "* Ти се телепортира до %s *", PlayerName(plo));
				        SendClientMessage(playerid, COLOR_YELLOW, string);
				        format(string, sizeof(string), "Teleport: %s се телепортира до %s", PlayerName(playerid) ,PlayerName(plo));
						SendAdminMessage(COLOR_RED, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
			if(strcmp(cmd, "/gvs", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /gvs [Playerid/PartOfName]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 6)
					{
PlayerInfo[plo][pZabrana] = 0;
						GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "{6699FF}%s позволи на %s да стартира Turf War." ,PlayerName(playerid) ,PlayerName(plo));
					    SendClientMessageToAll(COLOR_BLUE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
		if(strcmp(cmd, "/gvb", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /gvb [Playerid/PartOfName]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 6)
					{
PlayerInfo[plo][pZabrana] = 1;
						GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "{6699FF}%s забрани на %s да стартира Turf War." ,PlayerName(playerid) ,PlayerName(plo));
					    SendClientMessageToAll(COLOR_BLUE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
		if(strcmp(cmd, "/gvr", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /gvr [Playerid/PartOfName]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 6)
					{
PlayerInfo[plo][pTimerB] = 0;
PlayerInfo[plo][pTimerG] = 1*1;
						GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "{6699FF}%s ти премахна времето за стартиране на война." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_BLUE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	
	
	
	
	if(strcmp(cmd, "/makegfc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /makegfc [Playerid/PartOfName]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 6)
					{
PlayerInfo[plo][pGFC] = 1;
						GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "{6699FF}%s те направи служител на Gold Play Fuel Company(GFC)." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_BLUE, string);
					    format(string, 256, "{6699FF}%s направи %s служител на Gold Play Fuel Company(GFC)." ,PlayerName(playerid) ,PlayerName(plo));
					    SendClientMessageToAll(COLOR_BLUE, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
//






	if(strcmp(cmd, "/vehres", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	                					if (PlayerInfo[playerid][pCar1] == 1)
					{
                        SetVehicleToRespawn(carflux);

	                }
	                if(PlayerInfo[playerid][pCar2] == 1)
	                {
	                SetVehicleToRespawn(carflux4);
	                }
	                	                					if (PlayerInfo[playerid][pCar3] == 1)
					{
                        SetVehicleToRespawn(carflux2);

	                }
	                                	                					if (PlayerInfo[playerid][pCar4] == 1)
					{
                        SetVehicleToRespawn(caro);

	                }
	                                	                					if (PlayerInfo[playerid][pCar5] == 1)
					{
                        SetVehicleToRespawn(carpedal);

	                }
	                                	                					if (PlayerInfo[playerid][pCar6] == 1)
					{
                        SetVehicleToRespawn(caro2);

	                }
	                                	                					if (PlayerInfo[playerid][pCar7] == 1)
					{
                        SetVehicleToRespawn(caro3);

	                }
	                                	                					if (PlayerInfo[playerid][pCar8] == 1)
					{
                        SetVehicleToRespawn(carflux3);

	                }
	                                	                					if (PlayerInfo[playerid][pCar9] == 1)
					{
                        SetVehicleToRespawn(carholy);

	                }
	                	                                	                					if (PlayerInfo[playerid][pCar10] == 1)
					{
                        SetVehicleToRespawn(carufo);

	                }
	                                	                					if (PlayerInfo[playerid][pCar11] == 1)
					{
                        SetVehicleToRespawn(carstrix4);

	                }
	                                	                					if (PlayerInfo[playerid][pCar12] == 1)
					{
                        SetVehicleToRespawn(carmoto);

	                }
			}
		return 1;
	}





	
	//
	if(strcmp(cmd, "/gcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /gcar [Playerid/PartOfName]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
	                					if (PlayerInfo[playerid][pCar1] == 1)
					{
					PlayerInfo[plo][pCar1] = 1;
					PlayerInfo[playerid][pCar1] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 1." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar2] == 1)
					{
PlayerInfo[plo][pCar2] = 1;
PlayerInfo[playerid][pCar2] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 2." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar3] == 1)
					{
					PlayerInfo[plo][pCar3] = 1;
					PlayerInfo[playerid][pCar3] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 3." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar4] == 1)
					{
					PlayerInfo[plo][pCar4] = 1;
					PlayerInfo[playerid][pCar4] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 4." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar5] == 1)
					{
					PlayerInfo[plo][pCar5] = 1;
					PlayerInfo[playerid][pCar5] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 5." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar6] == 1)
					{
					PlayerInfo[plo][pCar6] = 1;
					PlayerInfo[playerid][pCar6] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 6." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar7] == 1)
					{
					PlayerInfo[plo][pCar7] = 1;
					PlayerInfo[playerid][pCar7] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 7." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar8] == 1)
					{
					PlayerInfo[plo][pCar8] = 1;
					PlayerInfo[playerid][pCar8] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 8." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar9] == 1)
					{
					PlayerInfo[plo][pCar9] = 1;
					PlayerInfo[playerid][pCar9] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 9." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar10] == 1)
					{
					PlayerInfo[plo][pCar10] = 1;
					PlayerInfo[playerid][pCar10] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 10." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                					if (PlayerInfo[playerid][pCar11] == 1)
					{
					PlayerInfo[plo][pCar11] = 1;
					PlayerInfo[playerid][pCar11] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 11." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
	                	                					if (PlayerInfo[playerid][pCar12] == 1)
					{
					PlayerInfo[plo][pCar12] = 1;
					PlayerInfo[playerid][pCar12] = 0;
											GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "%s Ти даде кола ID 12." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_GRAD1, string);
	                }
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	
	
	
	
	
		if(strcmp(cmd, "/unwarn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /unwarn [Playerid/PartOfName]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
						PlayerInfo[plo][pWarns] -= 1;
						format(string, sizeof(string), "ADMIN:%s премахна едно от предупрежденията на %s", PlayerName(playerid), PlayerName(plo));
						SendClientMessageToAll(COLOR_GREEN, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	
	
	
	
	
	
	
	
	
	if(strcmp(cmd, "/checkvote2", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /checkvote [Playerid/PartOfName]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 3)
					{
					if(PlayerInfo[plo][plDa] == 0)
					{
					SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е гласувал!");
					return 1;
					}
						GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						new dainfo[27];
						if(PlayerInfo[playerid][plDa] == 1) { dainfo = "ДА"; }
                	else if(PlayerInfo[playerid][plDa] == 2) { dainfo = "НЕ"; }
					    format(string, 256, "{FFFFFF}%s - {33CC00}%s" ,PlayerName(plo),dainfo);
					    SendClientMessage(playerid, COLOR_RED, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	
	if(strcmp(cmd, "/akill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /akill [Playerid/PartOfName]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
						SetPlayerHealth(plo, 0);
						GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "You have been admin killed by %s." ,PlayerName(playerid));
					    SendClientMessage(plo, COLOR_RED, string);
					    format(string, 256, "You killed %s." ,PlayerName(plo));
					    SendClientMessage(playerid, COLOR_RED, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tekill", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /teakill [Playerid/PartOfName]");
				return 1;
			}
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pTest] >= 1)
					{
						SetPlayerHealth(plo, 0);
						GetPlayerName(plo, giveplayer, sizeof(giveplayer));
						format(string, 256, "You were killed by admin %s." ,PlayerName(playerid));
					    SendClientMessage(giveplayerid, COLOR_RED, string);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
					}
				}
			}
			else
			{
				format(string, sizeof(string), "   Посоченото ID не е в сървъра.");
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ciggy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pCig] >= 1)
			{
			 PlayerInfo[playerid][pCig] -= 1;
              SetPlayerSpecialAction(playerid, SPECIAL_ACTION_SMOKE_CIGGY);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш цигари!");
			}
		}
     	return 1;
	}
	if(strcmp(cmd, "/vguns", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
	        if (PlayerInfo[playerid][pDonateRank] >= 3 && PlayerInfo[playerid][pInEvent] == 0)
			{
  GivePlayerWeapon(playerid, 31, 31);
    GivePlayerWeapon(playerid, 26, 26);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
			}
		}
     	return 1;
	}
	//
		if(strcmp(cmd, "/sstrip", true) == 0)
	{
     new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
        GetPlayerPos(playerid, plocx, plocy, plocz);
        GetPlayerFacingAngle(playerid,ploca);
        CreateStrip(plocx,plocy,plocz,ploca);
        PlayerInfo[playerid][pStrip] = 1;
     return 1;
 }
 
	if(strcmp(cmd, "/spike", true) == 0)
	{
 if(PlayerInfo[playerid][pMember] != TEAM_GPD) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
 if(PlayerInfo[playerid][pStrip] == 1) return SendClientMessage(playerid, COLOR_GRAD1, "Използвай /rspike за да премахнеш шипа");
 SendClientMessage(playerid,COLOR_GRAD1,"Ти създаде шип");
     new Float:plocx,Float:plocy,Float:plocz,Float:ploca;
        GetPlayerPos(playerid, plocx, plocy, plocz);
        GetPlayerFacingAngle(playerid,ploca);
        CreateStrip(plocx,plocy,plocz,ploca);
        PlayerInfo[playerid][pStrip] = 1;
     return 1;
 }
	if(strcmp(cmd, "/rspike", true) == 0)
	{
 if(PlayerInfo[playerid][pMember] != TEAM_GPD) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
 if(PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си създал шип");
        DeleteClosestStrip(playerid);
        SendClientMessage(playerid,COLOR_GRAD1,"Ти премахна шип!");
        PlayerInfo[playerid][pStrip] = 0;
     return 1;
 }

	if(strcmp(cmd, "/rallstrips", true) == 0)
	{
 if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
        DeleteAllStrip();
        PlayerInfo[playerid][pStrip] = 0;
     return 1;
 }
	
	if(strcmp(cmd, "/rest", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pAdmin] <= 5)
			{
			}
	        if (PlayerInfo[playerid][pAdmin] >= 6)
			{
			new i = MAX_PLAYERS;
                PlayerInfo[i][pDa] = 0;
                PlayerInfo[i][pNone] = 0;
                                PlayerInfo[i][pNe] = 0;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"В момента не можеш да използваш тази команда!");
			}
		}
     	return 1;
	}
	//
	//
	//
	//
	//
	
	if(strcmp(cmd, "/mduty", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pCash] <= 199)
			{
			SendClientMessage(playerid,COLOR_GRAD1,"Трябва да имаш поне 200$!");
			return 1;
			}
	        if (PlayerInfo[playerid][pCash] >= 200)
			{
			for(new h; h<MAX_HOUSES; h++)
			 {
			if(PlayerToPoint(PTP_RADIUSSZ, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ]))
			{
			if(HouseInfo[h][hLevel] == 13)
			{
			 HouseInfo[h][Earnings] += 200;
			 SavePlayerHouse(h);
PlayerInfo[playerid][pTowT] = 1;
SetPlayerSkin(playerid,8);
GivePlayerCash(playerid,-200);
}
}
}
			}
		}
     	return 1;
	}
//
	if(strcmp(cmd, "/radio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pRadio] == 0)
			{
			}
	        if (PlayerInfo[playerid][pRadio] == 1)
			{
                SendClientMessage(playerid, COLOR_WHITE , "Използвай /n-joy,/dubstep,/thevoice,/burgas,/goldplay,/shot");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш радио!");
			}
		}
     	return 1;
	}
			if(strcmp(cmd, "/shot", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pRadio] == 0)
			{
			}
	        if (PlayerInfo[playerid][pRadio] == 1)
			{
                    PlayAudioStreamForPlayer(playerid, "http://87.117.217.103:35462");
                SendClientMessage(playerid, COLOR_WHITE , "Използвай /stop за да спреш радио-то.");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш радио!");
			}
		}
     	return 1;
	}
		if(strcmp(cmd, "/n-joy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pRadio] == 0)
			{
			}
	        if (PlayerInfo[playerid][pRadio] == 1)
			{
                    PlayAudioStreamForPlayer(playerid, "http://live.btvradio.bg/njoy.mp3");
                SendClientMessage(playerid, COLOR_WHITE , "Използвай /stop за да спреш радио-то.");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш радио!");
			}
		}
     	return 1;
	}
		if(strcmp(cmd, "/burgas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pRadio] == 0)
			{
			}
	        if (PlayerInfo[playerid][pRadio] == 1)
			{
                    PlayAudioStreamForPlayer(playerid, "78.129.187.57:27511");
                SendClientMessage(playerid, COLOR_WHITE , "Използвай /stop за да спреш радио-то.");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш радио!");
			}
		}
     	return 1;
	}
	
	
//
	if(strcmp(cmd, "/goldplay", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pRadio] == 0)
			{
			}
	        if (PlayerInfo[playerid][pRadio] == 1)
			{
                    PlayAudioStreamForPlayer(playerid, "http://78.129.224.13:18955");
                SendClientMessage(playerid, COLOR_WHITE , "Използвай /stop за да спреш радио-то.");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш радио!");
			}
		}
     	return 1;
	}
	if(strcmp(cmd, "/stop", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pRadio] == 0)
			{
			}
	        if (PlayerInfo[playerid][pRadio] == 1)
			{
			                        StopAudioStreamForPlayer(playerid);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш радио!");
			}
		}
     	return 1;
	}
	if(strcmp(cmd, "/dubstep", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pRadio] == 0)
			{
			}
	        if (PlayerInfo[playerid][pRadio] == 1)
			{
                    PlayAudioStreamForPlayer(playerid, "http://thevoice.bg/player?radio=vitosha");
                SendClientMessage(playerid, COLOR_WHITE , "Използвай /stop за да спреш радио-то.");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш радио!");
			}
		}
     	return 1;
	}
		if(strcmp(cmd, "/thevoice", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pRadio] == 0)
			{
			}
	        if (PlayerInfo[playerid][pRadio] == 1)
			{
                    PlayAudioStreamForPlayer(playerid, "http://193.108.24.18:8000/thevoice");
                SendClientMessage(playerid, COLOR_WHITE , "Използвай /stop за да спреш радио-то.");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти нямаш радио!");
			}
		}
     	return 1;
	}
//
	if(strcmp(cmd, "/eunfreeze", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Използвай: /eunfreeze [Playerid/PartOfName]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pEvent] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
			if (PlayerInfo[playa][pInEvent] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Този играч не е в евент!");
			}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						TogglePlayerControllable(playa, 1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Нямаш права за да ползваш командата!");
			}
		}
		return 1;
	}

	//
	
	
	
//
if (strcmp("/nameoff", cmdtext, true) == 0)
{
	    	if (PlayerInfo[playerid][pNameO] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
        for(new i = 0;i <= MAX_PLAYERS;i++)
        {
            for(new i = GetPlayerPoolSize(); i != -1; --i) ShowPlayerNameTagForPlayer(i, playerid, 0);
            ShowPlayerNameTagForPlayer(playerid, i, 0);
            ShowPlayerNameTagForPlayer(i, playerid, 0);
    GameTextForPlayer(playerid, "~W~Nametags ~R~off", 5000, 5);
        }
    }
    else
    {
    SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в евент или е тази команда е забранена");
    }
    return 1;
}
if (strcmp("/nameon", cmdtext, true) == 0)
{
	    	if (PlayerInfo[playerid][pNameO] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
        for(new i = 0;i <= MAX_PLAYERS;i++)
        {
            for(new i = GetPlayerPoolSize(); i != -1; --i) ShowPlayerNameTagForPlayer(i, playerid, 1);
            ShowPlayerNameTagForPlayer(playerid, i, 1);
            ShowPlayerNameTagForPlayer(i, playerid, 1);
    GameTextForPlayer(playerid, "~W~Nametags ~g~on", 5000, 5);
        }
    }
    else
    {
    SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в евент или е тази команда е забранена");
    }
    return 1;
}
    
	if(strcmp(cmd, "/tphousecar", true) == 0)
	{
    new pName[MAX_PLAYER_NAME], Float:X, Float:Y, Float:Z;
    new houseid = cmdtext[10]; //The param. /tphousecar is 0-8. With a space, 9. Then, the param is at 10.
    GetPlayerName(playerid, pName, MAX_PLAYER_NAME);
    if(!strcmp(HouseInfo[houseid][hName], pName, false)) return SendClientMessage(playerid, COLOR_RED, "You are not the owner of the house!");
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_RED, "You must be in an vehicle!"); //if is player not in an vehicle, send an message and stop (RETURN [message])
    new Float:A;
    GetVehiclePos(GetPlayerVehicleID(playerid), X, Y, Z);
    GetVehicleZAngle(GetPlayerVehicleID(playerid), A);
    HouseInfo[houseid][hVecX] = X;
    HouseInfo[houseid][hVecY] = Y;
    HouseInfo[houseid][hVecZ] = Z;
    HouseInfo[houseid][hVecA] = A;
    return 1;
}


	if(strcmp(cmd, "/turfattack", true) == 0)
	{
			new Float:x, Float:y, Float:z;
    for (new i = 0; i < MAX_TURFS; i++)
	{
         for (new c = 0; c < MAX_TEAMS; c++) TurfInfo[i][c][MIT] = 0;
         for (new b = 0; b < 500; b++)
		 {
                  GetPlayerPos(b, x, y, z);
			      if (IsPlayerInTurf(b, turfs[i][zMinX], turfs[i][zMinY], turfs[i][zMaxX], turfs[i][zMaxY]))
			      {
			      if(startturf >= 1)
		{
		SendClientMessage(playerid, COLOR_GRAD1, "В момента има атака,изчакай тя да свърши!");
		return 1;
		}
			        					if(PlayerInfo[playerid][pZabrana] == 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Ти имаш забрана за търф.");
return 1;
					}
		        					if(PlayerInfo[playerid][pMember] == TEAM_GPD)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Твоята банда не може да търфи.");
return 1;
					}
							        					if(PlayerInfo[playerid][pMember] == TEAM_CIVILIAN)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Твоята банда не може да търфи.");
return 1;
					}
							        					if(PlayerInfo[playerid][pMember] == TEAM_VIP)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Твоята банда не може да търфи.");
return 1;
					}
												        					if(PlayerInfo[playerid][pMember] == TEAM_FBI)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Твоята банда не може да търфи.");
return 1;
					}
						        					if(PlayerInfo[playerid][pTimerB] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Трябва да изчакаш да ти мине времето за стартиране на война");
return 1;
					}
	    if(IsPlayerConnected(playerid))
	    {
		                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
		if (IsPlayerInTurf(b, turfs[i][zMinX], turfs[i][zMinY], turfs[i][zMaxX], turfs[i][zMaxY]))
		{
		}
		 else
		 {
SendClientMessage(playerid, COLOR_GRAD1, "Ти не си в територия.");
return 1;
		 }
			      Float:Tur1 = turfs[i][zMinX];
			      Float:Tur2 = turfs[i][zMinY];
			      Float:Tur3 = turfs[i][zMaxY];
                  Float:Tur4 = turfs[i][zMaxY];
                  bturf3 = b;
		 			for(new i = 0; i < MAX_PLAYERS; i++)
			{
  				if(IsPlayerConnected(i))
	    		{
	    		    if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
	    		    {
		                					PlayerInfo[i][pWantedLevel] += 1;
										if(PlayerInfo[i][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(i,1);
					}
										if(PlayerInfo[i][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(i,2);
					}
										if(PlayerInfo[i][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(i,3);
					}
										if(PlayerInfo[i][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(i,4);
					}
										if(PlayerInfo[i][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(i,5);
					}
										if(PlayerInfo[i][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(i,6);
					}
					}
				}
			}

						    if(PlayerInfo[playerid][pMember] == TEAM_GROVE)
	{
    SetPlayerColor(playerid,COLOR_GREEN);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_BALLAS)
	{
    SetPlayerColor(playerid,COLOR_PURPLE);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_VAGOS)
	{
    SetPlayerColor(playerid,COLOR_YELLOW);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_VIP)
	{
    SetPlayerColor(playerid,0xFF4500FF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_TRIADS)
	{
    SetPlayerColor(playerid,0x33CCFFAA);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_BOYZ)
	{
    SetPlayerColor(playerid,DANANGBOYS_COLOR);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ)
	{
    SetPlayerColor(playerid,CRIPZ_COLOR);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_GPD)
	{
    SetPlayerColor(playerid,COLOR_WHITE);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_SoA)
	{
    SetPlayerColor(playerid,COLOR_RED);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_ZETAS)
	{
    SetPlayerColor(playerid,0xCCCCCC);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
	{
    SetPlayerColor(playerid,0x0FD49CFF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_MS13)
	{
    SetPlayerColor(playerid,COLOR_MS13);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_BulgarianMafia)
	{
    SetPlayerColor(playerid,0xCC66CCFF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_RIFA)
	{
    SetPlayerColor(playerid,0x1682D959);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_LatinKing)
	{
    SetPlayerColor(playerid,0xFFE100FF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_FBI)
	{
    SetPlayerColor(playerid,COLOR_BlackStreet);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_NZ)
	{
    SetPlayerColor(playerid,0x6D000080);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_Thugs)
	{
    SetPlayerColor(playerid,0x2480E3FF);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA)
	{
    SetPlayerColor(playerid,COLOR_YAKUZA);
	}
				    if(PlayerInfo[playerid][pMember] == TEAM_CIVILIAN)
	{
    SetPlayerColor(playerid,COLOR_WHITE);
	}
					    if(PlayerInfo[playerid][pMember] == TEAM_DPK)
	{
    SetPlayerColor(playerid,COLOR_ORANGE);
	}


	for(new i = 0; i < MAX_PLAYERS; i++)
{
	if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] != TEAM_CIVILIAN)
		    {
			 	if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
			  	{
			  	if (ProxDetectorS(20.0, i, playerid))
                        {
                	    		if (IsPlayerInTurf(i, turfs[i][zMinX], turfs[i][zMinY], turfs[i][zMaxX], turfs[i][zMaxY]))
		{
         //
         //
       PlayerInfo[i][pVturf] = 1;
      turfattackers += 1;
}
}
}
}
}
}



		        new gangb[32];
	                	if(PlayerInfo[playerid][pMember] == TEAM_GROVE) { gangb = "Grove Street Families"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_BALLAS) { gangb = "Rolling Heights Ballas"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_VAGOS) { gangb = "Los Santos Vagos"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_VIP) { gangb = "VIP"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_TRIADS) { gangb = "Varrios Los Aztecas"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_BOYZ) { gangb = "Boyz N The Hood"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ) { gangb = "Vinewood Cripz"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_GPD) { gangb = "GPD"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_SoA) { gangb = "Sons of Anarchy"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_ZETAS) { gangb = "Black Mafia"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz) { gangb = "Asian Boyz"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_RIFA) { gangb = "San Fierro Rifa"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_LatinKing) { gangb = "Latin King"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_NZ) { gangb = "Da Nang Boys"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_Thugs) { gangb = "Thugs Life"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA) { gangb = "Yakuza"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_DPK) { gangb = "Dark Porfessional Killers"; }

	        if (PlayerInfo[playerid][pRank] >= 6)
			{
					                format(string, sizeof(string), "[Turf Attack] %s стартира Turf Attack", gangb);
                SendClientMessageToAll(COLOR_ORANGE, string);
                startturf = 2;
CheckPl(PlayerInfo[playerid][pMember]);
                PlayerInfo[playerid][pTimerB] = 1;
                PlayerInfo[playerid][pTimerG] = 15*60;
                PlayerInfo[PlayerInfo[playerid][pMember]][pO2] = 1;
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Трябва да си поне помощник лидер,за да ползваш тази команда!");
			}
		}
		}
		}
		}
     	return 1;
	}
		if(strcmp(cmd, "/checkturf", true) == 0)
	{
			new Float:x, Float:y, Float:z;
    for (new i = 0; i < MAX_TURFS; i++)
	{
         for (new c = 0; c < MAX_TEAMS; c++) TurfInfo[i][c][MIT] = 0;
         for (new b = 0; b < 500; b++)
		 {
                  GetPlayerPos(b, x, y, z);
			      if (IsPlayerInTurf(b, turfs[i][zMinX], turfs[i][zMinY], turfs[i][zMaxX], turfs[i][zMaxY]))
			      {
		        new gangb[32];
	                	if(turfs[i][TurfOwner] == TEAM_GROVE) { gangb = "Grove Street Families"; }
                	else if(turfs[i][TurfOwner] == TEAM_BALLAS) { gangb = "Rolling Heights Ballas"; }
                	else if(turfs[i][TurfOwner] == TEAM_VAGOS) { gangb = "Los Santos Vagos"; }
                	else if(turfs[i][TurfOwner] == TEAM_VIP) { gangb = "VIP"; }
                	else if(turfs[i][TurfOwner] == TEAM_TRIADS) { gangb = "Varrios Los Aztecas"; }
                	else if(turfs[i][TurfOwner] == TEAM_BOYZ) { gangb = "Boyz N The Hood"; }
                	else if(turfs[i][TurfOwner] == TEAM_CRIPZ) { gangb = "Vinewood Cripz"; }
                	else if(turfs[i][TurfOwner] == TEAM_GPD) { gangb = "GPD"; }
                	else if(turfs[i][TurfOwner] == TEAM_SoA) { gangb = "Sons of Anarchy"; }
                	else if(turfs[i][TurfOwner] == TEAM_ZETAS) { gangb = "Black Mafia"; }
                	else if(turfs[i][TurfOwner] == TEAM_AsianBoyz) { gangb = "Asian Boyz"; }
                	else if(turfs[i][TurfOwner] == TEAM_RIFA) { gangb = "San Fierro Rifa"; }
                	else if(turfs[i][TurfOwner] == TEAM_LatinKing) { gangb = "Latin King"; }
                	else if(turfs[i][TurfOwner] == TEAM_NZ) { gangb = "Da Nang Boys"; }
                	else if(turfs[i][TurfOwner] == TEAM_Thugs) { gangb = "Thugs Life"; }
                	else if(turfs[i][TurfOwner] == TEAM_YAKUZA) { gangb = "Yakuza"; }
                	else if(turfs[i][TurfOwner] == TEAM_DPK) { gangb = "Dark Porfessional Killers"; }
				format(string, sizeof(string), "{E60073}Тази територия принаближи на %s", gangb);
                SendClientMessage(playerid, COLOR_ORANGE, string);
		}
		}
		}
     	return 1;
	}
	if(strcmp(cmd, "/bar1", true) == 0)
	{
	if(PlayerInfo[playerid][pAdmin] <= 5)
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно права за командата!");
	return 1;
	}
	SendClientMessage(playerid, COLOR_WHITE, "* Ти отвори пункт номер едно *");
	format(string, sizeof(string), "%s отвори пункт номер едно [Секунди до пълно отваряне: 10]", PlayerName(playerid));
SendClientMessageToAll(COLOR_YELLOW, string);
MoveObject(novab1, 1784.755981, 680.666503, 15.909406, 10.00, 0.000000, 0.000000, -18.199996);
 return 1;
 }
 if(strcmp(cmd, "/bar2", true) == 0)
 {
 if(PlayerInfo[playerid][pAdmin] <= 5)
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно права за командата!");
	return 1;
	}
 SendClientMessage(playerid, COLOR_WHITE, "* Ти отвори пункт номер две *");
 format(string, sizeof(string), "%s отвори пункт номер две [Секунди до пълно отваряне: 10]", PlayerName(playerid));
SendClientMessageToAll(COLOR_YELLOW, string);
MoveObject(novab2, 1792.837768, 679.821350, 15.889406, 10.00, 0.000000, 0.000000, -18.199996);
 return 1;
 }
 if(strcmp(cmd, "/cbar1", true) == 0)
 {
 if(PlayerInfo[playerid][pAdmin] <= 5)
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно права за командата!");
	return 1;
	}
 SendClientMessage(playerid, COLOR_WHITE, "* Ти затвори пункт номер едно *");
format(string, sizeof(string), "%s затвори пункт номер едно [Секунди до пълно затваряне: 10]", PlayerName(playerid));
SendClientMessageToAll(COLOR_YELLOW, string);
MoveObject(novab1, 1784.755981, 680.666503, 15.909406, 10.00, 0.000000, -91.499954, -18.199996);
 return 1;
 }
 if(strcmp(cmd, "/cbar2", true) == 0)
 {
 if(PlayerInfo[playerid][pAdmin] <= 5)
	{
	SendClientMessage(playerid, COLOR_GRAD1, "Нямаш достатъчно права за командата!");
	return 1;
	}
 SendClientMessage(playerid, COLOR_WHITE, "* Ти затвори пункт номер две *");
 format(string, sizeof(string), "%s затвори пункт номер две [Секунди до пълно затваряне: 10]", PlayerName(playerid));
SendClientMessageToAll(COLOR_YELLOW, string);
MoveObject(novab2, 1792.837768, 679.821350, 15.889406, 10.00, 0.000000, -90.599960, -18.199996);
 return 1;
 }
	if(strcmp(cmd, "/kill", true) == 0)
	{
	        					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}
	    if(IsPlayerConnected(playerid))
	    {
		                                if(PlayerInfo[playerid][pInEvent] >= 1)
        {
SendClientMessage(playerid, COLOR_GRAD1, "Ти си в евент,затова ти не можеш да ползваш тази команда!");
		return 1;
		}
	        if (PlayerInfo[playerid][pDonateRank] >= 1)
			{
                SetPlayerHealth(playerid, 0);
                SendClientMessage(playerid, COLOR_YELLOW , "Ти си луд, защото се самоуби.");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
			}
		}
     	return 1;
	}

	
	if(strcmp(cmd, "/lv", true) == 0)
	{
	        					if(PlayerInfo[playerid][pMember] == TEAM_VIP)
					{
SendClientMessage(playerid, COLOR_GRAD1, "Не можеш да ползваш тази команда,докато си заподозрян.");
return 1;
					}

     	return 1;
	}




	if(strcmp(cmd, "/fa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if (PlayerInfo[playerid][pDonateRank] >= 1 && PlayerInfo[playerid][pInEvent] >= 1)
			{
			}
	        if (PlayerInfo[playerid][pDonateRank] >= 1 && PlayerInfo[playerid][pInEvent] == 0)
			{
new Float:Angle;
GetPlayerFacingAngle(playerid, Angle);
format(string, sizeof(string), "Your facing angle: %0.2f", Angle);
SendClientMessage(playerid, 0xFFFFFFFF, string);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
			}
		}
     	return 1;
	}

	if(strcmp(cmd, "/leavedm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pInDMF] >= 1)
			{
PlayerInfo[playerid][pInDMF] = 0;
                SetPlayerHealth(playerid, 0);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в DM!");
			}
		}
     	return 1;
	}
	if(strcmp(cmd, "/leaverace", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pInDMF] >= 1)
			{
            raceplayers -= 1;
                SetPlayerHealth(playerid, 0);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в Street Race!");
			}
		}
     	return 1;
	}
	
	if(strcmp(cmd, "/rwin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pEvent] == 1)
			{
				        if (PlayerInfo[playerid][pInEvent] == 1)
			{
								format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~RED TEAM");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
				PlayerInfo[i][pLimit] = 333333;
				    GameTextForPlayer(i, string, 5000, 3);
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш права за да ползваш командата!");
			}
						}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в евент!");
			}
		}
     	return 1;
	}



	if(strcmp(cmd, "/bwin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pEvent] == 1)
			{
				        if (PlayerInfo[playerid][pInEvent] == 1)
			{
									format(string, sizeof(string),"~w~EVENT ~g~WINNER:~n~~r~BLUE TEAM");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
			     	PlayerInfo[i][pLimit] = 333333;
				    GameTextForPlayer(i, string, 5000, 3);
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш права за да ползваш командата!");
			}
						}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Ти не си в евент!");
			}
		}
     	return 1;
	}




	if(strcmp(cmd, "/clothes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if (PlayerInfo[playerid][pDonateRank] >= 5)
			{
			          ShowPlayerDialog(playerid, DIALOG_CLOTHES2, DIALOG_STYLE_LIST, "Дрехи", "Glasses\nMask\nHat\nClock\nSpecial\nPolice", "Select", "Close");
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Нямаш достатъчно VIP права за да ползваш командата!");
			}
		}
     	return 1;
	}



//

	return 0;
}
//==============================================================================
//

public OnPlayerStateChange(playerid, newstate, oldstate)
{
        

        if(Act[playerid] == 1)
        {
                if(oldstate == PLAYER_STATE_DRIVER)
                {
                        if(newstate == PLAYER_STATE_ONFOOT)
                        {
                                if(InCar[playerid] == 1)
                                {
                                        PutPlayerInVehicle(playerid, WhatCar[playerid], Driver);
                                }
                        }
                }
                if(oldstate == PLAYER_STATE_PASSENGER)
                {
                        if(newstate == PLAYER_STATE_ONFOOT)
                        {
                                if(InCar[playerid] == 1)
                                {
                                        PutPlayerInVehicle(playerid, WhatCar[playerid], Passanger);
                                }
                        }
                }
                if(oldstate == PLAYER_STATE_ONFOOT)
                {
                        if(newstate == PLAYER_STATE_DRIVER || PLAYER_STATE_PASSENGER)
                        {
                                InCar[playerid] = 1;
                                WhatCar[playerid] = GetPlayerVehicleID(playerid);
                        }
                }
        }



       if ((oldstate == PLAYER_STATE_ONFOOT) && (newstate == PLAYER_STATE_PASSENGER || newstate == PLAYER_STATE_DRIVER))
        {
             OldVehID [playerid] = GetPlayerVehicleID (playerid);
        }



       if(newstate == PLAYER_STATE_WASTED)
        {
                if(RL_UpdatedHealth[playerid])
                        RL_UpdatedHealth[playerid]=false;
                else
                {
                        new
                                        Float:RL_PlayerPos[3],
                                        Float:RL_Distance,
                                        Float:RL_CameraPos[3],
                                        Float:RL_CameraVectors[3],
                                        RL_Tick,
                                        Float:RL_HP,
                                        Float:RL_Armour
                                        ;
                        GetPlayerHealth(playerid,RL_HP);
                        GetPlayerArmour(playerid,RL_Armour);
                        RL_Tick = (GetTickCount()-1000);
                        GetPlayerPos(playerid, RL_PlayerPos[0], RL_PlayerPos[1], RL_PlayerPos[2]);
                        foreach(Player,i)
                        {
                                if(RL_Shooting[i] || RL_Tick < RL_Released[i])
                                {
                                        if(i != playerid)
                                        {
                                                GetPlayerCameraWeaponVector(i, RL_CameraVectors[0], RL_CameraVectors[1], RL_CameraVectors[2]);
                                                GetPlayerCameraPos(i, RL_CameraPos[0], RL_CameraPos[1], RL_CameraPos[2]);
                                                if(IsPlayerInRangeOfPoint(i,200.0,RL_PlayerPos[0], RL_PlayerPos[1], RL_PlayerPos[2]))
                                                {
                                                        GetDistanceFromPointToLine(RL_Distance, RL_CameraVectors[0], RL_CameraVectors[1], RL_CameraVectors[2], RL_CameraPos[0], RL_CameraPos[1], RL_CameraPos[2], RL_PlayerPos[0], RL_PlayerPos[1], RL_PlayerPos[2]);
                                                        if(RL_Distance < 2.5)
                                                        {
                                                                        CallLocalFunction("OnPlayerShootPlayer","iiff",i,playerid,(RL_phealth[playerid]-RL_HP),(RL_parmour[playerid]-RL_Armour));
                                                                        break;
                                                        }
                                                }
                                        }
                                }
                        }
                }

        }
        RL_Shooting[playerid]=false;
        RL_Released[playerid]=GetTickCount();







        if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT){
        if(grider[playerid][0]){
                DestroyObject(grider[playerid][0]);
                DestroyObject(grider[playerid][1]);
                DestroyObject(grider[playerid][2]);
                grider[playerid][0] = 0;
                }
    }
        if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_WASTED){
        if(grider[playerid][0]){
                DestroyObject(grider[playerid][0]);
                DestroyObject(grider[playerid][1]);
                DestroyObject(grider[playerid][2]);
                grider[playerid][0] = 0;
                }
    }
//




new vehicleid = GetPlayerVehicleID(playerid);
new vid = GetPlayerVehicleID(playerid);
    if (newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
    {
        new string[125];format(string,sizeof string,"~r~Fuel: %iL",fuel[vid]); //quickly doing a small update on fuel (so it wont jump from 100 to its real value)
        TextDrawSetString(td_fuel[playerid],string);
        TextDrawShowForPlayer(playerid,td_fuel[playerid]); //showing if an player is a driver or passenger of the ar
    } else {
        TextDrawHideForPlayer(playerid,td_fuel[playerid]); //hiding if a player isnt driving/or an passenger
    }
    
    
    
    
    
    
    
    
//
    if(newstate == PLAYER_STATE_DRIVER && oldstate == PLAYER_STATE_ONFOOT)
    {
    if(vehicleid == cargfc[1])
    {
			if (PlayerInfo[playerid][pGD] == 0)
			{
    new Float:shealth;
    new Float:slx, Float:sly, Float:slz;
    GetPlayerHealth(playerid, shealth);
    SetPlayerHealth(playerid, shealth-5);
    GetPlayerPos(playerid, slx, sly, slz);
	SetPlayerPos(playerid, slx, sly, slz+5);
    SendClientMessage(playerid, COLOR_GRAD2, "Трябва да влезеш на служба");
    }
    }


    if(vehicleid == cargfc[2])
    {
			if (PlayerInfo[playerid][pGD] == 0)
			{
    new Float:shealth;
    new Float:slx, Float:sly, Float:slz;
    GetPlayerHealth(playerid, shealth);
    SetPlayerHealth(playerid, shealth-5);
    GetPlayerPos(playerid, slx, sly, slz);
	SetPlayerPos(playerid, slx, sly, slz+5);
    SendClientMessage(playerid, COLOR_GRAD2, "Трябва да влезеш на служба");
    }
    }





    if(vehicleid == cargfc[3])
    {
			if (PlayerInfo[playerid][pGD] == 0)
			{
    new Float:shealth;
    new Float:slx, Float:sly, Float:slz;
    GetPlayerHealth(playerid, shealth);
    SetPlayerHealth(playerid, shealth-5);
    GetPlayerPos(playerid, slx, sly, slz);
	SetPlayerPos(playerid, slx, sly, slz+5);
    SendClientMessage(playerid, COLOR_GRAD2, "Трябва да влезеш на служба");
    }
    }
    
                if(vehicleid ==cargfc[4])
    {
			if (PlayerInfo[playerid][pGD] == 0)
			{
    new Float:shealth;
    new Float:slx, Float:sly, Float:slz;
    GetPlayerHealth(playerid, shealth);
    SetPlayerHealth(playerid, shealth-5);
    GetPlayerPos(playerid, slx, sly, slz);
	SetPlayerPos(playerid, slx, sly, slz+5);
    SendClientMessage(playerid, COLOR_GRAD2, "Трябва да влезеш на служба");
    }
    
    }
	}
    if(newstate == PLAYER_STATE_SPAWNED)
	{
		gPlayerSpawned[playerid] = 1;
	}
    if(newstate == PLAYER_STATE_DRIVER)
    {
    	GetPlayerWeaponData(playerid, 0, PlayerInfo[playerid][pGun0], pammo);
    	GetPlayerWeaponData(playerid, 1, PlayerInfo[playerid][pGun1], pammo);
    	GetPlayerWeaponData(playerid, 2, PlayerInfo[playerid][pGun2], pammo);
    	GetPlayerWeaponData(playerid, 3, PlayerInfo[playerid][pGun3], pammo);
    	GetPlayerWeaponData(playerid, 4, PlayerInfo[playerid][pGun4], pammo);
    	GetPlayerWeaponData(playerid, 5, PlayerInfo[playerid][pGun5], pammo);
    	GetPlayerWeaponData(playerid, 6, PlayerInfo[playerid][pGun6], pammo);
    	GetPlayerWeaponData(playerid, 7, PlayerInfo[playerid][pGun7], pammo);
    	GetPlayerWeaponData(playerid, 8, PlayerInfo[playerid][pGun8], pammo);
    	GetPlayerWeaponData(playerid, 9, PlayerInfo[playerid][pGun9], pammo);
    	GetPlayerWeaponData(playerid, 10, PlayerInfo[playerid][pGun10], pammo);
    	GetPlayerWeaponData(playerid, 11, PlayerInfo[playerid][pGun11], pammo);
    	GetPlayerWeaponData(playerid, 12, PlayerInfo[playerid][pGun12], pammo);
    	ResetPlayerWeapons(playerid);
	}
	
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ABcars[26] || GetPlayerVehicleID(playerid) == ABcars[25] || GetPlayerVehicleID(playerid) == ABcars[24] || GetPlayerVehicleID(playerid) == ABcars[23] || GetPlayerVehicleID(playerid) == ABcars[22] || GetPlayerVehicleID(playerid) == ABcars[21] || GetPlayerVehicleID(playerid) == ABcars[20] || GetPlayerVehicleID(playerid) == ABcars[19] || GetPlayerVehicleID(playerid) == ABcars[18])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_AsianBoyz)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Asian Boyz");
			}
		}
	}

	
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ABcars[27] || GetPlayerVehicleID(playerid) == ABcars[28] || GetPlayerVehicleID(playerid) == ABcars[29] || GetPlayerVehicleID(playerid) == ABcars[30] || GetPlayerVehicleID(playerid) == ABcars[31] || GetPlayerVehicleID(playerid) == ABcars[32] || GetPlayerVehicleID(playerid) == ABcars[33] || GetPlayerVehicleID(playerid) == ABcars[34] || GetPlayerVehicleID(playerid) == ABcars[35])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_AsianBoyz)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Asian Boyz");
			}
		}
	}
	
	
			if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ABcars[38] || GetPlayerVehicleID(playerid) == ABcars[39] || GetPlayerVehicleID(playerid) == ABcars[36] || GetPlayerVehicleID(playerid) == ABcars[37])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_AsianBoyz)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Asian Boyz");
			}
		}
	}
	
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[9] || GetPlayerVehicleID(playerid) == vcripzcars[15] || GetPlayerVehicleID(playerid) == vcripzcars[17])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Vinewood Cripz");
				return 1;
			}
				 		if(PlayerInfo[playerid][pRank] <= 2)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти трябва да си поне 3 Rank,за да караш това превозно средство");
			}
		}
	}
	
	
				if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ABcars[40] || GetPlayerVehicleID(playerid) == ABcars[41])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_AsianBoyz)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Asian Boyz");
				return 1;
			}
				 		if(PlayerInfo[playerid][pRank] <= 2)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти трябва да си поне 3 Rank,за да караш това превозно средство");
			}
		}
	}
	
	
	
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ABcars[42] || GetPlayerVehicleID(playerid) == ABcars[43])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_AsianBoyz)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Asian Boyz");
				return 1;
			}
				 		if(PlayerInfo[playerid][pRank] <= 3)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти трябва да си поне 4 Rank,за да караш това превозно средство");
			}
		}
	}
	
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ABcars[44] || GetPlayerVehicleID(playerid) == ABcars[45])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_AsianBoyz)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Asian Boyz");
				return 1;
			}
				 		if(PlayerInfo[playerid][pRank] == 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти трябва да си поне 2 Rank,за да караш това превозно средство");
			}
		}
	}
	
			if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == yakuzacars[1])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_YAKUZA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Yakuza");
			}
		}
	}
			if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == yakuzacars[9] || GetPlayerVehicleID(playerid) == yakuzacars[8] || GetPlayerVehicleID(playerid) == yakuzacars[7] || GetPlayerVehicleID(playerid) == yakuzacars[6] || GetPlayerVehicleID(playerid) == yakuzacars[5] || GetPlayerVehicleID(playerid) == yakuzacars[4] || GetPlayerVehicleID(playerid) == yakuzacars[3] || GetPlayerVehicleID(playerid) == yakuzacars[2])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_YAKUZA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Yakuza");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == Dpkcars[9] || GetPlayerVehicleID(playerid) == Dpkcars[8] || GetPlayerVehicleID(playerid) == Dpkcars[7] || GetPlayerVehicleID(playerid) == Dpkcars[6] || GetPlayerVehicleID(playerid) == Dpkcars[5] || GetPlayerVehicleID(playerid) == Dpkcars[4] || GetPlayerVehicleID(playerid) == Dpkcars[3] || GetPlayerVehicleID(playerid) == Dpkcars[2] || GetPlayerVehicleID(playerid) == Dpkcars[1])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_DPK)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Dark Professional Killers");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == Dpkcars[10] || GetPlayerVehicleID(playerid) == Dpkcars[11] || GetPlayerVehicleID(playerid) == Dpkcars[12] || GetPlayerVehicleID(playerid) == Dpkcars[13] || GetPlayerVehicleID(playerid) == Dpkcars[14] || GetPlayerVehicleID(playerid) == Dpkcars[15] || GetPlayerVehicleID(playerid) == Dpkcars[16] || GetPlayerVehicleID(playerid) == Dpkcars[17] || GetPlayerVehicleID(playerid) == Dpkcars[18])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_DPK)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Dark Professional Killers");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == Dpkcars[19] || GetPlayerVehicleID(playerid) == Dpkcars[20] || GetPlayerVehicleID(playerid) == Dpkcars[21] || GetPlayerVehicleID(playerid) == Dpkcars[22] || GetPlayerVehicleID(playerid) == Dpkcars[23] || GetPlayerVehicleID(playerid) == Dpkcars[24] || GetPlayerVehicleID(playerid) == Dpkcars[25] || GetPlayerVehicleID(playerid) == Dpkcars[26] || GetPlayerVehicleID(playerid) == Dpkcars[27])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_DPK)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Dark Professional Killers");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == Dpkcars[28] || GetPlayerVehicleID(playerid) == Dpkcars[29] || GetPlayerVehicleID(playerid) == Dpkcars[30] || GetPlayerVehicleID(playerid) == Dpkcars[31] || GetPlayerVehicleID(playerid) == Dpkcars[32] || GetPlayerVehicleID(playerid) == Dpkcars[33] || GetPlayerVehicleID(playerid) == Dpkcars[34] || GetPlayerVehicleID(playerid) == Dpkcars[35] || GetPlayerVehicleID(playerid) == Dpkcars[36])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_DPK)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Dark Professional Killers");
			}
		}
	}
				if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == yakuzacars[10] || GetPlayerVehicleID(playerid) == yakuzacars[11] || GetPlayerVehicleID(playerid) == yakuzacars[12] || GetPlayerVehicleID(playerid) == yakuzacars[13] || GetPlayerVehicleID(playerid) == yakuzacars[14] || GetPlayerVehicleID(playerid) == yakuzacars[15] || GetPlayerVehicleID(playerid) == yakuzacars[16] || GetPlayerVehicleID(playerid) == yakuzacars[17] || GetPlayerVehicleID(playerid) == yakuzacars[18])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_YAKUZA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Yakuza");
			}
		}
	}
			if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == Dpkcars[10] || GetPlayerVehicleID(playerid) == Dpkcars[11] || GetPlayerVehicleID(playerid) == Dpkcars[12] || GetPlayerVehicleID(playerid) == Dpkcars[13] || GetPlayerVehicleID(playerid) == Dpkcars[14] || GetPlayerVehicleID(playerid) == Dpkcars[15] || GetPlayerVehicleID(playerid) == Dpkcars[16] || GetPlayerVehicleID(playerid) == Dpkcars[17] || GetPlayerVehicleID(playerid) == Dpkcars[18])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_DPK)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Dark Professional Killers");
			}
		}
	}
				if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == Dpkcars[27] || GetPlayerVehicleID(playerid) == Dpkcars[26] || GetPlayerVehicleID(playerid) == Dpkcars[25] || GetPlayerVehicleID(playerid) == Dpkcars[24] || GetPlayerVehicleID(playerid) == Dpkcars[23] || GetPlayerVehicleID(playerid) == Dpkcars[22] || GetPlayerVehicleID(playerid) == Dpkcars[21] || GetPlayerVehicleID(playerid) == Dpkcars[20] || GetPlayerVehicleID(playerid) == Dpkcars[19])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_DPK)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				SetPlayerHealth(playerid, shealth-5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Dark Professional Killers");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ABcars[18] || GetPlayerVehicleID(playerid) == ABcars[17] || GetPlayerVehicleID(playerid) == ABcars[16] || GetPlayerVehicleID(playerid) == ABcars[15] || GetPlayerVehicleID(playerid) == ABcars[14] || GetPlayerVehicleID(playerid) == ABcars[13] || GetPlayerVehicleID(playerid) == ABcars[12] || GetPlayerVehicleID(playerid) == ABcars[11])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_AsianBoyz)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Asian Boyz");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ABcars[9] || GetPlayerVehicleID(playerid) == ABcars[8] || GetPlayerVehicleID(playerid) == ABcars[7] || GetPlayerVehicleID(playerid) == ABcars[6] || GetPlayerVehicleID(playerid) == ABcars[5] || GetPlayerVehicleID(playerid) == ABcars[4] || GetPlayerVehicleID(playerid) == ABcars[3] || GetPlayerVehicleID(playerid) == ABcars[2] || GetPlayerVehicleID(playerid) == ABcars[1])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_AsianBoyz)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Asian Boyz");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ABcars[9] || GetPlayerVehicleID(playerid) == ABcars[26] || GetPlayerVehicleID(playerid) == ABcars[25] || GetPlayerVehicleID(playerid) == ABcars[24] || GetPlayerVehicleID(playerid) == ABcars[23] || GetPlayerVehicleID(playerid) == ABcars[22] || GetPlayerVehicleID(playerid) == ABcars[21] || GetPlayerVehicleID(playerid) == ABcars[20] || GetPlayerVehicleID(playerid) == ABcars[19])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_AsianBoyz)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Asian Boyz");
			}
		}
	}	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == grovecars[42] || GetPlayerVehicleID(playerid) == grovecars[41] || GetPlayerVehicleID(playerid) == grovecars[40])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_GROVE)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Grove Street Families");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == grovecars[39] || GetPlayerVehicleID(playerid) == grovecars[38] || GetPlayerVehicleID(playerid) == grovecars[37] || GetPlayerVehicleID(playerid) == grovecars[36] || GetPlayerVehicleID(playerid) == grovecars[35] || GetPlayerVehicleID(playerid) == grovecars[34] || GetPlayerVehicleID(playerid) == grovecars[33] || GetPlayerVehicleID(playerid) == grovecars[32] || GetPlayerVehicleID(playerid) == grovecars[31] || GetPlayerVehicleID(playerid) == grovecars[30])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_GROVE)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Grove Street Families");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == grovecars[29] || GetPlayerVehicleID(playerid) == grovecars[28] || GetPlayerVehicleID(playerid) == grovecars[27] || GetPlayerVehicleID(playerid) == grovecars[26] || GetPlayerVehicleID(playerid) == grovecars[25] || GetPlayerVehicleID(playerid) == grovecars[24] || GetPlayerVehicleID(playerid) == grovecars[23] || GetPlayerVehicleID(playerid) == grovecars[22] || GetPlayerVehicleID(playerid) == grovecars[21] || GetPlayerVehicleID(playerid) == grovecars[20])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_GROVE)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Grove Street Families");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == grovecars[43] || GetPlayerVehicleID(playerid) == grovecars[44] || GetPlayerVehicleID(playerid) == grovecars[45] || GetPlayerVehicleID(playerid) == grovecars[46] || GetPlayerVehicleID(playerid) == grovecars[47] || GetPlayerVehicleID(playerid) == grovecars[48] || GetPlayerVehicleID(playerid) == grovecars[49] || GetPlayerVehicleID(playerid) == grovecars[50] || GetPlayerVehicleID(playerid) == grovecars[51] || GetPlayerVehicleID(playerid) == grovecars[52])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_GROVE)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Grove Street Families");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == grovecars[19] || GetPlayerVehicleID(playerid) == grovecars[18] || GetPlayerVehicleID(playerid) == grovecars[17] || GetPlayerVehicleID(playerid) == grovecars[16] || GetPlayerVehicleID(playerid) == grovecars[15] || GetPlayerVehicleID(playerid) == grovecars[14] || GetPlayerVehicleID(playerid) == grovecars[13] || GetPlayerVehicleID(playerid) == grovecars[55] || GetPlayerVehicleID(playerid) == grovecars[54] || GetPlayerVehicleID(playerid) == grovecars[53])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_GROVE)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Grove Street Families");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == carufo)
		{
	 		if(PlayerInfo[playerid][pCar10] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш това превозно средство");
			}
		}
	}
	
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == grovecars[9] || GetPlayerVehicleID(playerid) == grovecars[8] || GetPlayerVehicleID(playerid) == grovecars[7] || GetPlayerVehicleID(playerid) == grovecars[6] || GetPlayerVehicleID(playerid) == grovecars[5] || GetPlayerVehicleID(playerid) == grovecars[4] || GetPlayerVehicleID(playerid) == grovecars[3] || GetPlayerVehicleID(playerid) == grovecars[2] || GetPlayerVehicleID(playerid) == grovecars[1])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_GROVE)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Grove Street Families");
			}
		}
	}


	
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ballascars[12] || GetPlayerVehicleID(playerid) == ballascars[11] || GetPlayerVehicleID(playerid) == ballascars[10] || GetPlayerVehicleID(playerid) == ballascars[9] || GetPlayerVehicleID(playerid) == ballascars[8] || GetPlayerVehicleID(playerid) == ballascars[7] || GetPlayerVehicleID(playerid) == ballascars[6] || GetPlayerVehicleID(playerid) == ballascars[5] || GetPlayerVehicleID(playerid) == ballascars[4])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_BALLAS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Central Ballas");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ballascars[3] || GetPlayerVehicleID(playerid) == ballascars[2] || GetPlayerVehicleID(playerid) == ballascars[1] || GetPlayerVehicleID(playerid) == ballascars[0])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_BALLAS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Central Ballas");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ballascars[23] || GetPlayerVehicleID(playerid) == ballascars[22] || GetPlayerVehicleID(playerid) == ballascars[21] || GetPlayerVehicleID(playerid) == ballascars[20] || GetPlayerVehicleID(playerid) == ballascars[19] || GetPlayerVehicleID(playerid) == ballascars[18] || GetPlayerVehicleID(playerid) == ballascars[17] || GetPlayerVehicleID(playerid) == ballascars[16] || GetPlayerVehicleID(playerid) == ballascars[15] || GetPlayerVehicleID(playerid) == ballascars[14])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_BALLAS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Central Ballas");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ballascars[33] || GetPlayerVehicleID(playerid) == ballascars[32] || GetPlayerVehicleID(playerid) == ballascars[31] || GetPlayerVehicleID(playerid) == ballascars[30] || GetPlayerVehicleID(playerid) == ballascars[29] || GetPlayerVehicleID(playerid) == ballascars[28] || GetPlayerVehicleID(playerid) == ballascars[27] || GetPlayerVehicleID(playerid) == ballascars[26] || GetPlayerVehicleID(playerid) == ballascars[25] || GetPlayerVehicleID(playerid) == ballascars[24])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_BALLAS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Central Ballas");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ballascars[39] || GetPlayerVehicleID(playerid) == ballascars[38] || GetPlayerVehicleID(playerid) == ballascars[37] || GetPlayerVehicleID(playerid) == ballascars[36] || GetPlayerVehicleID(playerid) == ballascars[35] || GetPlayerVehicleID(playerid) == ballascars[34])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_BALLAS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Central Ballas");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == fbicars[13] || GetPlayerVehicleID(playerid) == fbicars[12] || GetPlayerVehicleID(playerid) == fbicars[11] || GetPlayerVehicleID(playerid) == fbicars[10] || GetPlayerVehicleID(playerid) == fbicars[9])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_FBI)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Federal Bureau Of Investigation");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == fbicars[8] || GetPlayerVehicleID(playerid) == fbicars[7] || GetPlayerVehicleID(playerid) == fbicars[6] || GetPlayerVehicleID(playerid) == fbicars[5] || GetPlayerVehicleID(playerid) == fbicars[4] || GetPlayerVehicleID(playerid) == fbicars[3] || GetPlayerVehicleID(playerid) == fbicars[2] || GetPlayerVehicleID(playerid) == fbicars[1])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_FBI)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Federal Bureau Of Investigation");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == rockcars[17] || GetPlayerVehicleID(playerid) == rockcars[16] || GetPlayerVehicleID(playerid) == rockcars[15] || GetPlayerVehicleID(playerid) == rockcars[14] || GetPlayerVehicleID(playerid) == rockcars[13] || GetPlayerVehicleID(playerid) == rockcars[12] || GetPlayerVehicleID(playerid) == rockcars[11] || GetPlayerVehicleID(playerid) == rockcars[10] || GetPlayerVehicleID(playerid) == rockcars[9])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_SoA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Sons of Anarchy");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == rockcars[8] || GetPlayerVehicleID(playerid) == rockcars[7] || GetPlayerVehicleID(playerid) == rockcars[6] || GetPlayerVehicleID(playerid) == rockcars[5] || GetPlayerVehicleID(playerid) == rockcars[4] || GetPlayerVehicleID(playerid) == rockcars[3] || GetPlayerVehicleID(playerid) == rockcars[2] || GetPlayerVehicleID(playerid) == rockcars[1])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_SoA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Sons of Anarchy");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == cbkcars[13] || GetPlayerVehicleID(playerid) == cbkcars[12] || GetPlayerVehicleID(playerid) == cbkcars[11] || GetPlayerVehicleID(playerid) == cbkcars[10] || GetPlayerVehicleID(playerid) == cbkcars[9] || GetPlayerVehicleID(playerid) == cbkcars[8] || GetPlayerVehicleID(playerid) == cbkcars[7])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_NZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Da Nang Boys");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == cbkcars[6] || GetPlayerVehicleID(playerid) == cbkcars[5] || GetPlayerVehicleID(playerid) == cbkcars[4] || GetPlayerVehicleID(playerid) == cbkcars[3] || GetPlayerVehicleID(playerid) == cbkcars[2] || GetPlayerVehicleID(playerid) == cbkcars[1])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_NZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Da Nang Boys");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == sbcars[1] || GetPlayerVehicleID(playerid) == sbcars[2] || GetPlayerVehicleID(playerid) == sbcars[3])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_Thugs)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Thug Life");
				return 1;
			}
			     		if(PlayerInfo[playerid][pRank] <= 3)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти трябва да си поне 4 Rank, за да караш това превозно средство");
			}
		}
	}
	
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == sbcars[4] || GetPlayerVehicleID(playerid) == sbcars[5] || GetPlayerVehicleID(playerid) == sbcars[6] || GetPlayerVehicleID(playerid) == sbcars[7] || GetPlayerVehicleID(playerid) == sbcars[8] || GetPlayerVehicleID(playerid) == sbcars[9] || GetPlayerVehicleID(playerid) == sbcars[10] || GetPlayerVehicleID(playerid) == sbcars[11] || GetPlayerVehicleID(playerid) == sbcars[12])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_Thugs)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Thug Life");
			}
		}
	}
	
	
	
			if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == sbcars[22] || GetPlayerVehicleID(playerid) == sbcars[21] || GetPlayerVehicleID(playerid) == sbcars[20] || GetPlayerVehicleID(playerid) == sbcars[19] || GetPlayerVehicleID(playerid) == sbcars[18] || GetPlayerVehicleID(playerid) == sbcars[17] || GetPlayerVehicleID(playerid) == sbcars[16] || GetPlayerVehicleID(playerid) == sbcars[15] || GetPlayerVehicleID(playerid) == sbcars[14] || GetPlayerVehicleID(playerid) == sbcars[13])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_Thugs)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Thug Life");
			}
		}
	}
	
	
	
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[11] || GetPlayerVehicleID(playerid) == vagoscars[10] || GetPlayerVehicleID(playerid) == vagoscars[9] || GetPlayerVehicleID(playerid) == vagoscars[8] || GetPlayerVehicleID(playerid) == vagoscars[7])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[12] || GetPlayerVehicleID(playerid) == vagoscars[13] || GetPlayerVehicleID(playerid) == vagoscars[14] || GetPlayerVehicleID(playerid) == vagoscars[15] || GetPlayerVehicleID(playerid) == vagoscars[16])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[17] || GetPlayerVehicleID(playerid) == vagoscars[18] || GetPlayerVehicleID(playerid) == vagoscars[19] || GetPlayerVehicleID(playerid) == vagoscars[20] || GetPlayerVehicleID(playerid) == vagoscars[21])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
//
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[18] || GetPlayerVehicleID(playerid) == vagoscars[19] || GetPlayerVehicleID(playerid) == vagoscars[20] || GetPlayerVehicleID(playerid) == vagoscars[20] || GetPlayerVehicleID(playerid) == vagoscars[21])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[17] || GetPlayerVehicleID(playerid) == vagoscars[18] || GetPlayerVehicleID(playerid) == vagoscars[19] || GetPlayerVehicleID(playerid) == vagoscars[20] || GetPlayerVehicleID(playerid) == vagoscars[21])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[26] || GetPlayerVehicleID(playerid) == vagoscars[25] || GetPlayerVehicleID(playerid) == vagoscars[24] || GetPlayerVehicleID(playerid) == vagoscars[23] || GetPlayerVehicleID(playerid) == vagoscars[22])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[27] || GetPlayerVehicleID(playerid) == vagoscars[28] || GetPlayerVehicleID(playerid) == vagoscars[29] || GetPlayerVehicleID(playerid) == vagoscars[30] || GetPlayerVehicleID(playerid) == vagoscars[31])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[36] || GetPlayerVehicleID(playerid) == vagoscars[35] || GetPlayerVehicleID(playerid) == vagoscars[34] || GetPlayerVehicleID(playerid) == vagoscars[33] || GetPlayerVehicleID(playerid) == vagoscars[32])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[37] || GetPlayerVehicleID(playerid) == vagoscars[38] || GetPlayerVehicleID(playerid) == vagoscars[39] || GetPlayerVehicleID(playerid) == vagoscars[40] || GetPlayerVehicleID(playerid) == vagoscars[41])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[46] || GetPlayerVehicleID(playerid) == vagoscars[45] || GetPlayerVehicleID(playerid) == vagoscars[44] || GetPlayerVehicleID(playerid) == vagoscars[43] || GetPlayerVehicleID(playerid) == vagoscars[42])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[47] || GetPlayerVehicleID(playerid) == vagoscars[48] || GetPlayerVehicleID(playerid) == vagoscars[49] || GetPlayerVehicleID(playerid) == vagoscars[50] || GetPlayerVehicleID(playerid) == vagoscars[51])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[56] || GetPlayerVehicleID(playerid) == vagoscars[55] || GetPlayerVehicleID(playerid) == vagoscars[54] || GetPlayerVehicleID(playerid) == vagoscars[53] || GetPlayerVehicleID(playerid) == vagoscars[52])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[57] || GetPlayerVehicleID(playerid) == vagoscars[58] || GetPlayerVehicleID(playerid) == vagoscars[59] || GetPlayerVehicleID(playerid) == vagoscars[60] || GetPlayerVehicleID(playerid) == vagoscars[61])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[66] || GetPlayerVehicleID(playerid) == vagoscars[65] || GetPlayerVehicleID(playerid) == vagoscars[64] || GetPlayerVehicleID(playerid) == vagoscars[63] || GetPlayerVehicleID(playerid) == vagoscars[62])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[67] || GetPlayerVehicleID(playerid) == vagoscars[68] || GetPlayerVehicleID(playerid) == vagoscars[69] || GetPlayerVehicleID(playerid) == vagoscars[70] || GetPlayerVehicleID(playerid) == vagoscars[71])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
//
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[6] || GetPlayerVehicleID(playerid) == vagoscars[5] || GetPlayerVehicleID(playerid) == vagoscars[4] || GetPlayerVehicleID(playerid) == vagoscars[3] || GetPlayerVehicleID(playerid) == vagoscars[2] || GetPlayerVehicleID(playerid) == vagoscars[1] || GetPlayerVehicleID(playerid) == vagoscars[0])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vipcars[17] || GetPlayerVehicleID(playerid) == vipcars[16] || GetPlayerVehicleID(playerid) == vipcars[15] || GetPlayerVehicleID(playerid) == vipcars[14] || GetPlayerVehicleID(playerid) == vipcars[13] || GetPlayerVehicleID(playerid) == vipcars[12])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VIP)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на VIP");
			}
		}
	}
//
//
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vagoscars[18] || GetPlayerVehicleID(playerid) == vagoscars[19] || GetPlayerVehicleID(playerid) == vagoscars[20] || GetPlayerVehicleID(playerid) == vagoscars[21] || GetPlayerVehicleID(playerid) == vagoscars[22] || GetPlayerVehicleID(playerid) == vagoscars[23] || GetPlayerVehicleID(playerid) == vagoscars[24])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VAGOS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Los Santos Vagos");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vipcars[25] || GetPlayerVehicleID(playerid) == vipcars[26] || GetPlayerVehicleID(playerid) == vipcars[27] || GetPlayerVehicleID(playerid) == vipcars[28] || GetPlayerVehicleID(playerid) == vipcars[29] || GetPlayerVehicleID(playerid) == vipcars[30] || GetPlayerVehicleID(playerid) == vipcars[31] || GetPlayerVehicleID(playerid) == vipcars[32] || GetPlayerVehicleID(playerid) == vipcars[33] || GetPlayerVehicleID(playerid) == vipcars[34])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VIP)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на VIP");
			}
		}
	}
//
//
//
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vipcars[11] || GetPlayerVehicleID(playerid) == vipcars[10] || GetPlayerVehicleID(playerid) == vipcars[9] || GetPlayerVehicleID(playerid) == vipcars[8] || GetPlayerVehicleID(playerid) == vipcars[7] || GetPlayerVehicleID(playerid) == vipcars[6] || GetPlayerVehicleID(playerid) == vipcars[5] || GetPlayerVehicleID(playerid) == vipcars[4])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VIP)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на VIP");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vipcars[3] || GetPlayerVehicleID(playerid) == vipcars[2] || GetPlayerVehicleID(playerid) == vipcars[1])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_VIP)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на VIP");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == latincars[13] || GetPlayerVehicleID(playerid) == latincars[12] || GetPlayerVehicleID(playerid) == latincars[11] || GetPlayerVehicleID(playerid) == latincars[10] || GetPlayerVehicleID(playerid) == latincars[9] || GetPlayerVehicleID(playerid) == latincars[8] || GetPlayerVehicleID(playerid) == latincars[7] || GetPlayerVehicleID(playerid) == latincars[6] || GetPlayerVehicleID(playerid) == latincars[5] || GetPlayerVehicleID(playerid) == latincars[4])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_LatinKing)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Latin King");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == latincars[3] || GetPlayerVehicleID(playerid) == latincars[2] || GetPlayerVehicleID(playerid) == latincars[1])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_LatinKing)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Latin King");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == azteccars[16] || GetPlayerVehicleID(playerid) == azteccars[15] || GetPlayerVehicleID(playerid) == azteccars[14] || GetPlayerVehicleID(playerid) == azteccars[13] || GetPlayerVehicleID(playerid) == azteccars[12] || GetPlayerVehicleID(playerid) == azteccars[11] || GetPlayerVehicleID(playerid) == azteccars[10] || GetPlayerVehicleID(playerid) == azteccars[9] || GetPlayerVehicleID(playerid) == azteccars[8])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_TRIADS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Varios Los Aztecas");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == azteccars[17] || GetPlayerVehicleID(playerid) == azteccars[18] || GetPlayerVehicleID(playerid) == azteccars[19] || GetPlayerVehicleID(playerid) == azteccars[20] || GetPlayerVehicleID(playerid) == azteccars[21] || GetPlayerVehicleID(playerid) == azteccars[22] || GetPlayerVehicleID(playerid) == azteccars[23] || GetPlayerVehicleID(playerid) == azteccars[24] || GetPlayerVehicleID(playerid) == azteccars[25])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_TRIADS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Varios Los Aztecas");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == azteccars[7] || GetPlayerVehicleID(playerid) == azteccars[6] || GetPlayerVehicleID(playerid) == azteccars[5] || GetPlayerVehicleID(playerid) == azteccars[4] || GetPlayerVehicleID(playerid) == azteccars[3] || GetPlayerVehicleID(playerid) == azteccars[2] || GetPlayerVehicleID(playerid) == azteccars[1])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_TRIADS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Varios Los Aztecas");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ecoastcars[11] || GetPlayerVehicleID(playerid) == ecoastcars[10] || GetPlayerVehicleID(playerid) == ecoastcars[9] || GetPlayerVehicleID(playerid) == ecoastcars[8] || GetPlayerVehicleID(playerid) == ecoastcars[7] || GetPlayerVehicleID(playerid) == ecoastcars[6] || GetPlayerVehicleID(playerid) == ecoastcars[5] || GetPlayerVehicleID(playerid) == ecoastcars[4])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_MS13)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Mara Salvatrucha 13");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == ecoastcars[3] || GetPlayerVehicleID(playerid) == ecoastcars[2] || GetPlayerVehicleID(playerid) == ecoastcars[1])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_MS13)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Mara Salvatrucha 13");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[13] || GetPlayerVehicleID(playerid) == vcripzcars[12] || GetPlayerVehicleID(playerid) == vcripzcars[11] || GetPlayerVehicleID(playerid) == vcripzcars[10] || GetPlayerVehicleID(playerid) == vcripzcars[8] || GetPlayerVehicleID(playerid) == vcripzcars[7])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Това превозно средство принадлежи на Vinewood Cripz");
			}
		}
	}
	
	
	
	
	
	
	
	
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[21] || GetPlayerVehicleID(playerid) == vcripzcars[22] || GetPlayerVehicleID(playerid) == vcripzcars[23] || GetPlayerVehicleID(playerid) == vcripzcars[24] || GetPlayerVehicleID(playerid) == vcripzcars[25] || GetPlayerVehicleID(playerid) == vcripzcars[26])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Това превозно средство принадлежи на Vinewood Cripz");
			}
		}
	}
	
	
	
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[27] || GetPlayerVehicleID(playerid) == vcripzcars[28] || GetPlayerVehicleID(playerid) == vcripzcars[29] || GetPlayerVehicleID(playerid) == vcripzcars[30] || GetPlayerVehicleID(playerid) == vcripzcars[31] || GetPlayerVehicleID(playerid) == vcripzcars[32])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Това превозно средство принадлежи на Vinewood Cripz");
			}
		}
	}
	
	
			if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[38] || GetPlayerVehicleID(playerid) == vcripzcars[37] || GetPlayerVehicleID(playerid) == vcripzcars[36] || GetPlayerVehicleID(playerid) == vcripzcars[35] || GetPlayerVehicleID(playerid) == vcripzcars[34] || GetPlayerVehicleID(playerid) == vcripzcars[33])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Това превозно средство принадлежи на Vinewood Cripz");
			}
		}
	}
	
	
	
			if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[39] || GetPlayerVehicleID(playerid) == vcripzcars[40] || GetPlayerVehicleID(playerid) == vcripzcars[41] || GetPlayerVehicleID(playerid) == vcripzcars[42] || GetPlayerVehicleID(playerid) == vcripzcars[43] || GetPlayerVehicleID(playerid) == vcripzcars[44])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Това превозно средство принадлежи на Vinewood Cripz");
			}
		}
	}
	
	
	
			if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[45] || GetPlayerVehicleID(playerid) == vcripzcars[46] || GetPlayerVehicleID(playerid) == vcripzcars[47] || GetPlayerVehicleID(playerid) == vcripzcars[48] || GetPlayerVehicleID(playerid) == vcripzcars[49] || GetPlayerVehicleID(playerid) == vcripzcars[50])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Това превозно средство принадлежи на Vinewood Cripz");
			}
		}
	}
	
	
	
	
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[33] || GetPlayerVehicleID(playerid) == vcripzcars[34] || GetPlayerVehicleID(playerid) == vcripzcars[35] || GetPlayerVehicleID(playerid) == vcripzcars[36] || GetPlayerVehicleID(playerid) == vcripzcars[37] || GetPlayerVehicleID(playerid) == vcripzcars[38])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Това превозно средство принадлежи на Vinewood Cripz");
			}
		}
	}
	
	
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[14] || GetPlayerVehicleID(playerid) == vcripzcars[16] || GetPlayerVehicleID(playerid) == vcripzcars[18] || GetPlayerVehicleID(playerid) == vcripzcars[19] || GetPlayerVehicleID(playerid) == vcripzcars[20])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Това превозно средство принадлежи на Vinewood Cripz");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[6] || GetPlayerVehicleID(playerid) == vcripzcars[5] || GetPlayerVehicleID(playerid) == vcripzcars[4] || GetPlayerVehicleID(playerid) == vcripzcars[3] || GetPlayerVehicleID(playerid) == vcripzcars[2] || GetPlayerVehicleID(playerid) == vcripzcars[1] || GetPlayerVehicleID(playerid) == vcripzcars[0])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Vinewood Cripz");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == vcripzcars[14] || GetPlayerVehicleID(playerid) == vcripzcars[15] || GetPlayerVehicleID(playerid) == vcripzcars[16] || GetPlayerVehicleID(playerid) == vcripzcars[17])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_CRIPZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Vinewood Cripz");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == boyzcars[15] || GetPlayerVehicleID(playerid) == boyzcars[14] || GetPlayerVehicleID(playerid) == boyzcars[13] || GetPlayerVehicleID(playerid) == boyzcars[12] || GetPlayerVehicleID(playerid) == boyzcars[11] || GetPlayerVehicleID(playerid) == boyzcars[10] || GetPlayerVehicleID(playerid) == boyzcars[9])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_BOYZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Boyz N The Hood");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == boyzcars[8] || GetPlayerVehicleID(playerid) == boyzcars[7] || GetPlayerVehicleID(playerid) == boyzcars[6] || GetPlayerVehicleID(playerid) == boyzcars[5] || GetPlayerVehicleID(playerid) == boyzcars[4] || GetPlayerVehicleID(playerid) == boyzcars[3] || GetPlayerVehicleID(playerid) == boyzcars[2] || GetPlayerVehicleID(playerid) == boyzcars[1])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_BOYZ)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Boyz N The Hood");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == atcars[11] || GetPlayerVehicleID(playerid) == atcars[10] || GetPlayerVehicleID(playerid) == atcars[9] || GetPlayerVehicleID(playerid) == atcars[8] || GetPlayerVehicleID(playerid) == atcars[7] || GetPlayerVehicleID(playerid) == atcars[6] || GetPlayerVehicleID(playerid) == atcars[5] || GetPlayerVehicleID(playerid) == atcars[4] || GetPlayerVehicleID(playerid) == atcars[3] || GetPlayerVehicleID(playerid) == atcars[2] || GetPlayerVehicleID(playerid) == atcars[1])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_ZETAS)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Black Mafia");
			}
		}
	}

	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == killazcars[11] || GetPlayerVehicleID(playerid) == killazcars[10] || GetPlayerVehicleID(playerid) == killazcars[9] || GetPlayerVehicleID(playerid) == killazcars[8] || GetPlayerVehicleID(playerid) == killazcars[7] || GetPlayerVehicleID(playerid) == killazcars[6] || GetPlayerVehicleID(playerid) == killazcars[5] || GetPlayerVehicleID(playerid) == killazcars[4] || GetPlayerVehicleID(playerid) == killazcars[3])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_BulgarianMafia)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Bulgarian Mafia");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == killazcars[2] || GetPlayerVehicleID(playerid) == killazcars[1])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_BulgarianMafia)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Bulgarian Mafia");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == killazcars[21] || GetPlayerVehicleID(playerid) == killazcars[20] || GetPlayerVehicleID(playerid) == killazcars[19] || GetPlayerVehicleID(playerid) == killazcars[18] || GetPlayerVehicleID(playerid) == killazcars[17] || GetPlayerVehicleID(playerid) == killazcars[16] || GetPlayerVehicleID(playerid) == killazcars[15] || GetPlayerVehicleID(playerid) == killazcars[14] || GetPlayerVehicleID(playerid) == killazcars[13] || GetPlayerVehicleID(playerid) == killazcars[12])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_BulgarianMafia)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Bulgarian Mafia");
			}
		}
    }
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == rifacars[15] || GetPlayerVehicleID(playerid) == rifacars[16] || GetPlayerVehicleID(playerid) == rifacars[13] || GetPlayerVehicleID(playerid) == rifacars[12] || GetPlayerVehicleID(playerid) == rifacars[11] || GetPlayerVehicleID(playerid) == rifacars[10] || GetPlayerVehicleID(playerid) == rifacars[9] || GetPlayerVehicleID(playerid) == rifacars[8] || GetPlayerVehicleID(playerid) == rifacars[7] || GetPlayerVehicleID(playerid) == rifacars[6])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_RIFA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на San Fierro Rifa");
			}
		}
	}
		if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == rifacars[5] || GetPlayerVehicleID(playerid) == rifacars[4] || GetPlayerVehicleID(playerid) == rifacars[3] || GetPlayerVehicleID(playerid) == rifacars[2] || GetPlayerVehicleID(playerid) == rifacars[1])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_RIFA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на San Fierro Rifa");
			}
		}
	}
	


		 		
			if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[1] || GetPlayerVehicleID(playerid) == gpcars[2] || GetPlayerVehicleID(playerid) == gpcars[3]  || GetPlayerVehicleID(playerid) == gpcars[4]  || GetPlayerVehicleID(playerid) == gpcars[5] || GetPlayerVehicleID(playerid) == gpcars[6] || GetPlayerVehicleID(playerid) == gpcars[7] || GetPlayerVehicleID(playerid) == gpcars[8] || GetPlayerVehicleID(playerid) == gpcars[9] || GetPlayerVehicleID(playerid) == gpcars[10])
		{
				 		if(OnDuty[playerid] == 1)
		{
			      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си цивилен полицай,за да можеш да караш това превозно средство");
		}
	 		if(PlayerInfo[playerid][pMember] != TEAM_GPD)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			}
		}
	}
	
	
	//*** GPD CARS ***
	
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[20] || GetPlayerVehicleID(playerid) == gpcars[19] || GetPlayerVehicleID(playerid) == gpcars[18]  || GetPlayerVehicleID(playerid) == gpcars[17]  || GetPlayerVehicleID(playerid) == gpcars[16] || GetPlayerVehicleID(playerid) == gpcars[15] || GetPlayerVehicleID(playerid) == gpcars[14] || GetPlayerVehicleID(playerid) == gpcars[13] || GetPlayerVehicleID(playerid) == gpcars[12] || GetPlayerVehicleID(playerid) == gpcars[11])
		{
	 		if(OnDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си на смяна,за да караш това превозно средство");
			}
		}
	}
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[21] || GetPlayerVehicleID(playerid) == gpcars[22] || GetPlayerVehicleID(playerid) == gpcars[23]  || GetPlayerVehicleID(playerid) == gpcars[24]  || GetPlayerVehicleID(playerid) == gpcars[25] || GetPlayerVehicleID(playerid) == gpcars[26] || GetPlayerVehicleID(playerid) == gpcars[27] || GetPlayerVehicleID(playerid) == gpcars[28] || GetPlayerVehicleID(playerid) == gpcars[29] || GetPlayerVehicleID(playerid) == gpcars[30])
		{
	 		if(OnDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
								SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си на смяна,за да караш това превозно средство");
			}
		}
	}

	 
	 
	 					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[83])
		{
	 		if(OnDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
								SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си на смяна,за да караш това превозно средство");
			}
		}
	}
	 
	 
	 
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[31] || GetPlayerVehicleID(playerid) == gpcars[32] || GetPlayerVehicleID(playerid) == gpcars[33]  || GetPlayerVehicleID(playerid) == gpcars[34]  || GetPlayerVehicleID(playerid) == gpcars[35] || GetPlayerVehicleID(playerid) == gpcars[36] || GetPlayerVehicleID(playerid) == gpcars[37] || GetPlayerVehicleID(playerid) == gpcars[38] || GetPlayerVehicleID(playerid) == gpcars[39] || GetPlayerVehicleID(playerid) == gpcars[40])
		{
	 		if(OnDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
								SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си на смяна,за да караш това превозно средство");
			}
		}
	}
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[41] || GetPlayerVehicleID(playerid) == gpcars[42] || GetPlayerVehicleID(playerid) == gpcars[43]  || GetPlayerVehicleID(playerid) == gpcars[44]  || GetPlayerVehicleID(playerid) == gpcars[45] || GetPlayerVehicleID(playerid) == gpcars[46] || GetPlayerVehicleID(playerid) == gpcars[47] || GetPlayerVehicleID(playerid) == gpcars[48] || GetPlayerVehicleID(playerid) == gpcars[49] || GetPlayerVehicleID(playerid) == gpcars[50])
		{
	 		if(OnDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
								SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си на смяна,за да караш това превозно средство");
			}
		}
	}
	
	
	
	
	
	
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[1] || GetPlayerVehicleID(playerid) == dfcars[2] || GetPlayerVehicleID(playerid) == dfcars[3] || GetPlayerVehicleID(playerid) == dfcars[4] || GetPlayerVehicleID(playerid) == dfcars[5] || GetPlayerVehicleID(playerid) == dfcars[6])
		{
	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средство");
			}
		}
	}



					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[7] || GetPlayerVehicleID(playerid) == dfcars[8] || GetPlayerVehicleID(playerid) == dfcars[9] || GetPlayerVehicleID(playerid) == dfcars[10] || GetPlayerVehicleID(playerid) == dfcars[11] || GetPlayerVehicleID(playerid) == dfcars[12])
		{
	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средствоо");
			}
		}
	}

					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[13] || GetPlayerVehicleID(playerid) == dfcars[14] || GetPlayerVehicleID(playerid) == dfcars[15] || GetPlayerVehicleID(playerid) == dfcars[16] || GetPlayerVehicleID(playerid) == dfcars[17] || GetPlayerVehicleID(playerid) == dfcars[18])
		{
	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средствоо");
			}
		}
	}






					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[19] || GetPlayerVehicleID(playerid) == dfcars[20] || GetPlayerVehicleID(playerid) == dfcars[21] || GetPlayerVehicleID(playerid) == dfcars[22] || GetPlayerVehicleID(playerid) == dfcars[23] || GetPlayerVehicleID(playerid) == dfcars[24])
		{
	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средствоо");
			}
		}
	}



					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[25] || GetPlayerVehicleID(playerid) == dfcars[26] || GetPlayerVehicleID(playerid) == dfcars[27] || GetPlayerVehicleID(playerid) == dfcars[28] || GetPlayerVehicleID(playerid) == dfcars[29] || GetPlayerVehicleID(playerid) == dfcars[30])
		{
	 	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средствоо");
			}
		}
	}




					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[31] || GetPlayerVehicleID(playerid) == dfcars[32] || GetPlayerVehicleID(playerid) == dfcars[33] || GetPlayerVehicleID(playerid) == dfcars[34] || GetPlayerVehicleID(playerid) == dfcars[35] || GetPlayerVehicleID(playerid) == dfcars[36])
		{
	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средствоо");
			}
		}
	}



					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[37] || GetPlayerVehicleID(playerid) == dfcars[38] || GetPlayerVehicleID(playerid) == dfcars[39] || GetPlayerVehicleID(playerid) == dfcars[40] || GetPlayerVehicleID(playerid) == dfcars[41] || GetPlayerVehicleID(playerid) == dfcars[42])
		{
	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средствоо");
			}
		}
	}



					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[43] || GetPlayerVehicleID(playerid) == dfcars[44] || GetPlayerVehicleID(playerid) == dfcars[45] || GetPlayerVehicleID(playerid) == dfcars[46] || GetPlayerVehicleID(playerid) == dfcars[47] || GetPlayerVehicleID(playerid) == dfcars[48])
		{
	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средствоо");
			}
		}
	}

					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[49] || GetPlayerVehicleID(playerid) == dfcars[50] || GetPlayerVehicleID(playerid) == dfcars[51] || GetPlayerVehicleID(playerid) == dfcars[52] || GetPlayerVehicleID(playerid) == dfcars[53] || GetPlayerVehicleID(playerid) == dfcars[54])
		{
	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средствоо");
			}
		}
	}


					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == dfcars[55] || GetPlayerVehicleID(playerid) == dfcars[56] || GetPlayerVehicleID(playerid) == dfcars[57] || GetPlayerVehicleID(playerid) == dfcars[58] || GetPlayerVehicleID(playerid) == dfcars[59] || GetPlayerVehicleID(playerid) == dfcars[60])
		{
	 		if(DFDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Трябва си на DF смяна за да караш това превозно средствоо");
			}
		}
	}
	
	
	
	
	
	
	
	
	
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[51] || GetPlayerVehicleID(playerid) == gpcars[52] || GetPlayerVehicleID(playerid) == gpcars[53]  || GetPlayerVehicleID(playerid) == gpcars[54]  || GetPlayerVehicleID(playerid) == gpcars[55] || GetPlayerVehicleID(playerid) == gpcars[56] || GetPlayerVehicleID(playerid) == gpcars[57] || GetPlayerVehicleID(playerid) == gpcars[58] || GetPlayerVehicleID(playerid) == gpcars[59] || GetPlayerVehicleID(playerid) == gpcars[60])
		{
	 		if(OnDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
								SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си на смяна,за да караш това превозно средство");
			}
		}
	}
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[61] || GetPlayerVehicleID(playerid) == gpcars[62] || GetPlayerVehicleID(playerid) == gpcars[63]  || GetPlayerVehicleID(playerid) == gpcars[64]  || GetPlayerVehicleID(playerid) == gpcars[65] || GetPlayerVehicleID(playerid) == gpcars[66] || GetPlayerVehicleID(playerid) == gpcars[67] || GetPlayerVehicleID(playerid) == gpcars[68] || GetPlayerVehicleID(playerid) == gpcars[69] || GetPlayerVehicleID(playerid) == gpcars[70])
		{
	 		if(OnDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
								SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си на смяна,за да караш това превозно средство");
			}
		}
	}
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[80])
		{
	 		if(OnDuty[playerid] == 0)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
								SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си на смяна,за да караш това превозно средство");
			}
		}
	}
					if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == gpcars[82] || GetPlayerVehicleID(playerid) == gpcars[81])
		{
	 		if(OnDuty[playerid] != 1)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
								SendClientMessage(playerid,COLOR_GRAD1, "Трябва да си на смяна,за да караш това превозно средство");
			}
		}
	}
	
	
	
		if(newstate == PLAYER_STATE_PASSENGER && newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == rifacars[15])
		{
	 		if(PlayerInfo[playerid][pMember] == TEAM_RIFA)
	   		{
    SetPlayerVirtualWorld(playerid, 1);
			}
		}
	}


					
			if(newstate == PLAYER_STATE_DRIVER)//2
    {
		if(GetPlayerVehicleID(playerid) == rifacars[22] || GetPlayerVehicleID(playerid) == rifacars[23] || GetPlayerVehicleID(playerid) == rifacars[24] || GetPlayerVehicleID(playerid) == rifacars[25]  || GetPlayerVehicleID(playerid) == rifacars[26])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_RIFA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на San Fierro Rifa");
			}
		}
	}





			if(newstate == PLAYER_STATE_DRIVER)//2
    {
		if(GetPlayerVehicleID(playerid) == rifacars[17] || GetPlayerVehicleID(playerid) == rifacars[18] || GetPlayerVehicleID(playerid) == rifacars[19] || GetPlayerVehicleID(playerid) == rifacars[20] || GetPlayerVehicleID(playerid) == rifacars[21] || GetPlayerVehicleID(playerid) == rifacars[22])
		{
	 		if(PlayerInfo[playerid][pMember] != TEAM_RIFA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на San Fierro Rifa");
			}
		}
	}
	if(newstate == PLAYER_STATE_DRIVER)
    {
		if(GetPlayerVehicleID(playerid) == rockcars[22] || GetPlayerVehicleID(playerid) == rockcars[21] || GetPlayerVehicleID(playerid) == rockcars[20] || GetPlayerVehicleID(playerid) == rockcars[19] || GetPlayerVehicleID(playerid) == rockcars[18])
		{
     		if(PlayerInfo[playerid][pMember] != TEAM_SoA)
	   		{
	      		new Float:shealth;
				new Float:slx, Float:sly, Float:slz;
	   			GetPlayerHealth(playerid, shealth);
				SetPlayerHealth(playerid, shealth-5);
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+5);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+5);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не можеш да караш превозните средства на Sons of Anarchy");
			}
		}
	}
	if(oldstate == PLAYER_STATE_DRIVER)
	{
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun0]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun1]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun2]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun3]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun4]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun5]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun6]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun7]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun8]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun9]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun10]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun11]);
	    GivePlayerGun(playerid, PlayerInfo[playerid][pGun12]);
	}
//
//
//
	if(newstate == PLAYER_STATE_WASTED)
	{
		if(WantedLevel[playerid] >= 1)
		{
		    new price = WantedLevel[playerid] * 4000;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pMember] == TEAM_GPD && CrimInRange(30.0, playerid,i) && OnDuty[playerid] >= 1)
				    {
						count = 1;
						GivePlayerCash(i, price / 2);
						PlayerPlaySound(i, 1058, 0.0, 0.0, 0.0);
					}
				}
			}
			if(count == 1)
			{
				GivePlayerCash(playerid, - price);
				PlayerInfo[playerid][pWantedDeaths] += 1;
				PlayerInfo[playerid][pJailed] = 1;
			    PlayerInfo[playerid][pJailTime] = (WantedLevel[playerid])*(10);
                SetPlayerWantedLevel(playerid, GetPlayerWantedLevel(playerid) - 6);
			    WantedPoints[playerid] = 0;
				WantedLevel[playerid] = 0;
				SetPlayerSpawn(playerid);

           }
       }
  }
	return 1;
}
//==============================[guns]==========================================
public OnPlayerPickUpPickup(playerid, pickupid)
{
    for(new i = 0; i < MAX_PLAYERS; i++)
    {
        if(pickupid == gPickupID[i])
        {
	        GivePlayerGun(playerid, gDropPickup[i]);
	        DestroyPickup(gPickupID[i]);
	    }
	}
	if(pickupid == hp10)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_GROVE)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_GROVE)
	    SetPlayerArmour(playerid, 100);
	}
		if(pickupid == hp22)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_BulgarianMafia)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_BulgarianMafia)
	    SetPlayerArmour(playerid, 100);
	}
			if(pickupid == hp23)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_GPD)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_GPD)
	    SetPlayerArmour(playerid, 100);
	}
				if(pickupid == hp24)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_FBI)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_FBI)
	    SetPlayerArmour(playerid, 100);
	}
	
					if(pickupid == hp25)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_LatinKing)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_LatinKing)
	    SetPlayerArmour(playerid, 100);
	}
	
	
		if(pickupid == hp21)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_BOYZ)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_BOYZ)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp11)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp13)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_Thugs)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_Thugs)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp12)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_RIFA)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_RIFA)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp14)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_VAGOS)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_VAGOS)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp1)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_GROVE)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_GROVE)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp2)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_NZ)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_NZ)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp3)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_SoA)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_SoA)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp5)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_MS13)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_MS13)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp6)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_FBI)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_FBI)
	    SetPlayerArmour(playerid, 100);
	}
	if(pickupid == hp7)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_Thugs)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_Thugs)
	    SetPlayerArmour(playerid, 100);
	}
		if(pickupid == hp8)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_BALLAS)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_BALLAS)
	    SetPlayerArmour(playerid, 100);
	}
			if(pickupid == hp9)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA)
	    SetPlayerArmour(playerid, 100);
	}
			if(pickupid == hp20)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_ZETAS)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_ZETAS)
	    SetPlayerArmour(playerid, 100);
	}
			if(pickupid == hp16)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_BALLAS)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_BALLAS)
	    SetPlayerArmour(playerid, 100);
	}
			if(pickupid == hp16)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_GPD)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_GPD)
	    SetPlayerArmour(playerid, 100);
	}
			if(pickupid == hp15)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz)
	    SetPlayerArmour(playerid, 100);
	}
			if(pickupid == hp19)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_TRIADS)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_TRIADS)
	    SetPlayerArmour(playerid, 100);
	}
			if(pickupid == hp18)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_NZ)
	    SetPlayerHealth(playerid, 100);
	    if(PlayerInfo[playerid][pMember] == TEAM_NZ)
	    SetPlayerArmour(playerid, 100);
	}
		if(pickupid == PRES1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES3)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES4)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES5)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES6)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES7)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES8)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES9)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES10)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	//20
			if(pickupid == PRES11)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRESBX1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRESLX1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRESBX)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRESLX)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES12)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES12X)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRESL)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES13)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES14)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES15)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES16)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES17)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES18)
	{
    GameTextForPlayer(playerid, "~g~LOS SANTOS BANK ~n~~w~/bank /transfer", 2000, 3);
    return 1;
	}
	if(pickupid == RPRES18)
	{
    GameTextForPlayer(playerid, "~g~LAS VENTURAS BANK ~n~~w~/bank /transfer", 2000, 3);
    return 1;
	}
	if(pickupid == LPRES18)
	{
    GameTextForPlayer(playerid, "~g~SAN FIERRO BANK ~n~~w~/bank /transfer", 2000, 3);
    return 1;
	}
			if(pickupid == PRES19)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == PRES20)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	//---------------------------[30]-------------------------------------------
				if(pickupid == PRES21)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES22)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES24)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES25)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES26)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES27)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES28)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES29)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES30)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRES31)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRES32)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == PRESA1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRESA2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	//---------------------------[40]-------------------------------------------
	//---------------------------[40]-------------------------------------------
	//---------------------------[40]-------------------------------------------
				if(pickupid == PRES33)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES34)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES35)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES36)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES37)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES38)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES39)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES40)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES41)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == PRES42)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRES43)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRES44)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
//------------------------[DPRES]-----------------------------------------------
				if(pickupid == PRES45)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRES46)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRES47)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRES48)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRES51)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRES52)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
//------------------------[DPRES]-----------------------------------------------
//------------------------[DPRES]-----------------------------------------------
//------------------------[DPRES]-----------------------------------------------
//------------------------[DPRES]-----------------------------------------------
		if(pickupid == DPRES1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES3)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES4)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES5)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES6)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES7)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES8)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == OPRES)
	{
    GameTextForPlayer(playerid, "~r~USE ~w~/BUYOFFICE FROM 1 TO 20~n~~n~~b~/OFFICEHELP FROM 1 TO 20~n~/OFFICEINFO", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES9)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES10)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	//20
			if(pickupid == DPRES11)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES12)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == GPRESDRF2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES13)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES14)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES15)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES16)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	//gp1
						if(pickupid == GPPRES16)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == GPPRES17)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == GPPRES15)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == GPPRES7)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == GPPRES8)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == GPPRES11)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == GPPRES12)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
								if(pickupid == BPRES2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
								if(pickupid == BPRES1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == GPPRES13)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == GPPRES14)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == GPPRES9)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == GPPRES10)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == GPPRES6)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	
						if(pickupid == GPPRES11)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == GPPRES12)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == IKONKA2)
	{
    if(PlayerInfo[playerid][pFlakche1] == 1)
    {
    	                new string[256];
    PlayerInfo[playerid][pFlakche1] = 0;
    RemovePlayerAttachedObject(playerid, 6);
    RedPoints += 1;
    vzetflag1 = 0;
	vzetflag2 = 0;
	format(string, sizeof(string), "Capture The Flag:%s достави флага на синият отбор",PlayerName(playerid));
    SendClientMessageToAll(0xFF4500FF,string);
    flag3 = CreateObject(2914, -976.5959,1045.8835,1352.6603, 0.000000, 0.000000, 88.399978);
    if(RedPoints == 3)
    {
        new string2[256];
    format(string2, sizeof(string2), "Capture The Flag:Червеният спечели");
    SendClientMessageToAll(0xFF4500FF, string2);
     	        for(new i; i<MAX_PLAYERS; i++)
			{
    		new rr;
    		PlayerInfo[playerid][pRedCTF] = 0;
    		PlayerInfo[playerid][pBlueCTF] = 0;
			PlayerInfo[playerid][pInCTF] = 0;
 		    PlayerInfo[i][pRedCTF] = 0;
    		PlayerInfo[i][pBlueCTF] = 0;
			PlayerInfo[i][pInCTF] = 0;
 		    PlayerInfo[rr][pRedCTF] = 0;
    		PlayerInfo[rr][pBlueCTF] = 0;
			PlayerInfo[rr][pInCTF] = 0;
			PlayerInfo[i][pInCTF] = 0;
			PlayerInfo[rr][pInCTF] = 0;
    startctf = 0;
			PlayerInfo[playerid][pInCTF] = 0;
			PlayerInfo[i][pInCTF] = 0;
			PlayerInfo[rr][pInCTF] = 0;
			    GameTextForPlayer(i, "~r~+1 Red Point", 2000, 3);
	                PlayerInfo[i][pFlakche1] = 0;
	                PlayerInfo[i][pFlakche2] = 0;
	                vzetflag1 = 0;
	                vzetflag2 = 0;
	                SetPlayerHealth(i,0);
	                ctfred = 1;
	                ctfblue = 0;
	                ctfp = 0;
	                ctfpl = 0;
	                PlayerInfo[i][pCTFTimer] = 0;
	                TextDrawHideForPlayer(i, Text4[i]);
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pBlueCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
				    BluePoints = 0;
				    RedPoints = 0;
				    ctfred = 0;
	                ctfp = 0;
	                ctfpl = 0;
	                MoveObject(ctfp110, -1124.956176, 1057.738769, 1346.458496, 44);
MoveObject(ctfp111, -1124.169433, 1046.195068, 1346.458496, 44);
MoveObject(ctfp112, -1123.388671, 1034.741821, 1346.458496, 44);
MoveObject(ctfp113, -1122.601074, 1023.188293, 1346.458496, 44);
MoveObject(ctfp114, -1125.739624, 1069.221679, 1346.458496, 44);
MoveObject(ctfp115, -1125.479858, 1080.794433, 1346.458496, 44);
MoveObject(ctfp116, -1124.460449, 1092.237915, 1346.458496, 44);
MoveObject(ctfp117, -1123.437988, 1103.711791, 1346.458496, 44);
MoveObject(ctfp118, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp119, -980.092773, 1072.358398, 1346.458496, 44);
MoveObject(ctfp200, -979.771911, 1083.853515, 1346.458496, 44);
MoveObject(ctfp201,  -979.451599, 1095.319580, 1346.458496, 44);
MoveObject(ctfp202, -980.579956, 1049.202636, 1346.458496, 44);
MoveObject(ctfp203, -980.898925, 1037.786254, 1346.458496, 44);
MoveObject(ctfp204, -981.540344, 1014.825073, 1346.458496, 44);
MoveObject(ctfp205, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp206, -981.218750, 1026.340332, 1346.458496, 44);
    if(PlayerInfo[i][pRedCTF] == 1)
{
	                format(string, sizeof(string), "Ти получаваш:4EP и $1000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 4;
		            PlayerInfo[i][pAccount] += 1000;
}
ctfred = 1;

    }
    }
    }
    return 1;
	}

					if(pickupid == IKONKA1)
	{
    if(PlayerInfo[playerid][pFlakche2] == 1)
    {
    	                new string[256];
    PlayerInfo[playerid][pFlakche2] = 0;
    RemovePlayerAttachedObject(playerid, 6);
    BluePoints += 1;
    vzetflag1 = 0;
	vzetflag2 = 0;
	format(string, sizeof(string), "Capture The Flag:%s достави флага на червеният отбор",PlayerName(playerid));
    SendClientMessageToAll(COLOR_BL1,string);
    flag4 = CreateObject(2914, -1130.3170,1075.4589,1353.4221, 0.000000, 0.000000, 88.399978);
    if(BluePoints == 3)
    {
    startctf = 0;
    new string2[256];
    format(string2, sizeof(string2), "Capture The Flag:Синят отбор спечели");
    SendClientMessageToAll(COLOR_BL1, string2);
         	        for(new i; i<MAX_PLAYERS; i++)
			{
    			new rr;
			PlayerInfo[playerid][pInCTF] = 0;
			PlayerInfo[i][pInCTF] = 0;
			PlayerInfo[rr][pInCTF] = 0;
			PlayerInfo[playerid][pRedCTF] = 0;
    		PlayerInfo[playerid][pBlueCTF] = 0;
			PlayerInfo[playerid][pInCTF] = 0;
 		    PlayerInfo[i][pRedCTF] = 0;
    		PlayerInfo[i][pBlueCTF] = 0;
			PlayerInfo[i][pInCTF] = 0;
 		    PlayerInfo[rr][pRedCTF] = 0;
    		PlayerInfo[rr][pBlueCTF] = 0;
			PlayerInfo[rr][pInCTF] = 0;
			PlayerInfo[playerid][pInCTF] = 0;
			PlayerInfo[i][pInCTF] = 0;
			PlayerInfo[rr][pInCTF] = 0;
			    GameTextForPlayer(i, "~b~+1 Blue Point", 2000, 3);
	                PlayerInfo[i][pFlakche1] = 0;
	                PlayerInfo[i][pFlakche2] = 0;
	                vzetflag1 = 0;
	                vzetflag2 = 0;
	                SetPlayerHealth(i,0);
	                ctfred = 0;
	                ctfblue = 1;
	                ctfp = 0;
	                ctfpl = 0;
	                PlayerInfo[i][pCTFTimer] = 0;
	                TextDrawHideForPlayer(i, Text4[i]);
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
	                PlayerInfo[i][pRedCTF] = 0;
	                PlayerInfo[i][pBlueCTF] = 0;
	                PlayerInfo[i][pInCTF] = 0;
				    BluePoints = 0;
				    RedPoints = 0;
				    ctfred = 0;
	                ctfp = 0;
	                ctfpl = 0;
	                MoveObject(ctfp110, -1124.956176, 1057.738769, 1346.458496, 44);
MoveObject(ctfp111, -1124.169433, 1046.195068, 1346.458496, 44);
MoveObject(ctfp112, -1123.388671, 1034.741821, 1346.458496, 44);
MoveObject(ctfp113, -1122.601074, 1023.188293, 1346.458496, 44);
MoveObject(ctfp114, -1125.739624, 1069.221679, 1346.458496, 44);
MoveObject(ctfp115, -1125.479858, 1080.794433, 1346.458496, 44);
MoveObject(ctfp116, -1124.460449, 1092.237915, 1346.458496, 44);
MoveObject(ctfp117, -1123.437988, 1103.711791, 1346.458496, 44);
MoveObject(ctfp118, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp119, -980.092773, 1072.358398, 1346.458496, 44);
MoveObject(ctfp200, -979.771911, 1083.853515, 1346.458496, 44);
MoveObject(ctfp201,  -979.451599, 1095.319580, 1346.458496, 44);
MoveObject(ctfp202, -980.579956, 1049.202636, 1346.458496, 44);
MoveObject(ctfp203, -980.898925, 1037.786254, 1346.458496, 44);
MoveObject(ctfp204, -981.540344, 1014.825073, 1346.458496, 44);
MoveObject(ctfp205, -980.416503, 1060.773315, 1346.458496, 44);
MoveObject(ctfp206, -981.218750, 1026.340332, 1346.458496, 44);
    if(PlayerInfo[i][pBlueCTF] == 1)
{
	                format(string, sizeof(string), "Ти получаваш:4EP и $1000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 4;
		            PlayerInfo[i][pAccount] += 1000;
}
ctfred = 1;
}
}
}
    return 1;
	}
				if(pickupid == GPPRES5)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == GPPRES4)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == OFISPRES1)
	{
    SetPlayerPos(playerid, 1803.0850,-1302.0895,131.7344);
    return 1;
	}
					if(pickupid == OFISPRES2)
	{
    SetPlayerPos(playerid, 1802.9482,-1301.9231,125.7266);
    return 1;
	}
				if(pickupid == GPPRES3)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == GPPRES2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == GPPRES1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	//gp1
			if(pickupid == DPRES17)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES18)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES19)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
			if(pickupid == DPRES20)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	//---------------------------[30]-------------------------------------------
	new string[256];
					if(pickupid == FUEL1)
	{
     format(string, sizeof(string),"~r~FUEL~w~:%d",F1);
     GameTextForPlayer(playerid, string, 1500, 3);
    return 1;
	}
					if(pickupid == FUEL2)
	{
     format(string, sizeof(string),"~r~FUEL~w~:%d",F2);
     GameTextForPlayer(playerid, string, 1500, 3);
    return 1;
	}
					if(pickupid == FUEL3)
	{
     format(string, sizeof(string),"~r~FUEL~w~:%d",F4);
     GameTextForPlayer(playerid, string, 1500, 3);
    return 1;
	}
					if(pickupid == FUEL4)
	{
format(string, sizeof(string),"~r~FUEL~w~:%d",F4);
     GameTextForPlayer(playerid, string, 1500, 3);
    return 1;
	}
	//
	
						if(pickupid == PRESROBLV)
	{
    GameTextForPlayer(playerid, "~r~robbery start point~n~~w~/startrob", 2000, 3);
    return 1;
	}
	
	if(pickupid == S1PICK1)
	{
    GameTextForPlayer(playerid, "~y~Special~n~~w~/eat", 2000, 3);
    return 1;
	}
	if(pickupid == APICK)
	{
    GameTextForPlayer(playerid, "~r~HOUSE ARMOUR~n~~b~10 PACKAGES ~w~- ~g~$20000~n~~w~/buyarmour", 2000, 3);
    return 1;
	}
	if(pickupid == S1PICK2)
	{
    GameTextForPlayer(playerid, "~y~Special~n~~w~/buywep", 2000, 3);
    return 1;
	}
	if(pickupid == S1PICK4)
	{
    GameTextForPlayer(playerid, "~y~Special~n~~w~/advert", 2000, 3);
    return 1;
	}
	if(pickupid == KPICK)
	{
    GameTextForPlayer(playerid, "~y~Horserace~n~~w~/bet", 2000, 3);
    return 1;
	}
	if(pickupid == DPICK)
	{
    GameTextForPlayer(playerid, "~y~BAR~n~~w~/drink", 2000, 3);
    return 1;
	}
		if(pickupid == BPICK)
	{
    GameTextForPlayer(playerid, "~y~BAR~n~~w~/drink", 2000, 3);
    return 1;
	}
			if(pickupid == WEAPICK)
	{
    GameTextForPlayer(playerid, "~y~WEAPONS~n~~w~/buywep", 2000, 3);
    return 1;
	}
				if(pickupid == BURPICK)
	{
    GameTextForPlayer(playerid, "~y~BURGER SHOT~n~~w~/eat", 2000, 3);
    return 1;
	}
	if(pickupid == GYMPICK)
	{
    GameTextForPlayer(playerid, "~y~GYM~n~~w~/train", 2000, 3);
    return 1;
	}
		if(pickupid == DMVPICK)
	{
    GameTextForPlayer(playerid, "~y~VEHICLES~n~~w~/dmv", 2000, 3);
    return 1;
	}
			if(pickupid == DROGAPICK)
	{
    GameTextForPlayer(playerid, "~r~DRUG & BOMB STORE~n~~w~/buy /buybomb", 2000, 3);
    return 1;
	}
		if(pickupid == STPICK)
	{
    GameTextForPlayer(playerid, "~y~Strip Club~n~~w~/drinks", 2000, 3);
    return 1;
	}
				if(pickupid == BAPICK)
	{
    GameTextForPlayer(playerid, "~y~BARBER~n~~w~/hair /hdefault", 2000, 3);
    return 1;
	}
	
		if(pickupid == SPICK)
	{
    GameTextForPlayer(playerid, "~y~SEX SHOP~n~~w~/sexshop", 2000, 3);
    return 1;
	}
		if(pickupid == CPICK)
	{
    GameTextForPlayer(playerid, "~y~CLOTHES~n~~w~/skin", 2000, 3);
    return 1;
	}
				if(pickupid == ADVERTP)
	{
    GameTextForPlayer(playerid, "~y~ADVERTISING~n~~w~/ADVERT", 2000, 3);
    return 1;
	}
				if(pickupid == PRESROBLS)
	{
    GameTextForPlayer(playerid, "~r~robbery start point~n~~w~/startrob", 2000, 3);
    return 1;
	}
						if(pickupid == PRESROB1)
	{
    GameTextForPlayer(playerid, "~g~TO START STEALING MONEY~w~~n~TYPE /rob", 2000, 3);
    return 1;
	}
	if(pickupid == BANKROB)
	{
    GameTextForPlayer(playerid, "~r~ROBBERY BANK START POINT~w~~n~/robberybank~n~~n~~g~TO START STEALING MONEY~n~~w~ TYPE /robbank", 2000, 3);
    return 1;
	}
					if(pickupid == PRESROB1)
	{
    GameTextForPlayer(playerid, "~w~Use:/rob To Get Money", 2000, 3);
    return 1;
	}

				if(pickupid == DPRES21)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == DPRES22)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == BOYZPRES)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
				if(pickupid == DPRES23)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRESKN)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == PRESSOA)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == PRESBOYZ)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == PRESBOYZ2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == BANKA)
	{
	SetPlayerPos(playerid,2307.1792,-15.6580,28.3014);
	SetPlayerFacingAngle(playerid,267.51);
    TogglePlayerControllable(playerid, 0);
    PlayerInfo[playerid][pBankaTi] = 1*5;
    return 1;
	}
	if(pickupid == BANKA2)
	{
	SetPlayerPos(playerid,2307.1792,-15.6580,28.3014);
	SetPlayerFacingAngle(playerid,267.51);
    TogglePlayerControllable(playerid, 0);
    PlayerInfo[playerid][pBankaTi] = 1*5;
    SetPlayerVirtualWorld(playerid,1);
    return 1;
	}
	if(pickupid == BANKA3)
	{
	SetPlayerPos(playerid,2307.1792,-15.6580,28.3014);
	SetPlayerFacingAngle(playerid,267.51);
    TogglePlayerControllable(playerid, 0);
    PlayerInfo[playerid][pBankaTi] = 1*5;
    SetPlayerVirtualWorld(playerid,2);
    return 1;
	}
	
					if(pickupid == GROVEPRES1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == GROVEPRES2)
	{
	GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	
					if(pickupid == RIFA101)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == RIFA102)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	
	if(pickupid == BANKAE3)
	{
	SetPlayerPos(playerid,2418.1165,1123.8186,10.8203);
	SetPlayerVirtualWorld(playerid,0);
    return 1;
	}
	if(pickupid == BANKAE2)
	{
	SetPlayerPos(playerid,-1497.1149,919.9960,7.1875);
	SetPlayerVirtualWorld(playerid,0);
    return 1;
	}
						if(pickupid == BANKAE)
	{
	SetPlayerPos(playerid,1480.7855,-1769.2065,18.7958);
    return 1;
	}
				if(pickupid == DPRES43)
	{
    SetPlayerPos(playerid,1413.1478,-1700.6411,13.5395);
    SetPlayerInterior(playerid, 0);
    return 1;
	}
					if(pickupid == DPRES24)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == DPRES25)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == DPRES26)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == DPRES27)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == DPRES28)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == DPRES29)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == DPRES30)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
					if(pickupid == DPRES31)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == DPRES32)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == DPRES33)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == DPRES34)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
						if(pickupid == DPRES35)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}

		if(pickupid == DPRES36)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == DPRES37)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == DPRES38)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == DPRES39)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == DPRES40)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == DPRES41)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == DPRES42)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	
	
	
								if(pickupid == RIFALS2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == RIFASF)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//------------------------------------------------------------------------
					if(pickupid == ATMPRES)
	{
    GameTextForPlayer(playerid, "~w~USE ~g~/ATM ~n~~n~ ~w~START ROB WITH ~g~/robatm", 2000, 3);
    return 1;
	}
						if(pickupid == ATMPRES1)
	{
    GameTextForPlayer(playerid, "~w~USE ~g~/ATM ~n~~n~ ~w~START ROB WITH ~g~/robatm", 2000, 3);
    return 1;
	}
						if(pickupid == ATMPRES2)
	{
    GameTextForPlayer(playerid, "~w~USE ~g~/ATM ~n~~n~ ~w~START ROB WITH ~g~/robatm", 2000, 3);
    return 1;
	}
						if(pickupid == ATMPRES3)
	{
    GameTextForPlayer(playerid, "~w~USE ~g~/ATM ~n~~n~ ~w~START ROB WITH ~g~/robatm", 2000, 3);
    return 1;
	}
						if(pickupid == ATMPRES4)
	{
    GameTextForPlayer(playerid, "~w~USE ~g~/ATM ~n~~n~ ~w~START ROB WITH ~g~/robatm", 2000, 3);
    return 1;
	}
						if(pickupid == ATMPRES5)
	{
    GameTextForPlayer(playerid, "~w~USE ~g~/ATM ~n~~n~ ~w~START ROB WITH ~g~/robatm", 2000, 3);
    return 1;
	}
						if(pickupid == ATMPRES6)
	{
    GameTextForPlayer(playerid, "~w~USE ~g~/ATM ~n~~n~ ~w~START ROB WITH ~g~/robatm", 2000, 3);
    return 1;
	}
							if(pickupid == GPRESVZ)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
							if(pickupid == GPRESDMB)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
								if(pickupid == BGPRES1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
								if(pickupid == BGPRES2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
								if(pickupid == RISK)
	{
    GameTextForPlayer(playerid, "~b~RISK PECHELI~w~,~r~RISK GUBI~n~~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	if(pickupid == BANK1)
	{
    SetPlayerPos(playerid,246.4901,110.9841,1004.9753);
    SetPlayerInterior(playerid,10);
    PlayerInfo[playerid][pBankaTi] = 1*5;
    TogglePlayerControllable(playerid, 0);
    return 1;
	}
	if(pickupid == BANK2)
	{
    SetPlayerPos(playerid,2314.7390,-3.1216,28.0955);
    SetPlayerInterior(playerid,0);
    PlayerInfo[playerid][pBankaTi] = 1*5;
    TogglePlayerControllable(playerid, 0);
    return 1;
	}
									if(pickupid == PRESC)
	{
    GameTextForPlayer(playerid, "~b~RISK PECHELI~w~,~r~RISK GUBI~n~~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
									if(pickupid == RISKT)
	{
    GameTextForPlayer(playerid, "~w~USE:~r~/buyticket ~w~to buy ticket", 2000, 3);
    return 1;
	}
								if(pickupid == RIFADMB)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
									if(pickupid == RIFALV)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
									if(pickupid == RIFALS)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
	
	if(pickupid == PRESPDUTY)
	{
    GameTextForPlayer(playerid, "~w~TYPE~b~/duty", 2000, 3);
    return 1;
	}
										if(pickupid == PRESAHOUSE1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
											if(pickupid == ASH11)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
											if(pickupid == PRESABIZ1)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
									if(pickupid == PRESAHOUSE2)
	{
    GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
    return 1;
	}
//------------------------------------------------------------------------
//------------------------------------------------------------------------
//Biz
							if(pickupid == GPRESBIZ)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1939.5134,2184.3391,10.8203);
    return 1;
	}
							if(pickupid == GPRESBSF)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1235.1213,-2037.2286,61.0313);
    return 1;
	}
							if(pickupid == GPRESBLV)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1235.1213,-2037.2286,61.0313);
    return 1;
	}
//GPRES
							if(pickupid == GPRESPIZZA)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1367.0181,248.7543,19.5669);
    return 1;
	}
							if(pickupid == GPRESLV)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1699.3370,1435.6277,10.6981);
    return 1;
	}
							if(pickupid == GPRESSF)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, -1417.0000,-295.8000,14.1484);
    return 1;
	}
							if(pickupid == GPRESBANK)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1480.8029,-1768.9452,18.7958);
    return 1;
	}
							if(pickupid == GPRESSWEEP)
	{
        if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 582.9918,1224.6924,11.7113);
    return 1;
	}
							if(pickupid == GPRESBUS)
	{
    SetPlayerPos(playerid, -552.1440,2593.7229,53.9348);
    return 1;
	}
								if(pickupid == GPRES247)
	{
	if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 2180.2454,1976.0413,10.8203);
    return 1;
	}
								if(pickupid == GPRESBOINI)
	{
	if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1968.7429,2294.9353,16.4559);
    return 1;
	}
								if(pickupid == GPRESCALIG)
	{
	if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 2196.6819,1677.1707,12.3672);
    return 1;
	}
								if(pickupid == GPRESCEMENT)
	{
	if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 837.0814,824.6852,12.6124);
    return 1;
	}
								if(pickupid == GPRESCARSHOP2)
	{
	if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1414.5254,-1702.8295,13.5395);
    return 1;
	}
								if(pickupid == GPRESTOWT)
	{
	if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 2133.3237,961.4839,10.8203);
    return 1;
	}
								if(pickupid == GPRESKNIJKA)
	{
	if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1940.5586,2179.5852,10.8203);
    return 1;
	}
								if(pickupid == GPRESHILI)
	{
	if(PlayerInfo[playerid][pMember] == TEAM_VIP)
    SetPlayerPos(playerid, 1597.9424,1448.7820,10.8281);
    return 1;
	}
								if(pickupid == GPRESCAR)
	{
	SetPlayerInterior(playerid, 15);
    SetPlayerPos(playerid, -1475.2872,919.0667,1040.5194);
    return 1;
	}
	return 1;
	}
//==============================[zgradi]========================================
public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{




    if(!ispassenger)
{
        if(vehicleid ==carstrix)
    {
			if (PlayerInfo[playerid][pMember] != TEAM_RIFA)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }

    
    if(!ispassenger)
{
        if(vehicleid ==carflux2)
    {
			if (PlayerInfo[playerid][pCar3] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }

    if(!ispassenger)
{
            if(vehicleid ==carflux)
    {
			if (PlayerInfo[playerid][pCar1] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }

    if(!ispassenger)
{
        if(vehicleid ==caro)
    {
			if (PlayerInfo[playerid][pCar4] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }
    
    if(!ispassenger)
{
        if(vehicleid ==carpedal)
    {
			if (PlayerInfo[playerid][pCar5] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }
    
    if(!ispassenger)
{
        if(vehicleid ==caro2)
    {
			if (PlayerInfo[playerid][pCar6] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }
    
    if(!ispassenger)
{
        if(vehicleid ==caro3)
    {
			if (PlayerInfo[playerid][pCar7] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }
    if(vehicleid ==carforsale1)
    {
    if(strcmp(PlayerName(playerid), "ForSale1991344565122313", true) != 0)
    {
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Трябва да купите това превозно средство за да го карате");
    }
    }
        if(vehicleid ==carforsale2)
    {
    if(strcmp(PlayerName(playerid), "[BG]Flu[333333X]", true) != 0)
    {
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Трябва да купите това превозно средство за да го карате");
    }
    }
        if(vehicleid ==carforsale3)
    {
    if(strcmp(PlayerName(playerid), "[BG]Fl12324124123u[X]", true) != 0)
    {
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Трябва да купите това превозно средство за да го карате");
    }
    }
        if(vehicleid ==carforsale4)
    {
    if(strcmp(PlayerName(playerid), "[BG]F1231231212312323u[X]", true) != 0)
    {
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Трябва да купите това превозно средство за да го карате");
    }
    }
        if(vehicleid ==carforsale5)
    {
    if(strcmp(PlayerName(playerid), "[BG12323121123]", true) != 0)
    {
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Трябва да купите това превозно средство за да го карате");
    }
    }
    
    if(!ispassenger)
{
    if(vehicleid ==carflux3)
    {
			if (PlayerInfo[playerid][pCar8] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }
    
    if(!ispassenger)
{
    if(vehicleid ==carholy)
    {
			if (PlayerInfo[playerid][pCar9] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
}


    if(!ispassenger)
{
    if(vehicleid ==carflux4)
    {
			if (PlayerInfo[playerid][pCar2] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    }
    }
    }


    if(ispassenger)
{
    if(vehicleid ==carufo)
    {
                PutPlayerInVehicle(playerid, carufo, 1);
    }
    }
    
    
    if(!ispassenger)
{
    if(vehicleid ==carstrix4)
    {
			if (PlayerInfo[playerid][pCar11] == 0)
			{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }
        if(!ispassenger)
{
        if(vehicleid ==carmoto)
    {
			if (PlayerInfo[playerid][pCar12] == 0)
			{
  new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD2, "Ти не можеш да караш това превозно средство");
    }
    }
    }






















    new ci = GetPlayerVehicleID(playerid);

    if(!ispassenger)
{
    if(ci == cardr)
    {
    if(strcmp(PlayerName(playerid), "sTrIx", true) != 0)
    {
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство принаближи на sTrIx");
			}
		}

	}

    new ci3 = GetPlayerVehicleID(playerid);

    if(!ispassenger)
{
    if(ci3 == carstrix3)
    {
    if(strcmp(PlayerName(playerid), "sTrIx", true) != 0)
    {
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство принаближи на sTrIx");
			}
		}
	}


    new ci2 = GetPlayerVehicleID(playerid);

    if(!ispassenger)
{
    if(ci2 == carstrix2)
    {
    if(strcmp(PlayerName(playerid), "sTrIx", true) != 0)
    {
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство принаближи на sTrIx");
			}
		}

	}

    new ci1 = GetPlayerVehicleID(playerid);
    if(!ispassenger)
{
    if(ci1 == carstrix1)
    {
    if(strcmp(PlayerName(playerid), "sTrIx", true) != 0)
    {
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
    SendClientMessage(playerid, COLOR_GRAD1, "Това превозно средство принаближи на sTrIx");
			}
		}

	}




if(ispassenger)
{
	    if (GetVehicleModel(vehicleid) == 573 || GetVehicleModel(vehicleid) == 431 || GetVehicleModel(vehicleid) == 437 || GetVehicleModel(vehicleid) == 508 || GetVehicleModel(vehicleid) == 519 || GetVehicleModel(vehicleid) == 483)
	    {
            SetPlayerPos(playerid, 2022.0273, 2235.2402, 2103.9536);
			SetPlayerFacingAngle(playerid, 0);
            SetCameraBehindPlayer(playerid);
            SetPlayerInterior(playerid, 1);
            SetPlayerVirtualWorld(playerid, vehicleid);
            Timer1[playerid] = SetTimerEx("HornA", 60000, 1, "i", playerid);
            Timer2[playerid] = SetTimerEx("HornB", 60500, 1, "i", playerid);
            Timer3[playerid] = SetTimerEx("STime", 60000, 1, "i", playerid);
	        IsInBus[playerid] = vehicleid;
	    }
	}
	
	








	
	
	
	
	
if(!ispassenger)
{
	    if (GetVehicleModel(vehicleid) == 460 || GetVehicleModel(vehicleid) == 476 || GetVehicleModel(vehicleid) == 511 || GetVehicleModel(vehicleid) == 512 || GetVehicleModel(vehicleid) == 513 || GetVehicleModel(vehicleid) == 519 || GetVehicleModel(vehicleid) == 520 || GetVehicleModel(vehicleid) == 553 || GetVehicleModel(vehicleid) == 577 || GetVehicleModel(vehicleid) == 592)
	    {
	 		if(PlayerInfo[playerid][pSamolet] != 1)
	   		{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не притежаваш книжка за самолет");
	return 1;
	}
	}
 }
 if(!ispassenger)
{
	    if (GetVehicleModel(vehicleid) == 525)
	    {
	 		if(PlayerInfo[playerid][pTowT] != 1)
	   		{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,COLOR_GRAD1, "{FF0000}Трябва да си механик за да караш Tow Truck !");
					return 1;
	}
	}
 }
 if(!ispassenger)
{
	    if (GetVehicleModel(vehicleid) == 417 || GetVehicleModel(vehicleid) == 425 || GetVehicleModel(vehicleid) == 447 || GetVehicleModel(vehicleid) == 460 || GetVehicleModel(vehicleid) == 469 || GetVehicleModel(vehicleid) == 487 || GetVehicleModel(vehicleid) == 488 || GetVehicleModel(vehicleid) == 497 || GetVehicleModel(vehicleid) == 548 || GetVehicleModel(vehicleid) == 563)
	    {
	 		if(PlayerInfo[playerid][pHili] != 1)
	   		{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не притежаваш книжка за хеликоптер");
					return 1;
	}
	}
 }
 if(!ispassenger)
{
	    if (GetVehicleModel(vehicleid) == 537 || GetVehicleModel(vehicleid) == 538)
	    {
	 		if(PlayerInfo[playerid][pVlak] != 1)
	   		{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не притежаваш книжка за влак");
					return 1;
	}
	}
 }
 if(!ispassenger)
{
	    if (GetVehicleModel(vehicleid) == 454 || GetVehicleModel(vehicleid) == 472 || GetVehicleModel(vehicleid) == 473 || GetVehicleModel(vehicleid) == 484 || GetVehicleModel(vehicleid) == 430 || GetVehicleModel(vehicleid) == 446 || GetVehicleModel(vehicleid) == 452 || GetVehicleModel(vehicleid) == 453 || GetVehicleModel(vehicleid) == 493 || GetVehicleModel(vehicleid) == 595)
	    {
	 		if(PlayerInfo[playerid][pBoat] != 1)
	   		{
 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
 RemovePlayerFromVehicle(playerid);
				SendClientMessage(playerid,COLOR_GRAD1, "Ти не притежаваш книжка за лодка");
					return 1;
	}
	}
 }
     if(vehicleid == carpizza[5] || vehicleid == carpizza[4] || vehicleid == carpizza[3] || vehicleid == carpizza[2] || vehicleid == carpizza[1])
     {
         SendClientMessage(playerid, COLOR_GREEN, "Pizza Deliver: За да започнеш работа като доставчик на пица напиши /pizza.");
     }
     if(vehicleid == carsweep[5] || vehicleid == carsweep[4] || vehicleid == carsweep[3] || vehicleid == carsweep[2] || vehicleid == carsweep[1])
     {
         SendClientMessage(playerid, COLOR_GREEN, "Sweep: За да започнеш работа като шофьор на такси напиши /sweep.");
     }
     if(vehicleid == carcoalmine[5] || vehicleid == carcoalmine[4] || vehicleid == carcoalmine[3] || vehicleid == carcoalmine[2] || vehicleid == carcoalmine[1])
     {
         SendClientMessage(playerid, COLOR_GREEN, "Coalmine: За да започнеш работа като шофьор на самосвал напиши /coalmine.");
     }
     if(vehicleid == carpilot[5] || vehicleid == carpilot[4] || vehicleid == carpilot[3] || vehicleid == carpilot[2] || vehicleid == carpilot[1])
     {
         SendClientMessage(playerid, COLOR_GREEN, "Pilot: За да започнеш работа като пилот напиши /pilot.");
     }
     if(vehicleid == carbus[5] || vehicleid == carbus[4] || vehicleid == carbus[3] || vehicleid == carbus[2] || vehicleid == carbus[1])
     {
         SendClientMessage(playerid, COLOR_GREEN, "Bus: За да започнеш работа като шофьр напиши /bus.");
	 }
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
		
        InCar[playerid] = 0;
    if(pizza[playerid] == 1)
    {
        pizza[playerid] = 0;
        ToggleEngine(carpizza[1], VEHICLE_PARAMS_OFF);
        ToggleEngine(carpizza[2], VEHICLE_PARAMS_OFF);
        ToggleEngine(carpizza[3], VEHICLE_PARAMS_OFF);
        ToggleEngine(carpizza[4], VEHICLE_PARAMS_OFF);
        SendClientMessage(playerid, COLOR_RED, "Pizza Deliver: Ти слезе от мотора и загуби работата си.");
        SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
        DisablePlayerCheckpoint(playerid);
	}
    if(coalmine[playerid] == 1)
    {
        coalmine[playerid] = 0;
        ToggleEngine(carcoalmine[1], VEHICLE_PARAMS_OFF);
        ToggleEngine(carcoalmine[2], VEHICLE_PARAMS_OFF);
        ToggleEngine(carcoalmine[3], VEHICLE_PARAMS_OFF);
        ToggleEngine(carcoalmine[4], VEHICLE_PARAMS_OFF);
        SendClientMessage(playerid, COLOR_RED, "Coalmine: Ти слезе от самосвала и загуби работата си.");
        SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
        DisablePlayerCheckpoint(playerid);
    }
    if(sweep[playerid] == 1)
    {
        sweep[playerid] = 0;
        ToggleEngine(carsweep[1], VEHICLE_PARAMS_OFF);
        ToggleEngine(carsweep[2], VEHICLE_PARAMS_OFF);
        ToggleEngine(carsweep[3], VEHICLE_PARAMS_OFF);
        ToggleEngine(carsweep[4], VEHICLE_PARAMS_OFF);
        SendClientMessage(playerid, COLOR_RED, "sweep: Ти слезе от превозното средство и загуби работата си.");
        SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
        DisablePlayerCheckpoint(playerid);
    }
    if(pilot[playerid] == 1)
    {
        pilot[playerid] = 0;
        ToggleEngine(carpilot[1], VEHICLE_PARAMS_OFF);
        ToggleEngine(carpilot[2], VEHICLE_PARAMS_OFF);
        ToggleEngine(carpilot[3], VEHICLE_PARAMS_OFF);
        ToggleEngine(carpilot[4], VEHICLE_PARAMS_OFF);
        SendClientMessage(playerid, COLOR_RED, "pilot: Ти слезе от самолета и загуби работата си.");
        SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
        DisablePlayerCheckpoint(playerid);
    }
    if(bus[playerid] == 1)
    {
        bus[playerid] = 0;
        ToggleEngine(carbus[1], VEHICLE_PARAMS_OFF);
        ToggleEngine(carbus[2], VEHICLE_PARAMS_OFF);
        ToggleEngine(carbus[3], VEHICLE_PARAMS_OFF);
        ToggleEngine(carbus[4], VEHICLE_PARAMS_OFF);
        SendClientMessage(playerid, COLOR_RED, "Bus Driver: Ти слезе от буса и загуби работата си.");
        SetPlayerColor(playerid, TeamInfo[PlayerInfo[playerid][pMember]][TeamColor]);
        DisablePlayerCheckpoint(playerid);
    }
    		if(GetPlayerVehicleID(playerid) == dcar1 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar1, 0);
		}
				if(GetPlayerVehicleID(playerid) == dcar2 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar2, 0);
		}
				if(GetPlayerVehicleID(playerid) == dcar3 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar3, 0);
		}
				if(GetPlayerVehicleID(playerid) == dcar4 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar4, 0);
		}
				if(GetPlayerVehicleID(playerid) == dcar5 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar5, 0);
		}
				if(GetPlayerVehicleID(playerid) == dcar6 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar6, 0);
		}
				if(GetPlayerVehicleID(playerid) == dcar7 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar7, 0);
		}
				if(GetPlayerVehicleID(playerid) == dcar8 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar8, 0);
		}
				if(GetPlayerVehicleID(playerid) == dcar9 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar9, 0);
		}
				if(GetPlayerVehicleID(playerid) == dcar10 && PlayerInfo[playerid][pInDerby] >= 1)
		{
		 new Float:cx, Float:cy, Float:cz;
 GetPlayerPos(playerid, cx, cy, cz);
 SetPlayerPos(playerid, cx, cy, cz);
		PutPlayerInVehicle(playerid, dcar10, 0);
		}
}
//==============================================================================
public InfiniteNitro()
{
    for(new i=0;i<MAX_PLAYERS;i++)
	{
      if(PlayerInfo[i][pCnos] == 1)
	    {
    new vehicleid;
	        if(IsPlayerConnected(i))
	        {
	            if(GetPlayerState(i)==2)
	            {
	                vehicleid=GetPlayerVehicleID(i);
				    AddVehicleComponent(vehicleid,1010);
				}
			}
		}
	}
	return 0;
}
//==============================================================================
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
  if(Enabled[playerid] == 1)
   {
        if (IsPlayerInAnyVehicle(playerid))
        {
                if((newkeys & KEY_ACTION) && !(oldkeys & KEY_ANALOG_UP))
                {


                switch(GetVehicleModel( GetPlayerVehicleID(playerid) )) {
                        case 592,577,511,512,593,520,553,476,519,460,513,487,488,548,425,417,497,563,447,469:
                        return 1;
                        }
                    if(CreatedRamp[playerid] == true) DestroyObject(Ramp[playerid]), CreatedRamp[playerid] = false;
                        new Float:pX,Float:pY,Float:pZ,Float:vA, Arabam = GetPlayerVehicleID(playerid);
                        GetVehiclePos(Arabam, pX, pY, pZ);
                        GetVehicleZAngle(Arabam, vA);
                        Ramp[playerid] = CreateDynamicObject(1655, pX + (20.0 * floatsin(-vA, degrees)), pY + (20.0 * floatcos(-vA, degrees)), pZ, 0, 0, vA);
                        CreatedRamp[playerid] = true;
                        SetTimerEx("destroy", 4000,0,"d",playerid);
                }
          }
        }

        if(PRESSED(KEY_FIRE)) RL_Shooting[playerid]=true;
        else if(RELEASED(KEY_FIRE))
        {
                RL_Shooting[playerid]=false;
                RL_Released[playerid]=GetTickCount();
        }

    if(newkeys & KEY_FIRE && GetPlayerWeapon(playerid) == 41)
    {
       if(graf[playerid] == 1)
       {
        SetTimerEx("Object", 5000, false, "i", playerid);
    }
   }






if(Jump[playerid] == 1)
{
if(newkeys & KEY_JUMP)
{
	new Float:SuperJump[3];
	GetPlayerVelocity(playerid, SuperJump[0], SuperJump[1], SuperJump[2]);
	SetPlayerVelocity(playerid, SuperJump[0], SuperJump[1], SuperJump[2]+6);
}
}



        if(newkeys == 131072) {
                        if (IsPlayerInAnyVehicle(playerid)){
                        {
                                new Float:vx, Float:vy, Float:vz;
                                GetVehicleVelocity(GetPlayerVehicleID(playerid), vx, vy, vz);
                                SetVehicleVelocity(GetPlayerVehicleID(playerid) ,vx/1.7,vy/1.7 ,vz/1.7);
                        }
                }
        }


	if(!IsPlayerInAnyVehicle(playerid) && (newkeys & KEY_YES))
	{
	    new Float:pos[3];
	    GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
	    if(pos[1] < -1301.4 && pos[1] > -1303.2417 && pos[0] < 1786.2131 && pos[0] > 1784.1555)    // He is using the elevator button
	        ShowElevatorDialog(playerid);
		else    // Is he in a floor button?
		{
		    if(pos[1] > -1301.4 && pos[1] < -1299.1447 && pos[0] < 1785.6147 && pos[0] > 1781.9902)
		    {
		        // He is most likely using it, check floor:
				new i=20;
				while(pos[2] < GetDoorsZCoordForFloor(i) + 3.5 && i > 0)
				    i --;

				if(i == 0 && pos[2] < GetDoorsZCoordForFloor(0) + 2.0)
				    i = -1;

				if(i <= 19)
				{
					CallElevator(playerid, i + 1);
					GameTextForPlayer(playerid, "~r~Elevator called", 3500, 4);
				}
		    }
		}
	}
	if (newkeys == 16 && IsInBus[playerid] > 0)
	{
		new Float:X,Float:Y,Float:Z;
		GetVehiclePos(IsInBus[playerid], X, Y, Z);
		SetPlayerPos(playerid, X+4, Y, Z);
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid,0);
		KillTimer(Timer1[playerid]);
		KillTimer(Timer2[playerid]);
		IsInBus[playerid] = 0;
	}
switch (GetPlayerWeapon (playerid))
       {
                case 24, 25, 33, 34, 27: //???????? ?? ??????, ? ????? ???? ?? ?? ???????? C-Bug
                {
                        if((newkeys == 132)||(newkeys == 4)||newkeys == 4)AntiCFired[playerid]=GetTickCount();
                        if (((GetTickCount () - AntiCFired[playerid]) < 1000) && (newkeys == 2))
                        {
                           ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,1,0,0);
                        }
                }
       }
    if(IsKeyJustDown(KEY_ACTION,newkeys,oldkeys))
    {
    if(PlayerInfo[playerid][pDonateRank] >= 2)
	{
       if(IsPlayerInInvalidNosVehicle(playerid))
       {
	   }
    }
}
    if(PlayerKilled[playerid] == 1)
    {
	    if(IsKeyJustDown(KEY_SPRINT,newkeys,oldkeys))
        {
	        TogglePlayerSpectating(playerid, 0);
	        PlayerSpectating[playerid] = 0;
	        PlayerKilled[playerid] = 0;
            TextDrawHideForPlayer(playerid, txtSpec);
        }
    }
    	// DPK BIZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2595.3203,2790.6309,10.8203))
		{
            if(gTeam[playerid] != TEAM_DPK)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Dark Professional Killers");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 5);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 5)
		{
            if(gTeam[playerid] != TEAM_DPK)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2595.3203,2790.6309,10.8203);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
    	// Grove Street Families DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2421.7314,-1220.9542,25.4504))
		{
		            if(gTeam[playerid] != TEAM_GROVE)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, -2637.69,1404.24,906.46);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1413.8470,-0.7145,1000.9250) && GetPlayerVirtualWorld(playerid) == 0)
		{
				            if(gTeam[playerid] != TEAM_GROVE)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2490.9531,-1699.9099,1014.7344);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	   	//Aztecas DM BIZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 768.2079,-503.9309,18.0129))
		{
						            if(gTeam[playerid] != TEAM_TRIADS)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1413.8470,-0.7145,1000.9250);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 4);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1413.8470,-0.7145,1000.9250) && GetPlayerVirtualWorld(playerid) == 4)
		{
								            if(gTeam[playerid] != TEAM_TRIADS)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 768.2079,-503.9309,18.0129);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		    	// Grove Street Families 2 Baza
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2496.6841,-1708.3387,1018.3368))
		{
			SetPlayerPos(playerid, 2127.4189,2379.4990,10.8203);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2127.4189,2379.4990,10.8203) && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 2496.6841,-1708.3387,1018.3368);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		//RIFA HOUSE
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2182.8843,956.6141,80.0000))
		{
            if(gTeam[playerid] != TEAM_RIFA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на San Fierro Rifa");
			SetPlayerPos(playerid, 2454.717041,-1700.871582,1013.515197);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
		}
}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2454.717041,-1700.871582,1013.515197) && GetPlayerVirtualWorld(playerid) == 0)
		{
            if(gTeam[playerid] != TEAM_RIFA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, -2182.8843,956.6141,80.0000);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
//
		//Thugs DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 134.6414,1379.9113,1088.3672))
		{
            if(gTeam[playerid] != TEAM_Thugs)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1413.2828,-0.7177,1000.9247);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 4);
		}
}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1413.2828,-0.7177,1000.9247) && GetPlayerVirtualWorld(playerid) == 4)
		{
            if(gTeam[playerid] != TEAM_Thugs)
			return  GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 134.6414,1379.9113,1088.3672);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 1);
		}
	}
//
		//VAGOS DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1127.9978,-1021.7932,34.9922))
		{
            if(gTeam[playerid] != TEAM_LatinKing)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1412.4900,-1.8252,1000.9243);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 12);
		}
}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 8.0, 1412.4900,-1.8252,1000.9243) && GetPlayerVirtualWorld(playerid) == 12)
		{
            if(gTeam[playerid] != TEAM_LatinKing)
			return  GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1127.9978,-1021.7932,34.9922);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		//VAGOS DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2526.0889,-1060.9169,69.9708))
		{
            if(gTeam[playerid] != TEAM_VAGOS)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1412.4900,-1.8252,1000.9243);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 4);
		}
}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 8.0, 1412.4900,-1.8252,1000.9243) && GetPlayerVirtualWorld(playerid) == 4)
		{
            if(gTeam[playerid] != TEAM_VAGOS)
			return  GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2526.0889,-1060.9169,69.9708);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
//VCRIPZ BAZA 3
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1958.2582,953.2600,10.8203))
		{
            if(gTeam[playerid] != TEAM_CRIPZ)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 134.6394,1381.3192,1083.8650);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
		}
}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 134.6394,1381.3192,1083.8650))
		{
            if(gTeam[playerid] != TEAM_CRIPZ)
			return  GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1958.2582,953.2600,10.8203);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		//VCRIPZ 2 BAZA
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 135.0450,1371.4448,1083.8658))
		{
            if(gTeam[playerid] != TEAM_CRIPZ)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2814.5276,973.4999,10.7500);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2814.5276,973.4999,10.7500))
		{
            if(gTeam[playerid] != TEAM_CRIPZ)
			return  GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 134.6391,1371.5570,1083.8650);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		//VCRIPZ DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 134.6465,1379.9683,1088.3672))
		{
            if(gTeam[playerid] != TEAM_CRIPZ)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1413.2828,-0.7177,1000.9247);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 3);
		}
}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1413.2828,-0.7177,1000.9247) && GetPlayerVirtualWorld(playerid) == 3)
		{
            if(gTeam[playerid] != TEAM_CRIPZ)
			return  GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 134.6465,1379.9683,1088.3672);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		//YAKUZA DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1653.8783,-1654.7749,22.5156))
		{
            if(gTeam[playerid] != TEAM_YAKUZA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Yakuza");
			SetPlayerPos(playerid, 1413.2828,-0.7177,1000.9247);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 45);
		}
}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1413.2828,-0.7177,1000.9247) && GetPlayerVirtualWorld(playerid) == 0)
		{
            if(gTeam[playerid] != TEAM_YAKUZA)
			return  GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1653.8783,-1654.7749,22.5156);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	// Grove Street Families DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2490.9531,-1699.9099,1014.7344))
		{
            if(gTeam[playerid] != TEAM_GROVE)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Grove Street Families");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 0);
		}
}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 0)
		{
            if(gTeam[playerid] != TEAM_GROVE)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Grove Street Families");
			SetPlayerPos(playerid, 2490.9531,-1699.9099,1014.7344);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	// Derby
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2693.0588,-1707.4850,11.8478))
		{
			SetPlayerPos(playerid, -1398.103515,937.631164,1036.479125);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 15);
			SetPlayerVirtualWorld(playerid, 1);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1398.103515,937.631164,1036.479125) && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 2693.0588,-1707.4850,11.8478);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	// Derby
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2693.0588,-1707.4850,11.8478))
		{
			SetPlayerPos(playerid, -1398.103515,937.631164,1036.479125);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 15);
			SetPlayerVirtualWorld(playerid, 1);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1398.103515,937.631164,1036.479125) && GetPlayerVirtualWorld(playerid) == 1)
		{
			SetPlayerPos(playerid, 2693.0588,-1707.4850,11.8478);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	// LVPD2
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 246.7550,63.7055,1003.6406))
		{
			if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 256.1885,63.6484,1003.6406);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 256.1885,63.6484,1003.6406) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 256.1885,63.6484,1003.6406);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	// LVPD2
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 246.7550,63.7055,1003.6406))
		{
			if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 1555.4976,-1675.6799,16.1953);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//LVPD3
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 246.5485,87.3735,1003.6406) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, -1604.5139,711.8524,13.8672);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -1604.5139,711.8524,13.8672))
		{
			if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 246.3819,87.1654,1003.6406);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -975.975708,1060.983032,1345.671875) && GetPlayerVirtualWorld(playerid) == 1)
		{
           	if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 2695.6021,-1704.9226,11.8438);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1283.7997,-816.6618,84.0951))
		{
			SetPlayerPos(playerid,  1299.14,-794.77,1084.00);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//ThugsHouse
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 476.1170,-1499.1908,20.4887) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_Thugs)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Thug Life");
			SetPlayerPos(playerid, 140.17,1366.07,1083.65);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 1);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 140.17,1366.07,1083.65))
		{
			if(gTeam[playerid] != TEAM_Thugs)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 476.1170,-1499.1908,20.4887);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//CRIPZ HOUSE
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 300.1975,-1154.4268,81.3840) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_CRIPZ)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 140.17,1366.07,1083.65);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.5, 140.2851,1365.9220,1083.8594))
		{
			if(gTeam[playerid] != TEAM_CRIPZ)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 300.1975,-1154.4268,81.3840);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	
	
	
			if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2173.6699,992.7927,80.0000) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_RIFA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1498.5651,734.3306,11.0234);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1498.5651,734.3306,11.0234))
		{
			if(gTeam[playerid] != TEAM_RIFA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2454.717041,-1700.871582,1013.515197);
			SetPlayerFacingAngle(playerid, 300.1650);
						SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
				if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2468.4939,-1698.2010,1013.5078) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_RIFA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1498.5651,734.3306,11.0234);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1498.5651,734.3306,11.0234))
		{
			if(gTeam[playerid] != TEAM_RIFA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2454.717041,-1700.871582,1013.515197);
			SetPlayerFacingAngle(playerid, 300.1650);
						SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	
	
	//Aztecas House
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 742.8058,-495.6140,18.0129) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_TRIADS)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 260.85,1237.24,1084.26);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 9);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 260.85,1237.24,1084.26))
		{
			if(gTeam[playerid] != TEAM_TRIADS)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 742.8058,-495.6140,18.0129);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		//Aztecas House LS
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 769.2281,-1696.4729,5.1554) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_TRIADS)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 260.85,1237.24,1084.26);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 9);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//Aztec1
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0,766.5176,-556.7845,18.0129) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_TRIADS)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 769.2267,-1696.4374,5.1554);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -789.5915,2756.3584,48.2556) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_SoA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2237.59,-1081.64,1049.02);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2237.5413,-1081.2609,1049.0234))
		{
			if(gTeam[playerid] != TEAM_SoA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, -789.5915,2756.3584,48.2556);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
			if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2000.1091,-1114.3668,27.1250) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_BOYZ)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2237.59,-1081.64,1049.02);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 1);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 2237.5342,-1081.0912,1049.0234) && GetPlayerVirtualWorld(playerid) == 1)
		{
			if(gTeam[playerid] != TEAM_BOYZ)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2000.1091,-1114.3668,27.1250);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

		//RISK
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1042.7651,1010.8513,11.0000))
		{
	     	if(PlayerInfo[playerid][pTick] != 1)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш билет за играта");
						if(or != 1)
			return SendClientMessage(playerid, COLOR_GRAD1, "Играта е затворена");
			SetPlayerPos(playerid, 2235.2476,1641.5537,1008.3594); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2235.2476,1641.5537,1008.3594))
		{
	     	if(PlayerInfo[playerid][pTick] != 1)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти нямаш билет за играта");
			if(or != 1)
			return SendClientMessage(playerid, COLOR_GRAD1, "Играта е затворена");
			SetPlayerPos(playerid, 1042.7651,1010.8513,11.0000);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

	
	
		//RIFALS
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2174.0459,974.1130,80.0000) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_RIFA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 849.8866,-1519.9801,14.3533);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 849.8866,-1519.9801,14.3533))
		{
			if(gTeam[playerid] != TEAM_RIFA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2454.717041,-1700.871582,1013.515197);
			SetPlayerFacingAngle(playerid, 300.1650);
						SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	

		//RIFALS
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2455.5637,-1706.4713,1013.5078) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_RIFA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 849.8866,-1519.9801,14.3533);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 849.8866,-1519.9801,14.3533))
		{
			if(gTeam[playerid] != TEAM_RIFA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2454.717041,-1700.871582,1013.515197);
			SetPlayerFacingAngle(playerid, 300.1650);
						SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}


	
	
	//BGHOUSE
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1283.7997,-816.6618,84.0951) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_BulgarianMafia)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на BulgarianMafia");
			SetPlayerPos(playerid, 	952.5439,-909.6124,45.7656);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.5, 952.5439,-909.6124,45.7656))
		{
			if(gTeam[playerid] != TEAM_BulgarianMafia)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Bulgarian Mafia");
			SetPlayerPos(playerid, 1283.7997,-816.6618,84.0951);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1280.4357,-812.8857,83.5330) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_BulgarianMafia)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на BulgarianMafia");
			SetPlayerPos(playerid, 	1262.5083,-785.4347,1091.9063);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.5, 1262.5083,-785.4347,1091.9063))
		{
			if(gTeam[playerid] != TEAM_BulgarianMafia)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Bulgarian Mafia");
			SetPlayerPos(playerid, 1280.4357,-812.8857,83.5330);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//AHOUSE
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 619.6579,-1628.6294,16.6913) && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 384.808624,173.804992,1008.382812);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 384.808624,173.804992,1008.382812))
		{
			SetPlayerPos(playerid, 619.6579,-1628.6294,16.6913);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//GPDB
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 937.2368,1731.8171,8.8516) && GetPlayerVirtualWorld(playerid) == 0)
		{
			SetPlayerPos(playerid, 322.197998,302.497985,999.148437);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 322.197998,302.497985,999.148437))
		{
			SetPlayerPos(playerid, 937.2368,1731.8171,8.8516);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

	// Ammunation
	//LVPD
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 243.2549,66.6147,1003.6406) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 2287.2883,2431.8303,10.8203);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2287.2883,2431.8303,10.8203))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 243.2549,66.6147,1003.6406);
			SetPlayerFacingAngle(playerid, 0.0000);
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}



	// Latin housee
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1118.0685,-1022.0148,34.9922))
		{
            if(gTeam[playerid] != TEAM_LatinKing)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2324.3811,-1149.5460,1050.7101);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 39);
			SetPlayerVirtualWorld(playerid, 12);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2324.3811,-1149.5460,1050.7101) && GetPlayerVirtualWorld(playerid) == 39)
		{
            if(gTeam[playerid] != TEAM_LatinKing)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 1118.0685,-1022.0148,34.9922);
			SetPlayerFacingAngle(playerid, 0.6594);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}






	// Vagos housee
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1879.1915,2290.6367,10.9799))
		{
            if(gTeam[playerid] != TEAM_VAGOS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Los Santos Vagos");
			SetPlayerPos(playerid, 2324.3811,-1149.5460,1050.7101);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 12);
			SetPlayerVirtualWorld(playerid, 1);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2324.3811,-1149.5460,1050.7101) && GetPlayerVirtualWorld(playerid) == 1)
		{
            if(gTeam[playerid] != TEAM_VAGOS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Los Santos Vagos");
			SetPlayerPos(playerid, 1879.1915,2290.6367,10.9799);
			SetPlayerFacingAngle(playerid, 0.6594);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		// RIFA DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2627.9761,2349.2986,10.8203))
		{
            if(gTeam[playerid] != TEAM_SoA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на San Fierro Rifa");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 4);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 4)
		{
            if(gTeam[playerid] != TEAM_SoA)
			return GameTextForPlayer(playerid, "~r~PRESS ~w~ENTER", 2000, 3);
			SetPlayerPos(playerid, 2627.9761,2349.2986,10.8203);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	// SoA DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -780.5315,2745.4880,45.8556))
		{
            if(gTeam[playerid] != TEAM_SoA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Sons of Anarchy");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 4);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 4)
		{
            if(gTeam[playerid] != TEAM_SoA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Sons of Anarchy");
			SetPlayerPos(playerid, -780.5315,2745.4880,45.8556);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//rock housee
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1673.8032,-2122.2019,14.1460))
		{
            if(gTeam[playerid] != TEAM_AsianBoyz)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Asian Boyz");
			SetPlayerPos(playerid, 2324.3811,-1149.5460,1050.7101);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 12);
			SetPlayerVirtualWorld(playerid, 2);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2324.3811,-1149.5460,1050.7101) && GetPlayerVirtualWorld(playerid) == 2)
		{
            if(gTeam[playerid] != TEAM_AsianBoyz)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Asian Boyz");
			SetPlayerPos(playerid, 1673.8032,-2122.2019,14.1460);
			SetPlayerFacingAngle(playerid, 0.6594);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//FLIP
	if(newkeys & 65536)
	{
		 if(PlayerInfo[playerid][pDonateRank] >= 6)
		{
 new VehicleID,Float:X,Float:Y,Float:Z;
 GetPlayerPos(playerid,X,Y,Z);
 VehicleID = GetPlayerVehicleID(playerid);
 SetVehiclePos(VehicleID,X,Y,Z);
 SetVehicleZAngle(VehicleID,0);
		}
	}
	//Grove House
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2495.3167,-1691.1392,14.7656)) //
		{
            if(gTeam[playerid] != TEAM_GROVE)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Grove Street Families");
			SetPlayerPos(playerid, 2496.0005,-1692.7281,1014.7422); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 3);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		if(newkeys & 16)
	{
		if(PlayerInfo[playerid][pEnter] == 1) //
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти натисна ENTER/F");
			SetPlayerHealth(playerid, 0);
			PlayerInfo[playerid][pInEvent] = 0;
			PlayerInfo[playerid][pEnter] = 0;
			PlayerInfo[playerid][pFight] = 0;
		}
	}
		//Vilna zona
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 236.6389,75.7744,1005.0391)) //
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, -2253.5408,2345.6428,4.9755); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

//
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 307.3765,1792.3430,17.6406))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 258.5224,77.3978,1003.6406); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 258.5224,77.3978,1003.6406))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 307.3765,1792.3430,17.6406); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
//
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2177.7581,2415.7017,73.0339))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 218.0514,80.2876,1005.0391); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 218.0514,80.2876,1005.0391))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 2177.7581,2415.7017,73.0339); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
///
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1481.2998,-1790.0768,156.7533))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 218.0514,80.2876,1005.0391); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 218.0514,80.2876,1005.0391))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 1481.2998,-1790.0768,156.7533); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
//gp 1
//
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 230.5144,72.9046,1005.0391))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, -1669.0559,694.2009,30.6016); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, -1669.0559,694.2009,30.6016))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 230.5144,72.9046,1005.0391); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
//
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, -2253.5408,2345.6428,4.9755))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 236.6389,75.7744,1005.0391); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1568.6071,-1690.0642,6.2188))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 235.0908,72.2860,1005.0391); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
//gp 2
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2294.0452,2459.6907,10.8203)) //
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 231.1777,80.3963,1005.0391); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	
	
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 253.7323,76.7649,1003.6406))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 2177.5999,2415.7024,73.0339); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2177.5999,2415.7024,73.0339)) //
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 253.7323,76.7649,1003.6406); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	
//gp 3
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, -1615.3138,683.7523,7.1875)) //
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 238.4406,79.9509,1005.0391); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}


///

//gp 1
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 235.0908,72.2860,1005.0391)) //
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 1568.6071,-1690.0642,6.2188); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
//gp 2
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 231.1777,80.3963,1005.0391)) //
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 2294.0452,2459.6907,10.8203); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
//gp 3


	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1556.7656,-1674.5566,28.3955)) //
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 219.3449,69.4404,1005.0391); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 219.3449,69.4404,1005.0391)) //
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 1556.7656,-1674.5566,28.3955); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 238.4406,79.9509,1005.0391)) //
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, -1615.3138,683.7523,7.1875); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}

	if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 120.0, 1165.3517,-2035.8820,69.0078)) //
		{
		
GameTextForPlayer(playerid, "~w~TI SI BLIZO DO ~r~VIP ~w~BAZATA", 2000, 3);
ResetPlayerWeapons(playerid);
ResetPlayerWeaponsEx(playerid);
GivePlayerGun(playerid, 0);
				 ClearAnimations(playerid);
		  ClearAnimations(playerid);
		   ClearAnimations(playerid);
		    ClearAnimations(playerid);
		     ClearAnimations(playerid);
		      ClearAnimations(playerid);
		      GivePlayerGun(playerid, 0);
GivePlayerWeapon(playerid, 1,1);
GivePlayerWeapon(playerid, 1,0);
GivePlayerWeapon(playerid, 1);
GivePlayerWeapon(playerid, 0,1);
GivePlayerWeapon(playerid, 0,0);
GivePlayerWeapon(playerid, 0);
GivePlayerGun(playerid, 0);
		    if(PlayerInfo[playerid][pDmon] == 1)
	{
	   SetPlayerArmour(playerid, 0);
        SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
		SetPlayerInterior(playerid, 1);
		TextDrawShowForPlayer(playerid, dmon1[playerid]);
		                        ResetPlayerWeapons(playerid);
                        ResetPlayerWeaponsEx(playerid);
		new r = random(sizeof(PossibleRandomWeapons));
		SetPlayerVirtualWorld(playerid, 989);
GivePlayerWeapon(playerid, PossibleRandomWeapons[r][0], PossibleRandomWeapons[r][1]);

	}
	else if(PlayerInfo[playerid][WsSkill] == 0)
	{
GivePlayerWeapon(playerid, 23,14);
GivePlayerWeapon(playerid, 25,23);
GivePlayerWeapon(playerid, 31,25);
	}
	else if(PlayerInfo[playerid][WsSkill] == 1)
	{
GivePlayerWeapon(playerid, 23,40);
GivePlayerWeapon(playerid, 25,43);
GivePlayerWeapon(playerid, 31,45);
	}
	else if(PlayerInfo[playerid][WsSkill] == 2)
	{
GivePlayerWeapon(playerid, 29,45);
GivePlayerWeapon(playerid, 33,43);
GivePlayerWeapon(playerid, 22,35);
	}
	else if(PlayerInfo[playerid][WsSkill] == 3)
	{
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 33,43);
GivePlayerWeapon(playerid, 22,35);
	}
	else if(PlayerInfo[playerid][WsSkill] == 4)
	{
GivePlayerWeapon(playerid, 27,25);
GivePlayerWeapon(playerid, 31,13);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 17,2);
	}
	else if(PlayerInfo[playerid][WsSkill] == 5)
	{
GivePlayerWeapon(playerid, 27,45);
GivePlayerWeapon(playerid, 31,33);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 17,5);
	}
	else if(PlayerInfo[playerid][WsSkill] == 6)
	{
GivePlayerWeapon(playerid, 27,45);
GivePlayerWeapon(playerid, 31,33);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 17,7);
	}
	else if(PlayerInfo[playerid][WsSkill] == 7)
	{
GivePlayerWeapon(playerid, 25,25);
GivePlayerWeapon(playerid, 30,43);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
	}
	else if(PlayerInfo[playerid][WsSkill] == 8)
	{
GivePlayerWeapon(playerid, 25,45);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 30,53);
GivePlayerWeapon(playerid, 24,45);
	}
	else if(PlayerInfo[playerid][WsSkill] == 9)
	{
GivePlayerWeapon(playerid, 25,75);
GivePlayerWeapon(playerid, 30,63);
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 4,1);
	}
	else if(PlayerInfo[playerid][WsSkill] == 10)
	{
GivePlayerWeapon(playerid, 28,15);
GivePlayerWeapon(playerid, 27,23);
GivePlayerWeapon(playerid, 24,15);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 11)
	{
GivePlayerWeapon(playerid, 30,33);
GivePlayerWeapon(playerid, 28,25);
GivePlayerWeapon(playerid, 27,33);
GivePlayerWeapon(playerid, 24,25);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 12)
	{
GivePlayerWeapon(playerid, 30,60);
GivePlayerWeapon(playerid, 28,35);
GivePlayerWeapon(playerid, 27,43);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 13)
	{
	GivePlayerWeapon(playerid, 30,90);
GivePlayerWeapon(playerid, 28,45);
GivePlayerWeapon(playerid, 27,53);
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 14)
	{
	GivePlayerWeapon(playerid, 30,130);
GivePlayerWeapon(playerid, 28,15);
GivePlayerWeapon(playerid, 26,15);
GivePlayerWeapon(playerid, 24,15);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 15)
	{
	GivePlayerWeapon(playerid, 30,190);
GivePlayerWeapon(playerid, 28,20);
GivePlayerWeapon(playerid, 26,20);
GivePlayerWeapon(playerid, 24,20);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 16)
	{
GivePlayerWeapon(playerid, 30,300);
GivePlayerWeapon(playerid, 28,25);
GivePlayerWeapon(playerid, 26,25);
GivePlayerWeapon(playerid, 24,25);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 17)
	{
GivePlayerWeapon(playerid, 31,33);
GivePlayerWeapon(playerid, 28,30);
GivePlayerWeapon(playerid, 26,35);
GivePlayerWeapon(playerid, 24,30);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 18)
	{
	GivePlayerWeapon(playerid, 31,60);
GivePlayerWeapon(playerid, 28,35);
GivePlayerWeapon(playerid, 26,35);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 19)
	{
	GivePlayerWeapon(playerid, 31,90);
GivePlayerWeapon(playerid, 28,45);
GivePlayerWeapon(playerid, 26,45);
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 20)
	{
	GivePlayerWeapon(playerid, 31,120);
GivePlayerWeapon(playerid, 28,50);
GivePlayerWeapon(playerid, 26,50);
GivePlayerWeapon(playerid, 24,50);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    		else if(PlayerInfo[playerid][WsSkill] == 21)
	{
	GivePlayerWeapon(playerid, 31,150);
GivePlayerWeapon(playerid, 28,60);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,60);
GivePlayerWeapon(playerid, 24,60);
    	}
    	    	    		else if(PlayerInfo[playerid][WsSkill] == 22)
	{
	GivePlayerWeapon(playerid, 31,160);
GivePlayerWeapon(playerid, 28,70);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,70);
GivePlayerWeapon(playerid, 24,70);
    	}
    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 23)
	{
	GivePlayerWeapon(playerid, 31,180);
GivePlayerWeapon(playerid, 32,15);
GivePlayerWeapon(playerid, 26,15);
GivePlayerWeapon(playerid, 24,15);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 24)
	{
	GivePlayerWeapon(playerid, 31,220);
GivePlayerWeapon(playerid, 32,20);
GivePlayerWeapon(playerid, 26,20);
GivePlayerWeapon(playerid, 24,20);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 25)
	{
	GivePlayerWeapon(playerid, 31,240);
GivePlayerWeapon(playerid, 32,30);
GivePlayerWeapon(playerid, 26,30);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,30);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 26)
	{
	GivePlayerWeapon(playerid, 31,270);
GivePlayerWeapon(playerid, 32,50);
GivePlayerWeapon(playerid, 26,35);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 27)
	{
	GivePlayerWeapon(playerid, 31,280);
GivePlayerWeapon(playerid, 32,60);
GivePlayerWeapon(playerid, 26,40);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,40);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 28)
	{
	GivePlayerWeapon(playerid, 31,300);
GivePlayerWeapon(playerid, 32,70);
GivePlayerWeapon(playerid, 26,50);
GivePlayerWeapon(playerid, 24,50);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 29)
	{
	GivePlayerWeapon(playerid, 31,320);
GivePlayerWeapon(playerid, 32,80);
GivePlayerWeapon(playerid, 26,55);
GivePlayerWeapon(playerid, 24,55);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 30)
	{
	GivePlayerWeapon(playerid, 31,350);
GivePlayerWeapon(playerid, 32,90);
GivePlayerWeapon(playerid, 26,60);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,60);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 31)
	{
	GivePlayerWeapon(playerid, 31,370);
GivePlayerWeapon(playerid, 32,100);
GivePlayerWeapon(playerid, 26,65);
GivePlayerWeapon(playerid, 24,65);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 32)
	{
	GivePlayerWeapon(playerid, 31,380);
GivePlayerWeapon(playerid, 32,110);
GivePlayerWeapon(playerid, 26,70);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,70);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 33)
	{
	GivePlayerWeapon(playerid, 31,390);
GivePlayerWeapon(playerid, 32,120);
GivePlayerWeapon(playerid, 26,77);
GivePlayerWeapon(playerid, 24,77);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 34)
	{
	GivePlayerWeapon(playerid, 31,400);
GivePlayerWeapon(playerid, 32,150);
GivePlayerWeapon(playerid, 26,79);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,79);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 35)
	{
GivePlayerWeapon(playerid, 31,410);
GivePlayerWeapon(playerid, 32,190);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,83);
GivePlayerWeapon(playerid, 24,83);
GivePlayerWeapon(playerid, 33,15);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 36)
	{
	GivePlayerWeapon(playerid, 31,415);
GivePlayerWeapon(playerid, 32,200);
GivePlayerWeapon(playerid, 26,90);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,90);
GivePlayerWeapon(playerid, 33,20);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 37)
	{
	GivePlayerWeapon(playerid, 31,420);
GivePlayerWeapon(playerid, 32,230);
GivePlayerWeapon(playerid, 26,97);
GivePlayerWeapon(playerid, 24,97);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 33,35);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 38)
	{
	GivePlayerWeapon(playerid, 31,430);
GivePlayerWeapon(playerid, 32,260);
GivePlayerWeapon(playerid, 26,99);
GivePlayerWeapon(playerid, 24,99);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 33,42);
    	}
    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 39)
	{
	GivePlayerWeapon(playerid, 31,440);
GivePlayerWeapon(playerid, 32,290);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,115);
GivePlayerWeapon(playerid, 24,115);
GivePlayerWeapon(playerid, 33,62);
    	}
    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 40)
	{
	GivePlayerWeapon(playerid, 31,445);
GivePlayerWeapon(playerid, 32,340);
GivePlayerWeapon(playerid, 26,118);
GivePlayerWeapon(playerid, 24,118);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 33,79);
    	}
    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 41)
	{
	GivePlayerWeapon(playerid, 31,450);
GivePlayerWeapon(playerid, 32,375);
GivePlayerWeapon(playerid, 26,118);
GivePlayerWeapon(playerid, 24,118);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,1);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 42)
	{
	GivePlayerWeapon(playerid, 31,455);
GivePlayerWeapon(playerid, 32,390);
GivePlayerWeapon(playerid, 26,130);
GivePlayerWeapon(playerid, 24,130);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,2);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 43)
	{
	GivePlayerWeapon(playerid, 31,465);
GivePlayerWeapon(playerid, 32,410);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,147);
GivePlayerWeapon(playerid, 24,147);
GivePlayerWeapon(playerid, 34,3);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 44)
	{
	GivePlayerWeapon(playerid, 31,475);
GivePlayerWeapon(playerid, 32,450);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,159);
GivePlayerWeapon(playerid, 24,159);
GivePlayerWeapon(playerid, 34,4);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 45)
	{
	GivePlayerWeapon(playerid, 31,480);
GivePlayerWeapon(playerid, 32,490);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,167);
GivePlayerWeapon(playerid, 24,167);
GivePlayerWeapon(playerid, 34,5);
GivePlayerWeapon(playerid, 35,1);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 46)
	{
	GivePlayerWeapon(playerid, 31,485);
GivePlayerWeapon(playerid, 32,520);
GivePlayerWeapon(playerid, 26,180);
GivePlayerWeapon(playerid, 24,180);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,6);
GivePlayerWeapon(playerid, 35,2);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 47)
	{
	GivePlayerWeapon(playerid, 31,490);
GivePlayerWeapon(playerid, 32,530);
GivePlayerWeapon(playerid, 26,195);
GivePlayerWeapon(playerid, 24,195);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,7);
GivePlayerWeapon(playerid, 35,3);
    	}
    	    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 48)
	{
	GivePlayerWeapon(playerid, 31,495);
GivePlayerWeapon(playerid, 32,595);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,230);
GivePlayerWeapon(playerid, 24,200);
GivePlayerWeapon(playerid, 34,8);
GivePlayerWeapon(playerid, 35,4);
GivePlayerWeapon(playerid, 9,1);
    	}
    	    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 49)
	{
	GivePlayerWeapon(playerid, 31,500);
GivePlayerWeapon(playerid, 32,635);
GivePlayerWeapon(playerid, 26,260);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,210);
GivePlayerWeapon(playerid, 34,9);
GivePlayerWeapon(playerid, 35,5);
GivePlayerWeapon(playerid, 9,1);
    	}
    	    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 50)
	{
	GivePlayerWeapon(playerid, 31,510);
GivePlayerWeapon(playerid, 32,700);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,290);
GivePlayerWeapon(playerid, 24,220);
GivePlayerWeapon(playerid, 34,10);
GivePlayerWeapon(playerid, 35,6);
GivePlayerWeapon(playerid, 9,1);
    	}
				 ClearAnimations(playerid);
		  ClearAnimations(playerid);
		   ClearAnimations(playerid);
		    ClearAnimations(playerid);
		     ClearAnimations(playerid);
		      ClearAnimations(playerid);
		      GivePlayerGun(playerid, 0);
GivePlayerWeapon(playerid, 1,1);
GivePlayerWeapon(playerid, 1,0);
GivePlayerWeapon(playerid, 1);
GivePlayerWeapon(playerid, 0,1);
GivePlayerWeapon(playerid, 0,0);
GivePlayerWeapon(playerid, 0);
GivePlayerGun(playerid, 0);

        }
		}
			if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 120.0, 1987.5470,1018.0205,994.8906)) //
		{
		 ClearAnimations(playerid);
		  ClearAnimations(playerid);
		   ClearAnimations(playerid);
		    ClearAnimations(playerid);
		     ClearAnimations(playerid);
		      ClearAnimations(playerid);
		      		    if(PlayerInfo[playerid][pDmon] == 1)
	{
	   SetPlayerArmour(playerid, 0);
        SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
		SetPlayerInterior(playerid, 1);
		TextDrawShowForPlayer(playerid, dmon1[playerid]);
		                        ResetPlayerWeapons(playerid);
                        ResetPlayerWeaponsEx(playerid);
		new r = random(sizeof(PossibleRandomWeapons));
		SetPlayerVirtualWorld(playerid, 989);
GivePlayerWeapon(playerid, PossibleRandomWeapons[r][0], PossibleRandomWeapons[r][1]);

	}
	else if(PlayerInfo[playerid][WsSkill] == 0)
	{
GivePlayerWeapon(playerid, 23,14);
GivePlayerWeapon(playerid, 25,23);
GivePlayerWeapon(playerid, 31,25);
	}
	else if(PlayerInfo[playerid][WsSkill] == 1)
	{
GivePlayerWeapon(playerid, 23,40);
GivePlayerWeapon(playerid, 25,43);
GivePlayerWeapon(playerid, 31,45);
	}
	else if(PlayerInfo[playerid][WsSkill] == 2)
	{
GivePlayerWeapon(playerid, 29,45);
GivePlayerWeapon(playerid, 33,43);
GivePlayerWeapon(playerid, 22,35);
	}
	else if(PlayerInfo[playerid][WsSkill] == 3)
	{
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 33,43);
GivePlayerWeapon(playerid, 22,35);
	}
	else if(PlayerInfo[playerid][WsSkill] == 4)
	{
GivePlayerWeapon(playerid, 27,25);
GivePlayerWeapon(playerid, 31,13);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 17,2);
	}
	else if(PlayerInfo[playerid][WsSkill] == 5)
	{
GivePlayerWeapon(playerid, 27,45);
GivePlayerWeapon(playerid, 31,33);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 17,5);
	}
	else if(PlayerInfo[playerid][WsSkill] == 6)
	{
GivePlayerWeapon(playerid, 27,45);
GivePlayerWeapon(playerid, 31,33);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 17,7);
	}
	else if(PlayerInfo[playerid][WsSkill] == 7)
	{
GivePlayerWeapon(playerid, 25,25);
GivePlayerWeapon(playerid, 30,43);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
	}
	else if(PlayerInfo[playerid][WsSkill] == 8)
	{
GivePlayerWeapon(playerid, 25,45);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 30,53);
GivePlayerWeapon(playerid, 24,45);
	}
	else if(PlayerInfo[playerid][WsSkill] == 9)
	{
GivePlayerWeapon(playerid, 25,75);
GivePlayerWeapon(playerid, 30,63);
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 4,1);
	}
	else if(PlayerInfo[playerid][WsSkill] == 10)
	{
GivePlayerWeapon(playerid, 28,15);
GivePlayerWeapon(playerid, 27,23);
GivePlayerWeapon(playerid, 24,15);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 11)
	{
GivePlayerWeapon(playerid, 30,33);
GivePlayerWeapon(playerid, 28,25);
GivePlayerWeapon(playerid, 27,33);
GivePlayerWeapon(playerid, 24,25);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 12)
	{
GivePlayerWeapon(playerid, 30,60);
GivePlayerWeapon(playerid, 28,35);
GivePlayerWeapon(playerid, 27,43);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 13)
	{
	GivePlayerWeapon(playerid, 30,90);
GivePlayerWeapon(playerid, 28,45);
GivePlayerWeapon(playerid, 27,53);
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 14)
	{
	GivePlayerWeapon(playerid, 30,130);
GivePlayerWeapon(playerid, 28,15);
GivePlayerWeapon(playerid, 26,15);
GivePlayerWeapon(playerid, 24,15);
GivePlayerWeapon(playerid, 4,1);
    	}
    		else if(PlayerInfo[playerid][WsSkill] == 15)
	{
	GivePlayerWeapon(playerid, 30,190);
GivePlayerWeapon(playerid, 28,20);
GivePlayerWeapon(playerid, 26,20);
GivePlayerWeapon(playerid, 24,20);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 16)
	{
GivePlayerWeapon(playerid, 30,300);
GivePlayerWeapon(playerid, 28,25);
GivePlayerWeapon(playerid, 26,25);
GivePlayerWeapon(playerid, 24,25);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 17)
	{
GivePlayerWeapon(playerid, 31,33);
GivePlayerWeapon(playerid, 28,30);
GivePlayerWeapon(playerid, 26,35);
GivePlayerWeapon(playerid, 24,30);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 18)
	{
	GivePlayerWeapon(playerid, 31,60);
GivePlayerWeapon(playerid, 28,35);
GivePlayerWeapon(playerid, 26,35);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 19)
	{
	GivePlayerWeapon(playerid, 31,90);
GivePlayerWeapon(playerid, 28,45);
GivePlayerWeapon(playerid, 26,45);
GivePlayerWeapon(playerid, 24,45);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    		else if(PlayerInfo[playerid][WsSkill] == 20)
	{
	GivePlayerWeapon(playerid, 31,120);
GivePlayerWeapon(playerid, 28,50);
GivePlayerWeapon(playerid, 26,50);
GivePlayerWeapon(playerid, 24,50);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    		else if(PlayerInfo[playerid][WsSkill] == 21)
	{
	GivePlayerWeapon(playerid, 31,150);
GivePlayerWeapon(playerid, 28,60);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,60);
GivePlayerWeapon(playerid, 24,60);
    	}
    	    	    		else if(PlayerInfo[playerid][WsSkill] == 22)
	{
	GivePlayerWeapon(playerid, 31,160);
GivePlayerWeapon(playerid, 28,70);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,70);
GivePlayerWeapon(playerid, 24,70);
    	}
    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 23)
	{
	GivePlayerWeapon(playerid, 31,180);
GivePlayerWeapon(playerid, 32,15);
GivePlayerWeapon(playerid, 26,15);
GivePlayerWeapon(playerid, 24,15);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 24)
	{
	GivePlayerWeapon(playerid, 31,220);
GivePlayerWeapon(playerid, 32,20);
GivePlayerWeapon(playerid, 26,20);
GivePlayerWeapon(playerid, 24,20);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 25)
	{
	GivePlayerWeapon(playerid, 31,240);
GivePlayerWeapon(playerid, 32,30);
GivePlayerWeapon(playerid, 26,30);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,30);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 26)
	{
	GivePlayerWeapon(playerid, 31,270);
GivePlayerWeapon(playerid, 32,50);
GivePlayerWeapon(playerid, 26,35);
GivePlayerWeapon(playerid, 24,35);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 27)
	{
	GivePlayerWeapon(playerid, 31,280);
GivePlayerWeapon(playerid, 32,60);
GivePlayerWeapon(playerid, 26,40);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,40);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 28)
	{
	GivePlayerWeapon(playerid, 31,300);
GivePlayerWeapon(playerid, 32,70);
GivePlayerWeapon(playerid, 26,50);
GivePlayerWeapon(playerid, 24,50);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 29)
	{
	GivePlayerWeapon(playerid, 31,320);
GivePlayerWeapon(playerid, 32,80);
GivePlayerWeapon(playerid, 26,55);
GivePlayerWeapon(playerid, 24,55);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 30)
	{
	GivePlayerWeapon(playerid, 31,350);
GivePlayerWeapon(playerid, 32,90);
GivePlayerWeapon(playerid, 26,60);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,60);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 31)
	{
	GivePlayerWeapon(playerid, 31,370);
GivePlayerWeapon(playerid, 32,100);
GivePlayerWeapon(playerid, 26,65);
GivePlayerWeapon(playerid, 24,65);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 32)
	{
	GivePlayerWeapon(playerid, 31,380);
GivePlayerWeapon(playerid, 32,110);
GivePlayerWeapon(playerid, 26,70);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,70);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 33)
	{
	GivePlayerWeapon(playerid, 31,390);
GivePlayerWeapon(playerid, 32,120);
GivePlayerWeapon(playerid, 26,77);
GivePlayerWeapon(playerid, 24,77);
GivePlayerWeapon(playerid, 4,1);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 34)
	{
	GivePlayerWeapon(playerid, 31,400);
GivePlayerWeapon(playerid, 32,150);
GivePlayerWeapon(playerid, 26,79);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,79);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 35)
	{
GivePlayerWeapon(playerid, 31,410);
GivePlayerWeapon(playerid, 32,190);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,83);
GivePlayerWeapon(playerid, 24,83);
GivePlayerWeapon(playerid, 33,15);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 36)
	{
	GivePlayerWeapon(playerid, 31,415);
GivePlayerWeapon(playerid, 32,200);
GivePlayerWeapon(playerid, 26,90);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,90);
GivePlayerWeapon(playerid, 33,20);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 37)
	{
	GivePlayerWeapon(playerid, 31,420);
GivePlayerWeapon(playerid, 32,230);
GivePlayerWeapon(playerid, 26,97);
GivePlayerWeapon(playerid, 24,97);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 33,35);
    	}
    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 38)
	{
	GivePlayerWeapon(playerid, 31,430);
GivePlayerWeapon(playerid, 32,260);
GivePlayerWeapon(playerid, 26,99);
GivePlayerWeapon(playerid, 24,99);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 33,42);
    	}
    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 39)
	{
	GivePlayerWeapon(playerid, 31,440);
GivePlayerWeapon(playerid, 32,290);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,115);
GivePlayerWeapon(playerid, 24,115);
GivePlayerWeapon(playerid, 33,62);
    	}
    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 40)
	{
	GivePlayerWeapon(playerid, 31,445);
GivePlayerWeapon(playerid, 32,340);
GivePlayerWeapon(playerid, 26,118);
GivePlayerWeapon(playerid, 24,118);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 33,79);
    	}
    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 41)
	{
	GivePlayerWeapon(playerid, 31,450);
GivePlayerWeapon(playerid, 32,375);
GivePlayerWeapon(playerid, 26,118);
GivePlayerWeapon(playerid, 24,118);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,1);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 42)
	{
	GivePlayerWeapon(playerid, 31,455);
GivePlayerWeapon(playerid, 32,390);
GivePlayerWeapon(playerid, 26,130);
GivePlayerWeapon(playerid, 24,130);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,2);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 43)
	{
	GivePlayerWeapon(playerid, 31,465);
GivePlayerWeapon(playerid, 32,410);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,147);
GivePlayerWeapon(playerid, 24,147);
GivePlayerWeapon(playerid, 34,3);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 44)
	{
	GivePlayerWeapon(playerid, 31,475);
GivePlayerWeapon(playerid, 32,450);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,159);
GivePlayerWeapon(playerid, 24,159);
GivePlayerWeapon(playerid, 34,4);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 45)
	{
	GivePlayerWeapon(playerid, 31,480);
GivePlayerWeapon(playerid, 32,490);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,167);
GivePlayerWeapon(playerid, 24,167);
GivePlayerWeapon(playerid, 34,5);
GivePlayerWeapon(playerid, 35,1);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 46)
	{
	GivePlayerWeapon(playerid, 31,485);
GivePlayerWeapon(playerid, 32,520);
GivePlayerWeapon(playerid, 26,180);
GivePlayerWeapon(playerid, 24,180);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,6);
GivePlayerWeapon(playerid, 35,2);
    	}
    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 47)
	{
	GivePlayerWeapon(playerid, 31,490);
GivePlayerWeapon(playerid, 32,530);
GivePlayerWeapon(playerid, 26,195);
GivePlayerWeapon(playerid, 24,195);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 34,7);
GivePlayerWeapon(playerid, 35,3);
    	}
    	    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 48)
	{
	GivePlayerWeapon(playerid, 31,495);
GivePlayerWeapon(playerid, 32,595);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,230);
GivePlayerWeapon(playerid, 24,200);
GivePlayerWeapon(playerid, 34,8);
GivePlayerWeapon(playerid, 35,4);
GivePlayerWeapon(playerid, 9,1);
    	}
    	    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 49)
	{
	GivePlayerWeapon(playerid, 31,500);
GivePlayerWeapon(playerid, 32,635);
GivePlayerWeapon(playerid, 26,260);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 24,210);
GivePlayerWeapon(playerid, 34,9);
GivePlayerWeapon(playerid, 35,5);
GivePlayerWeapon(playerid, 9,1);
    	}
    	    	    	    	    	    	    	    	    		else if(PlayerInfo[playerid][WsSkill] == 50)
	{
	GivePlayerWeapon(playerid, 31,510);
GivePlayerWeapon(playerid, 32,700);
GivePlayerWeapon(playerid, 4,1);
GivePlayerWeapon(playerid, 26,290);
GivePlayerWeapon(playerid, 24,220);
GivePlayerWeapon(playerid, 34,10);
GivePlayerWeapon(playerid, 35,6);
GivePlayerWeapon(playerid, 9,1);
	 }
GameTextForPlayer(playerid, "~w~TI SI BLIZO DO ~r~RISK ~w~I NE MOJESH DA POLZVASH ORUJIQ", 2000, 3);
        }
		}
			if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 120.0, 1066.6388,1018.3427,11.0000)) //
		{
				 ClearAnimations(playerid);
		  ClearAnimations(playerid);
		   ClearAnimations(playerid);
		    ClearAnimations(playerid);
		     ClearAnimations(playerid);
		      ClearAnimations(playerid);
		      GivePlayerGun(playerid, 0);
GivePlayerWeapon(playerid, 1,1);
GivePlayerWeapon(playerid, 1,0);
GivePlayerWeapon(playerid, 1);
GivePlayerWeapon(playerid, 0,1);
GivePlayerWeapon(playerid, 0,0);
GivePlayerWeapon(playerid, 0);
GivePlayerGun(playerid, 0);
GameTextForPlayer(playerid, "~w~TI SI BLIZO DO ~r~RISK ~w~I NE MOJESH DA POLZVASH ORUJIQ", 2000, 3);
        }
		}
		
		
			if(newkeys & 4)
	{
		if(PlayerInfo[playerid][pEU] == 1) //
		{
SetPlayerHealth(playerid, 100);
        }
		}

	
	
	
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2496.0005,-1692.7281,1014.7422) && GetPlayerVirtualWorld(playerid) == 0)
		{
            if(gTeam[playerid] != TEAM_GROVE)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Grove Street Families");
			SetPlayerPos(playerid, 2495.3167,-1691.1392,14.7656); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//
	//
	//
	//
	//
	//
	//
	//Black Mafia House
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1111.6012,-975.7668,42.7656)) //
		{
            if(gTeam[playerid] != TEAM_ZETAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Black Mafia");
			SetPlayerPos(playerid,2527.654052,-1679.388305,1015.498596); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2527.654052,-1679.388305,1015.498596) && GetPlayerVirtualWorld(playerid) == 0)
		{
            if(gTeam[playerid] != TEAM_ZETAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Black Mafia");
			SetPlayerPos(playerid, 1111.6012,-975.7668,42.7656); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//LSP
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1555.5021,-1675.5619,16.1953))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 246.7840,63.9002,1003.6406);
			SetPlayerFacingAngle(playerid, 0.0000);
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//ARRESTV
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 256.6060,63.8728,1003.6406) && GetPlayerVirtualWorld(playerid) == 0)
		{
	     	if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 1791.3505,-1590.9333,13.4962);
			SetPlayerFacingAngle(playerid, 267.6872);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1791.3505,-1590.9333,13.4962))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на GPD");
			SetPlayerPos(playerid, 256.6060,63.8728,1003.6406);
			SetPlayerFacingAngle(playerid, 0.0000);
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//Ballas House
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2148.9368,-1484.9143,26.6240)) //
		{
            if(gTeam[playerid] != TEAM_BALLAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Roling Heights Ballas");
			SetPlayerPos(playerid, 318.4752,1116.8606,1083.8828); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 5);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 318.4752,1116.8606,1083.8828) && GetPlayerVirtualWorld(playerid) == 0)
		{
            if(gTeam[playerid] != TEAM_BALLAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Roling Heights Ballas");
			SetPlayerPos(playerid, 2148.9368,-1484.9143,26.6240); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	//balas lv
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2159.9390,-1489.3600,26.6606)) //
		{
            if(gTeam[playerid] != TEAM_BALLAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Roling Heights Ballas");
			SetPlayerPos(playerid, 1967.4453,1755.8560,12.7437); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1967.4453,1755.8560,12.7437) && GetPlayerVirtualWorld(playerid) == 0)
		{
            if(gTeam[playerid] != TEAM_BALLAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Roling Heights Ballas");
			SetPlayerPos(playerid, 2159.9390,-1489.3600,26.6606); //
			SetPlayerFacingAngle(playerid, 180.0000); //
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//balas lv
    // MS-13
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -227.2777,2711.9463,62.9766))
		{
            if(gTeam[playerid] != TEAM_MS13)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Mara Salvatrucha 13");
			SetPlayerPos(playerid, 1523.509887,-47.821197,1002.130981);
			SetPlayerFacingAngle(playerid, 180.0516);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1523.509887,-47.821197,1002.130981) && GetPlayerVirtualWorld(playerid) == 0)
		{
            if(gTeam[playerid] != TEAM_MS13)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Mara Salvatrucha 13");
			SetPlayerPos(playerid, -227.2777,2711.9463,62.9766);
			SetPlayerFacingAngle(playerid, 178.7981);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -242.7389,2711.9526,62.6875))
		{
            if(gTeam[playerid] != TEAM_MS13)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Mara Salvatrucha 13");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 180.0516);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 5);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 5)
		{
            if(gTeam[playerid] != TEAM_MS13)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Mara Salvatrucha 13");
			SetPlayerPos(playerid, -242.7389,2711.9526,62.6875);
			SetPlayerFacingAngle(playerid, 178.7981);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
        //Keys
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0,   267.4891,85.8714,1001.0391))
		{
		    MoveObject(lsk2, 266.486785, 87.487892, 1001.280395, 5);
            }
         }
	
	
	//Pizza Job
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1774.7025,-1309.2196,131.9282))
		{
		new string[256];
            if(PlayerInfo[playerid][pOfis] == 1)
            return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да притежаваш офис за да използваш балоните");
            MoveObject(balon1, 1325.3752,233.3338,21.7555, 9);
			PlayerInfo[playerid][pBalon1] = 20*60;
SendClientMessage(playerid, COLOR_ORANGE, "Балона ще се върне след 20 минути");
		}
	}
	//flag
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -976.5959,1045.8835,1352.6603) && vzetflag1 == 0)
		{
		new string[256];
            if(PlayerInfo[playerid][pRedCTF] == 1)
{
	 	                format(string, sizeof(string), "Capture The Flag:%s взе флага на синият отбор",PlayerName(playerid));
	                SendClientMessageToAll(0xFF4500FF,string);
            SetPlayerAttachedObject( playerid, 6, 2914, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
			PlayerInfo[playerid][pFlakche1] = 1;
			vzetflag1 = 1;
			DestroyObject(flag1);
			DestroyObject(flag3);
			}
		}
	}
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -1130.3170,1075.4589,1353.4221) && vzetflag2 == 0)
		{
		new string[256];
     if(PlayerInfo[playerid][pBlueCTF] == 1)
	 {
	 	                format(string, sizeof(string), "Capture The Flag:%s взе флага на червения отбор",PlayerName(playerid));
	                SendClientMessageToAll(COLOR_BL1,string);
            SetPlayerAttachedObject( playerid, 6, 2914, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663);
   PlayerInfo[playerid][pFlakche2] = 1;
   vzetflag2 = 1;
   DestroyObject(flag2);
   DestroyObject(flag4);
   }
		}
	}
	//flag
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1804.6072,-1308.5834,131.9282))
		{
		new string[256];
            if(PlayerInfo[playerid][pOfis] == 1)
            return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да притежаваш офис за да използваш балоните");
			PlayerInfo[playerid][pBalon2] = 20*60;

SendClientMessage(playerid, COLOR_ORANGE, "Балона ще се върне след 20 минути");
		}
	}
			if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1832.0045,-1315.3163,131.7344))
		{
		new string[256];
            if(PlayerInfo[playerid][pOfis] == 1)
            return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да притежаваш офис за да използваш балоните");
            MoveObject(balon3, -522.2156,2614.4509,54.4687, 9);
			PlayerInfo[playerid][pBalon3] = 20*60;
SendClientMessage(playerid, COLOR_ORANGE, "Балона ще се върне след 20 минути");
		}
	}
				if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1833.5729,-1274.0002,131.7344))
		{
		new string[256];
            if(PlayerInfo[playerid][pOfis] == 1)
            return SendClientMessage(playerid, COLOR_GRAD1, "Трябва да притежаваш офис за да използваш балоните");
            MoveObject(balon4, 876.1370,832.3546,15.4271, 9);
			PlayerInfo[playerid][pBalon4] = 20*60;
SendClientMessage(playerid, COLOR_ORANGE, "Балона ще се върне след 20 минути");
		}
	}
	//
		if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1667.4623,-2106.9377,14.0723))
		{
            if(gTeam[playerid] != TEAM_AsianBoyz)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Asian Boyz");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 7);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 7)
		{
            if(gTeam[playerid] != TEAM_AsianBoyz)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Asian Boyz");
			SetPlayerPos(playerid, 1667.4623,-2106.9377,14.0723);
			SetPlayerFacingAngle(playerid, 181.2894);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	
		// CBK DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 255.1478,74.2586,1003.6406))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 98899);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 98899)
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
			SetPlayerPos(playerid, 255.1478,74.2586,1003.6406);
			SetPlayerFacingAngle(playerid, 181.2894);
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	
			//RIFA DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.1, 2451.2578,-1685.6801,1013.5078))
		{
            if(gTeam[playerid] != TEAM_RIFA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на San Fierro Rifa");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 988991);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.1, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 988991)
		{
            if(gTeam[playerid] != TEAM_RIFA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на San Fierro Rifa");
			SetPlayerPos(playerid, 2451.2578,-1685.6801,1013.5078);
			SetPlayerFacingAngle(playerid, 181.2894);
			SetPlayerInterior(playerid, 2);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	
	
	
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0,   -660.9448,953.5443,12.1328))
		{
            if(gTeam[playerid] != TEAM_NZ)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Da Nang Boys");
			SetPlayerPos(playerid, 286.800994,-82.547599,1001.515625);
			SetPlayerFacingAngle(playerid, 180.0516);
			SetPlayerInterior(playerid, 12);
			SetPlayerVirtualWorld(playerid, 5);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 286.800994,-82.547599,1001.515625) && GetPlayerVirtualWorld(playerid) == 5)
		{
            if(gTeam[playerid] != TEAM_NZ)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Da Nang Boys");
			SetPlayerPos(playerid, -660.9448,953.5443,12.1328);
			SetPlayerFacingAngle(playerid, 178.7981);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//SB house
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0,   2481.3926,1525.4708,11.7710))
		{
            if(gTeam[playerid] != TEAM_Thugs)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Thug Life");
			SetPlayerPos(playerid, 2324.3811,-1149.5460,1050.7101);
			SetPlayerFacingAngle(playerid, 180.0516);
			SetPlayerInterior(playerid, 12);
			SetPlayerVirtualWorld(playerid, 8);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2324.3811,-1149.5460,1050.7101) && GetPlayerVirtualWorld(playerid) == 8)
		{
            if(gTeam[playerid] != TEAM_Thugs)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Thug Life");
			SetPlayerPos(playerid, 2481.3926,1525.4708,11.7710);
			SetPlayerFacingAngle(playerid, 178.7981);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	// SG DM BIZZ
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2561.5891,1561.7385,10.8203))
		{
            if(gTeam[playerid] != TEAM_Thugs)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Thug Life");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 9);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 9)
		{
            if(gTeam[playerid] != TEAM_Thugs)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Thug Life");
			SetPlayerPos(playerid, 2561.5891,1561.7385,10.8203);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//BALLAS INTERIOR
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1699.7346,-1667.8134,20.2078))
		{
            if(gTeam[playerid] != TEAM_BALLAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Ballas");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 11);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1412.639892,-1.787510,1000.924377) && GetPlayerVirtualWorld(playerid) == 11)
		{
            if(gTeam[playerid] != TEAM_BALLAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Ballas");
			SetPlayerPos(playerid, 1699.7346,-1667.8134,20.2078);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//BALLAS INTERIOR 2
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1960.4010,953.4489,10.8203))
		{
            if(gTeam[playerid] != TEAM_BALLAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Ballas");
			SetPlayerPos(playerid, 1412.639892,-1.787510,1000.924377);
			SetPlayerFacingAngle(playerid, 300.1650);
			SetPlayerInterior(playerid, 1);
			SetPlayerVirtualWorld(playerid, 11);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1412.6207,-5.9961,1000.9244) && GetPlayerVirtualWorld(playerid) == 11)
		{
            if(gTeam[playerid] != TEAM_BALLAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Ballas");
			SetPlayerPos(playerid, 1960.4010,953.4489,10.8203);
			SetPlayerFacingAngle(playerid, 91.9290);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
			//DFGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 1690.0676,-2124.6340,13.5469))
		{
            if(gTeam[playerid] != TEAM_AsianBoyz)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Asian Boyz");
            ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//NANGGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2597.7771,1900.6121,11.0312))
		{
            if(gTeam[playerid] != TEAM_NZ)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Da Nang Boys");
            ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
				//AZTEC
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 259.1709,1243.1801,1084.2653))
		{
            if(gTeam[playerid] != TEAM_TRIADS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Varios Los Aztecas");
            ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
				//BGM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2597.7771,1900.6121,11.0312))
		{
            if(gTeam[playerid] != TEAM_BulgarianMafia)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Bulgarian Mafia");
            ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
	
	
	
			if(newkeys & 4)
	{
		if(PlayerInfo[playerid][pFight] == 1) //
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Ти се биеш");
			SetPlayerHealth(playerid, 0);
			PlayerInfo[playerid][pInEvent] = 0;
			PlayerInfo[playerid][pEnter] = 0;
			PlayerInfo[playerid][pFight] = 0;
		}
	}
			//SOAGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -767.8986,2765.4028,45.8556))
		{
            if(gTeam[playerid] != TEAM_SoA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на SOA");
            ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//MSGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -209.2619,2713.0957,62.9794))
		{
            if(gTeam[playerid] != TEAM_MS13)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на MS13");
            ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//RIFAGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2449.5247,-1696.3842,1013.5078))
		{
            if(gTeam[playerid] != TEAM_RIFA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на San Fierro Rifa");
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//RIFAGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 134.6665,1380.8439,1088.3672))
		{
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//VAGOSGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2544.5273,-1031.2401,69.5779))
		{
            if(gTeam[playerid] != TEAM_VAGOS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Los Santos Vagos");
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//CRIPZGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 136.6863,1401.5865,1088.3672))
		{
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//YAKUZAGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1655.7351,-1655.6487,22.5156))
		{
            if(gTeam[playerid] != TEAM_YAKUZA)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Yakuza");
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
		//BOYZGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1997.9189,-1115.3516,26.7737))
		{
            if(gTeam[playerid] != TEAM_BOYZ)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Boyz N The Hood");
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//GROVEGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2497.1770,-1702.9525,1014.7422))
		{
            if(gTeam[playerid] != TEAM_GROVE)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Grove Street Families");
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
	//
	    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1273.4207,-781.1418,1089.9375))
		{
            if(gTeam[playerid] != TEAM_BulgarianMafia)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Bulgarian Mafia");
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//VIPGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1237.0752,-2004.5337,59.8660))
		{
            if(gTeam[playerid] != TEAM_VIP)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на VIP");
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//GPDGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 252.25920, 70.95690, 1003.72852))
		{
            if(gTeam[playerid] != TEAM_GPD)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Gold Play Police Department");
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
			//BALLASGUNM
    if(newkeys & 4)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 316.7301,1119.6609,1083.8828))
		{
            if(gTeam[playerid] != TEAM_BALLAS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Rolling Heights Ballas");
ShowPlayerDialog(playerid, DIALOG_WEAPONS, DIALOG_STYLE_LIST, "Оръжия", "Knife\nBaseball Bat\n9mm\nSilenced 9mm\nDesert Eagle\nShotgun\nSawnoff\nCombat Shotgun\nUzi\nMP5\nTec9\nAK47\nM4\nCountry Rifle\nSniper Rifle", "Избери", "Излез");
		}
	}
	//24/4BIZ TUKTP
	//Vagoshouse
    if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1879.1912,2339.4458,10.9799))
		{
            if(gTeam[playerid] != TEAM_VAGOS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Los Santos Vagos");
			SetPlayerPos(playerid, 2549.2017,-1032.2946,69.5789);
			SetPlayerFacingAngle(playerid, 180.0516);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 2549.2019,-1032.2916,69.5789))
		{
            if(gTeam[playerid] != TEAM_VAGOS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Los Santos Vagos");
			SetPlayerPos(playerid, 1879.1912,2339.4458,10.9799);
			SetPlayerFacingAngle(playerid, 178.7981);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
	//Vagoshouse
    if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2562.1140,-1034.3037,69.8692))
		{
            if(gTeam[playerid] != TEAM_VAGOS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Los Santos Vagos");
			SetPlayerPos(playerid, 2324.3811,-1149.5460,1050.7101);
			SetPlayerFacingAngle(playerid, 180.0516);
			SetPlayerInterior(playerid, 12);
			SetPlayerVirtualWorld(playerid, 12);
		}
	}
	if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 2324.3811,-1149.5460,1050.7101) && GetPlayerVirtualWorld(playerid) == 12)
		{
            if(gTeam[playerid] != TEAM_VAGOS)
			return SendClientMessage(playerid, COLOR_GRAD1, "Ти не си член на Los Santos Vagos");
			SetPlayerPos(playerid, 2562.1140,-1034.3037,69.8692);
			SetPlayerFacingAngle(playerid, 178.7981);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
		//JizzyExit
    if(newkeys & 16)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, -2636.5266,1402.6986,906.4609))
		{
			SetPlayerPos(playerid, 2421.6741,-1220.6056,25.4731);
			SetPlayerFacingAngle(playerid, 180.0516);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
		}
	}
//------------------------------------------------------------------------------
				    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_FBI)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 1.0, 321.5624,311.0695,999.1484))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeams == 0)
				{
				    MoveObject(fbi1, 321.205200, -1188.425415, 71.692443, 5);
					IsGateTeams = 1;
				}
 				else if(IsGateTeams == 1)
  				{
   					MoveObject(fbi1, 320.913177, 311.223388, 999.404968, 5);
      				IsGateTeams = 0;
         		}
      		}
   		}
	}

				    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_FBI)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 1.0, 321.8287,315.5127,999.1484))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeams3 == 0)
				{
				    MoveObject(fbi2, 320.884490, 315.353363, 999.404968, 5);
					IsGateTeams3 = 1;
				}
 				else if(IsGateTeams3 == 1)
  				{
   					MoveObject(fbi2, 320.873474, 316.903106, 999.404968, 5);
      				IsGateTeams3 = 0;
         		}
      		}
   		}
	}

				    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_GPD)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 1.0, 267.2650,81.5005,1001.0391))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeams1 == 0)
				{
 			        MoveObject(lsk1, 266.352783, 83.219932, 1001.280395, 3);
					IsGateTeams1 = 1;
				}
 				else if(IsGateTeams1 == 1)
  				{
				    MoveObject(lsk1, 266.282501, 80.981002, 1001.280395, 3);
      				IsGateTeams1 = 0;
         		}
      		}
   		}
	}
				    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_GPD)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 1.0, 267.2773,86.8652,1001.0391))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeams2 == 0)
				{
 			        MoveObject(lsk2, 266.486785, 87.487892, 1001.280395, 5);
					IsGateTeams2 = 1;
				}
 				else if(IsGateTeams2 == 1)
  				{
				    MoveObject(lsk2, 266.434112, 85.750198, 1001.271728, 5);
      				IsGateTeams2 = 0;
         		}
      		}
   		}
	}
				    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_RIFA)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, 2516.7625,2346.0054,10.8203))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeams4 == 0)
				{
 			        MoveObject(msgate, 2517.3000488281, 2346.1999511719, -13.39999961853, 5);
					IsGateTeams4 = 1;
				PlayerInfo[playerid][pResP3] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Портата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeams4 == 1)
  				{
  				    IsGateTeams4 = 0;
         		}
      		}
   		}
	}
	
	
	
				    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_CRIPZ)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 10.0, 319.7150,-1186.6353,77.0158))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeams5 == 0)
				{
 			        MoveObject(cripz2, 321.455444, -1187.909057, 70.827102, 3);
					IsGateTeams5 = 1;
				PlayerInfo[playerid][pResP1] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Портата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeams5 == 1)
  				{
      				IsGateTeams5 = 0;
         		}
      		}
   		}
	}

				    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_YAKUZA)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, 1644.7200,-1714.7666,15.6094))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeams6 == 0)
				{
 			        MoveObject(yakuzap, 1642.983398, -1715.314453, 7.852410, 3);
					IsGateTeams6 = 1;
				PlayerInfo[playerid][pResP2] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Портата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeams6 == 1)
  				{
      				IsGateTeams6 = 0;
         		}
      		}
   		}
	}
	
	
	
					    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_Thugs)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, 496.6947,-1457.9410,17.2442))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeams7 == 0)
				{
 			        MoveObject(tporta1, 497.792083, -1456.461303, 7.498361, 3);
					IsGateTeams7 = 1;
				PlayerInfo[playerid][pResPA] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Портата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeams7 == 1)
  				{
      				IsGateTeams7 = 0;
         		}
      		}
   		}
	}
	
	
	

					    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_GPD)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, 2236.0369,2454.3040,10.7270))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeamsLVPD == 0)
				{
				DestroyObject(lvpdb1);
				lvpdb2 = CreateObject(968, 2238.181640, 2450.434814, 10.786182, 0.000000, 0.000000, 0.000000);
				DestroyObject(lvpdb);
					IsGateTeamsLVPD = 1;
				PlayerInfo[playerid][pResLVPD] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Бариерата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeamsLVPD == 1)
  				{
      				IsGateTeamsLVPD = 0;
         		}
      		}
   		}
	}
	
	
						    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_GPD)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, 1542.7610,-1627.4590,13.3828))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeamsLSPD == 0)
				{
				DestroyObject(lspdb1);
				lspdb2 = CreateObject(968, 1544.517822, -1630.802856, 12.942745, 0.000000, 0.000000, 0.000000);
				DestroyObject(lspdb);
					IsGateTeamsLSPD = 1;
				PlayerInfo[playerid][pResLSPD] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Бариерата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeamsLSPD == 1)
  				{
      				IsGateTeamsLSPD = 0;
         		}
      		}
   		}
	}
	

	
							    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_GPD)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, -1569.4429,661.8232,7.1875))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeamsSFPD == 0)
				{
				DestroyObject(sfpdb1);
				sfpdb2 = CreateObject(968, -1572.117431, 658.834045, 6.778139, 0.000000, 0.000000, 0.000000);
				DestroyObject(sfpdb);
					IsGateTeamsSFPD = 1;
				PlayerInfo[playerid][pResSFPD] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Бариерата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeamsSFPD == 1)
  				{
      				IsGateTeamsSFPD = 0;
         		}
      		}
   		}
	}
	
						    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_Thugs)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, 501.3874,-1558.6688,16.8394))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeams8 == 0)
				{
 			        MoveObject(tporta2, 501.706787, -1559.498657, 9.724867, 3);
					IsGateTeams8 = 1;
				PlayerInfo[playerid][pResPB] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Портата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeams8 == 1)
  				{
      				IsGateTeams8 = 0;
         		}
      		}
   		}
	}
	
	
	
							    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(DFDuty[playerid] == 1)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, 344.1118,1800.3257,18.3556))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeamsDF == 0)
				{
 			        MoveObject(dfb1, 345.396636, 1797.919677, 13.974860, 3);
					IsGateTeamsDF = 1;
				PlayerInfo[playerid][pResDF] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Портата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeamsDF == 1)
  				{
      				IsGateTeamsDF = 0;
         		}
      		}
   		}
	}
	if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(PlayerInfo[playerid][pMember] == TEAM_DPK)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, 2498.8916,2773.0569,10.8203))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeamsDPK == 0)
				{
 			        MoveObject(dpk1, 2497.4063, 2777.0703, 6.5313, 3);
 			        MoveObject(dpk2, 2497.4063, 2769.1094, 6.5313, 3);
					IsGateTeamsDF = 1;
				PlayerInfo[playerid][pResDF] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Портата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeamsDPK == 1)
  				{
      				IsGateTeamsDPK = 0;
         		}
      		}
   		}
	}
	
	
								    if(newkeys == 65536 && !IsPlayerInAnyVehicle(playerid) || newkeys == 131072 && IsPlayerInAnyVehicle(playerid))//Копчето с което да се отваря вратата (Y и 2)
	{
    	if(gTeam[playerid] == TEAM_GPD)//Проверката дали си в тази банда/мафия
   		{
			if(IsPlayerInRangeOfPoint( playerid, 5.0, 1588.4388,-1634.7316,13.3828))//Това проверява ли си до вратата при отварянето и. Слагате координатите в затворено положение.
			{
				if(IsGateTeamsLS == 0)
				{
 			        MoveObject(lsb, 1589.457153, -1638.095458, 4.716773, 3);
					IsGateTeamsLS = 1;
				PlayerInfo[playerid][pResLS] = 18;
			 SendClientMessage(playerid,COLOR_LIGHTBLUE,"Портата ще се затвори след 5 секунди");
				}
 				else if(IsGateTeamsLS == 1)
  				{
      				IsGateTeamsLS = 0;
         		}
      		}
   		}
	}
	
	
	new Car, State, Float:x, Float:y, Float:z;
	Car = GetPlayerVehicleID(playerid);
	State = GetPlayerState(playerid);
	if(RELEASED(KEY_FIRE))
	{
	   if(State == PLAYER_STATE_DRIVER)
	   {
	   	if(Speed[playerid] == 1)
    {
	      GetVehicleVelocity(Car, x, y, z);
	      SetVehicleVelocity(Car, x*2, y*2, z*2);
	      }
	   }
	}

//===============================[RC Vehicles  tporta1 ]==================================

    if(newkeys == KEY_SECONDARY_ATTACK )
	{
		new VehicleSeat = GetPlayerVehicleSeat(playerid);
		if(VehicleSeat == -1)
		{
			for(new forvehicleid; forvehicleid < MAX_VEHICLES; forvehicleid++)
			{
				if(!IsVehicleRc(forvehicleid)) continue;
				GetVehiclePos(forvehicleid, x, y, z);
				if(IsPlayerInRangeOfPoint(playerid, 6, x, y, z))
				{
					PutPlayerInVehicle(playerid, forvehicleid, 0);
					break;
				}
			}
		}
		else if(VehicleSeat == 0)
		{
			if(IsVehicleRc(GetPlayerVehicleID(playerid)))
			{
				GetPlayerPos(playerid, x, y, z);
				SetPlayerPos(playerid, x+1, y, z+1.0);
			}
		}
	}
    if(newkeys == KEY_FIRE || newkeys == 12 || newkeys == 36)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 564)
		{
			new Float:angle;
			GetPlayerPos(playerid,x,y,z);
			GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
			x += (30 * floatsin(-angle + 5, degrees));
			y += (30 * floatcos(-angle + 5, degrees));
			CreateExplosion(x,y,z,3,4.0);
		}
	}
	return 1;
}
public OnObjectMoved(objectid)
{
    new Float:x, Float:y, Float:z;
	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
		if(objectid == Obj_FloorDoors[i][0])
		{
		    GetObjectPos(Obj_FloorDoors[i][0], x, y, z);

		    if(x < X_DOOR_L_OPENED - 0.5)   // Some floor doors have shut, move the elevator to next floor in queue:
		    {
				Elevator_MoveToFloor(ElevatorQueue[0]);
				RemoveFirstQueueFloor();
			}
		}
	}

	if(objectid == Obj_Elevator)   // The elevator reached the specified floor.
	{
	    KillTimer(ElevatorBoostTimer);  // Kills the timer, in case the elevator reached the floor before boost.

	    FloorRequestedBy[ElevatorFloor] = INVALID_PLAYER_ID;

	    Elevator_OpenDoors();
	    Floor_OpenDoors(ElevatorFloor);

	    GetObjectPos(Obj_Elevator, x, y, z);
	    Label_Elevator	= Create3DTextLabel("{CCCCCC}Използвай '{FFFFFF}~k~~CONVERSATION_YES~{CCCCCC}' за да използваш асансиора", 0xCCCCCCAA, 1784.9822, -1302.0426, z - 0.9, 4.0, 0, 1);

	    ElevatorState 	= ELEVATOR_STATE_WAITING;
	    SetTimer("Elevator_TurnToIdle", ELEVATOR_WAIT_TIME, 0);
	}

	return 1;
}
//==============================================================================
public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}
//--------------------------------------------------------------------------------
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
////////////////////////////////////////

///////////////////////////////////////

    if(dialogid == 102)
                {
    if(response)
    {
    new string[256];
     if(!strlen(inputtext))return ShowPlayerDialog(playerid, 102, DIALOG_STYLE_INPUT, "??????", "?? ??????????? ????????? ????????? ????????????? ???????\n???? ????????? ?????? ?????? ????? ?????? ? ?????????? ????? ?????????\n??????? ???? ??????/?????? ? ???? ????", "?????????", "??????");
     new sendername[MAX_PLAYER_NAME];
     GetPlayerName(playerid, sendername, sizeof(sendername));
     format(string, sizeof(string), "[Report] от %s[%d]: за %s", sendername, playerid, (inputtext));
     SendAdminMessage(COLOR_RED, string);
     return 1;
    }
    else
    {
     SendClientMessage(playerid, COLOR_BLUE, "?? ?????????? ?? ??????????? ????????? ?????????????");
    }
   }
   
    if(dialogid == 1998)
                {
        if(response)
            {
                      SendClientMessage(playerid,-1,"Aranjeaza cum vrei sa fie pozitionat tatuaju.");
                        new Float:X, Float:Y, Float:Z, Float:A;
                        GetPlayerFacingAngle(playerid, A);
                        GetPlayerPos(playerid, X, Y, Z);
             graffity = CreateObject(19482,X,Y,Z+0.5,0.0,0.0,0.0,0.0);
SetObjectMaterialText(graffity,"Tatuaj nou",0,OBJECT_MATERIAL_SIZE_256x256,"Comic Sans MS",24,1,0xAA3333AA,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
EditObject(playerid,graffity);
graf[playerid] = 1;
                                }
       }
           if(dialogid == 1996)
    {
        if(response)
        {
            if(listitem == 0)
            {
                SetObjectMaterialText(graffity, GrafText[playerid],0,OBJECT_MATERIAL_SIZE_256x256,"Comic Sans MS",24,1,-256,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
            }
            if(listitem == 1)
            {
                SetObjectMaterialText(graffity, GrafText[playerid],0,OBJECT_MATERIAL_SIZE_256x256,"Comic Sans MS",24,1,-16468988,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
            }
            if(listitem == 2)
            {
                SetObjectMaterialText(graffity, GrafText[playerid],0,OBJECT_MATERIAL_SIZE_256x256,"Comic Sans MS",24,1,-16730675,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
            }
        }
    }
       if(dialogid == 1997)
        {
        if(response)
            {
              if(!strlen(inputtext))
            {
                SendClientMessage(playerid,-1,"ERROR: Not write in the box text. !");
                ShowPlayerDialog(playerid, 1997, DIALOG_STYLE_INPUT, "Graffity System", "Scrie in aceasta casuta cu ce nume vrei sa fie tatuaju.", "Ok", "");
                return 1;
            }
                                    new Float:X, Float:Y, Float:Z, Float:A;
                        GetPlayerFacingAngle(playerid, A);
                                                GetPlayerPos(playerid, X, Y, Z);
SetObjectMaterialText(graffity, inputtext,0,OBJECT_MATERIAL_SIZE_256x256,"Italic",24,1,0xFFFFFFFF,0,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
strcat(GrafText[playerid], inputtext, MAX_GRAFTEXT);
ShowPlayerDialog(playerid, 1996, DIALOG_STYLE_LIST, "Color Graffity", "Yellow\nGreen\nSky-Blue", "Select", "Close");
graf[playerid] = 0;
}
}
new inptim = strval( inputtext );
if(dialogid == 62 && inptim <= PlayerInfo[playerid][pAccount])
{
if(response) //Continue
  			{
new string[256];
				GivePlayerCash(playerid,inptim);
				PlayerInfo[playerid][pAccount]=PlayerInfo[playerid][pAccount]-inptim;
				format(string, sizeof(string), "{FFFFFF}Вие успешно изтеглихте {339933}$%d {FFFFFF}от вашата обща сума. ", inptim,PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else ShowPlayerDialog(playerid, DIALOG_ATM, DIALOG_STYLE_LIST, "Банкомат", "Обща сума\nИзтегли пари\nПлати нарушение", "Избери", "Затвори");
}



if(dialogid == 69)
{
if(response) //Continue
  			{
new string[256];
				GivePlayerCash(playerid,-inptim*1000);
				PlayerInfo[playerid][pWantedLevel]= PlayerInfo[playerid][pWantedLevel]-inptim;
				format(string, sizeof(string), "{FFFFFF}Вие успешно платихте {339933}%d {FFFFFF}нарушение/я ", inptim,PlayerInfo[playerid][pAccount]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else ShowPlayerDialog(playerid, DIALOG_ATM, DIALOG_STYLE_LIST, "Банкомат", "Обща сума\nИзтегли пари\nПлати нарушение", "Избери", "Затвори");
}


if(dialogid == 70)
{
if(response) //Continue
  			{
new string[256];
				GivePlayerCash(playerid,-inptim);
				PlayerInfo[playerid][pAccount]= PlayerInfo[playerid][pAccount]+inptim;
				format(string, sizeof(string), "{FFFFFF}Вие успешно внесохте {339933}$%d {FFFFFF}във вашата обща сума", inptim);
				SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else ShowPlayerDialog(playerid, DIALOG_BANK, DIALOG_STYLE_LIST, "Банка", "Обща сума\nИзтегли пари\nВнеси пари", "Избери", "Затвори");
}


new vid = GetPlayerVehicleID(playerid);
    if(dialogid == 68 && inptim <= 100)
{
if(IsPlayerInRangeOfPoint(playerid, 10.0, 2149.8328,2748.2905,10.5474) && PlayerInfo[playerid][pCash] >= inptim) //
  {
        F1 -= inptim;
fuel[vid] = fuel[vid] +inptim;
        GivePlayerCash(playerid, -inptim);
        }
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 1944.1652,-1769.8917,13.1157)  && PlayerInfo[playerid][pCash] >= inptim) //
  {
        //
        F2 -= inptim;
fuel[vid] = fuel[vid] +inptim;
        GivePlayerCash(playerid, -inptim);
        }
        //
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 2116.6611,922.4604,10.5474)  && PlayerInfo[playerid][pCash] >= inptim) //
  {
        F3 -= inptim;
fuel[vid] = fuel[vid] +inptim;
        GivePlayerCash(playerid, -inptim);
        }
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 2204.3835,2473.3994,10.5474)  && PlayerInfo[playerid][pCash] >= inptim) //
  {
        F4 -= inptim;
fuel[vid] = fuel[vid] +inptim;
        GivePlayerCash(playerid, -inptim);
        }
        if(fuel[vid] >= 100)
        {
        fuel[vid] = fuel[vid] = 100;
}
        //
        //
        
        
        
        
            if(dialogid == 73)
{
new string[256];
format(string, sizeof(string), "{66B2FF}Вие купихте %d литра бензин за тубата", inptim);
SendClientMessage(playerid, COLOR_WHITE, string);
PlayerInfo[playerid][pTuba2] += inptim;
GivePlayerCash(playerid, -inptim);
if(IsPlayerInRangeOfPoint(playerid, 10.0, 2149.8328,2748.2905,10.5474) && PlayerInfo[playerid][pCash] >= inptim) //
  {
        F1 -= inptim;
        }
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 1944.1652,-1769.8917,13.1157)  && PlayerInfo[playerid][pCash] >= inptim) //
  {
        //
        F2 -= inptim;
        }
        //
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 2116.6611,922.4604,10.5474)  && PlayerInfo[playerid][pCash] >= inptim) //
  {
        F3 -= inptim;
        }
        if(IsPlayerInRangeOfPoint(playerid, 10.0, 2204.3835,2473.3994,10.5474)  && PlayerInfo[playerid][pCash] >= inptim) //
  {
        F4 -= inptim;
        }
        
}
        //
        //



return 1;
}
	switch(dialogid)
	{
	    case DIALOG_SOE:
	    {
	        if(response)
	        {
	            if(listitem == 1) ShowPlayerDialog(playerid, DIALOG_CREATE, DIALOG_STYLE_INPUT, \
				"Objects","\nВъведи ID\nМаксимално ID 19469",\
				"Създаи","Назад");
				if(listitem == 2) SelectObject(playerid);
	        }
	    }
	    case DIALOG_CREATE:
	    {
			if(!response) return OnPlayerCommandText(playerid, "/createobject");
			if(!strval(inputtext)) return ShowPlayerDialog(playerid, DIALOG_CREATE, DIALOG_STYLE_INPUT, \
			"Создание объекта","Въведи ID\nМаксимално ID - 19469\n",\
			"Создать","Назад");
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			new obj;
			obj = CreateObject(strval(inputtext), X+1, Y+1, Z+1, 0.0,0.0,0.0);
			EditObject(playerid, obj);
			SetPVarInt(playerid, "ModelID", strval(inputtext));
		}
	    case DIALOG_SELECT:
	    {
			new objectid = GetPVarInt(playerid, "SelectedObject");
			if(response) EditObject(playerid, objectid);
			else DestroyObject(objectid) && CancelEdit(playerid);
	    }
	    }
if(dialogid == 6)
{
if(response)
{
    Kick(playerid);
}
}
if(dialogid == 4)
{
if(response)
{
new cmds[2230];
            strins(cmds,"{00FF00}---Основни команди---\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/translate - за да изпратите пари на някого в неговата обща сума\n",strlen(cmds));
            strins(cmds,"{336600}/leavedm - за да напуснете, ако сте в Deathmatch мисия\n",strlen(cmds));
            strins(cmds,"{FF0000}/leaverace - за да се откажете, ако сте в Streetrace мисия\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/dice - за да метнете зарче\n",strlen(cmds));
            strins(cmds,"{336600}/refuel - за да заредите вашето превозно средство с бензин\n",strlen(cmds));
            strins(cmds,"{FF0000}/mduty - за да си смените скина на механик\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/briefcase(/bcase) - за да извадите куфарче\n",strlen(cmds));
            strins(cmds,"{336600}/drop - за да изхвърлиш неща, които имаш в себе си\n",strlen(cmds));
            strins(cmds,"{FF0000}/afk - за да премините в режим AFK\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/back - за да се махнете от режим AFK\n",strlen(cmds));
            strins(cmds,"{336600}/vote - за да гласувате, когато е пуснато гласуване за RESPAWN на превозните средства\n",strlen(cmds));
            strins(cmds,"{336600}/poll - за да гласувате, когато е стартиран въпрос от админ\n",strlen(cmds));
            strins(cmds,"{336600}/info - за да проверите дадена къща/бизнес какъв Ep Skill и Money Skill изисква (трябва да сте до къща/бизнес)\n",strlen(cmds));
            strins(cmds,"{336600}/mywarns - за да проверите кога, от какво и за какво са ви слагани или махани предупреждения\n",strlen(cmds));
            strins(cmds,"{336600}/joinvip - за да влезеш в банда VIP\n",strlen(cmds));
            strins(cmds,"{336600}/payfwarn - за да махнеш едно от твойте FACTION предупреждения в Gold Play Department\n",strlen(cmds));
            strins(cmds,"{336600}/togchat - забраняваш/махаш забраната за себе си да виждаш какво пишат другите в чата\n",strlen(cmds));
            strins(cmds,"{336600}/hitman - за да заложиш цената на главата на даден играч\n",strlen(cmds));
            strins(cmds,"{336600}/bounties - за да видиш онлайн играчите със заложени цени на главите им\n",strlen(cmds));
            strins(cmds,"{336600}/checkturf - за да провериш дадена територия на коя банда/мафия е\n",strlen(cmds));
            strins(cmds,"{336600}/turfs - за да видите дадена банда/мафия колко територии притежава\n",strlen(cmds));
            strins(cmds,"{336600}/payadminmute - за да платите вашето ADMIN UNMUTE\n",strlen(cmds));
            strins(cmds,"{FF0000}/adminskypes - за да видите скаиповете и информация за главните админи на сървъра\n",strlen(cmds));
            ShowPlayerDialog(playerid,508,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{266A2E}МАН{FF0000}ДИ",cmds,"Напред","Изход");
}
}
if(dialogid == 508)
{
if(response)
{
new cmds[2230];
            strins(cmds,"{00FF00}---Команди за къща---\n",strlen(cmds));
            strins(cmds,"{FF0000}От /househelp можете да видите всички команди за къщата\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за бизнес---\n",strlen(cmds));
            strins(cmds,"{FF0000}От /bizhelp можете да видите всички команди за притежателя на бизнес\n\n",strlen(cmds));
            strins(cmds,"{336600}/drink - за да си поръчате нещо за пиене от бар\n",strlen(cmds));
            strins(cmds,"{00FF00}/train - за да се научите на боен стил от фитнес\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/buy - за да си купите нещо от бизнес/магазин\n",strlen(cmds));
            strins(cmds,"{336600}/heal - за да си купите живот и жилетка от бизнес\n",strlen(cmds));
            strins(cmds,"{FF0000}/buyhealth - за да си купите health пакети от бизнес за вашата къща\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/buyarmour - за да си купите armour пакети от бизнес за вашата къща\n",strlen(cmds));
            strins(cmds,"{336600}/bet - за да заложите на конно надбягване в бизнес\n",strlen(cmds));
            strins(cmds,"{FF0000}/dmv - за да си вземете шофьорска книжка\n",strlen(cmds));
            strins(cmds,"{FF0000}/plate - за да си смените номера на колата\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за банда/мафия---\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/factioncmds(/fcmds) - за да заложите на конно надбягване в бизнес\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за VIP---\n",strlen(cmds));
            strins(cmds,"{FF0000}От /viphelp можете да видите всички VIP команди\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Админ команди---\n",strlen(cmds));
            strins(cmds,"{FFFFFF}От /ahelp(/ah) можете да видите всички админ команди, ако сте админ!\n",strlen(cmds));
            strins(cmds,"{FFFFFF}От /mhelp(/mh) можете да видите всички Manage Admin команди!\n",strlen(cmds));
            ShowPlayerDialog(playerid,509,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{266A2E}МАН{FF0000}ДИ",cmds,"Напред","Изход");
}
}


if(dialogid == 509)
{
if(response)
{
new cmds[2230];
            strins(cmds,"{00FF00}---Команди за превозно средство---\n",strlen(cmds));
            strins(cmds,"{336600}/detach - за да откачите ремаркето от вашия камион\n",strlen(cmds));
            strins(cmds,"{FF0000}/tow - за да закачите кола с вашия Tow Truck\n",strlen(cmds));
            strins(cmds,"{FFFFFF}От /vehelp можете да видите останалите команди за превозно средство!\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за туба бензин---\n",strlen(cmds));
            strins(cmds,"{336600}/refillfc - за да заредиш вашата туба с бензин\n",strlen(cmds));
            strins(cmds,"{FF0000}/fuelcan - за да заредите бензин от вашата туба\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/fc - за да проверите колко бензин имате във вашата туба\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за километраж---\n",strlen(cmds));
            strins(cmds,"{FF0000}/speedo - добавя/премахва speedometer\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/kph - за да виждате скоростите в km/h\n",strlen(cmds));
            strins(cmds,"{336600}/mph - за да виждате скоростите в m/s\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за анимации---\n",strlen(cmds));
            strins(cmds,"{FF0000}От /animlist можете да видите всички команди за анимациите\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за обир---\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/robbery - всички опции за обир \n",strlen(cmds));
            strins(cmds,"{336600}/rob - за да почнеш да крадеш\n",strlen(cmds));
            strins(cmds,"{336600}/robhouse - за да да почнеш да крадеш от къща\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за обир на банка---\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/robberybank - всички опции за обир \n",strlen(cmds));
            strins(cmds,"{336600}/robbank - за да почнеш да крадеш\n\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за обир на дрога---\n",strlen(cmds));
            strins(cmds,"{FF0000}/usedrug - за да използваш дрога\n",strlen(cmds));
             strins(cmds,"{FFFFFF}/drugs - за да да видиш твоята дрога\n",strlen(cmds));
            ShowPlayerDialog(playerid,510,DIALOG_STYLE_MSGBOX,"{FFFFFF}CO{336600}MMAN{FF0000}DS",cmds,"Напред","Изход");
}
}





if(dialogid == 510)
{
if(response)
{
new cmds[2230];
            strins(cmds,"{00FF00}---Информация за админи---\n\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/adminskypes - за да видиш скаиповете на администраторите\n",strlen(cmds));
            strins(cmds,"{336600}/admininfo - за да видиш кои са администраторите и какво правят\n",strlen(cmds));
            strins(cmds,"{00FF00}---Команди за камери---\n\n",strlen(cmds));
            strins(cmds,"{FF0000}/dmcamera1 - за да гледаш от първата камерата на /dm\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/dmcamera2 - за да гледаш от втората камерата на /dm\n",strlen(cmds));
            strins(cmds,"{336600}/dm2camera1 - за да гледаш от първата камерата на /dm2\n",strlen(cmds));
            strins(cmds,"{FF0000}/dm2camera2 - за да гледаш от втората камерата на /dm2\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/dm3camera1 - за да гледаш от първата камерата на /dm3\n",strlen(cmds));
            strins(cmds,"{336600}/dm3camera2 - за да гледаш от втората камерата на /dm3\n",strlen(cmds));
            strins(cmds,"{FF0000}/stopcamera - за да спреш да гледаш от която и да е камера\n",strlen(cmds));
            strins(cmds,"{00FF00}---Други команди---\n\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/bug - за да пратиш съобшение за бъг до всички администратори в сървъра\n",strlen(cmds));
            strins(cmds,"{336600}/pr - за да пратиш предложение до всички администратори в сървъра\n",strlen(cmds));
            strins(cmds,"{FF0000}/towt - за да си купиш позволение да караш Tow Truck-а\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/tow - за да закачиш кола с Tow Truck-а\n",strlen(cmds));
            strins(cmds,"{336600}/ignore - за да игнорираш някой\n",strlen(cmds));
            strins(cmds,"{FF0000}/unignore - за да премахнеш игнорирането на някой\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/tunehelp - за да видиш всичко свързано с тунингуване\n",strlen(cmds));
            strins(cmds,"{336600}/gangs - за да видиш всички банди в сървъра\n",strlen(cmds));
            strins(cmds,"{FF0000}/househelp - за да видиш всичко свързано с къщите\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/bizhelp - за да видиш всичко свързано с бизнесите\n",strlen(cmds));
            strins(cmds,"{336600}/drift 1 - за да се телепортираш до дрифт 1\n",strlen(cmds));
            strins(cmds,"{FF0000}/drift 2 - за да се телепортираш до дрифт 2\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/drift 3 - за да се телепортираш до дрифт 3\n",strlen(cmds));
            strins(cmds,"{336600}/driftoff - за да се махнеш от дрифт арената\n",strlen(cmds));
            strins(cmds,"{00FF00}---Офис команди---\n\n",strlen(cmds));
            strins(cmds,"{FF0000}/buyoffice[1-20] - за да си купиш офис\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/selloffice[1-20] - за да си продадеш офиса\n",strlen(cmds));
            strins(cmds,"{336600}/officehelp[1-20] - за да видиш кои офиси колко ES MS LEVEL Пари искат\n",strlen(cmds));
            strins(cmds,"{FF0000}/officeinfo - за да видиш кои офиси са заети и кои свободни\n",strlen(cmds));
            strins(cmds,"{00FF00}---Capture The Flag команди---\n\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/ctfon - за да влезеш в Capture The Flag\n",strlen(cmds));
            strins(cmds,"{336600}/ctfoff - за да излезеш от Capture The Flag\n",strlen(cmds));
            strins(cmds,"{00FF00}---Derby команди---\n\n",strlen(cmds));
            strins(cmds,"{FF0000}/derbyon - за да влезеш в играта Derby\n",strlen(cmds));
            strins(cmds,"{FFFFFF}/derbyoff - за да излезеш от играта Derby\n",strlen(cmds));
            strins(cmds,"{00FF00}---DMTOP---\n\n",strlen(cmds));
            strins(cmds,"{336600}/top - за да видиш DM топ играчите\n",strlen(cmds));
            ShowPlayerDialog(playerid,511,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{266A2E}МАН{FF0000}ДИ",cmds,"Напред","Изход");
}
}
if(dialogid == 511)
{
if(response)
{
new cmds[2230];
            strins(cmds,"{00FF00}---Команди за бизнеси---\n\n",strlen(cmds));
  strins(cmds,"{FF0000}/drinks - за да видиш напитките\n",strlen(cmds));
  strins(cmds,"{FFFFFF}/buywep - за да си купиш оръжие\n",strlen(cmds));
  strins(cmds,"{336600}/eat - за да си купиш нещо за ядене\n",strlen(cmds));
  strins(cmds,"{FF0000}/buy - за да си купиш предмети от 24/7\n",strlen(cmds));
  strins(cmds,"{FFFFFF}/skin - за да играеш с друг скин\n",strlen(cmds));
  strins(cmds,"{336600}/horserace - за да заложиш на кон\n",strlen(cmds));
  strins(cmds,"{FFFFFF}/sexshop - за да си купиш нещо от Sex Shop\n",strlen(cmds));
  strins(cmds,"{336600}/hair - за да си промениш прическата\n",strlen(cmds));
  strins(cmds,"{FF0000}/hdefault - за да си промениш прическата\n",strlen(cmds));
  strins(cmds,"{FFFFFF}/buydrug - за да си купиш дрога\n",strlen(cmds));
  strins(cmds,"{336600}/chelp - за да видиш какви са командите за книжки\n",strlen(cmds));
  strins(cmds,"{FF0000}/gymhelp - за да видиш какви са бойните изкуства\n",strlen(cmds));
  strins(cmds,"{FFFFFF}/buyarmour - за да си купиш жилетка за къща\n",strlen(cmds));
  strins(cmds,"{336600}/buyhealth - за да си купиш здраве за къща\n",strlen(cmds));
            ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"{FFFFFF}КО{266A2E}МАН{FF0000}ДИ",cmds,"Изход","");
}
}

if(dialogid == 2)
{
if(response)
{
			new vipcommands[2230];
			            strins(vipcommands,"{00FF00}VIP MOD системата е услуга която ви дава по-голям набор от команди и бонуси\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}VIP MOD системата може да се получи чрез канене на хора VIP левелите са до 6-ти левел\n\n",strlen(vipcommands));
                strins(vipcommands,"{FF0000}..:::___________|КОМАНДИ|___________:::..\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} \n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}..:::____|VIP Level 1|____:::..\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /vipchat - за да пишете във VIP чата\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /para - за да си вземете парашут\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000} /kill - за да се самоубиете\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}..:::____|VIP Level 2|____:::..\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /fix - за да поправите превозното средство\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /r - директно свързване с последня на които сте писали на PM\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000} /flip - за да обърнете превозното средство\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /nos - за да добавите нитро на превозно средство\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /hyd - за да добавите  хидравтика\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /svchange - спаунвате с гранати или чантички\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}..:::____|VIP Level 3|____:::..\n\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /viptext - за да добавите/премахнете 3D текста над главата си\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /invisible - за да станете невидим на картата\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /vguns - дава M4 и Sawn-off\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000} /cnos - дава безкраино нитро\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /sound - за да си пуснете звук\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /parrot - дава папагал\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}..:::____|VIP Level 4|____:::..\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /vgoto - телепорт команди\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /pj - за да смените пайнт джоба на превозно средство\n",strlen(vipcommands));
		    strins(vipcommands,"{FF0000} /healme - зарещда вашата кръв и жилетка на 100\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /ramping - рампа\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /ramphelp - команди за рампа\n",strlen(vipcommands));
		    strins(vipcommands,"{FF0000} /tune - тунинг\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}..:::____|VIP Level 5|____:::..\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /lock - заключва вашето превозно средство\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /unlock - отключва вашето превозно средство\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000} /advert - пускане на рекламами\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /vrefuel - дава 20 литра\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000} /clothes - дрехи\n",strlen(vipcommands));
            ShowPlayerDialog(playerid,30998,DIALOG_STYLE_MSGBOX,"{FFFFFF}VIP {336600}MOD {FF0000}COMMANDS",vipcommands,"Други","Изход");
}
}



if(dialogid == 30998)
{
if(response)
{
			new vipcommands[2230];
			            strins(vipcommands,"{00FF00}VIP MOD системата е услуга която ви дава по-голям набор от команди и бонуси\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}VIP MOD системата може да се получи чрез канене на хора VIP левелите са до 6-ти левел\n\n",strlen(vipcommands));
                strins(vipcommands,"{FF0000}..:::___________|КОМАНДИ|___________:::..\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} \n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}..:::____|VIP Level 6|____:::..\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /listguns - преглед на оръжия\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /jetpack - дава ви jetpack\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000} /3dtext - добавя текст\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}..:::____|VIP Level 7|____:::..\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} /visible - ще си видим на картата\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /mybank - ще прегреждаш парите в банката си кадето и да си\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000} /ghostrider - ще маха/слага огън на твоя рокерски мотор\n",strlen(vipcommands));
            strins(vipcommands,"{336600} /changelaser - променя цвета на лазера\n",strlen(vipcommands));
            ShowPlayerDialog(playerid,5,DIALOG_STYLE_MSGBOX,"{FFFFFF}VIP {336600}MOD {FF0000}COMMANDS",vipcommands,"Бонуси","Изход");
}
}





if(dialogid == 5)
{
if(response)
{
			new vipcommands[2230];
            strins(vipcommands,"{00FF00}VIP MOD системата е услуга която ви дава по-голям набор от команди и бонуси\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}VIP MOD системата може да се получи чрез канене на хора VIP левелите са до 6-ти левел\n\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}------------= Бонуси =--------------\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF} \n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 1 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}Когато убиеш играч получаваш $250, а когато умреш губиш $50\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 2 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{336600}На всеки Payday получаваш 1EP и $1000\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 3 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}На всеки Payday получаваш 2EP и $2000\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}Времето за чакане на нова работа е 30 минути\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 4 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{336600}На всеки Payday получаваш 3EP и $3000\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Времето за чакане на нова работа е 30 минути\n",strlen(vipcommands));
		    strins(vipcommands,"{FFFFFF}При всеки SPAWN те пуска с 100 ARMOUR\n",strlen(vipcommands));
		    strins(vipcommands,"{336600}Ще имаш закачен 3D текст на главата - VIP\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Ще имаш лазер на оръжията - M4 и MP5\n",strlen(vipcommands));
		    strins(vipcommands,"{FFFFFF}Ще получаваш 2EP за всяка свършена работа\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 5 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{336600}На всеки Payday получаваш 4EP и $4000\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}При всеки SPAWN ще те пуска с 5 гранати\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 6 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}На всеки Payday получаваш 5EP и $5000\n",strlen(vipcommands));
            strins(vipcommands,"{336600}При всеки SPAWN ще те пуска с още 5 гранати\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Времето за чакане на нова работа е 20 минути\n",strlen(vipcommands));
		    strins(vipcommands,"{FFFFFF}Ще получаваш 3EP за всяка свършена работа\n",strlen(vipcommands));
            strins(vipcommands,"{336600}Когато си в кола и натиснеш Y превозното средство ще се FLIP-ва\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Kaто убиеш играч ще получаваш $500\n\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}---= VIP Level 7 =---\n\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}На всеки Payday получаваш 6EP и $6000\n",strlen(vipcommands));
            strins(vipcommands,"{336600}Ще получаваш 4EP за всяка свършена работа\n",strlen(vipcommands));
            strins(vipcommands,"{FF0000}Kaто убиеш играч ще получаваш $600\n",strlen(vipcommands));
            strins(vipcommands,"{FFFFFF}При всеки SPAWN ще те пуска с още 6 гранати\n",strlen(vipcommands));
            strins(vipcommands,"{336600}Времето за чакане на нова работа е 10 минути\n",strlen(vipcommands));
            strins(vipcommands,"{00FF00}Цъкни на бутона Команди за да видиш всички VIP команди \n",strlen(vipcommands));
            ShowPlayerDialog(playerid,2,DIALOG_STYLE_MSGBOX,"{FFFFFF}VIP {336600}MOD {FF0000}BONUS",vipcommands,"Команди","Изход");
}
}
new vipcommands[2230];
new string[256];
    if(dialogid == DIALOG_ID)
    {
        if(!response)
            return 0;

        if(FloorRequestedBy[listitem] != INVALID_PLAYER_ID || IsFloorInQueue(listitem))
            GameTextForPlayer(playerid, "~r~The floor is already in the queue", 3500, 4);
		else if(DidPlayerRequestElevator(playerid))
		    GameTextForPlayer(playerid, "~r~You already requested the elevator", 3500, 4);
		else
	        CallElevator(playerid, listitem);

		return 1;
    }
   if(dialogid == DIALOG_CLOTHES2)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
case 0: ShowPlayerDialog(playerid, DIALOG_CLOTHES4, DIALOG_STYLE_LIST, "Clothes", "Glasses 1\nGlasses 2\nGlasses 3\nGlasses 4\nGlasses 5\nGlasses 6\nGlasses 7\nGlasses 8\nGlasses 9\nGlasses 10\nGlasses 11\nGlasses 12\nGlasses 13\nGlasses 14\nGlasses 15\nGlasses 16\nGlasses 17\nGlasses 18\nGlasses 19\nGlasses 20\nGlasses 21\nGlasses 22\nGlasses 23\nGlasses 24\nGlasses 25\nGlasses 26\nGlasses 27\nGlasses 28\nGlasses 29\nGlasses 30\nGlasses 31\nGlasses 32\nRemove", "Select", "Close");
case 1: ShowPlayerDialog(playerid, DIALOG_Mask, DIALOG_STYLE_LIST, "Clothes", "Mask 1\nMask 2\nMask 3\nMask 4\nMask 5\nMask 6\nMask 7\nMask 8\nMask 9 \nRemove", "Select", "Close");
case 2: ShowPlayerDialog(playerid, DIALOG_HAT, DIALOG_STYLE_LIST, "Clothes", "Hat 1\nHat 2\nHat 3\nHat 4\nHat 5\nHat 6\nHat 7\nHat 8\nHat 9\nHat 10\nRemove", "Select", "Close");
case 3: ShowPlayerDialog(playerid, DIALOG_CLOCK, DIALOG_STYLE_LIST, "Clothes", "Clock 1\nClock 2\nClock 3\nClock 4\nClock 5\nClock 6\nClock 7\nClock 8\nClock 9\nClock 10\nRemove", "Select", "Close");
case 4: ShowPlayerDialog(playerid, DIALOG_SPECIAL, DIALOG_STYLE_LIST, "Clothes", "Special 1\nSpecial 2\nSpecial 3\nSpecial 4\nSpecial 5\nSpecial 6\nSpecial 7\nSpecial 8\nSpecial 9\nSpecial 10\nSpecial 11\nRemove", "Select", "Close");
case 5: ShowPlayerDialog(playerid, DIALOG_Police, DIALOG_STYLE_LIST, "Clothes", "Hat\nBeret\nFlash Granade\nArmor\nPistol\nTazer\nRemove", "Select", "Close");
}
}
    return 1;
}



   if(dialogid == DIALOG_Mask)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
case 0: SetPlayerAttachedObject( playerid, 1, 18911, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858  ) && EditAttachedObject(playerid, 1);
case 1: SetPlayerAttachedObject( playerid, 1, 18912, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 1);
case 2: SetPlayerAttachedObject( playerid, 1, 18913, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 1);
case 3: SetPlayerAttachedObject(playerid, 1, 18914, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 1);
case 4: SetPlayerAttachedObject( playerid, 1, 18915, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 1);
case 5: SetPlayerAttachedObject( playerid, 1, 18916, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 1);
case 6: SetPlayerAttachedObject( playerid, 1, 18917, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 1);
case 7: SetPlayerAttachedObject( playerid, 1, 18918, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 1);
case 8: SetPlayerAttachedObject( playerid, 1, 18919, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 1);
case 9: RemovePlayerAttachedObject(playerid, 1);
}
}
    return 1;
}

   if(dialogid == DIALOG_Police)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
case 0: SetPlayerAttachedObject( playerid, 8, 18636, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858  ) && EditAttachedObject(playerid, 8);
case 1: SetPlayerAttachedObject( playerid, 8, 18924, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 8);
case 2: SetPlayerAttachedObject( playerid, 8, 343, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 8);
case 3: SetPlayerAttachedObject(playerid, 8, 373, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 8);
case 4: SetPlayerAttachedObject( playerid, 8, 348, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 8);
case 5: SetPlayerAttachedObject( playerid, 8, 18642, 2, 0.050987, 0.034082, 0.001945, 92.256484, 349.688079, 268.324554, 0.987944, 1.038934, -1.122858 ) && EditAttachedObject(playerid, 8);
case 6: RemovePlayerAttachedObject(playerid, 8);
}
}
    return 1;
}



   if(dialogid == DIALOG_HAT)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
case 0: SetPlayerAttachedObject( playerid, 3, 18926 , 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382  ) && EditAttachedObject(playerid, 3);
case 1: SetPlayerAttachedObject( playerid, 3, 18927, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382 ) && EditAttachedObject(playerid, 3);
case 2: SetPlayerAttachedObject( playerid, 3, 18928, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382) && EditAttachedObject(playerid, 3);
case 3: SetPlayerAttachedObject(playerid, 3, 18929, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382) && EditAttachedObject(playerid, 3);
case 4: SetPlayerAttachedObject( playerid, 3, 18930, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382) && EditAttachedObject(playerid, 3);
case 5: SetPlayerAttachedObject( playerid, 3, 18931, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382) && EditAttachedObject(playerid, 3);
case 6: SetPlayerAttachedObject( playerid, 3, 18932, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382) && EditAttachedObject(playerid, 3);
case 7: SetPlayerAttachedObject( playerid, 3, 18933, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382) && EditAttachedObject(playerid, 3);
case 8: SetPlayerAttachedObject( playerid, 3, 18934, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382) && EditAttachedObject(playerid, 3);
case 9: SetPlayerAttachedObject( playerid, 3, 19161, 2, 0.126454, 0.028436, 0.001652, 81.096549, 93.051704, 3.806360, 1.116688, 1.053331, 1.143382) && EditAttachedObject(playerid, 3);
case 10: RemovePlayerAttachedObject(playerid, 3);
}
}
    return 1;
}


   if(dialogid == DIALOG_CLOCK)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
case 0: SetPlayerAttachedObject( playerid, 4, 19039, 6) && EditAttachedObject(playerid, 4);
case 1: SetPlayerAttachedObject( playerid, 4, 19040, 6) && EditAttachedObject(playerid, 4);
case 2: SetPlayerAttachedObject( playerid, 4, 19041, 6) && EditAttachedObject(playerid, 4);
case 3: SetPlayerAttachedObject(playerid, 4, 19042, 6) && EditAttachedObject(playerid, 4);
case 4: SetPlayerAttachedObject( playerid, 4, 19043, 6) && EditAttachedObject(playerid, 4);
case 5: SetPlayerAttachedObject( playerid, 4, 19044, 6) && EditAttachedObject(playerid, 4);
case 6: SetPlayerAttachedObject( playerid, 4, 19045, 6) && EditAttachedObject(playerid, 4);
case 7: SetPlayerAttachedObject( playerid, 4, 19046, 6) && EditAttachedObject(playerid, 4);
case 8: SetPlayerAttachedObject( playerid, 4, 19047, 6) && EditAttachedObject(playerid, 4);
case 9: SetPlayerAttachedObject( playerid, 4, 19148, 6) && EditAttachedObject(playerid, 4);
case 10: RemovePlayerAttachedObject(playerid, 4);
}
}
    return 1;
}


   if(dialogid == DIALOG_SPECIAL)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
case 0: SetPlayerAttachedObject( playerid, 5, 18632, 6) && EditAttachedObject(playerid, 5);
case 1: SetPlayerAttachedObject( playerid, 5, 18633, 6) && EditAttachedObject(playerid, 5);
case 2: SetPlayerAttachedObject( playerid, 5, 18634, 6) && EditAttachedObject(playerid, 5);
case 3: SetPlayerAttachedObject(playerid, 5, 18635, 6) && EditAttachedObject(playerid, 5);
case 4: SetPlayerAttachedObject( playerid, 5, 18636, 6) && EditAttachedObject(playerid, 5);
case 5: SetPlayerAttachedObject( playerid, 5, 18637, 6) && EditAttachedObject(playerid, 5);
case 6: SetPlayerAttachedObject( playerid, 5, 18638, 6) && EditAttachedObject(playerid, 5);
case 7: SetPlayerAttachedObject( playerid, 5, 18639, 6) && EditAttachedObject(playerid, 5);
case 8: SetPlayerAttachedObject( playerid, 5, 18640, 6) && EditAttachedObject(playerid, 5);
case 9: SetPlayerAttachedObject( playerid, 5, 18641, 6) && EditAttachedObject(playerid, 5);
case 10: SetPlayerAttachedObject( playerid, 5, 18642, 6) && EditAttachedObject(playerid, 5);
case 11: RemovePlayerAttachedObject(playerid, 5);
}
}
    return 1;
}





   if(dialogid == DIALOG_CLOTHES4)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
case 0: SetPlayerAttachedObject( playerid, 6, 19138, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 1: SetPlayerAttachedObject( playerid, 6, 19007, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 2: SetPlayerAttachedObject( playerid, 6, 19008, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 3: SetPlayerAttachedObject( playerid, 6, 19009, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 4: SetPlayerAttachedObject( playerid, 6, 19010 , 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 5: SetPlayerAttachedObject( playerid, 6, 19011 , 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 6: SetPlayerAttachedObject( playerid, 6, 19012 , 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 7: SetPlayerAttachedObject( playerid, 6, 19013 , 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 8: SetPlayerAttachedObject( playerid, 6, 19014 , 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 9: SetPlayerAttachedObject( playerid, 6, 19015 , 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 10: SetPlayerAttachedObject( playerid, 6, 19016, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 11: SetPlayerAttachedObject( playerid, 6, 19017, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 12: SetPlayerAttachedObject( playerid, 6, 19018, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 13: SetPlayerAttachedObject( playerid, 6, 19019, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 14: SetPlayerAttachedObject( playerid, 6, 19020, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 15: SetPlayerAttachedObject( playerid, 6, 19021, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 16: SetPlayerAttachedObject( playerid, 6, 19022, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 17: SetPlayerAttachedObject( playerid, 6, 19023, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 18: SetPlayerAttachedObject( playerid, 6, 19024, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 19: SetPlayerAttachedObject( playerid, 6, 19025, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 20: SetPlayerAttachedObject( playerid, 6, 19026, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 21: SetPlayerAttachedObject( playerid, 6, 19027, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 22: SetPlayerAttachedObject( playerid, 6, 19028, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 23: SetPlayerAttachedObject( playerid, 6, 19029, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 24: SetPlayerAttachedObject( playerid, 6, 19030, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 25: SetPlayerAttachedObject( playerid, 6, 19031, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 26: SetPlayerAttachedObject( playerid, 6, 19032, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 27: SetPlayerAttachedObject( playerid, 6, 19033, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 28: SetPlayerAttachedObject( playerid, 6, 19034, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 29: SetPlayerAttachedObject( playerid, 6, 19035, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 30: SetPlayerAttachedObject( playerid, 6, 19138, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 31: SetPlayerAttachedObject( playerid, 6, 19139, 2, 0.080131, 0.047566, -0.000297, 87.368026, 81.564750, 0.219037, 1.139057, 1.092170, 0.973663) && EditAttachedObject(playerid, 6);
case 32: RemovePlayerAttachedObject(playerid, 6);
}
}
    return 1;
}
if(dialogid == DIALOG_BANK)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
case 0:
{
 format(string,sizeof(string),"{FFFFFF}Вашата обща сума е {33CC00}$%d\n", PlayerInfo[playerid][pAccount]);
 ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"Обща сума:",string,"Затвори","");
 }
case 1:
{ format(string,sizeof(string),"{FFFFFF}Вие имате {33CC00}$%d\n{FFFFFF}Моля въведете отдолу колко долара искате да изтеглите от вашата сума:", PlayerInfo[playerid][pAccount]);
ShowPlayerDialog(playerid,62,DIALOG_STYLE_INPUT,"Изтегли пари:",string,"Изтегли","Назад");
}
 case 2:
{
 format(string,sizeof(string),"{FFFFFF}Вие имате {33CC00}%d{FFFFFF} в себеси.\nМоля въведете отдоло колко долара искате да внесете във вашата сума:", PlayerInfo[playerid][pCash]);
ShowPlayerDialog(playerid,70,DIALOG_STYLE_INPUT,"Изтегли пари:",string,"Плати","Назад");
 }
}
}
    return 1;
}

if(dialogid == DIALOG_ATM)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
case 0:
{
 format(string,sizeof(string),"{FFFFFF}Вашата обща сума е {33CC00}$%d\n", PlayerInfo[playerid][pAccount]);
 ShowPlayerDialog(playerid,dialog_command,DIALOG_STYLE_MSGBOX,"Обща сума:",string,"Затвори","");
 }
case 1:
{ format(string,sizeof(string),"{FFFFFF}Вие имате {33CC00}$%d\n{FFFFFF}Моля въведете отдолу колко долара искате да изтеглите от вашата сума:", PlayerInfo[playerid][pAccount]);
ShowPlayerDialog(playerid,62,DIALOG_STYLE_INPUT,"Изтегли пари:",string,"Изтегли","Назад");
}
case 2:
{
 format(string,sizeof(string),"{FFFFFF}Вие имате {FF0000}%d{FFFFFF} нарушения. За да платите едно това ще ви струва {33CC00}$1000\n{FFFFFF}Моля въведете отдолу колко броя нарушения искате да платите:", PlayerInfo[playerid][pWantedLevel]);
ShowPlayerDialog(playerid,69,DIALOG_STYLE_INPUT,"Изтегли пари:",string,"Плати","Назад");
 }
 case 3:
{
 format(string,sizeof(string),"{FFFFFF}Вие имате {FF0000}%d{FFFFFF} нарушения. За да платите едно това ще ви струва {33CC00}$1000\n{FFFFFF}Моля въведете отдолу колко броя нарушения искате да платите:", PlayerInfo[playerid][pWantedLevel]);
ShowPlayerDialog(playerid,69,DIALOG_STYLE_INPUT,"Изтегли пари:",string,"Плати","Назад");
 }
}
}
    return 1;
}

    if(dialogid == DIALOG_GPS)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
                case 0: SetPlayerCheckpoint(playerid, Carshop, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 1: SetPlayerCheckpoint(playerid, Coalmine, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 2: SetPlayerCheckpoint(playerid, Pilot, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 3: SetPlayerCheckpoint(playerid, Knijki, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 4:	SetPlayerCheckpoint(playerid, lsbank, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 5: SetPlayerCheckpoint(playerid, piza, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 6: SetPlayerCheckpoint(playerid, bizn, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 7:	SetPlayerCheckpoint(playerid, bus2, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 8:	SetPlayerCheckpoint(playerid, swep, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 9:	SetPlayerCheckpoint(playerid, trucks, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 10:SetPlayerCheckpoint(playerid, boini, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 11:SetPlayerCheckpoint(playerid, lv, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 12:SetPlayerCheckpoint(playerid, ls, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 13:SetPlayerCheckpoint(playerid, sf, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 14:SetPlayerCheckpoint(playerid, sf, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
                case 15:SetPlayerCheckpoint(playerid, ofis, 3.0) && SendClientMessage(playerid, COLOR_RED, "{80BFFF}GPS: Следвай червеня маркер, той ще те отведе до мястото, което посочи!");
}
}
    return 1;
}
    if(dialogid == DIALOG_FISHES)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
              case 0: PlayerInfo[playerid][pVudica] = 1;
              case 1: PlayerInfo[playerid][pStruv] += 1;
            }
        }
        return 1; // We handled a dialog, so return 1. Just like OnPlayerCommandText.
    }
    
    if(dialogid == DIALOG_WEAPONSDF)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
              case 0: GivePlayerWeapon(playerid, WEAPON_MINIGUN, 9999);
              case 1: GivePlayerWeapon(playerid, WEAPON_ROCKETLAUNCHER, 15);
              case 2: GivePlayerWeapon(playerid, WEAPON_SATCHEL, 5);
              case 3: GivePlayerWeapon(playerid, WEAPON_FLAMETHROWER, 9999);
                case 4: GivePlayerWeapon(playerid, WEAPON_BRASSKNUCKLE, 1);
                case 5: GivePlayerWeapon(playerid, WEAPON_GOLFCLUB, 2);
                case 6: GivePlayerWeapon(playerid, WEAPON_NITESTICK, 3);
                case 7: GivePlayerWeapon(playerid, WEAPON_KNIFE, 4);
                case 8: GivePlayerWeapon(playerid, WEAPON_BAT, 5);
                case 9: GivePlayerWeapon(playerid, WEAPON_SHOVEL, 6);
                case 10: GivePlayerWeapon(playerid, WEAPON_POOLSTICK, 7);
                case 11: GivePlayerWeapon(playerid, WEAPON_KATANA, 8);
                case 12: GivePlayerWeapon(playerid, WEAPON_CHAINSAW, 9);
                case 13: GivePlayerWeapon(playerid, WEAPON_DILDO, 10);
                case 14: GivePlayerWeapon(playerid, WEAPON_DILDO2, 11);
                case 15: GivePlayerWeapon(playerid, WEAPON_VIBRATOR, 12);
                case 16: GivePlayerWeapon(playerid, WEAPON_VIBRATOR2, 100);
                case 17: GivePlayerWeapon(playerid, WEAPON_FLOWER, 100);
                case 18: GivePlayerWeapon(playerid, WEAPON_CANE, 100);
                case 19: GivePlayerWeapon(playerid, WEAPON_GRENADE, 25);
                case 20: GivePlayerWeapon(playerid, WEAPON_TEARGAS, 25);
                case 21: GivePlayerWeapon(playerid, WEAPON_MOLTOV, 25);
                case 22: GivePlayerWeapon(playerid, WEAPON_COLT45, 50);
                case 23: GivePlayerWeapon(playerid, WEAPON_SILENCED, 50);
                case 24: GivePlayerWeapon(playerid, WEAPON_DEAGLE, 50);
                case 25: GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 150);
                case 26: GivePlayerWeapon(playerid, WEAPON_SAWEDOFF, 500);
                case 27: GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, 500);
                case 28: GivePlayerWeapon(playerid, WEAPON_UZI, 500);
                case 29: GivePlayerWeapon(playerid, WEAPON_MP5, 500);
                case 30: GivePlayerWeapon(playerid, WEAPON_AK47, 500);
                case 31: GivePlayerWeapon(playerid, WEAPON_M4, 500);
                case 32: GivePlayerWeapon(playerid, WEAPON_TEC9, 500);
                case 33: GivePlayerWeapon(playerid, WEAPON_RIFLE, 300);
                case 34: GivePlayerWeapon(playerid, WEAPON_SNIPER, 30);
                case 35: GivePlayerWeapon(playerid, WEAPON_SPRAYCAN, 2100);
                case 36: GivePlayerWeapon(playerid, WEAPON_CAMERA, 100);
                case 37: GivePlayerWeapon(playerid, WEAPON_PARACHUTE, 1);
            }
        }
        return 1; // We handled a dialog, so return 1. Just like OnPlayerCommandText.
    }
        if(dialogid == DIALOG_GFC)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
              case 0: SetPlayerCheckpoint(playerid, GFC1, 3.0);
              case 1: SetPlayerCheckpoint(playerid, GFC2, 3.0);
              case 2: SetPlayerCheckpoint(playerid, GFC3, 3.0);
              case 3: SetPlayerCheckpoint(playerid, GFC4, 3.0);
            }
        }
        return 1; // We handled a dialog, so return 1. Just like OnPlayerCommandText.
    }
            if(dialogid == DIALOG_GFC2)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
              case 0: SetPlayerCheckpoint(playerid, GFC1, 3.0);
              case 1: SetPlayerCheckpoint(playerid, GFC2, 3.0);
              case 2: SetPlayerCheckpoint(playerid, GFC3, 3.0);
              case 3: SetPlayerCheckpoint(playerid, GFC4, 3.0);
            }
        }
        return 1; // We handled a dialog, so return 1. Just like OnPlayerCommandText.
    }
                if(dialogid == DIALOG_ROB)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
              case 0: SetPlayerCheckpoint(playerid, ROB1, 3.0);
              case 1: SetPlayerCheckpoint(playerid, ROB2, 3.0);
              case 2: SetPlayerCheckpoint(playerid, ROB3, 3.0);
            }
        }
        return 1; // We handled a dialog, so return 1. Just like OnPlayerCommandText.
    }
    //DIALOG_OFFICES
 // We handled a dialog, so return 1. Just like OnPlayerCommandText.
    //DIALOG_OFFICES
    if(dialogid == DIALOG_WEAPONS)
    {
        if(response) // If they clicked 'Select' or double-clicked a weapon
        {
            // Give them the weapon
            switch(listitem)
            {
                case 0: GivePlayerWeapon(playerid, WEAPON_KNIFE, 1);
                case 1: GivePlayerWeapon(playerid, WEAPON_BAT, 2);
                case 2: GivePlayerWeapon(playerid, WEAPON_COLT45, 3);
                case 3: GivePlayerWeapon(playerid, WEAPON_SILENCED, 4);
                case 4: GivePlayerWeapon(playerid, WEAPON_DEAGLE, 50);
                case 5: GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 40);
                case 6: GivePlayerWeapon(playerid, WEAPON_SAWEDOFF, 500);
                case 7: GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, 500);
                case 8: GivePlayerWeapon(playerid, WEAPON_UZI, 500);
                case 9: GivePlayerWeapon(playerid, WEAPON_MP5, 500);
                case 10: GivePlayerWeapon(playerid, WEAPON_TEC9, 500);
                case 11: GivePlayerWeapon(playerid, WEAPON_AK47, 500);
                case 12: GivePlayerWeapon(playerid, WEAPON_M4, 500);
                case 13: GivePlayerWeapon(playerid, WEAPON_RIFLE, 30);
                case 14: GivePlayerWeapon(playerid, WEAPON_SNIPER, 5);
                case 15: GivePlayerWeapon(playerid, WEAPON_SNIPER, 5);
            }
        }
        return 1; // We handled a dialog, so return 1. Just like OnPlayerCommandText.
    }
	if(dialogid == 12346 || dialogid == 12347)
	{
	    if(response)
		{
		    if(strlen(inputtext))
		    {
				new tmppass[64];
				strmid(tmppass, inputtext, 0, strlen(inputtext), 255);
				OnPlayerLogin(playerid,tmppass);
			}
			else
			{
				new loginstring[256];
				SendClientMessage(playerid, COLOR_WHITE, "SERVER:: Трябва да въведеш твоята парола");
				format(loginstring,sizeof(loginstring),"{FFFFFF}Добре дошъл {00A600}%s\n{FFFFFF}Името е регистрирано Моля, въведи твоята парола", PlayerName(playerid));
		        ShowPlayerDialog(playerid,12347,DIALOG_STYLE_PASSWORD,"Влизане:",loginstring,"Влез","Излез");
		        TextDrawHideForPlayer(playerid, ClockData[playerid]);
		TextDrawShowForPlayer(playerid, ClockData[playerid]);
			}
		}
		else
		{
		    Kick(playerid);
		}
	}
#define DIALOG_RULES 1
	if(dialogid == 12345)
	{
	    if(response)
		{
		    if(strlen(inputtext))
		    {
				format(string, sizeof(string), "%s.ini", PlayerName(playerid));
                if(dini_Exists(string))
	            {
					SendClientMessage(playerid, COLOR_YELLOW, "Това име е заето, сменето го с друго!");
					return 1;
				}
				new tmppass[64];
				strmid(tmppass, inputtext, 0, strlen(inputtext), 255);
				OnPlayerRegister(playerid, tmppass);
			}
			else
			{
 				new regstring[256];
				format(regstring,sizeof(regstring),"{FFFFFF}Добре дошъл {00A600}%s\n{FFFFFF}Моля регистрирай акаунта като въведеш паролата от доло", PlayerName(playerid));
		        ShowPlayerDialog(playerid,12345,DIALOG_STYLE_PASSWORD,"Регистрация:",regstring,"Регистрирай","Излез");
		        TextDrawHideForPlayer(playerid, ClockData[playerid]);
		TextDrawShowForPlayer(playerid, ClockData[playerid]);
			}
  		}
		else
		{
SendClientMessage(playerid, COLOR_RED, "За да играете в този сървър трябва да се съгласите с правилата и условията му!");
DelayedKick(playerid);
		}
	}
    if(dialogid==525)
    {
        if(response)
        {
            for(new i; i<MAX_PLAYERS; i++)
    {
            PlayerInfo[i][pDa] += 1;
            PlayerInfo[playerid][plDa] = 1;
            }
        }
        else
        {
            for(new i; i<MAX_PLAYERS; i++)
    {
                    PlayerInfo[i][pNe] += 1;
                    PlayerInfo[playerid][plDa] = 2;
            }
        }
    }
        if(dialogid==5255)
    {
        if(response)
        {
            for(new i; i<MAX_PLAYERS; i++)
    {
            PlayerInfo[i][pDa2] += 1;
            }
        }
        else
        {
            for(new i; i<MAX_PLAYERS; i++)
    {
                    PlayerInfo[i][pNe2] += 1;
            }
        }
    }
	if(dialogid == 30)//aoc
	{
		if(response)
		{//Main gate/ Water Gate/ Spec Gate/ View Gate/ Locker door / Up door
			if(listitem == 0)
			{
		    }
		    if(listitem == 1)
			{
		    }
		   	if(listitem == 2)
			{
			}
			if(listitem == 3)
			{
			}
			if(listitem == 4)
			{
			}
			if(listitem == 5)
			{
			}
		}
		else
		{
		}
		return 1;
	}
	if(dialogid == 31)
	{
		if(response)
		{//Main gate/ Water Gate/ Spec Gate/ View Gate/ Locker door / Up door
			if(listitem == 0)
			{
		    }
		    if(listitem == 1)
			{
		    }
		   	if(listitem == 2)
			{
			}
			if(listitem == 3)
			{
			}
			if(listitem == 4)
			{
			}
			if(listitem == 5)
			{
			}
			return 1;
		}
		else
		{
		}
	}
	return 1;
}
//==============================================================================
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}
//=============================[Anti-Money Hack Functions]======================
stock GivePlayerCash(playerid, money)
{
	PlayerInfo[playerid][pCash] += money;
	ResetMoneyBar(playerid);
	UpdateMoneyBar(playerid,PlayerInfo[playerid][pCash]);
	return PlayerInfo[playerid][pCash];
}
stock SetPlayerCash(playerid, money)
{
	PlayerInfo[playerid][pCash] = money;
	ResetMoneyBar(playerid);
	UpdateMoneyBar(playerid,PlayerInfo[playerid][pCash]);
	return PlayerInfo[playerid][pCash];
}
stock ResetPlayerCash(playerid)
{
	PlayerInfo[playerid][pCash] = 0;
	ResetMoneyBar(playerid);
	UpdateMoneyBar(playerid,PlayerInfo[playerid][pCash]);
	return PlayerInfo[playerid][pCash];
}
stock GetPlayerCash(playerid)
{
	return PlayerInfo[playerid][pCash];
}
//==============================================================================
stock PlayerName(playerid)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid, name, sizeof(name));
    return name;
}
//==============================================================================
//==============================================================================
public ResetPlayerWeaponsEx(playerid)
{
    PlayerInfo[playerid][pGun0] = 0;
    PlayerInfo[playerid][pGun1] = 0;
    PlayerInfo[playerid][pGun2] = 0;
    PlayerInfo[playerid][pGun3] = 0;
    PlayerInfo[playerid][pGun4] = 0;
    PlayerInfo[playerid][pGun5] = 0;
    PlayerInfo[playerid][pGun6] = 0;
    PlayerInfo[playerid][pGun7] = 0;
    PlayerInfo[playerid][pGun8] = 0;
    PlayerInfo[playerid][pGun9] = 0;
    PlayerInfo[playerid][pGun10] = 0;
    PlayerInfo[playerid][pGun11] = 0;
    PlayerInfo[playerid][pGun12] = 0;
	ResetPlayerWeapons(playerid);
	return 1;
}
//==============================================================================
public HaveWeapon(playerid, weaponid)
{
    if(IsPlayerConnected(playerid))
    {
        switch (weaponid)
        {
            case 1: return PlayerInfo[playerid][pGun0];
            case 2..9: return PlayerInfo[playerid][pGun1];
            case 10..15: return PlayerInfo[playerid][pGun10];
            case 16..18: return PlayerInfo[playerid][pGun8];
            case 22..24: return PlayerInfo[playerid][pGun2];
            case 25..27: return PlayerInfo[playerid][pGun3];
            case 28..29: return PlayerInfo[playerid][pGun4];
            case 30..31: return PlayerInfo[playerid][pGun5];
            case 32: return PlayerInfo[playerid][pGun4];
            case 33..34: return PlayerInfo[playerid][pGun6];
            case 35..38: return PlayerInfo[playerid][pGun7];
            case 39: return PlayerInfo[playerid][pGun8];
            case 41..43: return PlayerInfo[playerid][pGun9];
            case 44..46: return PlayerInfo[playerid][pGun11];
        }
    }
    return 1;
}
//==============================================================================
public RemovePlayerWeapon(playerid, weaponid)
{
    switch(weaponid)
    {
        case 1: PlayerInfo[playerid][pGun0] = 0;
        case 2..9: PlayerInfo[playerid][pGun1] = 0;
        case 10..15: PlayerInfo[playerid][pGun10] = 0;
        case 16..18, 39: PlayerInfo[playerid][pGun8] = 0;
        case 22..24: PlayerInfo[playerid][pGun2] = 0;
        case 25..27: PlayerInfo[playerid][pGun3] = 0;
        case 28, 29, 32: PlayerInfo[playerid][pGun4] = 0;
        case 30, 31: PlayerInfo[playerid][pGun5] = 0;
        case 33, 34: PlayerInfo[playerid][pGun6] = 0;
        case 35..38: PlayerInfo[playerid][pGun7] = 0;
        case 40: PlayerInfo[playerid][pGun12] = 0;
        case 41..43: PlayerInfo[playerid][pGun9] = 0;
        case 44..46: PlayerInfo[playerid][pGun11] = 0;
    }
	ResetPlayerWeapons(playerid);
	RestoreWeapons(playerid);
	return 1;
}
//==============================================================================
public RestoreWeapons(playerid)
{
    if(PlayerInfo[playerid][pGun0] == 1) GivePlayerWeapon(playerid, 1, 1);
    switch (PlayerInfo[playerid][pGun1])
    {
        case 2: GivePlayerWeapon(playerid, 2, 1);
        case 3: GivePlayerWeapon(playerid, 3, 1);
        case 4: GivePlayerWeapon(playerid, 4, 1);
        case 5: GivePlayerWeapon(playerid, 5, 1);
        case 6: GivePlayerWeapon(playerid, 6, 1);
        case 7: GivePlayerWeapon(playerid, 7, 1);
        case 8: GivePlayerWeapon(playerid, 8, 1);
        case 9: GivePlayerWeapon(playerid, 9, 1);
    }
    switch (PlayerInfo[playerid][pGun2])
    {
        case 22: GivePlayerWeapon(playerid, 22, 1000);
        case 23: GivePlayerWeapon(playerid, 23, 1000);
        case 24: GivePlayerWeapon(playerid, 24, 600);
    }
    switch (PlayerInfo[playerid][pGun3])
    {
        case 25: GivePlayerWeapon(playerid, 25, 1400);
        case 26: GivePlayerWeapon(playerid, 26, 1400);
        case 27: GivePlayerWeapon(playerid, 27, 1400);
    }
    switch (PlayerInfo[playerid][pGun4])
    {
        case 28: GivePlayerWeapon(playerid, 28, 1100);
        case 29: GivePlayerWeapon(playerid, 29, 1100);
        case 32: GivePlayerWeapon(playerid, 32, 1100);
    }
    switch (PlayerInfo[playerid][pGun5])
    {
        case 30: GivePlayerWeapon(playerid, 30, 800);
        case 31: GivePlayerWeapon(playerid, 31, 800);
    }
    switch (PlayerInfo[playerid][pGun6])
    {
        case 33: GivePlayerWeapon(playerid, 33, 500);
        case 34: GivePlayerWeapon(playerid, 34, 500);
    }
    switch (PlayerInfo[playerid][pGun7])
    {
        case 35: GivePlayerWeapon(playerid, 35, 1000);
        case 36: GivePlayerWeapon(playerid, 36, 1000);
        case 37: GivePlayerWeapon(playerid, 37, 1000);
        case 38: GivePlayerWeapon(playerid, 38, 1000);
    }
    switch (PlayerInfo[playerid][pGun8])
    {
        case 16: GivePlayerWeapon(playerid, 16, 5);
        case 17: GivePlayerWeapon(playerid, 17, 20);
        case 18: GivePlayerWeapon(playerid, 18, 20);
    }
    switch (PlayerInfo[playerid][pGun9])
    {
        case 41: GivePlayerWeapon(playerid, 41, 400);
        case 42: GivePlayerWeapon(playerid, 42, 400);
        case 43: GivePlayerWeapon(playerid, 43, 400);
    }
    switch (PlayerInfo[playerid][pGun10])
    {
        case 10: GivePlayerWeapon(playerid, 10, 1);
        case 11: GivePlayerWeapon(playerid, 11, 1);
        case 12: GivePlayerWeapon(playerid, 12, 1);
        case 13: GivePlayerWeapon(playerid, 13, 1);
        case 14: GivePlayerWeapon(playerid, 14, 1);
        case 15: GivePlayerWeapon(playerid, 15, 1);
    }
    switch (PlayerInfo[playerid][pGun11])
    {
        case 44: GivePlayerWeapon(playerid, 44, 150);
        case 45: GivePlayerWeapon(playerid, 45, 99999);
        case 46: GivePlayerWeapon(playerid, 46, 1);
    }
	return 1;
}
//==============================================================================
public GivePlayerGun(playerid, weaponid)
{
    switch (weaponid)
    {
        case 1: { PlayerInfo[playerid][pGun0] = 1; GivePlayerWeapon(playerid, 1, 1); }
        case 2..9: { PlayerInfo[playerid][pGun1] = weaponid; GivePlayerWeapon(playerid, weaponid, 1); }
        case 10..15: { PlayerInfo[playerid][pGun10] = weaponid; GivePlayerWeapon(playerid, weaponid, 1); }
        case 16..18, 39: { PlayerInfo[playerid][pGun8] = weaponid; GivePlayerWeapon(playerid, weaponid, 5); }
        case 21: { PlayerInfo[playerid][pGun12] = 21; SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK); }
        case 22..24: { PlayerInfo[playerid][pGun2] = weaponid; GivePlayerWeapon(playerid, weaponid, 600); }
        case 25..27: { PlayerInfo[playerid][pGun3] = weaponid; GivePlayerWeapon(playerid, weaponid, 1400); }
        case 28..29, 32: { PlayerInfo[playerid][pGun4] = weaponid; GivePlayerWeapon(playerid, weaponid, 2100); }
        case 30, 31: { PlayerInfo[playerid][pGun5] = weaponid; GivePlayerWeapon(playerid, weaponid, 800); }
        case 33, 34: { PlayerInfo[playerid][pGun6] = weaponid; GivePlayerWeapon(playerid, weaponid, 500); }
        case 35..38: { PlayerInfo[playerid][pGun7] = weaponid; GivePlayerWeapon(playerid, weaponid, 2000); }
        case 40: { PlayerInfo[playerid][pGun12] = 40; GivePlayerWeapon(playerid, 40, 99999); }
        case 41..43: { PlayerInfo[playerid][pGun9] = weaponid; GivePlayerWeapon(playerid, weaponid, 400); }
        case 44..46: { PlayerInfo[playerid][pGun11] = weaponid; GivePlayerWeapon(playerid, weaponid, 99999); }
    }
	return 1;
}
//==============================================================================
				
//===============================[Anti-DeAmx]===================================
AntiDeAMX()
{
	new a[][] =
	{
		"Unarmed (Fist)",
		"Brass K"
	};
	#pragma unused a
}
//==============================================================================

//==============================================================================
public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid) && IsPlayerConnected(targetid))
	{
        new string[2222];
        new level = PlayerInfo[targetid][pDonateRank];
		new cash = GetPlayerCash(targetid);
		new kills = PlayerInfo[targetid][pKills];
		new deaths = PlayerInfo[targetid][pDeaths];
		new time = PlayerInfo[targetid][ptMuted];
		new money = PlayerInfo[targetid][pJailTime];
  		new warns = PlayerInfo[targetid][pWarns];
  		new cig = PlayerInfo[targetid][pCig];
  		new awarns = PlayerInfo[targetid][pAWarns];
		new account = PlayerInfo[targetid][pAccount];
  		new fwarns = PlayerInfo[targetid][pFWarns];
		new plevel = PlayerInfo[targetid][Level];
		new exp = PlayerInfo[targetid][Exp];
        new nxtlevel = PlayerInfo[targetid][Level]+1; // As soon as its executed, It adds +1 to your score.
        new expamount = nxtlevel*levelexp;
		new es = PlayerInfo[targetid][EpSkill];
		new ws = PlayerInfo[targetid][WsSkill];
		new ms = PlayerInfo[targetid][MoneySkill];
		new bomb = PlayerInfo[targetid][pBombs];
		new coc = PlayerInfo[targetid][pCoc];
		new heroin = PlayerInfo[targetid][pHeroin];
		new lotto = PlayerInfo[targetid][pLotto];
		new payd = PlayerInfo[targetid][pPayD];
		new knijkas[32];
		new knijkah[32];
		new knijkab[32];
		new radio[32];
		new adminmute[32];
		new gfc[32];
		new manage[32];
		new event[32];
		new dea = PlayerInfo[targetid][pDea];
		new mon = PlayerInfo[targetid][pMon];
		new st = PlayerInfo[targetid][pSt];
		new cmn1 = PlayerInfo[targetid][pCMN1Kill];
		new house = PlayerInfo[targetid][pHouseO];
		new biz = PlayerInfo[targetid][pBizO];
		
		
					    	new admin[32];
	                	if(PlayerInfo[targetid][pTest] == 1) { admin = "Test Admin"; }
                	else if(PlayerInfo[targetid][pAdmin] == 0 && PlayerInfo[targetid][pTest] == 0) { admin = "None"; }
                	else if(PlayerInfo[targetid][pAdmin] == 1) { admin = "Helper"; }
                	else if(PlayerInfo[targetid][pAdmin] == 4) { admin = "Grand Admin"; }
                	else if(PlayerInfo[targetid][pAdmin] == 2) { admin = "Administrator"; }
                	else if(PlayerInfo[targetid][pAdmin] == 3) { admin = "Moderator"; }
                	else if(PlayerInfo[targetid][pAdmin] == 6) { admin = "Owner";}
					else if(PlayerInfo[targetid][pAdmin] == 7) { admin = "Scripter";}
					else if(PlayerInfo[targetid][pAdmin] == 5) { admin = "Master Admin";}
		
		
		
 	                if(PlayerInfo[targetid][pBoat] == 1) { knijkab = "Да"; }
                	else if(PlayerInfo[targetid][pBoat] == 0) { knijkab = "Не"; }
                	
                	 if(PlayerInfo[targetid][pSamolet] == 1) { knijkas = "Да"; }
                	else if(PlayerInfo[targetid][pSamolet] == 0) { knijkas = "Не"; }
                	
                	 if(PlayerInfo[targetid][pHili] == 1) { knijkah = "Да"; }
                	else if(PlayerInfo[targetid][pHili] == 0) { knijkah = "Не"; }
                	
                	 if(PlayerInfo[targetid][pRadio] == 1) { radio = "Да"; }
                	else if(PlayerInfo[targetid][pRadio] == 0) { radio = "Не"; }
                	
                	 if(PlayerInfo[targetid][pADMINMUTE] == 1) { adminmute = "Да"; }
                	else if(PlayerInfo[targetid][pADMINMUTE] == 0) { adminmute = "Не"; }
                	
                	 if(PlayerInfo[targetid][pGFC] == 1) { gfc = "Да"; }
                	else if(PlayerInfo[targetid][pGFC] == 0) { gfc = "Не"; }
					
   	                        if(PlayerInfo[targetid][pEvent] == 1) { event = "Да"; }
                	else if(PlayerInfo[targetid][pEvent] == 0) { event = "Не"; }
                	
               	 if(PlayerInfo[targetid][pManage] == 1) { manage = "Да"; }
                	else if(PlayerInfo[targetid][pManage] == 0) { manage = "Не"; }
                	
                	new vlak[32];
                	
                	if(PlayerInfo[targetid][pVlak] == 1) { vlak = "Да"; }
                	else if(PlayerInfo[targetid][pVlak] == 0) { vlak = "Не"; }
					
		new faction[64];
		format(faction, sizeof(faction), "%s", TeamInfo[PlayerInfo[targetid][pMember]][TeamName]);
		new prank = PlayerInfo[targetid][pRank];
		new ranktext[256];
 		switch(prank)
   		{
  			case 1: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[targetid][pMember]][fRank1]);
    		case 2: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[targetid][pMember]][fRank2]);
      		case 3: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[targetid][pMember]][fRank3]);
      		case 4: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[targetid][pMember]][fRank4]);
        	case 5: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[targetid][pMember]][fRank5]);
        	case 6: format(ranktext, sizeof(ranktext), "%s", TeamInfo[PlayerInfo[targetid][pMember]][fRank6]);
	    }
		format(string, sizeof(string),"Статистика на %s:", PlayerName(targetid));
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string, sizeof(string), "Admin Level: %s | VIP Level: %d | Level: %d | EP: %d/%d | Weapon Skill: %d | EP Skill: %d | Money Skill: %d", admin, level, plevel, exp, expamount, ws, es, ms);
		SendClientMessage(playerid, COLOR_GRAD2, string);
		format(string, sizeof(string), "Kills: %d | Deaths: %d | Cash: $%d | Lotto: %d | Пари в банката: $%d | Къща: %d | Бизнес: %d", kills, deaths, cash, lotto, account, house, biz);
		SendClientMessage(playerid, COLOR_GRAD2, string);
		format(string, sizeof(string), "Faction: %s | Faction Rank: (%d)%s | Цигари: %d | Бомби: %d | Кокаин: %d | Хероин: %d", faction, prank, ranktext, cig, bomb, coc, heroin);
		SendClientMessage(playerid, COLOR_GRAD2, string);
		format(string, sizeof(string), "Mute Time: %d секунди: | Warns: %d/5 | Jail Time: %d секунди | Admin Warns: %d/3 | Faction Warns: %d/3 ", time, warns, money, awarns, fwarns);
        SendClientMessage(playerid, COLOR_GRAD2, string);
		format(string, sizeof(string), "Книжка за самолет: %s | Книжка за хеликоптер: %s | Книжка за лодка: %s | Книжка за влак: %s | Deathmatch: %d/3 | Moneybox: %d/3 | Streetrace %d/3 ",knijkas, knijkah, knijkab, vlak, dea, mon, st);
        SendClientMessage(playerid, COLOR_GRAD2, string);
		format(string, sizeof(string), "Радио: %s | ADMIN Mute: %s | Gold Play Fuel Company: %s | Event Admin: %s | Manage Admin: %s | CMN1 Kill %d/3 ",radio, adminmute, gfc, event, manage, cmn1);
        SendClientMessage(playerid, COLOR_GRAD2, string);
        format(string, sizeof(string), "Играно време след получаване на последния Payday: %d минути", payd);
        SendClientMessage(playerid, COLOR_GREEN, string);
	}
}



//==============================================================================
public SendAdminMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pHide2] == 0)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
public SendTestMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pTest] >= 1 && PlayerInfo[i][pHide] == 0 || PlayerInfo[i][pRedTa] == 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
//==============================================================================
new InvalidNosVehicles[29] =
{
	581,523,462,521,463,522,461,448,468,586,
    509,481,510,472,473,493,595,484,430,453,
    452,446,454,590,569,537,538,570,449
};
//==============================================================================
public IsPlayerInInvalidNosVehicle(playerid)
{
	new carid = GetPlayerVehicleID(playerid);
	new carmodel = GetVehicleModel(carid);
	for (new i=0; i<sizeof(InvalidNosVehicles); i++)
	{
	    if (carmodel == InvalidNosVehicles[i]) return 1;
	}
	return 0;
}
//==============================================================================
public SaveAccounts()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
			OnPlayerDataSave(i);
		}
	}
}
//==============================================================================
public GeneralTimer()
{
    new Float:maxspeed = 1000.0;
    new plname[MAX_PLAYER_NAME];
	new string[256];
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerConnected(i))
	    {
            if(PlayerInEvent[i] == 2)
            {
                if(EventPlayers == 1)
                {
                    if(IsPlayerInRangeOfPoint(i, 100.0, -1365.6591,1026.0172,1025.8583) && GetPlayerInterior(i) == 15)
                    {
                        format(string, sizeof(string), "** %s is the only one lasted at the durby match and won $30,000. **", PlayerName(i));
	                    SendClientMessageToAll(COLOR_YELLOW, string);
	                    GivePlayerCash(i, 30000);
                        RestoreWeapons(i);
                        PlayerInEvent[i] = 0;
                        EventPlayers = 0;
                    }
                }
            }

            if(PlayerInfo[i][pHealme] > 0)
			{
			    if(PlayerInfo[i][pHealme] > 0)
			    {
				    PlayerInfo[i][pHealme]--;
			    }
			    if(PlayerInfo[i][pHealme] <= 0)
			    {
			        SendClientMessage(i,COLOR_YELLOW, "Вече можеш да се хелнеш отново!");
                }
			}
			            if(PlayerInfo[i][pRefuel9] > 0)
			{
			    if(PlayerInfo[i][pRefuel9] > 0)
			    {
				    PlayerInfo[i][pRefuel9]--;
			    }
			    if(PlayerInfo[i][pRefuel9] <= 0)
			    {
			        SendClientMessage(i,COLOR_YELLOW, "Вече можеш да презаредиш отново!");
                }
			}
			if(PlayerInfo[i][pFixme] > 0)
			{
			    if(PlayerInfo[i][pFixme] > 0)
			    {
				    PlayerInfo[i][pFixme]--;
			    }
			    if(PlayerInfo[i][pFixme] <= 0)
			    {
			        SendClientMessage(i,COLOR_YELLOW, "Вече можеш да използваш /fix и /tires отново!");
                }
			}
						if(PlayerInfo[i][pRes] > 0)
			{
			    if(PlayerInfo[i][pRes] > 0)
			    {
				    PlayerInfo[i][pRes]--;
			    }
			    if(PlayerInfo[i][pRes] <= 0)
			    {
			    new string2[256];
			    			    gmxtime = 0;
    format(string2, sizeof(string2), "Сървъра се рестартира");
    SendClientMessageToAll(COLOR_WHITE, string2);
       	SaveAccounts();
	SendRconCommand("gmx");
                }
			}
														if(PlayerInfo[i][pResLSPD] > 0)
			{
			    if(PlayerInfo[i][pResLSPD] > 0)
			    {
				    PlayerInfo[i][pResLSPD]--;
			    }
			    if(PlayerInfo[i][pResLSPD] <= 0)
			    {
DestroyObject(lspdb2);
IsGateTeamsLSPD = 0;
lspdb = CreateObject(968, 1544.517822, -1630.802856, 12.942745, -88.800003, 0.000000, 0.000000);
                }
			}
			
			
																	if(PlayerInfo[i][pResLS] > 0)
			{
			    if(PlayerInfo[i][pResLS] > 0)
			    {
				    PlayerInfo[i][pResLS]--;
			    }
			    if(PlayerInfo[i][pResLS] <= 0)
			    {
IsGateTeamsLS = 0;
MoveObject(lsb, 1589.457153, -1638.095458, 13.576784, 3);
                }
			}
			
			
																	if(PlayerInfo[i][pResSFPD] > 0)
			{
			    if(PlayerInfo[i][pResSFPD] > 0)
			    {
				    PlayerInfo[i][pResSFPD]--;
			    }
			    if(PlayerInfo[i][pResSFPD] <= 0)
			    {
DestroyObject(sfpdb2);
IsGateTeamsSFPD = 0;
sfpdb = CreateObject(968, -1572.117431, 658.834045, 6.778139, -90.500000, 0.000000, 0.000000);
                }
			}
			
												if(PlayerInfo[i][pResLVPD] > 0)
			{
			    if(PlayerInfo[i][pResLVPD] > 0)
			    {
				    PlayerInfo[i][pResLVPD]--;
			    }
			    if(PlayerInfo[i][pResLVPD] <= 0)
			    {
DestroyObject(lvpdb2);
IsGateTeamsLVPD = 0;
lvpdb = CreateObject(968, 2238.241455, 2450.430908, 10.405052, -88.199996, 0.000000, 0.000000);
                }
			}
			
									if(PlayerInfo[i][pResP1] > 0)
			{
			    if(PlayerInfo[i][pResP1] > 0)
			    {
				    PlayerInfo[i][pResP1]--;
			    }
			    if(PlayerInfo[i][pResP1] <= 0)
			    {
			    MoveObject(cripz2, 321.455444, -1187.909057, 76.277015, 3);
      			IsGateTeams5 = 0;
                }
			}
												if(PlayerInfo[i][pResP2] > 0)
			{
			    if(PlayerInfo[i][pResP2] > 0)
			    {
				    PlayerInfo[i][pResP2]--;
			    }
			    if(PlayerInfo[i][pResP2] <= 0)
			    {
				MoveObject(yakuzap, 1642.983398, -1715.314453, 14.662660, 3);
      			IsGateTeams6 = 0;
                }
			}



												if(PlayerInfo[i][pResPA] > 0)
			{
			    if(PlayerInfo[i][pResPA] > 0)
			    {
				    PlayerInfo[i][pResPA]--;
			    }
			    if(PlayerInfo[i][pResPA] <= 0)
			    {
				MoveObject(tporta1, 497.792083, -1456.461303, 18.088388, 3);
      			IsGateTeams7 = 0;
                }
			}
			
if(PlayerInfo[i][pResDPK] > 0)
			{
			    if(PlayerInfo[i][pResDPK] > 0)
			    {
				    PlayerInfo[i][pResDPK]--;
			    }
			    if(PlayerInfo[i][pResDPK] <= 0)
			    {
		    	MoveObject(dpk1, 2497.4063, 2777.0703, 11.5313, 3);
 			        MoveObject(dpk2, 2497.4063, 2769.1094, 11.5313, 3);
      			IsGateTeamsDPK = 0;
                }
			}
			
												if(PlayerInfo[i][pResDF] > 0)
			{
			    if(PlayerInfo[i][pResDF] > 0)
			    {
				    PlayerInfo[i][pResDF]--;
			    }
			    if(PlayerInfo[i][pResDF] <= 0)
			    {
				MoveObject(dfb1, 345.396636, 1797.919677, 18.384870, 3);
      			IsGateTeamsDF = 0;
                }
			}

												if(PlayerInfo[i][pResPB] > 0)
			{
			    if(PlayerInfo[i][pResPB] > 0)
			    {
				    PlayerInfo[i][pResPB]--;
			    }
			    if(PlayerInfo[i][pResPB] <= 0)
			    {
				MoveObject(tporta2, 501.706787, -1559.498657, 19.324882, 3);
      			IsGateTeams8 = 0;
                }
			}



															if(PlayerInfo[i][pEventOn2] > 0)
			{
			    if(PlayerInfo[i][pEventOn2] > 0)
			    {
				    PlayerInfo[i][pResP2]--;
			    }
			    if(PlayerInfo[i][pEventOn2] <= 0)
			    {
PlayerInfo[i][pEventOn] = 0;
			SendClientMessageToAll(COLOR_RED, "Времето за влизане в евента свърши");

                }
			}
															if(PlayerInfo[i][pRobTime1] > 0)
			{
			    if(PlayerInfo[i][pRobTime1] > 0)
			    {
				    PlayerInfo[i][pRobTime1]--;
			    }
			    if(PlayerInfo[i][pRobTime1] <= 0)
			    {
                    PlayerInfo[i][Exp] += 30;
		            PlayerInfo[i][pCash] += 1500000;
                }
			}
															if(PlayerInfo[i][pAtm] > 0)
			{
			    if(PlayerInfo[i][pAtm] > 0)
			    {
				    PlayerInfo[i][pAtm]--;
			    }
			    if(PlayerInfo[i][pAtm] <= 0)
			    {
                    PlayerInfo[i][Exp] += 15;
		            PlayerInfo[i][pCash] += 500000;
                }
			}

															if(PlayerInfo[i][pTimer1] > 0)
			{
			    if(PlayerInfo[i][pTimer1] > 0)
			    {
				    PlayerInfo[i][pTimer1]--;
			    }
			    if(PlayerInfo[i][pTimer1] <= 0)
			    {
				    PlayerInfo[i][pWK] = 10;
                }
			}
																		if(PlayerInfo[i][pTimer9] > 0)
			{
			    if(PlayerInfo[i][pTimer9] > 0)
			    {
				    PlayerInfo[i][pTimer9]--;
			    }
			    if(PlayerInfo[i][pTimer9] <= 0)
			    {
				    PlayerInfo[i][pCok] -= 10;
                }
			}
			
			
																					if(PlayerInfo[i][pTimer10] > 0)
			{
			    if(PlayerInfo[i][pTimer10] > 0)
			    {
				    PlayerInfo[i][pTimer10]--;
			    }
			    if(PlayerInfo[i][pTimer10] <= 0)
			    {
			        SetPlayerWeather(i, 2230);
				    PlayerInfo[i][pTimer11] = 30*1;
                }
			}
																								if(PlayerInfo[i][pTimer11] > 0)
			{
			    if(PlayerInfo[i][pTimer11] > 0)
			    {
				    PlayerInfo[i][pTimer11]--;
			    }
			    if(PlayerInfo[i][pTimer11] <= 0)
			    {
			        SetPlayerWeather(i, 1);
                }
			}
			
			
																		if(PlayerInfo[i][pTimer8] > 0)
			{
			    if(PlayerInfo[i][pTimer8] > 0)
			    {
				    PlayerInfo[i][pTimer8]--;
			    }
			    if(PlayerInfo[i][pTimer8] <= 0)
			    {
				    PlayerInfo[i][pHeroin] -= 10;
                }
			}
			
															if(PlayerInfo[i][pTimer3] > 0)
			{
			    if(PlayerInfo[i][pTimer3] > 0)
			    {
				    PlayerInfo[i][pTimer3]--;
			    }
			    if(PlayerInfo[i][pTimer3] <= 0)
			    {
				    PlayerInfo[i][pRadio] = 1;
                }
			}

															if(PlayerInfo[i][pTimer2] > 0)
			{
			    if(PlayerInfo[i][pTimer2] > 0)
			    {
				    PlayerInfo[i][pTimer2]--;
			    }
			    if(PlayerInfo[i][pTimer2] <= 0)
			    {
				    PlayerInfo[i][pCig] += 25;
                }
			}
																		if(PlayerInfo[i][pTimer6] > 0)
			{
			    if(PlayerInfo[i][pTimer2] > 0)
			    {
				    PlayerInfo[i][pTimer2]--;
			    }
			    if(PlayerInfo[i][pTimer2] <= 0)
			    {
				    PlayerInfo[i][pHeroin] += 30;
                }
			}
																		if(PlayerInfo[i][pTimer7] > 0)
			{
			    if(PlayerInfo[i][pTimer2] > 0)
			    {
				    PlayerInfo[i][pTimer2]--;
			    }
			    if(PlayerInfo[i][pTimer2] <= 0)
			    {
				    PlayerInfo[i][pCoc] += 50;
                }
			}
															if(PlayerInfo[i][pTimeAdmin] > 0)
			{
			    if(PlayerInfo[i][pTimeAdmin] > 0)
			    {
				    PlayerInfo[i][pTimeAdmin]--;
			    }
			    if(PlayerInfo[i][pTimeAdmin] <= 0)
			    {
				    PlayerInfo[i][pAdmin] = 1;
				  	format(string, sizeof(string), "%s вече е Helper", PlayerName(i));
	                SendClientMessageToAll(COLOR_GREEN, string);
                }
			}
															if(PlayerInfo[i][pSave] > 0)
			{
			    if(PlayerInfo[i][pSave] > 0)
			    {
				    PlayerInfo[i][pSave]--;
			    }
			    if(PlayerInfo[i][pSave] <= 0)
			    {
			    new playerid;
			    PlayerInfo[i][pSave] = 60*60;
			SendClientMessageToAll(COLOR_RED, "SERVER: - AUTO SAVE: Цялата статистика за сървъра в момента се ЗАПАМЕТЯВА АВТОМАТИЧНО!");
			SendClientMessageToAll(COLOR_RED, "SERVER: В момента всичко за акаунтите/къщите/бизнесите се запаметява!");
			SendClientMessageToAll(COLOR_RED, "SERVER: Докато всичко се запаметява сървъра ще изглежда че все едно не работи!");
			SendClientMessageToAll(COLOR_RED, "SERVER: Няма да можете да правите нищо в сървъра, но това е само докато нещата се запаметят!");
			SendClientMessageToAll(COLOR_RED, "SERVER: Моля,изчакайте докато всичко се запамети!");
			SaveAccounts();
			for(new h; h<MAX_HOUSES; h++)
			{
			SavePlayerHouse(h);
			}
			SendClientMessageToAll(COLOR_RED, "SERVER: Всичко се запамети успешно, благодарим за вашето търпение!");
                }
			}
	 																	if(PlayerInfo[i][pRegi] > 0)
			{
			    if(PlayerInfo[i][pRegi] > 0)
			    {
				    PlayerInfo[i][pRegi]--;
			    }
			    if(PlayerInfo[i][pRegi] <= 0)
			    {
			    new playerid;
			    	new admin[32];
	        new nxtlevel = PlayerInfo[playerid][Level]+1;
        new expamount = nxtlevel*levelexp;
	                	if(PlayerInfo[playerid][pTest] == 1) { admin = "Test Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pTest] == 0) { admin = "None"; }
                	else if(PlayerInfo[playerid][pAdmin] == 1) { admin = "Helper"; }
                	else if(PlayerInfo[playerid][pAdmin] == 4) { admin = "Grand Admin"; }
                	else if(PlayerInfo[playerid][pAdmin] == 2) { admin = "Administrator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 3) { admin = "Moderator"; }
                	else if(PlayerInfo[playerid][pAdmin] == 6) { admin = "Owner";}
					else if(PlayerInfo[playerid][pAdmin] == 7) { admin = "Scripter";}
					else if(PlayerInfo[playerid][pAdmin] == 5) { admin = "Master Admin";}
	   
			format(string, sizeof(string), "Admin Level: %s | VIP Level: %d | Level: %d | EP: %d/%d| EP Skill: %d | Weapon Skill: %d | Money Skill: %d | Faction: %s", admin, PlayerInfo[playerid][pDonateRank], PlayerInfo[playerid][Level], PlayerInfo[playerid][Exp], expamount, PlayerInfo[playerid][EpSkill], PlayerInfo[playerid][WsSkill], PlayerInfo[playerid][MoneySkill], TeamInfo[PlayerInfo[playerid][pMember]][TeamName]);
	    SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
                }
			}
															if(PlayerInfo[i][pTimeVip2] > 0)
			{
			    if(PlayerInfo[i][pTimeVip2] > 0)
			    {
				    PlayerInfo[i][pTimeVip2]--;
			    }
			    if(PlayerInfo[i][pTimeVip2] <= 0)
			    {
			    new playerid;
			    PlayerInfo[playerid][pTimeVip2] = 1*1;
			    PlayerInfo[playerid][pTimeVip] = 1;

                }
			}
															if(PlayerInfo[i][pGmxTime] > 0)
			{
			    if(PlayerInfo[i][pGmxTime] > 0)
			    {
				    PlayerInfo[i][pGmxTime]--;
			    }
			    if(PlayerInfo[i][pGmxTime] <= 0)
			    {
    SendRconCommand("gmx");

                }
			}

			if(PlayerInfo[i][pRB2] > 0)
			{
			    if(PlayerInfo[i][pRB2] > 0)
			    {
				    PlayerInfo[i][pRB2]--;
			    }
			    if(PlayerInfo[i][pRB2] <= 0)
			    {
GivePlayerCash(i, pMoneyG);
	   PlayerInfo[i][pMoneyG] = 0;
PlayerInfo[i][pRB] = 0;
                }
			}
	    
			if(PlayerInfo[i][pRB] > 0)
			{
			    if(PlayerInfo[i][pRB] > 0)
			    {
				    PlayerInfo[i][pRB]--;
			    }
			    if(PlayerInfo[i][pRB] <= 0)
			    {
PlayerInfo[i][pMoneyG] += 500;
PlayerInfo[i][pRB] = 1*1;
PlayerInfo[i][pRB2] = 60*1;
                }
			}
						if(PlayerInfo[i][pSR] > 0)
			{
			    if(PlayerInfo[i][pSR] > 0)
			    {
				    PlayerInfo[i][pSR]--;
			    }
			    if(PlayerInfo[i][pSR] <= 0)
			    {
		format(string, sizeof(string), "Streetrace: Съзтезанието започна,успех на участниците в него");
		SendClientMessageToAll(COLOR_BL1, string);
			    new playerid;
SetPlayerCheckpoint(playerid, Race1p, 3.0);
Race = 0;
Race2 = 0;
Race3 = 0;
Moneybox = 1;
raceplayers = 0;
                }
			}
			
			

			if(PlayerInfo[i][pRT] > 0)
			{
			    if(PlayerInfo[i][pRT] > 0)
			    {
				    PlayerInfo[i][pRT]--;
			    }
			    if(PlayerInfo[i][pRT] <= 0)
			    {
			    new playerid;
		TogglePlayerSpectating(playerid, false);
        ForceClassSelection(playerid);
                }
			}
//

if(PlayerInfo[i][pRespawncars1] > 0)
			{
			    if(PlayerInfo[i][pRespawncars1] > 0)
			    {
				    PlayerInfo[i][pRespawncars1]--;
			    }
			    if(PlayerInfo[i][pRespawncars1] <= 0)
			    {
				for(new cars=0; cars<MAX_VEHICLES; cars++)
				{
					if(!VehicleOccupied(cars))
					{
				    {
						SetVehicleToRespawn(cars);
					}
				}
			    }
                }
			}
//
			
			if(PlayerInfo[i][pVoteTime] > 0)
			{
			    if(PlayerInfo[i][pVoteTime] > 0)
			    {
				    PlayerInfo[i][pVoteTime]--;
			    }
			    if(PlayerInfo[i][pVoteTime] <= 0)
			    {
			    				    if(IsPlayerConnected(i))
				    {
				format(string, sizeof(string), "Резултатите от гласуванията на последния въпрос - %s са %d ДА %d НЕ",PlayerInfo[i][VoteText], PlayerInfo[i][pDa] ,PlayerInfo[i][pNe]);
		SendClientMessage(i, COLOR_GREEN, string);
				PlayerInfo[i][pDa] = 0;
		PlayerInfo[i][pNe] = 0;
		PlayerInfo[i][pDa2] = 0;
		PlayerInfo[i][pNe2] = 0;
					PlayerInfo[i][pVoteT2] = 0;
			PlayerInfo[i][i] = 0;
			PlayerInfo[i][plDa] = 0;
			vote1 = 0;
			vote2 = 0;
		for(new rzx=0; rzx < MAX_PLAYERS; rzx++)
    {
			vote1 = 0;
			vote2 = 0;
			PlayerInfo[rzx][pVoteT2] = 0;
			
			PlayerInfo[rzx][pVoteT1] = 0;
		}
                }
			}

			if(PlayerInfo[i][pResTime] > 0)
			{
			    if(PlayerInfo[i][pResTime] > 0)
			    {
				    PlayerInfo[i][pResTime]--;
			    }
			    if(PlayerInfo[i][pResTime] <= 0)
			    {
			    for(new rzx=0; rzx < MAX_PLAYERS; rzx++)
    {
			format(string, sizeof(string), "VOTE RESPAWN CARS: Резултатите от гласуването за RESPAWN на превозните средства са Да: %d Не: %d", PlayerInfo[i][pDa2] ,PlayerInfo[i][pNe2]);
		SendClientMessage(i, COLOR_RED, string);
				PlayerInfo[i][pDa2] = 0;
		PlayerInfo[rzx][i] = 0;
				    				    			    if(PlayerInfo[rzx][pDa2] >= PlayerInfo[rzx][pNe2])
			    {
PlayerInfo[i][pRespawncars1] = 1*10;
                format(string, sizeof(string), "ADMIN: All vehicles will be respawned after 10 secounds");
                SendClientMessage(i, COLOR_RED, string);
			}
			}
	    	}
			}
						    for(new rzx=0; rzx < MAX_PLAYERS; rzx++)
    {
			vote2 = 0;
			PlayerInfo[rzx][pVoteT2] = 0;
			}
   }
			
															if(PlayerInfo[i][pMoney] > 0)
			{
			    if(PlayerInfo[i][pMoney] > 0)
			    {
				    PlayerInfo[i][pMoney]--;
			    }
			    if(PlayerInfo[i][pMoney] <= 0)
			    {
				    SetPlayerCheckpoint(i, MB1, 3.0);
                }
			}
																		if(PlayerInfo[i][pDMF] > 0)
			{
			    if(PlayerInfo[i][pDMF] > 0)
			    {
				    PlayerInfo[i][pDMF]--;
			    }
			    if(PlayerInfo[i][pDMF] <= 0)
			    {
         	 new string2[256];
                        format(string2, sizeof(string2), "Deathmatch мисията започна");
                        SendClientMessage(i, COLOR_RED, string2);
                        SetPlayerCheckpoint(i, Racestart, 3.0);
				     TogglePlayerControllable(i,1);
				     DisablePlayerCheckpoint(i);
				     TogglePlayerControllable(i,1);
				     Death = 0;
				     Death2 = 0;
				     Death3 = 0;
				     Race = 1;
				      TogglePlayerControllable(i,1);
                }
			}
																					if(PlayerInfo[i][pDMF2] > 0)
			{
			    if(PlayerInfo[i][pDMF2] > 0)
			    {
				    PlayerInfo[i][pDMF2]--;
			    }
			    if(PlayerInfo[i][pDMF2] <= 0)
			    {
SetPlayerCheckpoint(i, DM, 3.0);
                }
			}
//-------===========================--------------------
//-------===========================--------------------
//-------===========================--------------------
			if(PlayerInfo[i][pCoalmine] > 0)
			{
			    if(PlayerInfo[i][pCoalmine] > 0)
			    {
				    PlayerInfo[i][pCoalmine]--;
			    }
			    if(PlayerInfo[i][pCoalmine] <= 0)
			    {
				    PlayerInfo[i][pCoalmine1] = 0;
	        format(string, sizeof(string), "Вече можеш да работиш Coalmine Job.");
            SendClientMessage(i, COLOR_YELLOW, string);
                }
			}
			if(PlayerInfo[i][pBus] > 0)
			{
			    if(PlayerInfo[i][pBus] > 0)
			    {
				    PlayerInfo[i][pBus]--;
			    }
			    if(PlayerInfo[i][pBus] <= 0)
			    {
				    PlayerInfo[i][pBus1] = 0;
	        format(string, sizeof(string), "Вече можеш да работиш Bus Job.");
            SendClientMessage(i, COLOR_YELLOW, string);
                }
			}
			if(PlayerInfo[i][pPizza] > 0)
			{
			    if(PlayerInfo[i][pPizza] > 0)
			    {
				    PlayerInfo[i][pPizza]--;
			    }
			    if(PlayerInfo[i][pPizza] <= 0)
			    {
				    PlayerInfo[i][pPiza1] = 0;
	        format(string, sizeof(string), "Вече можеш да работиш Pizza Job.");
            SendClientMessage(i, COLOR_YELLOW, string);
                }
			}
			if(PlayerInfo[i][pSweep] > 0)
			{
			    if(PlayerInfo[i][pSweep] > 0)
			    {
				    PlayerInfo[i][pSweep]--;
			    }
			    if(PlayerInfo[i][pSweep] <= 0)
			    {
               PlayerInfo[i][pSweep1] = 0;
	        format(string, sizeof(string), "Вече можеш да работиш Sweep Job.");
            SendClientMessage(i, COLOR_YELLOW, string);
                }
			}
			if(PlayerInfo[i][pPilot] > 0)
			{
			    if(PlayerInfo[i][pPilot] > 0)
			    {
				    PlayerInfo[i][pPilot]--;
			    }
			    if(PlayerInfo[i][pPilot] <= 0)
			    {
							PlayerInfo[i][pPilot1] = 0;
	        format(string, sizeof(string), "Вече можеш да работиш Pilot Job.");
            SendClientMessage(i, COLOR_YELLOW, string);
                }
			}
//-------===========================--------------------
//-------===========================--------------------
//-------===========================--------------------
			if(PlayerInfo[i][pKolelo1] > 0)
			{
			    if(PlayerInfo[i][pKolelo1] > 0)
			    {
				    PlayerInfo[i][pKolelo1]--;
			    }
			    if(PlayerInfo[i][pKolelo1] <= 0)
			    {
			        PlayerInfo[i][pKolelo1] = 0;
			        
			        
				    format(string, sizeof(string), "%s",RK[random(sizeof(RK))]);
	                				if (PlayerInfo[i][pEvent] == 1 || PlayerInfo[i][pTick] == 1)
				{
					SendRiskMessage(COLOR_ORANGE, string);
				}
				
				
                }
			}


			if(PlayerInfo[i][pBizInfor] > 0)
			{
			    if(PlayerInfo[i][pBizInfor] > 0)
			    {
				    PlayerInfo[i][pBizInfor]--;
			    }
			    if(PlayerInfo[i][pBizInfor] <= 0)
			    {
			        PlayerInfo[i][pBizInfor] = 1*1;
			        for(new h; h<MAX_HOUSES; h++){
				if(HouseInfo[h][Bus] == 1)
	    {
	new string[256];
			if(HouseInfo[h][hSellable] == 1){
	  			if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~Bussines For Sale~n~~r~%s~n~~w~PRICE:~g~ $%d~n~ ~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hName], HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][bPay]);
					GameTextForPlayer(i,string, 1500, 3);
				}
			} else if(HouseInfo[h][hSellable] == 0){
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~r~%s~n~~w~Owner:~g~ %s ~n~~w~Level: ~b~%d ~w~~n~ENTER FEE: ~y~$%d ~n~~w~PAYOUT: ~g~$%d", HouseInfo[h][hName], HouseInfo[h][hOwner],  HouseInfo[h][hLevel], HouseInfo[h][Fee], HouseInfo[h][bPay]);
					GameTextForPlayer(i,string, 1500, 3);
     }
					//
				}
				}
				}
				}
				}



			if(PlayerInfo[i][pHouseInfor] > 0)
			{
			    if(PlayerInfo[i][pHouseInfor] > 0)
			    {
				    PlayerInfo[i][pHouseInfor]--;
			    }
			    if(PlayerInfo[i][pHouseInfor] <= 0)
			    {
			        PlayerInfo[i][pHouseInfor] = 1*1;
for(new h; h<MAX_HOUSES; h++){
if(HouseInfo[h][Bus] == 0)
	    {
	new string[256];
			if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 1) {
	  			if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 2) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 3) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 4) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 5) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 6) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 7) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 2 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 8) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 9) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 10) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 11) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 12) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 9 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
	}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 13) {
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 10 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
				}
				}
			}  if(HouseInfo[h][hSellable] == 0 && HouseInfo[h][Bus] == 0){
				if(PlayerToPoint(PTP_RADIUS, i, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~w~Owner:~g~ %s~n~~w~Level: ~b~ %d~n~", HouseInfo[h][hName], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(i,string, 1500, 3);
					}
					//
				}
				//
				}
				}
                }


			if(PlayerInfo[i][pKolelo2] > 0)
			{
			    if(PlayerInfo[i][pKolelo2] > 0)
			    {
				    PlayerInfo[i][pKolelo2]--;
			    }
			    if(PlayerInfo[i][pKolelo2] <= 0)
			    {
			        PlayerInfo[i][pKolelo2] = 0;


				    format(string, sizeof(string), "%s",RK2[random(sizeof(RK2))]);
					SendClientMessage(i, COLOR_ORANGE, string);


                }
			}




			if(PlayerInfo[i][pKickT] > 0)
			{
			    if(PlayerInfo[i][pKickT] > 0)
			    {
				    PlayerInfo[i][pKickT]--;
			    }
			    if(PlayerInfo[i][pKickT] <= 0)
			    {
			        PlayerInfo[i][pKickT] = 0;
SendClientMessage(i, COLOR_GRAD1, "SERVER:Този Nickname е блокиран.");
SetTimerEx("DelayedKick", 1000, false, "i", i);
                }
			}


			if(PlayerInfo[i][pTimerG] > 0)
			{
			    if(PlayerInfo[i][pTimerG] > 0)
			    {
				    PlayerInfo[i][pTimerG]--;
			    }
			    if(PlayerInfo[i][pTimerG] <= 0)
			    {
			        PlayerInfo[i][pTimerB] = 0;
			        format(string, sizeof(string), "SERVER: %s вече отново може да стартира Turf War", PlayerName(i));
           			SendClientMessageToAll(COLOR_GREEN, string);
                }
			}
			if(PlayerInfo[i][pBalon2] > 0)
			{
			    if(PlayerInfo[i][pBalon2] > 0)
			    {
				    PlayerInfo[i][pBalon2]--;
			    }
			    if(PlayerInfo[i][pBalon2] <= 0)
			    {
			        PlayerInfo[i][pBalon2] = 0;
			        format(string, sizeof(string), "Балона се върна в офиса", PlayerName(i));
           			SendClientMessage(i,COLOR_ORANGE, string);
           			MoveObject(balon2, 1804.6072,-1308.5834,131.9282, 8);
                }
			}
						if(PlayerInfo[i][pBalon3] > 0)
			{
			    if(PlayerInfo[i][pBalon3] > 0)
			    {
				    PlayerInfo[i][pBalon3]--;
			    }
			    if(PlayerInfo[i][pBalon3] <= 0)
			    {
			        PlayerInfo[i][pBalon3] = 0;
			        format(string, sizeof(string), "Балона се върна в офиса", PlayerName(i));
           			SendClientMessage(i,COLOR_ORANGE, string);
           			MoveObject(balon3, 1832.0045,-1315.3163,131.7344, 8);
                }
			}
									if(PlayerInfo[i][pBalon4] > 0)
			{
			    if(PlayerInfo[i][pBalon4] > 0)
			    {
				    PlayerInfo[i][pBalon4]--;
			    }
			    if(PlayerInfo[i][pBalon4] <= 0)
			    {
			        PlayerInfo[i][pBalon4] = 0;
			        format(string, sizeof(string), "Балона се върна в офиса", PlayerName(i));
           			SendClientMessage(i,COLOR_ORANGE, string);
           			MoveObject(balon4, 1833.5729,-1274.0002,131.7344, 8);
                }
			}
						if(PlayerInfo[i][pDerbyTimer] > 0)
			{
			    if(PlayerInfo[i][pDerbyTimer] > 0)
			    {
				    PlayerInfo[i][pDerbyTimer]--;
			    }
			    if(PlayerInfo[i][pDerbyTimer] <= 0)
			    {
			    startderby = 1;
    for(new i; i<MAX_PLAYERS; i++)
    {
        TogglePlayerControllable(i,1);
    }
    
if(PlayerInfo[i][pInDerby] >= 1)
			    {
if(derbypl >= 10)
{
sabrani = 1;
			        format(string, sizeof(string), "{FF0000}Derby:Играта започна, успех на всички участници");
           			SendClientMessageToAll(COLOR_BL1, string);
}
if(derbypl <= 9)
{
sabrani = 0;
			        format(string, sizeof(string), "{FF0000}Derby:Играта започна, успех на всички участници");
           			SendClientMessageToAll(COLOR_BL1, string);
}

                }
			}
			}
			
			if(PlayerInfo[i][pBalon1] > 0)
			{
			    if(PlayerInfo[i][pBalon1] > 0)
			    {
				    PlayerInfo[i][pBalon1]--;
			    }
			    if(PlayerInfo[i][pBalon1] <= 0)
			    {
			        PlayerInfo[i][pBalon1] = 0;
			        format(string, sizeof(string), "Балона се върна в офиса", PlayerName(i));
           			SendClientMessage(i,COLOR_ORANGE, string);
           			MoveObject(balon1, 1773.957763, -1309.305664, 130.781982, 8);
                }
			}
			
						if(PlayerInfo[i][pCTFTimer] > 0)
			{
			    if(PlayerInfo[i][pCTFTimer] > 0)
			    {
				    PlayerInfo[i][pCTFTimer]--;
			    }
			    if(PlayerInfo[i][pCTFTimer] <= 0)
			    {
			        PlayerInfo[i][pCTFTimer] = 0;
GameTextForAll("~g~START", 3000, 5);
MoveObject(ctfp110, -1124.956176, 1057.738769, 1340.355224, 44);
MoveObject(ctfp111, -1124.169433, 1046.195068, 1340.355224, 44);
MoveObject(ctfp112, -1123.388671, 1034.741821, 1340.355224, 44);
MoveObject(ctfp113, -1122.601074, 1023.188293, 1340.355224, 44);
MoveObject(ctfp114, -1125.739624, 1069.221679, 1340.355224, 44);
MoveObject(ctfp115, -1125.479858, 1080.794433, 1340.355224, 44);
MoveObject(ctfp116, -1124.460449, 1092.237915, 1340.355224, 44);
MoveObject(ctfp117, -1123.437988, 1103.711791, 1340.355224, 44);
startctf = 1;
MoveObject(ctfp118, -980.416503, 1060.773315, 1340.355224, 44);
MoveObject(ctfp119, -980.092773, 1072.358398, 1340.355224, 44);
MoveObject(ctfp200, -979.771911, 1083.853515, 1340.355224, 44);
MoveObject(ctfp201,  -979.451599, 1095.319580, 1340.355224, 44);
MoveObject(ctfp202, -980.579956, 1049.202636, 1340.355224, 44);
MoveObject(ctfp203, -980.898925, 1037.786254, 1340.355224, 44);
MoveObject(ctfp204, -981.540344, 1014.825073, 1340.355224, 44);
MoveObject(ctfp205, -980.416503, 1060.773315, 1340.355224, 44);
MoveObject(ctfp206, -981.218750, 1026.340332, 1340.355224, 44);
if(PlayerInfo[i][pInCTF] >= 1)
			    {
GivePlayerWeapon(i, 25, 64);
GivePlayerWeapon(i, 24, 64);
GivePlayerWeapon(i, 29, 64);
GivePlayerWeapon(i, 25, 64);
GivePlayerWeapon(i, 24, 64);
GivePlayerWeapon(i, 29, 64);
			    }
if(PlayerInfo[i][pInCTF] <= 0)
			    {
			    }
			    
                }
			}
			if(PlayerInfo[i][pBankaTi] > 0)
			{
			    if(PlayerInfo[i][pBankaTi] > 0)
			    {
				    PlayerInfo[i][pBankaTi]--;
			    }
			    if(PlayerInfo[i][pBankaTi] <= 0)
			    {
			        PlayerInfo[i][pBankaTi] = 0;
TogglePlayerControllable(i, 1);
                }
			}
			if(PlayerInfo[i][ptMuted] > 0)
			{
			    if(PlayerInfo[i][ptMuted] > 0)
			    {
				    PlayerInfo[i][ptMuted]--;
			    }
			    if(PlayerInfo[i][ptMuted] <= 0)
			    {
			        PlayerInfo[i][pMuted] = 0;
			        format(string, sizeof(string), "SERVER: %s was unmuted by THE SERVER. Reason: Time Out", PlayerName(i));
           			SendClientMessageToAll(COLOR_GREEN, string);
                }
			}
			if(PlayerInfo[i][ptMuted] > 0)
			{
			    if(PlayerInfo[i][ptMuted] > 0)
			    {
				    PlayerInfo[i][ptMuted]--;
			    }
			    if(PlayerInfo[i][ptMuted] <= 0)
			    {
			        PlayerInfo[i][pMuted] = 0;
			        format(string, sizeof(string), "SERVER: %s was unmuted by THE SERVER. Reason: Time Out", PlayerName(i));
           			SendClientMessageToAll(COLOR_GREEN, string);
                }
			}
						if(PlayerInfo[i][pTText1] > 0)
			{
			    if(PlayerInfo[i][pTText1] > 0)
			    {
				    PlayerInfo[i][pTText1]--;
			    }
			    if(PlayerInfo[i][pTText1] <= 0)
			    {
    format(string, sizeof(string), "{5065D9}Присъединяването в евента приключи");
    SendClientMessageToAll(COLOR_BL1, string);
    					format(string, sizeof(string),"~w~EVENT ~g~JOIN ~r~OVER");
				    GameTextForPlayer(i, string, 5000, 3);
                }
			}
									if(PlayerInfo[i][pTText2] > 0)
			{
			    if(PlayerInfo[i][pTText2] > 0)
			    {
				    PlayerInfo[i][pTText2]--;
			    }
			    if(PlayerInfo[i][pTText2] <= 0)
			    {
    format(string, sizeof(string), "{5065D9}Влизането в евента е позволено");
    SendClientMessageToAll(COLOR_BL1, string);
    					format(string, sizeof(string),"~w~EVENT ~g~JOIN ~r~OPEN");
				    GameTextForPlayer(i, string, 5000, 3);
                }
			}
												if(PlayerInfo[i][pTText3] > 0)
			{
			    if(PlayerInfo[i][pTText3] > 0)
			    {
				    PlayerInfo[i][pTText3]--;
			    }
			    if(PlayerInfo[i][pTText3] <= 0)
			    {
    format(string, sizeof(string), "{00FF00}[EVENT]%s позволи натискането на F/ENTER в евента", PlayerName(i));
    SendClientMessageToAll(COLOR_BL1, string);
                }
			}
															if(PlayerInfo[i][pTText4] > 0)
			{
			    if(PlayerInfo[i][pTText4] > 0)
			    {
				    PlayerInfo[i][pTText4]--;
			    }
			    if(PlayerInfo[i][pTText4] <= 0)
			    {
    format(string, sizeof(string), "{00FF00}[EVENT]%s позволи боя в евента", PlayerName(i));
    SendClientMessageToAll(COLOR_BL1, string);
                }
			}
			
						if(PlayerInfo[i][pVreme] > 0)
			{
			    if(PlayerInfo[i][pVreme] > 0)
			    {
				    PlayerInfo[i][pVreme]--;
			    }
			    if(PlayerInfo[i][pVreme] <= 0)
			    {
			    //
			        PlayerInfo[i][pVreme] = 1*60;
			        PlayerInfo[i][pPayD] += 1;


	}
			}
			
			
			
			
									if(PlayerInfo[i][pCMN1T] > 0)
			{
			    if(PlayerInfo[i][pCMN1T] > 0)
			    {
				    PlayerInfo[i][pCMN1T]--;
			    }
			    if(PlayerInfo[i][pCMN1T] <= 0)
			    {
			        SetPlayerColor(i,COLOR_ORANGE);
			        PlayerInfo[i][pCMN1T2] = 1*2;

                }
			}
												if(PlayerInfo[i][pCou1] > 0)
			{
			    if(PlayerInfo[i][pCou1] > 0)
			    {
				    PlayerInfo[i][pCou1]--;
			    }
			    if(PlayerInfo[i][pCou1] <= 0)
			    {
			    TogglePlayerControllable(i,0);
	     		GameTextForPlayer(i, "~w~3", 3000, 3);
	     		PlayerInfo[i][pCou2] = 1*2;

                }
			}
												if(PlayerInfo[i][pCou2] > 0)
			{
			    if(PlayerInfo[i][pCou2] > 0)
			    {
				    PlayerInfo[i][pCou2]--;
			    }
			    if(PlayerInfo[i][pCou2] <= 0)
			    {
			        GameTextForPlayer(i, "~w~2", 3000, 3);
			        PlayerInfo[i][pCou3] = 1*2;

                }
			}
			
												if(PlayerInfo[i][pCou3] > 0)
			{
			    if(PlayerInfo[i][pCou3] > 0)
			    {
				    PlayerInfo[i][pCou3]--;
			    }
			    if(PlayerInfo[i][pCou3] <= 0)
			    {
			        GameTextForPlayer(i, "~w~1", 3000, 3);
			        PlayerInfo[i][pCou4] = 1*2;

                }
			}
															if(PlayerInfo[i][pCou5] > 0)
			{
			    if(PlayerInfo[i][pCou5] > 0)
			    {
				    PlayerInfo[i][pCou5]--;
			    }
			    if(PlayerInfo[i][pCou5] <= 0)
			    {
SetPlayerHealth(i,0);

                }
			}
															if(PlayerInfo[i][pCou4] > 0)
			{
			    if(PlayerInfo[i][pCou4] > 0)
			    {
				    PlayerInfo[i][pCou4]--;
			    }
			    if(PlayerInfo[i][pCou4] <= 0)
			    {
           GameTextForPlayer(i, "~r~FIGHT", 3000, 3);
           TogglePlayerControllable(i,1);

                }
			}
												if(PlayerInfo[i][pCMN1T2] > 0)
			{
			    if(PlayerInfo[i][pCMN1T2] > 0)
			    {
				    PlayerInfo[i][pCMN1T2]--;
			    }
			    if(PlayerInfo[i][pCMN1T2] <= 0)
			    {
			        SetPlayerColor(i,COLOR_BLUE);
			        PlayerInfo[i][pCMN1T] = 1*2;

                }
			}
															if(PlayerInfo[i][pCMN1T3] > 0)
			{
			    if(PlayerInfo[i][pCMN1T3] > 0)
			    {
				    PlayerInfo[i][pCMN1T3]--;
			    }
			    if(PlayerInfo[i][pCMN1T3] <= 0)
			    {
			         PlayerInfo[i][pCMN1T] = 0;
			         PlayerInfo[i][pCMN1T2] = 0;
			         			        format(string, sizeof(string), "CMN1:Никой не успя да убие %s,в пет минутното преследване", PlayerName(i));
           			SendClientMessageToAll(COLOR_ORANGE, string);
           			PlayerInfo[i][pCMN1] = 0;
			        				    if(PlayerInfo[i][pMember] == TEAM_GROVE)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_GREEN);
	}
				    if(PlayerInfo[i][pMember] == TEAM_BALLAS)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_PURPLE);
	}
				    if(PlayerInfo[i][pMember] == TEAM_VAGOS)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_YELLOW);
	}
				    if(PlayerInfo[i][pMember] == TEAM_VIP)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,0xFF4500FF);
	}
				    if(PlayerInfo[i][pMember] == TEAM_TRIADS)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,0x33CCFFAA);
	}
				    if(PlayerInfo[i][pMember] == TEAM_BOYZ)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,DANANGBOYS_COLOR);
	}
				    if(PlayerInfo[i][pMember] == TEAM_CRIPZ)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,CRIPZ_COLOR);
	}
				    if(PlayerInfo[i][pMember] == TEAM_GPD)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_WHITE);
	}
				    if(PlayerInfo[i][pMember] == TEAM_SoA)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_RED);
	}
				    if(PlayerInfo[i][pMember] == TEAM_ZETAS)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,0xCCCCCC);
	}
				    if(PlayerInfo[i][pMember] == TEAM_AsianBoyz)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,0x0FD49CFF);
	}
				    if(PlayerInfo[i][pMember] == TEAM_MS13)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_MS13);
	}
				    if(PlayerInfo[i][pMember] == TEAM_BulgarianMafia)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,0xCC66CCFF);
	}
				    if(PlayerInfo[i][pMember] == TEAM_RIFA)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,0x1682D959);
	}
				    if(PlayerInfo[i][pMember] == TEAM_LatinKing)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,0xFFE100FF);
	}
				    if(PlayerInfo[i][pMember] == TEAM_FBI)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_BlackStreet);
	}
				    if(PlayerInfo[i][pMember] == TEAM_NZ)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,0x6D000080);
	}
				    if(PlayerInfo[i][pMember] == TEAM_Thugs)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,0x2480E3FF);
	}
				    if(PlayerInfo[i][pMember] == TEAM_YAKUZA)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_YAKUZA);
	}
				    if(PlayerInfo[i][pMember] == TEAM_CIVILIAN)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_WHITE);
	}
					    if(PlayerInfo[i][pMember] == TEAM_DPK)
	{
				        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;
    SetPlayerColor(i,COLOR_ORANGE);
	}
			        PlayerInfo[i][pCMN1T] = 0;
			        PlayerInfo[i][pCMN1T2] = 0;

                }
			}
									if(PlayerInfo[i][pMonTime] > 0)
			{
			    if(PlayerInfo[i][pMonTime] > 0)
			    {
				    PlayerInfo[i][pMonTime]--;
			    }
			    if(PlayerInfo[i][pMonTime] <= 0)
			    {
			    			    			    if(PlayerInfo[i][pMon] >= 3)
			    {
			    	format(string, sizeof(string), "Moneybox:Ти си печелил Moneybox, 3 пъти затова печелиш 3EP");
           			SendClientMessage(i, COLOR_GREEN, string);
           			PlayerInfo[i][Exp] += 3;
			        PlayerInfo[i][pMon] = 0;
			        PlayerInfo[i][pMonTime] = 1*1;
			        }

                }
			}
			
			
			
											if(PlayerInfo[i][pCMTime] > 0)
			{
			    if(PlayerInfo[i][pCMTime] > 0)
			    {
				    PlayerInfo[i][pCMTime]--;
			    }
			    if(PlayerInfo[i][pCMTime] <= 0)
			    {
						    			    			    if(PlayerInfo[i][pCMN1Kill] >= 3)
			    {
			    	format(string, sizeof(string), "Moneybox:Ти имаш 3 CMN1 Kills, затова печелиш 3EP");
           			SendClientMessage(i, COLOR_GREEN, string);
           			PlayerInfo[i][Exp] += 3;
			        PlayerInfo[i][pCMN1Kill] = 0;
			        PlayerInfo[i][pCMTime] = 1*1;
			        }

                }
			}
												if(PlayerInfo[i][pSt] > 0)
			{
			    if(PlayerInfo[i][pSt] > 0)
			    {
				    PlayerInfo[i][pSt]--;
			    }
			    if(PlayerInfo[i][pSt] <= 0)
			    {
			    			    			    if(PlayerInfo[i][pSt] >= 3)
			    {
			    	format(string, sizeof(string), "Streetrace:Ти си печелил Streetrace 3 пъти затова печелиш 3EP");
           			SendClientMessage(i, COLOR_BL1, string);
           			PlayerInfo[i][Exp] += 3;
			        PlayerInfo[i][pSt] = 0;
			        PlayerInfo[i][pStTime] = 1*1;
			        }

                }
			}
															if(PlayerInfo[i][pSt] > 0)
			{
			    if(PlayerInfo[i][pDea] > 0)
			    {
				    PlayerInfo[i][pDea]--;
			    }
			    if(PlayerInfo[i][pDea] <= 0)
			    {
			    			    if(PlayerInfo[i][pDea] >= 3)
			    {
			    	format(string, sizeof(string), "Streetrace:Ти си печелил Streetrace 3 пъти затова печелиш 3EP");
           			SendClientMessage(i, COLOR_BLUE, string);
           			PlayerInfo[i][Exp] += 3;
			        PlayerInfo[i][pDea] = 0;
			        PlayerInfo[i][pDeaTime] = 1*1;
			        }

                }
			}
			
						if(timer > 0)
			{
			    if(timer > 0)
			    {
				    timer--;
			    }
			    if(timer <= 0)
			    {
			        timer = 0;
			        format(string, sizeof(string), "{FF0000}Derby:Играта започна, успех на всички участници");
           			SendClientMessageToAll(COLOR_BL1, string);
                }
			}
			
			

			
						if(PlayerInfo[i][pRob1] > 0)
			{
			    if(PlayerInfo[i][pRob1] > 0)
			    {
				    PlayerInfo[i][pRob1]--;
			    }
			    if(PlayerInfo[i][pRob1] <= 0)
			    {
			    PlayerInfo[i][pRob1] = 1*2;
		        if(IsPlayerInRangeOfPoint(i, 3, 1239.9829,-2041.6614,59.9389) || IsPlayerInRangeOfPoint(i, 3, 1538.0908,-1616.5916,13.5469) || IsPlayerInRangeOfPoint(i, 3, 2140.0640,-1158.2324,23.9922) || IsPlayerInRangeOfPoint(i, 3, 2194.0444,1986.1279,12.2969) || IsPlayerInRangeOfPoint(i, 3, 1718.4507,1315.4329,10.8125) || IsPlayerInRangeOfPoint(i, 3, 256.8503,67.3138,1003.6406) || IsPlayerInRangeOfPoint(i, 3, 257.5424,68.5065,1003.6406))
		        {
	    			    ApplyAnimation(i,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1);
			        robmoney += 500;
			        PlayerInfo[i][pATMRob2] = 0;
			        PlayerInfo[i][pATMTime] = 0;
			        }
			        else
			        {
if(PlayerInfo[i][pATMRob2] == 0)
{
PlayerInfo[i][pATMRob2] = 1;
PlayerInfo[i][pATMTime] = 3*60;
format(string, sizeof(string), "Robbery ATM:Имаш 3 минути да се върнеш обратно да крадеш!");
SendClientMessage(i, COLOR_ORANGE, string);
}
                }
			}
			if(PlayerInfo[i][pATMTime] > 0)
			{
			    if(PlayerInfo[i][pATMTime] > 0)
			    {
				    PlayerInfo[i][pATMTime]--;
			    }
			    if(PlayerInfo[i][pATMTime] <= 0)
			    {
			    PlayerInfo[i][pRob1] = 0;
			        PlayerInfo[i][pATMRob2] = 0;
			        PlayerInfo[i][pATMTime] = 0;
			        PlayerInfo[i][pRob1] = 0;
GivePlayerCash(i, robmoney);
PlayerInfo[i][pRober] = 0;
robmoney = 0;
format(string, sizeof(string), "Robbery ATM: Обирът спира автоматично, защото крадеца не успя да се върне навреме!",PlayerName(i));
SendClientMessageToAll(COLOR_ORANGE, string);
                }
			}
			}
									if(PlayerInfo[i][pRobB] > 0)
			{
			    if(PlayerInfo[i][pRobB] > 0)
			    {
				    PlayerInfo[i][pRobB]--;
			    }
			    if(PlayerInfo[i][pRobB] <= 0)
			    {
			    PlayerInfo[i][pRobB] = 1*2;
		        if(IsPlayerInRangeOfPoint(i, 3, 2316.6194,-10.2736,26.7422))
		        {
	    			    ApplyAnimation(i,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1);
			        robmoneyb += 600;
			        }

                }
			}

						if(PlayerInfo[i][pMUTE2] > 0)
			{
			    if(PlayerInfo[i][pMUTE2] > 0)
			    {
				    PlayerInfo[i][pMUTE2]--;
			    }
			    if(PlayerInfo[i][pMUTE2] <= 0)
			    {
			        PlayerInfo[i][pMUTE1] = 0;
                }
			}
			
			
									if(PlayerInfo[i][pKK2] > 0)
			{
			    if(PlayerInfo[i][pKK2] > 0)
			    {
				    PlayerInfo[i][pKK2]--;
			    }
			    if(PlayerInfo[i][pKK2] <= 0)
			    {
			        PlayerInfo[i][pKK1] = 0;
                }
			}
			
			
			
			
			
			
			if(PlayerInfo[i][pftMuted] > 0)
			{
			    if(PlayerInfo[i][pftMuted] > 0)
			    {
				    PlayerInfo[i][pftMuted]--;
			    }
			    if(PlayerInfo[i][pftMuted] <= 0)
			    {
			        PlayerInfo[i][pfMuted] = 0;
                }
			}
			if(PlayerInfo[i][pvtMuted] > 0)
			{
			    if(PlayerInfo[i][pvtMuted] > 0)
			    {
				    PlayerInfo[i][pvtMuted]--;
			    }
			    if(PlayerInfo[i][pvtMuted] <= 0)
			    {
			        PlayerInfo[i][pvMuted] = 0;
                }
			}
			if(PlayerInfo[i][ptrMuted] > 0)
			{
			    if(PlayerInfo[i][ptrMuted] > 0)
			    {
				    PlayerInfo[i][ptrMuted]--;
			    }
			    if(PlayerInfo[i][ptrMuted] <= 0)
			    {
			        PlayerInfo[i][prMuted] = 0;
                }
			}
	        if(PlayerInfo[i][pJail] > 0)
			{
			    if(PlayerInfo[i][pJailTime] > 0)
			    {
				    PlayerInfo[i][pJailTime]--;
			    }
			    if(PlayerInfo[i][pJailTime] <= 0)
			    {
			        SetPlayerHealth(i, 0);
					PlayerInfo[i][pJail] = 0;
				    PlayerInfo[i][pJailTime] = 0;
					format(string, sizeof(string), "{1959BA}Jail: Ти си освободен от затвора, внимавай в бъдеще!");
           			SendClientMessage(i, COLOR_GREEN, string);
				    SetPlayerToTeamColor(i);
                }
			}
			if(PlayerInfo[i][pJailed] > 0)
			{
			    if(PlayerInfo[i][pJailTime] > 0)
			    {
				    PlayerInfo[i][pJailTime]--;
			    }
			    if(PlayerInfo[i][pJailTime] <= 0)
			    {
			        SetPlayerHealth(i, 0);
					PlayerInfo[i][pJailed] = 0;
				    PlayerInfo[i][pJailTime] = 0;
					format(string, sizeof(string), "SERVER: %s was unjailed by THE SERVER [Reason:Time Out]", PlayerName(i));
           			SendClientMessageToAll(COLOR_GREEN, string);
				    SetPlayerToTeamColor(i);
                }
            }
		    if(GetPlayerState(i) == 2)
		    {
			    GetPlayerPos(i, TelePos[i][3], TelePos[i][4], TelePos[i][5]);
				if(TelePos[i][0] != 0.0)
				{
				    new Float:xdist = TelePos[i][3]-TelePos[i][0];
					new Float:ydist = TelePos[i][4]-TelePos[i][1];
					new Float:sqxdist = xdist*xdist;
					new Float:sqydist = ydist*ydist;
					new Float:distance = (sqxdist+sqydist)/31;
					if(distance > maxspeed && PlayerInfo[i][pAdmin] < 1)
					{
					    GetPlayerName(i, plname, sizeof(plname));
					}
				}
			    new Float:vX, Float:vY, Float:vZ;
                GetVehicleVelocity(GetPlayerVehicleID(i), vX, vY, vZ);
                new speed = floatround(floatround(floatpower((vX * vX) + (vY * vY) + (vZ * vZ),0.5)*100)*1.61);
				if(speed > 205 && PlayerInfo[i][pAdmin] < 1)
				{
					new tmpcar = GetPlayerVehicleID(i);
					if(!IsAPlane(tmpcar))
					{
						GetPlayerName(i, plname, sizeof(plname));
					}
				}
				else if(speed > 244 && PlayerInfo[i][pAdmin] < 1)
				{
					new tmpcar = GetPlayerVehicleID(i);
					if(IsAPlane(tmpcar))
					{
						GetPlayerName(i, plname, sizeof(plname));
					}
				}
			}
		}
	}
	return 1;
}
//==============================================================================
stock IsVehicleRc(carid)
{
   	switch(GetVehicleModel(carid)){
		case 441, 464, 465, 501, 564, 594: return true;
	}
	return 0;
}

//==============================================================================
stock IsABoat(carid)
{
    new carmodel = GetVehicleModel(carid);
	if(carmodel == 430 || carmodel == 453 || carmodel == 484)
	{
		return 1;
	}
	return 0;
}
//==============================================================================
stock IsArmyCar(carid)
{
    new carmodel = GetVehicleModel(carid);
	if(carmodel == 425 || carmodel == 432 || carmodel == 433 || carmodel == 477 || carmodel == 447 || carmodel == 465 || carmodel == 469 || carmodel == 470)
	{
		return 1;
	}
	return 0;
}
//==============================================================================
stock IsAPlane(carid)
{
    new AirVeh[] = { 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 497, 563, 447, 469 };
    for(new i = 0; i < sizeof(AirVeh); i++)
    {
        if(GetVehicleModel(carid) == AirVeh[i]) return 1;
    }
    return 0;
}
//==============================================================================
stock IsBike(carid)
{
    new Bikes[] = { 509, 481, 510 };
    for(new i = 0; i < sizeof(Bikes); i++)
    {
        if(GetVehicleModel(carid) == Bikes[i]) return 1;
    }
    return 0;
}
//==============================================================================
public SetPlayerToTeamColor(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerInfo[playerid][pMember] == TEAM_GROVE) { SetPlayerColor(playerid, COLOR_GREEN); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_BALLAS) { SetPlayerColor(playerid, COLOR_PURPLE); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_VAGOS) { SetPlayerColor(playerid, COLOR_YELLOW); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_VIP) { SetPlayerColor(playerid, 0xFF4500FF); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_TRIADS) { SetPlayerColor(playerid, 0x33CCFFAA); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_BOYZ) { SetPlayerColor(playerid, DANANGBOYS_COLOR); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ) { SetPlayerColor(playerid, CRIPZ_COLOR); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_GPD) { SetPlayerColor(playerid, COLOR_WHITE); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_SoA) { SetPlayerColor(playerid, COLOR_RED); }
        else if(PlayerInfo[playerid][pMember] == TEAM_ZETAS) { SetPlayerColor(playerid, 0xCCCCCC); }
        else if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz) { SetPlayerColor(playerid, 0x0FD49CFF); }
        else if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz) { SetPlayerColor(playerid, 0x0FD49CFF); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_MS13) { SetPlayerColor(playerid, COLOR_MS13); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_BulgarianMafia) { SetPlayerColor(playerid, 0xCC66CCFF); }
	    else if(PlayerInfo[playerid][pMember] == TEAM_CIVILIAN) { SetPlayerColor(playerid, COLOR_WHITE); }
        else if(PlayerInfo[playerid][pMember] == TEAM_RIFA) { SetPlayerColor(playerid, 0x1682D959); }
        else if(PlayerInfo[playerid][pMember] == TEAM_LatinKing) { SetPlayerColor(playerid, 0xFFE100FF); }
        else if(PlayerInfo[playerid][pMember] == TEAM_FBI) { SetPlayerColor(playerid, COLOR_BlackStreet); }
        else if(PlayerInfo[playerid][pMember] == TEAM_NZ) { SetPlayerColor(playerid, 0x6D000080); }
        else if(PlayerInfo[playerid][pMember] == TEAM_Thugs) { SetPlayerColor(playerid, 0x2480E3FF); }
        else if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA) { SetPlayerColor(playerid, COLOR_YAKUZA); }
        else if(PlayerInfo[playerid][pMember] == TEAM_DPK) { SetPlayerColor(playerid, COLOR_ORANGE); }
	}
}
//==============================================================================
public SendTeamMessage(team, color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(gTeam[i] == team)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
//==============================================================================
public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc))
	{
	    if(strsrc[i]==delimiter || i==strlen(strsrc))
		{
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}
//==============================================================================
public TimeTextForPlayer(playerid, Text:text, time)
{
    TextDrawShowForPlayer( playerid, text );
    SetTimerEx("DestroyTextTimer", time, 0, "i", _:text);
}
//------------------------------------------------------------------------------

public DelayTimeTextForPlayer( playerid, Text:text, time )
{
    SetTimerEx( "TimeTextForPlayer", time, 0, "iii", playerid, _:text, 4000 );
}
//------------------------------------------------------------------------------

//==============================================================================
stock OwnedTurfs()
{
    new turf, playerid;
    for (new i = 0; i < MAX_TURFS; i++) if (turfs[i][TurfOwner] == gTeam[playerid]) turf++;
    return turf;
}
//==============================================================================
stock OwnedTurfs2(teamid)
{
    new turf;
    for (new i = 0; i < MAX_TURFS; i++) if (turfs[i][TurfOwner] == teamid) turf++;
    return turf;
}
//==============================================================================
//==============================================================================
//=========================НЯ ТИ КАЖА ВЕ КОПЕЛЕ :D==============================
//==============================================================================
ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new pos = 0;
	while (text[pos] < 0x21)
	{
		if (text[pos] == 0) return INVALID_PLAYER_ID;
		pos++;
	}
	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[pos]))
	{
		userid = strval(text[pos]);
		if (userid >=0 && userid < MAX_PLAYERS)
		{
			if(!IsPlayerConnected(userid))
			{
				userid = INVALID_PLAYER_ID;
			}
			else
			{
				return userid;
			}
		}
	}
	new len = strlen(text[pos]);
	new name[MAX_PLAYER_NAME];
	for (new i = 0; i < MAX_PLAYERS; i++)
	{
		if (IsPlayerConnected(i))
		{
			GetPlayerName(i, name, sizeof (name));
			if (strcmp(name, text[pos], true, len) == 0)
			{
				if (len == strlen(name))
				{
					return i;
				}
				else
				{
					count++;
					userid = i;
				}
			}
		}
	}
	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
			{
				SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow search");
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
			}
		}
		userid = INVALID_PLAYER_ID;
	}
	return userid;
}
//==============================================================================
IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}
//==============================================================================
public PickupDestroy(playerid)
{
    if(IsPlayerConnected(playerid))
    {
        DestroyPickup(gPickupID[playerid]);
    }
}
//==============================================================================
public TipBot()
{
	new tipid = RandomEx(0, 6);
	switch (tipid)
	{
	    case 0: SendClientMessageToAll(COLOR_CYAN, "{66FFFF}Announcement: GOLD-PLAY Forum - http://gtagpbg.freeforums.org/index.php");
	    case 1: SendClientMessageToAll(COLOR_CYAN, "{66FFFF}Announcement: GOLD PLAY Freeroam Сървър IP:gtagpbg.no-ip.biz:6666 - Скоро ще е отворен");
        case 2: SendClientMessageToAll(COLOR_CYAN, "{66FFFF}Announcement: GOLD PLAY Roleplay Сървър IP:gtagpbg.no-ip.biz:8888 - Скоро ще е отворен");
        case 3: SendClientMessageToAll(COLOR_CYAN, "{66FFFF}Announcement: Искате да станете администратор? Поканете 15 или повече човека в сървъра");
        case 4: SendClientMessageToAll(COLOR_CYAN, "{66FFFF}Announcement: GOLD-PLAY Forum - http://gtagpbg.freeforums.org/index.php");
        case 5: SendClientMessageToAll(COLOR_CYAN, "{66FFFF}Announcement: GOLD PLAY Freeroam Сървър IP:gtagpbg.no-ip.biz:6666 - Скоро ще е отворен");
        case 6: SendClientMessageToAll(COLOR_CYAN, "{66FFFF}Announcement: GOLD PLAY Roleplay Сървър IP:gtagpbg.no-ip.biz:8888 - Скоро ще е отворен");
	}
	return 1;
}
//==============================================================================
//==============================================================================
public FastestReaction(playerid)
{
    PlayerInfo[playerid][pCalcSec] = floatadd(PlayerInfo[playerid][pCalcSec], 0.1);
    return 1;
}
//==============================================================================
public GameBot()
{
    new hh, mm, ss;
    gettime( hh, mm, ss );//-> Gives at ??:00 -> every hour (10:00/11:00 and etc)

if( mm == 35 && ss == 0)
    {
        new game = RandomEx(0, 1);
        switch (game)
	    {
	        case 0:
	        {
                SendClientMessageToAll(COLOR_WHITE, "{FC6C85}Lottery{FC6C85}: Тегленето на лотарията ще започне след 15 минути.Ако все още нямаш фиш използвай {FC6C85}/lotto [1-100].");
			}
		}
	}
	
    if( mm == 40 && ss == 0)
    {
        new game = RandomEx(0, 1);
        switch (game)
	    {
	        case 0:
	        {
                SendClientMessageToAll(COLOR_WHITE, "{FC6C85}Lottery{FC6C85}: Тегленето на лотарията ще започне след 10 минути.Ако все още нямаш фиш използвай {FC6C85}/lotto [1-100].");
			}
		}
	}
	
	    if( mm == 45 && ss == 0 )
    {
        new game = RandomEx(0, 1);
        switch (game)
	    {
	        case 0:
	        {
                SendClientMessageToAll(COLOR_WHITE, "{FC6C85}Lottery{FC6C85}: Тегленето на лотарията ще започне след 5 минути.Ако все още нямаш фиш използвай {FC6C85}/lotto [1-100].");
			}
		}
	}
	
	if( mm == 50 && ss == 0 )
    {
	    new string[256];
    new lotto = RandomEx(1, 100);
    new JackpotFallen = 0;
    format(string, sizeof(string), "{FF00FF}[Gold-Play Lottery] печелившото число е %d.", lotto);
	SendClientMessageToAll(COLOR_GREEN, string);

	    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(PlayerInfo[i][pLotto] == lotto)
	    {
	    GetPlayerName(i, lottowinner, sizeof(lottowinner));
			format(string, sizeof(string), "{FF00FF}Ти спечели $%d от Лотарията.", Jackpot);
			SendClientMessage(i, COLOR_WHITE, string);
	        GivePlayerCash(i, Jackpot);
	        JackpotFallen = 1;

	    }
	    else
	    {
	    }

		PlayerInfo[i][pLotto] = 0;
	}
	if(JackpotFallen)
	{
	new Jackpot2 = Jackpot;
	format(string, sizeof(string), "{FF6699}%s спечели $%d от лотарията. Следващия път стойността джакпота ще е $%d.", lottowinner, Jackpot2, Jackpot);
		SendClientMessageToAll(COLOR_WHITE, string);
	    new rand = random(125000); rand += 50000;
	    Jackpot = rand;
	}
	else
	{
	    new rand = random(15000); rand += 35000;
	    Jackpot += rand;
	    format(string, sizeof(string), "{FF6699}Няма победител за тази лотария. Следващия път стойността джакпота ще е $%d.", Jackpot);
		SendClientMessageToAll(COLOR_WHITE, string);
	}
	}
	    if( mm == 0 && ss == 0 )
    {
    new string[256];
        for (new i; i < MAX_PLAYERS; i++)
	    {
            if (IsPlayerConnected(i))
            {
                 format(string, sizeof(string), "{FFFF99}Часът е %d:00", hh);
                 SendClientMessage(i, 0xCCFFFF99, string);
                                         	     		new hours,minutes,seconds;
gettime(hours, minutes, seconds);
		if (hours == 0)
	{
		SetWorldTime(0);
	}
		if (hours == 1)
	{
		SetWorldTime(0);
	}
		if (hours == 2)
	{
		SetWorldTime(0);
	}
		if (hours == 3)
	{
		SetWorldTime(0);
	}
		if (hours == 4)
	{
		SetWorldTime(0);
	}
		if (hours == 5)
	{
		SetWorldTime(6);
	}
		if (hours == 6)
	{
		SetWorldTime(6);
	}
		if (hours == 7)
	{
		SetWorldTime(13);
	}
		if (hours == 8)
	{
		SetWorldTime(13);
	}
		if (hours == 9)
	{
		SetWorldTime(13);
	}
		if (hours == 10)
	{
		SetWorldTime(13);
	}
		if (hours == 11)
	{
		SetWorldTime(13);
	}
		if (hours == 12)
	{
		SetWorldTime(13);
	}
		if (hours == 13)
	{
		SetWorldTime(13);
	}
		if (hours == 14)
	{
		SetWorldTime(13);
	}
		if (hours == 15)
	{
		SetWorldTime(13);
	}
		if (hours == 16)
	{
		SetWorldTime(13);
	}
		if (hours == 17)
	{
		SetWorldTime(13);
	}
		if (hours == 18)
	{
		SetWorldTime(13);
	}
		if (hours == 19)
	{
		SetWorldTime(23);
	}
		if (hours == 20)
	{
		SetWorldTime(23);
	}
		if (hours == 21)
	{
		SetWorldTime(23);
	}
		if (hours == 22)
	{
		SetWorldTime(0);
	}
			if (hours == 23)
	{
		SetWorldTime(0);
	}







                 				    				if (PlayerInfo[i][pPayD] <= 24)
                {
				    format(string, sizeof(string), "Ти не си играл достатъчно за да получиш Payday!");
				    SendClientMessage(i, COLOR_WHITE, string);
				    }
				    			    if(PlayerInfo[i][pPayD] >= 25)
			    {
	            format(string, sizeof(string), "___|LV BANK STATEMENT|___");
                SendClientMessage(i,0xCC99FF80, string);
                	format(string, sizeof(string), "Обща сума: $%d", PlayerInfo[i][pAccount]);
				    SendClientMessage(i, COLOR_ORANGE, string);
				    format(string, sizeof(string), "Заплата: +$%d", PlayerInfo[i][Level]*100);
                        SendClientMessage(i, COLOR_ORANGE, string);
	                format(string, sizeof(string), "Онлайн бонус: $300");
                    SendClientMessage(i,COLOR_ORANGE, string);
                PlayerInfo[i][Exp] += 5;
                PlayerInfo[i][pAccount] += 50105;

			           PlayerInfo[i][pPayD] = 0;
			           PlayerInfo[i][pVreme] = 1*60;
                        PlayerInfo[i][Exp] += PlayerInfo[i][EpSkill];
                        format(string, sizeof(string), "EP Skill: +%d EP", PlayerInfo[i][EpSkill]);
                        SendClientMessage(i, 0x99CCFF, string);
                        PlayerInfo[i][pAccount] += PlayerInfo[i][MoneySkill];
                        format(string, sizeof(string), "Money Skill: +$%d", PlayerInfo[i][MoneySkill]*10000);
                        SendClientMessage(i, 0x00CC0080, string);
                        if(PlayerInfo[i][pBizO] >= 1)
                        {
                        new bizmoney = PlayerInfo[i][pBizPayday];
						GivePlayerCash(i,bizmoney);
                        format(string, sizeof(string), "Bussines: +$%d", PlayerInfo[i][pBizPayday]);
                        SendClientMessage(i, 0x00CC0080, string);
                        }



PlayerInfo[i][pAccount] += 5000;
                        	     		GameTextForPlayer(i, "~y~PAYDAY~n~~w~PAYCHECK:~n~~g~$5000", 3000, 1);
                if (PlayerInfo[i][pMember] == TEAM_GROVE)
                {
	                format(string, sizeof(string), "Grove Street Families:2EP и 2000");
                    SendClientMessage(i,COLOR_GREEN, string);
                    PlayerInfo[i][Exp] += 2;
		            PlayerInfo[i][pAccount] += 2000;
				}
				                if (PlayerInfo[i][pMember] != TEAM_CIVILIAN)
                {
	                format(string, sizeof(string), "Turfs + %d EP", TeamInfo[PlayerInfo[i][pMember]][TurfWarsWon]);
                    SendClientMessage(i,COLOR_LIGHTBLUE, string);
                    PlayerInfo[i][Exp] += TeamInfo[PlayerInfo[i][pMember]][TurfWarsWon];
                    }

                if (PlayerInfo[i][pMember] == TEAM_YAKUZA)
                {
	                format(string, sizeof(string), "Yakuza:2EP и 2000");
                    SendClientMessage(i,COLOR_RED, string);
                    PlayerInfo[i][Exp] += 2;
		            PlayerInfo[i][pAccount] += 2000;
				}
                if (PlayerInfo[i][pOfis1] == 1)
                {
	                format(string, sizeof(string), "Офис 1:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				                if (PlayerInfo[i][pOfis2] == 1)
                {
	                format(string, sizeof(string), "Офис 2:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
                if (PlayerInfo[i][pOfis3] == 1)
                {
	                format(string, sizeof(string), "Офис 3:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis4] == 1)
                {
	                format(string, sizeof(string), "Офис 4:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis5] == 1)
                {
	                format(string, sizeof(string), "Офис 5:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis6] == 1)
                {
	                format(string, sizeof(string), "Офис 6:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis7] == 1)
                {
	                format(string, sizeof(string), "Офис 7:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis8] == 1)
                {
	                format(string, sizeof(string), "Офис 8:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis9] == 1)
                {
	                format(string, sizeof(string), "Офис 11:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis10] == 1)
                {
	                format(string, sizeof(string), "Офис 12:20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis11] == 1)
                {
	                format(string, sizeof(string), "Офис:13EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
								if (PlayerInfo[i][pOfis12] == 1)
                {
	                format(string, sizeof(string), "Офис:14EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis13] == 1)
                {
	                format(string, sizeof(string), "Офис:15 20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis14] == 1)
                {
	                format(string, sizeof(string), "Офис:16 20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis15] == 1)
                {
	                format(string, sizeof(string), "Офис:17 20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis16] == 1)
                {
	                format(string, sizeof(string), "Офис:16 20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis17] == 1)
                {
	                format(string, sizeof(string), "Офис:17 20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis18] == 1)
                {
	                format(string, sizeof(string), "Офис:18 20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis19] == 1)
                {
	                format(string, sizeof(string), "Офис: 19 20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
				if (PlayerInfo[i][pOfis20] == 1)
                {
	                format(string, sizeof(string), "Офис: 20 20EP и $200000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 20;
		            PlayerInfo[i][pAccount] += 200000;
				}
                if (PlayerInfo[i][pMember] == TEAM_FBI)
                {
	                format(string, sizeof(string), "FBI:2EP и 2000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 2;
		            PlayerInfo[i][pAccount] += 2000;
				}
                if (PlayerInfo[i][pMember] == TEAM_TRIADS)
                {
	                format(string, sizeof(string), "Varios Los Aztecas:2EP и 2000");
                    SendClientMessage(i,COLOR_LIGHTBLUE, string);
                    PlayerInfo[i][Exp] += 2;
		            PlayerInfo[i][pAccount] += 2000;
				}
                if (PlayerInfo[i][pMember] == TEAM_Thugs)
                {
	                format(string, sizeof(string), "Thug Life:2EP и 2000");
                    SendClientMessage(i,0x2480E3FF, string);
                    PlayerInfo[i][Exp] += 2;
		            PlayerInfo[i][pAccount] += 2000;
				}
                if (PlayerInfo[i][pMember] == TEAM_CRIPZ)
                {
	                format(string, sizeof(string), "Vinewood Cripz:2EP и 2000");
                    SendClientMessage(i,COLOR_GREEN, string);
                    PlayerInfo[i][Exp] += 2;
		            PlayerInfo[i][pAccount] += 2000;
				}
                if (PlayerInfo[i][pMember] == TEAM_VIP)
                {
	                format(string, sizeof(string), "VIP:3EP и 3000");
                    SendClientMessage(i,COLOR_LIGHTRED, string);
                    PlayerInfo[i][Exp] += 3;
		            PlayerInfo[i][pAccount] += 3000;
				}
                if (PlayerInfo[i][pMember] == TEAM_GPD && PlayerInfo[i][pRank] == 1)
                {
	                format(string, sizeof(string), "Gold Play Police Department Rank 1:1EP и 1000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 1;
		            PlayerInfo[i][pAccount] += 1000;
				}
                if (PlayerInfo[i][pMember] == TEAM_GPD && PlayerInfo[i][pRank] == 2)
                {
	                format(string, sizeof(string), "Gold Play Police Department Rank 2:2EP и 2000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 2;
		            PlayerInfo[i][pAccount] += 2000;
				}
                if (PlayerInfo[i][pMember] == TEAM_GPD && PlayerInfo[i][pRank] == 3)
                {
	                format(string, sizeof(string), "Gold Play Police Department Rank 3:3EP и 3000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 3;
		            PlayerInfo[i][pAccount] += 3000;
				}
				if (PlayerInfo[i][pDonateRank] == 2)
                {
	                format(string, sizeof(string), "VIP Level 2: 1 EP и 1000$");
                    SendClientMessage(i,COLOR_LIGHTRED, string);
                    PlayerInfo[i][Exp] += 1;
		            PlayerInfo[i][pAccount] += 1000;
				}
                if (PlayerInfo[i][pMember] == TEAM_GPD && PlayerInfo[i][pRank] == 4)
                {
	                format(string, sizeof(string), "Gold Play Police Department Rank 4:4EP и 4000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 4;
		            PlayerInfo[i][pAccount] += 4000;
				}
                if (PlayerInfo[i][pMember] == TEAM_GPD && PlayerInfo[i][pRank] == 5)
                {
	                format(string, sizeof(string), "Gold Play Police Department Rank 5:5EP и 5000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 5;
		            PlayerInfo[i][pAccount] += 5000;
				}
                if (PlayerInfo[i][pMember] == TEAM_GPD && PlayerInfo[i][pRank] == 6)
                {
	                format(string, sizeof(string), "Gold Play Police Department Лидер:7EP и 7000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 6;
		            PlayerInfo[i][pAccount] += 6000;
				}
				               if (PlayerInfo[i][pDeltaForce] == 1)
                {
	                format(string, sizeof(string), "Delta Force :2EP и 2000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 2;
		            PlayerInfo[i][pAccount] += 2000;
				}
                if (PlayerInfo[i][pMember] == TEAM_GPD && PlayerInfo[i][pRank] == 7)
                {
	                format(string, sizeof(string), "Gold Play Police Department Пом Лидер:6EP и 6000");
                    SendClientMessage(i,COLOR_BL1, string);
                    PlayerInfo[i][Exp] += 5;
		            PlayerInfo[i][pAccount] += 5000;
				}
				if (PlayerInfo[i][pDonateRank] == 3)
                {
	                format(string, sizeof(string), "VIP Level 3: 2 EP и 2000$");
                    SendClientMessage(i,COLOR_LIGHTRED, string);
                    PlayerInfo[i][Exp] += 2;
		            PlayerInfo[i][pAccount] += 2000;
				}
				if (PlayerInfo[i][pDonateRank] == 4)
                {
	                format(string, sizeof(string), "VIP Level 4: 3 EP и 3000$");
                    SendClientMessage(i,COLOR_LIGHTRED, string);
                    PlayerInfo[i][Exp] += 3;
		            PlayerInfo[i][pAccount] += 3000;
				}
				if (PlayerInfo[i][pDonateRank] == 6)
                {
	                format(string, sizeof(string), "VIP Level 6: 5 EP и 5000$");
                    SendClientMessage(i,COLOR_LIGHTRED, string);
                    PlayerInfo[i][Exp] += 5;
		            PlayerInfo[i][pAccount] += 5000;
				}
								if (PlayerInfo[i][pDonateRank] == 7)
                {
	                format(string, sizeof(string), "VIP Level 7: 6 EP и 6000$");
                    SendClientMessage(i,COLOR_LIGHTRED, string);
                    PlayerInfo[i][Exp] += 6;
		            PlayerInfo[i][pAccount] += 6000;
				}
				if (PlayerInfo[i][pDonateRank] == 5)
                {
	                format(string, sizeof(string), "VIP Level 5: 4 EP и 4000$");
                    SendClientMessage(i,COLOR_LIGHTRED, string);
                    PlayerInfo[i][Exp] += 4;
		            PlayerInfo[i][pAccount] += 4000;
				}
								if (PlayerInfo[i][pGFC] == 1)
                {
				         format(string, sizeof(string), "Gold Play Fuel Company: +5 EP");
                        SendClientMessage(i, 0x99CCFF, string);
                    PlayerInfo[i][Exp] += 5;
				}

                        PlayerInfo[i][pAccount] += PlayerInfo[i][Level];
                    GivePlayerCash(i, 300);
 	                format(string, sizeof(string), "|----------------|");
 	                SendClientMessage(i,0xCC99FF80, string);
		            format(string, sizeof(string), "Нова обща сума: $%d", PlayerInfo[i][pAccount]);
				    SendClientMessage(i, COLOR_GREEN, string);
				    }
				    }

	}
        }
    new Score;
    new name[MAX_PLAYER_NAME];
    //new string[256];
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i))
        {
		    GetPlayerName(i, name, sizeof(name));
            Score = PlayerInfo[i][Level];
            SetPlayerScore(i, Score);
			if (Score > ScoreOld)
            {
                ScoreOld = Score;
            }
        }
    }
	return 1;
}
//==============================================================================
//==============================================================================
public BanLog(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("Logs/bans.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}
//==============================================================================
forward SendFactionMessage(faction, color, string[]);
public SendFactionMessage(faction, color, string[])
{
for(new i = 0; i < MAX_PLAYERS; i++)
{
	if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] != TEAM_CIVILIAN)
		    {
			 	if(PlayerInfo[i][pMember] == faction)
			  	{
			  	new stringf[256];
			  	    format(stringf, sizeof(stringf),"[FACTION CHAT] %s", string);
 	 				SendClientMessage(i, color, stringf);
				}
			}
		}
	}
}
public AttackPl()
{
new Float:x, Float:y, Float:z;
    for (new i = 0; i < MAX_TURFS; i++)
	{
         for (new c = 0; c < MAX_TEAMS; c++) TurfInfo[i][c][MIT] = 0;
         for (new b = 0; b < 500; b++)
		 {
                  GetPlayerPos(b, x, y, z);
			      if (IsPlayerInTurf(b, turfs[i][zMinX], turfs[i][zMinY], turfs[i][zMaxX], turfs[i][zMaxY]))
			      {
if(turfattackers >= 1)
{
AttackPl();
}
if(turfattackers == 0)
{
new stringf[256];
format(stringf, sizeof(stringf),"[Turf Attack] %s не успя да превземе територията");
SendClientMessageToAll(COLOR_BL1, stringf);
for (new v = 0; v < MAX_TURFS; v++)
	{
GangZoneStopFlashForAll(v);
}
startturf = 0;
turfattackers = 0;
//
//
}
}
}
}
}
forward CheckPl(faction);
public CheckPl(faction)
{
for(new i = 0; i < MAX_PLAYERS; i++)
{
	if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pMember] != TEAM_CIVILIAN)
		    {
			 	if(PlayerInfo[i][pMember] == faction)
			  	{
			  				  	    new stringf[256];
 	               format(stringf, sizeof(stringf),"[FACTION CHAT] Твоята банда стартира Turf War,затова лидерът който стартира атаката може да стартира отново след 5 минути");
 	 				SendClientMessage(i, COLOR_LIGHTBLUE, stringf);
                    CheckPlayers();
			      //
				}
			}
		}
	}
	//
	//
}
forward SendLeaderMessage(color, string[]);
public SendLeaderMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMember] != TEAM_CIVILIAN && PlayerInfo[i][pRank] == 6)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
forward SendVipMessage(color, string[]);
public SendVipMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pDonateRank] >= 1 || PlayerInfo[i][pTimeVip] == 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
forward SendCBMessage(color, string[]);
public SendCBMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pCBC] >= 1)
		    {
		    	    	new cb1 = PlayerInfo[i][pCBC];
	    	    	if(PlayerInfo[i][pCBC] == cb1)
	    	    	{
				SendClientMessage(i, color, string);
				}
			}
		}
	}
}
forward SendRiskMessage(color, string[]);
public SendRiskMessage(color, string[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pTick] == 1 || PlayerInfo[i][pEvent] == 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}
		          //
     //

public LoadOffices()
{
	new arrCoords[20][256];
	new strFromFile2[256];
	new File: file = fopen("Factions/offices.ini", io_read);
	if (file)
	{
	    new idx;
		while (idx < sizeof(OfficeInfo))
		{
		    fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(OfficeInfo[idx][Office1], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			OfficeInfo[idx][Office2] = strval(arrCoords[1]);
			OfficeInfo[idx][Office3] = strval(arrCoords[2]);
			OfficeInfo[idx][Office4] = strval(arrCoords[3]);
			OfficeInfo[idx][Office5] = strval(arrCoords[4]);
			OfficeInfo[idx][Office6] = strval(arrCoords[5]);
			OfficeInfo[idx][Office7] = strval(arrCoords[6]);
			OfficeInfo[idx][Office8] = strval(arrCoords[7]);
			OfficeInfo[idx][Office9] = strval(arrCoords[8]);
			OfficeInfo[idx][Office10] = strval(arrCoords[9]);
			OfficeInfo[idx][Office11] = strval(arrCoords[10]);
			OfficeInfo[idx][Office12] = strval(arrCoords[11]);
			OfficeInfo[idx][Office13] = strval(arrCoords[12]);
			OfficeInfo[idx][Office14] = strval(arrCoords[13]);
			OfficeInfo[idx][Office15] = strval(arrCoords[14]);
			OfficeInfo[idx][Office16] = strval(arrCoords[15]);
			OfficeInfo[idx][Office17] = strval(arrCoords[16]);
			OfficeInfo[idx][Office18] = strval(arrCoords[17]);
            OfficeInfo[idx][Office19] = strval(arrCoords[18]);
            OfficeInfo[idx][Office20] = strval(arrCoords[19]);
			idx++;
		}
		fclose(file);
 	}
	return 1;
}
public LoadDMonTop()
{
	new arrCoords[40][256];
	new strFromFile2[256];
	new File: file = fopen("Factions/dmtop.ini", io_read);
	if (file)
	{
	    new idx;
		while (idx < sizeof(OfInfo))
		{
		    fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			DmonInfo[idx][Kills] = strval(arrCoords[0]);
			strmid(DmonInfo[idx][Rekord], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			idx++;
		}
		fclose(file);
 	}
	return 1;
}

public LoadOffices2()
{
	new arrCoords[40][256];
	new strFromFile2[256];
	new File: file = fopen("Factions/offices2.ini", io_read);
	if (file)
	{
	    new idx;
		while (idx < sizeof(OfInfo))
		{
		    fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(OfInfo[idx][Office1], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			OfInfo[idx][Office2] = strval(arrCoords[1]);
			OfInfo[idx][Office3] = strval(arrCoords[2]);
			OfInfo[idx][Office4] = strval(arrCoords[3]);
			OfInfo[idx][Office5] = strval(arrCoords[4]);
			OfInfo[idx][Office6] = strval(arrCoords[5]);
			OfInfo[idx][Office7] = strval(arrCoords[6]);
			OfInfo[idx][Office8] = strval(arrCoords[7]);
			OfInfo[idx][Office9] = strval(arrCoords[8]);
			OfInfo[idx][Office10] = strval(arrCoords[9]);
			OfInfo[idx][Office11] = strval(arrCoords[10]);
			OfInfo[idx][Office12] = strval(arrCoords[11]);
			OfInfo[idx][Office13] = strval(arrCoords[12]);
			OfInfo[idx][Office14] = strval(arrCoords[13]);
			OfInfo[idx][Office15] = strval(arrCoords[14]);
			OfInfo[idx][Office16] = strval(arrCoords[15]);
			OfInfo[idx][Office17] = strval(arrCoords[16]);
			OfInfo[idx][Office18] = strval(arrCoords[17]);
            OfInfo[idx][Office19] = strval(arrCoords[18]);
            OfInfo[idx][Office20] = strval(arrCoords[19]);
            OfInfo[idx][OfficeOwner1] = strval(arrCoords[20]);
            OfInfo[idx][OfficeOwner2] = strval(arrCoords[21]);
            OfInfo[idx][OfficeOwner3] = strval(arrCoords[22]);
            OfInfo[idx][OfficeOwner4] = strval(arrCoords[23]);
            OfInfo[idx][OfficeOwner5] = strval(arrCoords[24]);
            OfInfo[idx][OfficeOwner6] = strval(arrCoords[25]);
            OfInfo[idx][OfficeOwner7] = strval(arrCoords[26]);
            OfInfo[idx][OfficeOwner8] = strval(arrCoords[27]);
            OfInfo[idx][OfficeOwner9] = strval(arrCoords[28]);
            OfInfo[idx][OfficeOwner10] = strval(arrCoords[29]);
            OfInfo[idx][OfficeOwner11] = strval(arrCoords[30]);
            OfInfo[idx][OfficeOwner12] = strval(arrCoords[31]);
            OfInfo[idx][OfficeOwner13] = strval(arrCoords[32]);
            OfInfo[idx][OfficeOwner14] = strval(arrCoords[33]);
            OfInfo[idx][OfficeOwner15] = strval(arrCoords[34]);
            OfInfo[idx][OfficeOwner16] = strval(arrCoords[35]);
            OfInfo[idx][OfficeOwner17] = strval(arrCoords[36]);
            OfInfo[idx][OfficeOwner18] = strval(arrCoords[37]);
            OfInfo[idx][OfficeOwner19] = strval(arrCoords[38]);
            OfInfo[idx][OfficeOwner20] = strval(arrCoords[39]);
			idx++;
		}
		fclose(file);
 	}
	return 1;
}
forward SaveFactions();
public SaveFactions()
{
    new idx;
	new File: file2;
	while (idx < sizeof(TeamInfo))
	{
	    new coordsstring[512];
	    format(coordsstring, sizeof(coordsstring), "%s|%d|%d|%d|%d|%d___________________\n",
	    TeamInfo[idx][TeamName],
	    TeamInfo[idx][TurfWarsWon],
	    TeamInfo[idx][TurfWarsLost],
	    TeamInfo[idx][RivalsKilled],
	    TeamInfo[idx][HomiesDied],
	    TeamInfo[idx][TurfWarsWon]);
        if(idx == 0)
		{
			file2 = fopen("Factions/factions.ini", io_write);
		}
		else
		{
			file2 = fopen("Factions/factions.ini", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
forward LoadFactions();
public LoadFactions()
{
	new arrCoords[12][256];
	new strFromFile2[256];
	new File: file = fopen("Factions/factions.ini", io_read);
	if (file)
	{
	    new idx;
		while (idx < sizeof(TeamInfo))
		{
		    fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(TeamInfo[idx][TeamName], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			TeamInfo[idx][TurfWarsWon] = strval(arrCoords[1]);
			TeamInfo[idx][TurfWarsLost] = strval(arrCoords[2]);
			TeamInfo[idx][RivalsKilled] = strval(arrCoords[3]);
			TeamInfo[idx][HomiesDied] = strval(arrCoords[4]);
			TeamInfo[idx][TurfWarsWon] = strval(arrCoords[5]);
			idx++;
		}
		fclose(file);
 	}
	return 1;
}
//
forward SaveTurfs3();
public SaveTurfs3()
{
    new idx;
	new File: file2;
	while (idx < sizeof(turfs))
	{

	    new coordsstring[512];
	    format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%f|%f|%f|%f|%x|%s|-1|0|0|0|0|____________________\n",
turfs[idx][turfID],
turfs[idx][turfName],
  turfs[idx][cityName],
  turfs[idx][zMinX],
  turfs[idx][zMinY],
  turfs[idx][zMaxX],
  turfs[idx][zMaxY],
      turfs[idx][TurfColor],
  turfs[idx][TurfOwner]);
        if(idx == 0)
		{
			file2 = fopen("Factions/turfs.ini", io_write);
		}
		else
		{
			file2 = fopen("Factions/turfs.ini", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
forward LoadTurfs3();
public LoadTurfs3()
{
	new arrCoords[40][256];
	new strFromFile2[256];
	new File: file = fopen("Factions/turfs.ini", io_read);
	if (file)
	{
	    new idx;
		while (idx < sizeof(turfs))
		{
		    fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');

			//d//
			turfs[idx][turfID] = strval(arrCoords[0]);
									//s//
			strmid(turfs[idx][turfName], arrCoords[7], 0, strlen(arrCoords[1]), 255);
			strmid(turfs[idx][cityName], arrCoords[8], 0, strlen(arrCoords[2]), 255);
						//d
			turfs[idx][zMinX] = strval(arrCoords[3]);
			turfs[idx][zMinY] = strval(arrCoords[4]);
			turfs[idx][zMaxX] = strval(arrCoords[5]);
			turfs[idx][zMaxY] = strval(arrCoords[6]);
			//s//
			strmid(turfs[idx][TurfColor], arrCoords[1], 0, strlen(arrCoords[0]), 255);
			strmid(turfs[idx][TeamName], arrCoords[2], 0, strlen(arrCoords[0]), 255);
			idx++;
		}
		fclose(file);
 	}
	return 1;
}
//
public SaveTurfs4()
{
	new idx;
	new File: file2;
	while (idx < sizeof(turfs))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%s|%x|%f|%f|%f|%f|%f|%f|||||||||___________________________|||||||\n",
		turfs[idx][TurfOwner],
		turfs[idx][TurfColor],
		turfs[idx][zMinX],
		turfs[idx][zMinY],
		turfs[idx][zMaxX],
		turfs[idx][zMaxY]);
		if(idx == 0)
		{
			file2 = fopen("/Factions/turfinfo.ini", io_write);
		}
		else
		{
			file2 = fopen("/Factions/turfinfo.ini", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}


public LoadTurfs4()
{
	new arrCoords[6][64];
	new strFromFile2[256];
	new File: file = fopen("/Factions/turfinfo.ini", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(turfs))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(turfs[idx][TurfOwner], arrCoords[0], 0, strlen(arrCoords[0]), 255);
			strmid(turfs[idx][TurfColor], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			turfs[idx][zMinX] = floatstr(arrCoords[2]);
			turfs[idx][zMinY] = floatstr(arrCoords[3]);
			turfs[idx][zMaxX] = floatstr(arrCoords[4]);
			turfs[idx][zMaxY] = floatstr(arrCoords[5]);
			//
			//
			//printf("Turf:%d Name: %s Owner:%s MinX:%f MinY:%f MinZ:%f MaxX:%f MaxY:%f MaxZ:%f\n",
			//idx,TurfInfo[idx][zName],TurfInfo[idx][zOwner],TurfInfo[idx][zMinX],TurfInfo[idx][zMinY],TurfInfo[idx][zMinZ],TurfInfo[idx][zMaxX],TurfInfo[idx][zMaxY],TurfInfo[idx][zMaxZ]);
			idx++;
		}
		fclose(file);
	}
	return 1;
}


public LoadOffices3()
{
	new arrCoords[40][256];
	new strFromFile2[256];
	new File: file = fopen("Factions/offices3.ini", io_read);
	if (file)
	{
	    new idx;
		while (idx < sizeof(OfInfo))
		{
		    fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			strmid(OfInfo[idx][OfficeOwner1], arrCoords[0], 0, strlen(arrCoords[0]), 64);
            strmid(OfInfo[idx][OfficeOwner2], arrCoords[1], 0, strlen(arrCoords[1]), 255);
            strmid(OfInfo[idx][OfficeOwner3], arrCoords[2], 0, strlen(arrCoords[2]), 255);
            strmid(OfInfo[idx][OfficeOwner4], arrCoords[3], 0, strlen(arrCoords[3]), 255);
            strmid(OfInfo[idx][OfficeOwner5], arrCoords[4], 0, strlen(arrCoords[4]), 255);
            strmid(OfInfo[idx][OfficeOwner6], arrCoords[5], 0, strlen(arrCoords[5]), 255);
            strmid(OfInfo[idx][OfficeOwner7], arrCoords[6], 0, strlen(arrCoords[6]), 255);
            strmid(OfInfo[idx][OfficeOwner8], arrCoords[7], 0, strlen(arrCoords[7]), 255);
            strmid(OfInfo[idx][OfficeOwner9], arrCoords[8], 0, strlen(arrCoords[8]), 255);
            strmid(OfInfo[idx][OfficeOwner10], arrCoords[9], 0, strlen(arrCoords[9]), 255);
            strmid(OfInfo[idx][OfficeOwner11], arrCoords[10], 0, strlen(arrCoords[10]), 255);
            strmid(OfInfo[idx][OfficeOwner12], arrCoords[11], 0, strlen(arrCoords[11]), 255);
            strmid(OfInfo[idx][OfficeOwner13], arrCoords[12], 0, strlen(arrCoords[12]), 255);
            strmid(OfInfo[idx][OfficeOwner14], arrCoords[13], 0, strlen(arrCoords[13]), 255);
            strmid(OfInfo[idx][OfficeOwner15], arrCoords[14], 0, strlen(arrCoords[14]), 255);
            strmid(OfInfo[idx][OfficeOwner16], arrCoords[15], 0, strlen(arrCoords[15]), 255);
            strmid(OfInfo[idx][OfficeOwner17], arrCoords[16], 0, strlen(arrCoords[16]), 255);
            strmid(OfInfo[idx][OfficeOwner18], arrCoords[17], 0, strlen(arrCoords[17]), 255);
            strmid(OfInfo[idx][OfficeOwner19], arrCoords[18], 0, strlen(arrCoords[18]), 255);
            strmid(OfInfo[idx][OfficeOwner20], arrCoords[19], 0, strlen(arrCoords[19]), 255);
			idx++;
		}
		fclose(file);
 	}
	return 1;
}



public SaveOffices3()
{
    new idx;
	new File: file2;
	while (idx < sizeof(OfInfo))
	{
	    new coordsstring[512];
        format(coordsstring, sizeof(coordsstring), "%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|____________________\n",
		OfInfo[idx][OfficeOwner1],
		OfInfo[idx][OfficeOwner2],
		OfInfo[idx][OfficeOwner3],
		OfInfo[idx][OfficeOwner4],
		OfInfo[idx][OfficeOwner5],
		OfInfo[idx][OfficeOwner6],
		OfInfo[idx][OfficeOwner7],
		OfInfo[idx][OfficeOwner8],
		OfInfo[idx][OfficeOwner9],
		OfInfo[idx][OfficeOwner10],
		OfInfo[idx][OfficeOwner11],
		OfInfo[idx][OfficeOwner12],
		OfInfo[idx][OfficeOwner13],
		OfInfo[idx][OfficeOwner14],
		OfInfo[idx][OfficeOwner15],
		OfInfo[idx][OfficeOwner16],
		OfInfo[idx][OfficeOwner17],
		OfInfo[idx][OfficeOwner18],
		OfInfo[idx][OfficeOwner19],
		OfInfo[idx][OfficeOwner20]);
        if(idx == 0)
		{
			file2 = fopen("Factions/offices3.ini", io_write);
		}
		else
		{
			file2 = fopen("Factions/offices3.ini", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
//
public SaveDMonTop()
{
    new idx;
	new File: file2;
	while (idx < sizeof(DmonInfo))
	{
	    new coordsstring[512];
        format(coordsstring, sizeof(coordsstring), "%d|%s|____________________\n",
		DmonInfo[idx][Kills],
		DmonInfo[idx][Rekord]);
        if(idx == 0)
		{
			file2 = fopen("Factions/dmtop.ini", io_write);
		}
		else
		{
			file2 = fopen("Factions/dmtop.ini", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

//
public SaveOffices2()
{
    new idx;
	new File: file2;
	while (idx < sizeof(OfInfo))
	{
	    new coordsstring[512];
        format(coordsstring, sizeof(coordsstring), "%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|____________________\n",
		OfInfo[idx][Office1],
		OfInfo[idx][Office2],
		OfInfo[idx][Office3],
		OfInfo[idx][Office4],
		OfInfo[idx][Office5],
		OfInfo[idx][Office6],
		OfInfo[idx][Office7],
		OfInfo[idx][Office8],
		OfInfo[idx][Office9],
		OfInfo[idx][Office10],
		OfInfo[idx][Office11],
		OfInfo[idx][Office12],
		OfInfo[idx][Office13],
		OfInfo[idx][Office14],
		OfInfo[idx][Office15],
		OfInfo[idx][Office16],
		OfInfo[idx][Office17],
		OfInfo[idx][Office18],
		OfInfo[idx][Office19],
		OfInfo[idx][Office20]);
        if(idx == 0)
		{
			file2 = fopen("Factions/offices2.ini", io_write);
		}
		else
		{
			file2 = fopen("Factions/offices2.ini", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public SaveOffices()
{
    new idx;
	new File: file2;
	while (idx < sizeof(OfficeInfo))
	{
	    new coordsstring[512];
        format(coordsstring, sizeof(coordsstring), "%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|___________________\n",
		OfficeInfo[idx][Office1],
		OfficeInfo[idx][Office2],
		OfficeInfo[idx][Office3],
		OfficeInfo[idx][Office4],
		OfficeInfo[idx][Office5],
		OfficeInfo[idx][Office6],
		OfficeInfo[idx][Office7],
		OfficeInfo[idx][Office8],
		OfficeInfo[idx][Office9],
		OfficeInfo[idx][Office10],
		OfficeInfo[idx][Office11],
		OfficeInfo[idx][Office12],
		OfficeInfo[idx][Office13],
		OfficeInfo[idx][Office14],
		OfficeInfo[idx][Office15],
		OfficeInfo[idx][Office16],
		OfficeInfo[idx][Office17],
		OfficeInfo[idx][Office18],
		OfficeInfo[idx][Office19],
		OfficeInfo[idx][Office20]);
        if(idx == 0)
		{
			file2 = fopen("Factions/offices.ini", io_write);
		}
		else
		{
			file2 = fopen("Factions/offices.ini", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
stock GetName(playerid)
{
	new pname[MAX_PLAYER_NAME]; pname="Невалидно ID на играч.";
	if(IsPlayerConnected(playerid)) {
		GetPlayerName(playerid, pname, sizeof (pname));
	}
	return pname;
}
public OnGameModeExit()
{
for(new h; h<MAX_HOUSES; h++)
{
SavePlayerHouse(h);
}
SaveFactions();
SaveDMonTop();
KillTimer(Timer[0]);
  SaveTurfs3();
        new i = 0;
        while(i < MAX_PLAYERS)
        {
                CreatedRamp[i] = false;
                DestroyObject(Ramp[i]);
                i++;
        }
	        for(new i; i < MAX_VEHICLES; ++i)
        {
            if(IsValidVehicle(i) && IsValidObject(ShipObject[i]))
            {
                DestroyVehicle(i);
                DestroyObject(ShipObject[i]);
                ShipObject[i] = INVALID_OBJECT_ID;
            }
        }
        
	        SaveOffices();
    SaveOffices2();
    SaveOffices3();
ResetVariables();
	SaveAccounts();
    KillTimer(SpeedoTimer);
	KillTimer(Timer[0]);
		
            if(IsPlayerConnected(i))
            {
                TextDrawDestroy(VehHealthBar[i]);
            }

	Elevator_Destroy();
	SaveFactions();
	SaveAccounts();
    KillTimer(timerhack);
    CallLocalFunction("SPS_Reset_PVars", "");
    return 1;
}
public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetPlayerPos(playerid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x); tempposy = (oldposy -y); tempposz = (oldposz -z);
	if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{ return true; }
	return false;
}
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}
stock RemoveUnderScore(playerid)
{
    new name[MAX_PLAYER_NAME];
    GetPlayerName(playerid,name,sizeof(name));
    for(new i = 0; i < MAX_PLAYER_NAME; i++)
    {
        if(name[i] == '_') name[i] = ' ';
    }
    return name;
}
public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MAX_PLAYERS;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new crbjstore[128];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "911");
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		format(turnmes, sizeof(turnmes), "Понеже ти %s, не си правил престъпления от доста време си свободен, Изпратено от: Полицията (911)",turned,reason);
		SendClientMessage(playerid, COLOR_YELLOW, turnmes);
		format(crbjstore, sizeof(crbjstore), "До всички офицер %s си изпълни задълженията",turner);
		SendFactionMessage(TEAM_GPD, COLOR_BL1, crbjstore);
		format(crbjstore, sizeof(crbjstore), "%s беше оформен, %s",turned,reason);
		SendFactionMessage(TEAM_GPD, COLOR_BL1, crbjstore);
	}
}
public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return 1;
}
public SetPlayerCriminal(playerid,declare,reason[])
{//example: SetPlayerCriminal(playerid,255, "Stealing A Police Vehicle");
	if(IsPlayerConnected(playerid))
	{
	    PlayerInfo[playerid][pCrimes] += 1;
	    new points = WantedPoints[playerid];
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new turnmes[128];
		new wantedmes[128];
		new wlevel;
		new string[256];
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
			format(turner, sizeof(turner), "Неизвестен");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(turnmes, sizeof(turnmes), "Ти си обвинен в престъпление ( %s ). Обвинил: %s.",reason,turner);
		SendClientMessage(playerid, COLOR_GRAD1, turnmes);
		if(points > 0)
		{
		    new yesno;
			if(points == 3) { if(WantedLevel[playerid] != 1) { WantedLevel[playerid] = 1; wlevel = 1; yesno = 1; } }
			else if(points >= 4 && points <= 5) { if(WantedLevel[playerid] != 2) { WantedLevel[playerid] = 2; wlevel = 2; yesno = 1; } }
			else if(points >= 6 && points <= 7) { if(WantedLevel[playerid] != 3) { WantedLevel[playerid] = 3; wlevel = 3; yesno = 1; } }
			else if(points >= 8 && points <= 9) { if(WantedLevel[playerid] != 4) { WantedLevel[playerid] = 4; wlevel = 4; yesno = 1; } }
			else if(points >= 10 && points <= 11) { if(WantedLevel[playerid] != 5) { WantedLevel[playerid] = 5; wlevel = 5; yesno = 1; } }
			else if(points >= 12 && points <= 13) { if(WantedLevel[playerid] != 6) { WantedLevel[playerid] = 6; wlevel = 6; yesno = 1; } }
			else if(points >= 14 && points <= 15) { if(WantedLevel[playerid] != 7) { WantedLevel[playerid] = 7; wlevel = 7; yesno = 1; } }
			else if(points >= 16 && points <= 17) { if(WantedLevel[playerid] != 8) { WantedLevel[playerid] = 8; wlevel = 8; yesno = 1; } }
			else if(points >= 18 && points <= 19) { if(WantedLevel[playerid] != 9) { WantedLevel[playerid] = 9; wlevel = 9; yesno = 1; } }
			else if(points >= 20 && points <= 21) { if(WantedLevel[playerid] != 10) { WantedLevel[playerid] = 10; wlevel = 10; yesno = 1; } }
			if(yesno)
			{
				format(wantedmes, sizeof(wantedmes), "Текущ левел на издирване: %d", wlevel);
				SendClientMessage(playerid, COLOR_YELLOW, wantedmes);
				format(string, sizeof(string), "До всички полицай от: %s",turner);
				SendFactionMessage(TEAM_GPD, COLOR_BL1, string);
				format(string, sizeof(string), "Престъпление: %s, Престъпник: %s",reason,turned);
				SendFactionMessage(TEAM_GPD, COLOR_BL1, string);
			}
		}
	}//not connected
}
public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public IsACopCar(carid)
{
	if((carid >= 72) && (carid <= 73) || (carid >= 74) && (carid <= 75) || carid == 76 || carid == 77 || carid == 78 || carid == 79 || carid == 80 || carid == 81 || carid == 82 || carid == 83 || carid == 84 || carid == 85 || carid == 86 || carid == 87 || carid == 88 || carid == 89 || carid == 90 || carid == 91 || carid == 92)
	{
	    if(carid == 93 || carid == 94 || carid == 95 || carid == 96 || carid == 97 || carid == 98 || carid == 99 || carid == 100 || carid == 101 || carid == 102 || carid == 103 || carid == 104 || carid == 105 || carid == 106 || carid == 107) { return 0; }
		return 1;
	}
	return 0;
}
public VehicleOccupied(vehicleid)
{
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerInVehicle(i,vehicleid)) return 1;
	}
	return 0;
}
public ReportLog(string[])
{
	new entry[256];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("Logs/report.txt", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}
new HelpBot[][]=
{
""
};
forward Bot();
public Bot()
{
new Txt;
TextDrawSetString(Text:Txt, HelpBot[random(sizeof(HelpBot))]);
return 1;
}










forward AntyVehHack();
public AntyVehHack(){
    for(new i = GetMaxPlayers()-1; i != -1; --i)
    {
        if(!(2 <= GetPlayerState(i) <= 6)) RemovePlayerFromVehicle(i);
        if(GetPlayerCameraMode(i) == 18 && GetPlayerSpecialAction(i) == 3){
                SendClientMessage(i,COLOR_RED,"Ти беше кикнат за Car Cheat!");
                Kick(i);
        }


    }

}
public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
new string[256];
VehicleInfo[vehicleid][vColor1] = color1;
    VehicleInfo[vehicleid][vColor2] = color2;
    
        VehicleInfo[vehicleid][vModel] = GetVehicleModel(vehicleid);
        GetVehiclePos(vehicleid, VehicleInfo[vehicleid][vCoordX], VehicleInfo[vehicleid][vCoordY], VehicleInfo[vehicleid][vCoordZ]);
        GetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][vCoordA]);
        VehicleInfo[vehicleid][vModSlot0] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER);
        VehicleInfo[vehicleid][vModSlot1] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HOOD);
        VehicleInfo[vehicleid][vModSlot2] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF);
        VehicleInfo[vehicleid][vModSlot3] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT);
        VehicleInfo[vehicleid][vModSlot4] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_LAMPS);
        VehicleInfo[vehicleid][vModSlot5] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_NITRO);
        VehicleInfo[vehicleid][vModSlot6] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST);
        VehicleInfo[vehicleid][vModSlot7] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS);
        VehicleInfo[vehicleid][vModSlot8] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_STEREO);
        VehicleInfo[vehicleid][vModSlot9] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS);
        VehicleInfo[vehicleid][vModSlot10] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER);
        VehicleInfo[vehicleid][vModSlot11] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER);
        VehicleInfo[vehicleid][vModSlot12] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_RIGHT);
        VehicleInfo[vehicleid][vModSlot13] = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_VENT_LEFT);
VehicleInfo[vehicleid][vColor1] = color1;
    VehicleInfo[vehicleid][vColor2] = color2;
    
        format(string, sizeof(string), "/Park/parking_%d.ini", vehicleid);
        new vFile = ini_createFile(string);
        if(vFile < 0) vFile = ini_openFile(string);
        if(vFile >= 0)
        {
            ini_setInteger(vFile, "vModel", VehicleInfo[vehicleid][vModel]);
            ini_setFloat(vFile, "vCoordX", VehicleInfo[vehicleid][vCoordX]);
            ini_setFloat(vFile, "vCoordY", VehicleInfo[vehicleid][vCoordY]);
            ini_setFloat(vFile, "vCoordZ", VehicleInfo[vehicleid][vCoordZ]);
            ini_setFloat(vFile, "vCoordA", VehicleInfo[vehicleid][vCoordA]);
            ini_setInteger(vFile, "vPaintJob", VehicleInfo[vehicleid][vPaintJob]);
            ini_setInteger(vFile, "vColor1", color1);
            ini_setInteger(vFile, "vColor2", color2);
            ini_setInteger(vFile, "vModSlot0", VehicleInfo[vehicleid][vModSlot0]);
            ini_setInteger(vFile, "vModSlot1", VehicleInfo[vehicleid][vModSlot1]);
            ini_setInteger(vFile, "vModSlot2", VehicleInfo[vehicleid][vModSlot2]);
            ini_setInteger(vFile, "vModSlot3", VehicleInfo[vehicleid][vModSlot3]);
            ini_setInteger(vFile, "vModSlot4", VehicleInfo[vehicleid][vModSlot4]);
            ini_setInteger(vFile, "vModSlot5", VehicleInfo[vehicleid][vModSlot5]);
            ini_setInteger(vFile, "vModSlot6", VehicleInfo[vehicleid][vModSlot6]);
            ini_setInteger(vFile, "vModSlot7", VehicleInfo[vehicleid][vModSlot7]);
            ini_setInteger(vFile, "vModSlot8", VehicleInfo[vehicleid][vModSlot8]);
            ini_setInteger(vFile, "vModSlot9", VehicleInfo[vehicleid][vModSlot9]);
            ini_setInteger(vFile, "vModSlot10", VehicleInfo[vehicleid][vModSlot10]);
            ini_setInteger(vFile, "vModSlot11", VehicleInfo[vehicleid][vModSlot11]);
            ini_setInteger(vFile, "vModSlot12", VehicleInfo[vehicleid][vModSlot12]);
            ini_setInteger(vFile, "vModSlot13", VehicleInfo[vehicleid][vModSlot13]);
            }
    VehicleInfo[vehicleid][vColor1] = color1;
    VehicleInfo[vehicleid][vColor2] = color2;
    return 1;
}
public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    VehicleInfo[vehicleid][vPaintJob] = paintjobid;
    return 1;
}
public OnVehicleSpawn(vehicleid)
{
//
    
    car3 = vipcars[21];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    ChangeVehiclePaintjob(car3, 3);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
   //DRCAR
       //DRCAR
    car3 = vipcars[23];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    ChangeVehiclePaintjob(car3, 3);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[24];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    ChangeVehiclePaintjob(car3, 1);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[25];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    ChangeVehiclePaintjob(car3, 2);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[26];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    ChangeVehiclePaintjob(car3, 3);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[27];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    ChangeVehiclePaintjob(car3, 1);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[28];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    ChangeVehiclePaintjob(car3, 2);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[29];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    ChangeVehiclePaintjob(car3, 3);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[30];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    ChangeVehiclePaintjob(car3, 1);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
       //DRCAR
    car3 = vipcars[31];
	white = CreateObject(18648,0,0,0,0,0,0);
    white1 = CreateObject(18648,0,0,0,0,0,0);
    AddVehicleComponent(car3, 1034);
    ChangeVehiclePaintjob(car3, 2);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
     AttachObjectToVehicle(white, car3, -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
    AttachObjectToVehicle(white1, car3, 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);

















    new string[64];
    format(string, sizeof(string), "/Park/parking_%d.ini", vehicleid);
    if(!fexist(string)) return 1;
    new vFile = ini_openFile(string);
    SetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][vCoordA]);
    ini_getInteger(vFile, "vModel", VehicleInfo[vehicleid][vModel]);
    ini_getFloat(vFile, "vCoordX", VehicleInfo[vehicleid][vCoordX]);
    ini_getFloat(vFile, "vCoordY", VehicleInfo[vehicleid][vCoordY]);
    ini_getFloat(vFile, "vCoordZ", VehicleInfo[vehicleid][vCoordZ]);
    ini_getFloat(vFile, "vCoordA", VehicleInfo[vehicleid][vCoordA]);
    ini_getInteger(vFile, "vPaintJob", VehicleInfo[vehicleid][vPaintJob]);
    ini_getInteger(vFile, "vColor1", VehicleInfo[vehicleid][vColor1]);
    ini_getInteger(vFile, "vColor2", VehicleInfo[vehicleid][vColor2]);
    ini_getInteger(vFile, "vModSlot0", VehicleInfo[vehicleid][vModSlot0]);
    ini_getInteger(vFile, "vModSlot1", VehicleInfo[vehicleid][vModSlot1]);
    ini_getInteger(vFile, "vModSlot2", VehicleInfo[vehicleid][vModSlot2]);
    ini_getInteger(vFile, "vModSlot3", VehicleInfo[vehicleid][vModSlot3]);
    ini_getInteger(vFile, "vModSlot4", VehicleInfo[vehicleid][vModSlot4]);
    ini_getInteger(vFile, "vModSlot5", VehicleInfo[vehicleid][vModSlot5]);
    ini_getInteger(vFile, "vModSlot6", VehicleInfo[vehicleid][vModSlot6]);
    ini_getInteger(vFile, "vModSlot7", VehicleInfo[vehicleid][vModSlot7]);
    ini_getInteger(vFile, "vModSlot8", VehicleInfo[vehicleid][vModSlot8]);
    ini_getInteger(vFile, "vModSlot9", VehicleInfo[vehicleid][vModSlot9]);
    ini_getInteger(vFile, "vModSlot10", VehicleInfo[vehicleid][vModSlot10]);
    ini_getInteger(vFile, "vModSlot11", VehicleInfo[vehicleid][vModSlot11]);
    ini_getInteger(vFile, "vModSlot12", VehicleInfo[vehicleid][vModSlot12]);
    ini_getInteger(vFile, "vModSlot13", VehicleInfo[vehicleid][vModSlot13]);
    ini_closeFile(vFile);
    SetVehiclePos(vehicleid, VehicleInfo[vehicleid][vCoordX], VehicleInfo[vehicleid][vCoordY], VehicleInfo[vehicleid][vCoordZ], VehicleInfo[vehicleid][vCoordA]);
    SetVehicleZAngle(vehicleid, VehicleInfo[vehicleid][vCoordA]);
    ChangeVehiclePaintjob(vehicleid, VehicleInfo[vehicleid][vPaintJob]);
    if(VehicleInfo[vehicleid][vColor1] == 0)
    if(VehicleInfo[vehicleid][vColor2] == 0)
    ChangeVehicleColor(vehicleid, VehicleInfo[vehicleid][vColor1], VehicleInfo[vehicleid][vColor2]);
    if(VehicleInfo[vehicleid][vModSlot0] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot0]);
    if(VehicleInfo[vehicleid][vModSlot1] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot1]);
    if(VehicleInfo[vehicleid][vModSlot2] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot2]);
    if(VehicleInfo[vehicleid][vModSlot3] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot3]);
    if(VehicleInfo[vehicleid][vModSlot4] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot4]);
    if(VehicleInfo[vehicleid][vModSlot5] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot5]);
    if(VehicleInfo[vehicleid][vModSlot6] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot6]);
    if(VehicleInfo[vehicleid][vModSlot7] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot7]);
    if(VehicleInfo[vehicleid][vModSlot8] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot8]);
    if(VehicleInfo[vehicleid][vModSlot9] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot9]);
    if(VehicleInfo[vehicleid][vModSlot10] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot10]);
    if(VehicleInfo[vehicleid][vModSlot11] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot11]);
    if(VehicleInfo[vehicleid][vModSlot12] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot12]);
    if(VehicleInfo[vehicleid][vModSlot13] != 0) AddVehicleComponent(vehicleid, VehicleInfo[vehicleid][vModSlot13]);
//
    ToggleEngine(vehicleid, VEHICLE_PARAMS_ON);
    AddVehicleComponent(car3, 1034);
    AddVehicleComponent(car3, 1035);
    AddVehicleComponent(car3, 1037);
    AddVehicleComponent(car3, 1039);
    AddVehicleComponent(car3, 1015);
    ToggleEngine(carpizza[1], VEHICLE_PARAMS_OFF);
    ToggleEngine(carpizza[2], VEHICLE_PARAMS_OFF);
    ToggleEngine(carpizza[3], VEHICLE_PARAMS_OFF);
    ToggleEngine(carpizza[4], VEHICLE_PARAMS_OFF);
    ToggleEngine(carcoalmine[1], VEHICLE_PARAMS_OFF);
    ToggleEngine(carcoalmine[2], VEHICLE_PARAMS_OFF);
    ToggleEngine(carcoalmine[3], VEHICLE_PARAMS_OFF);
    ToggleEngine(carcoalmine[4], VEHICLE_PARAMS_OFF);
    ToggleEngine(carsweep[1], VEHICLE_PARAMS_OFF);
    ToggleEngine(carsweep[2], VEHICLE_PARAMS_OFF);
    ToggleEngine(carsweep[3], VEHICLE_PARAMS_OFF);
    ToggleEngine(carsweep[4], VEHICLE_PARAMS_OFF);
    ToggleEngine(carpilot[1], VEHICLE_PARAMS_OFF);
    ToggleEngine(carpilot[2], VEHICLE_PARAMS_OFF);
    ToggleEngine(carpilot[3], VEHICLE_PARAMS_OFF);
    ToggleEngine(carpilot[4], VEHICLE_PARAMS_OFF);
    ToggleEngine(carbus[1], VEHICLE_PARAMS_OFF);
    ToggleEngine(carbus[2], VEHICLE_PARAMS_OFF);
    ToggleEngine(carbus[3], VEHICLE_PARAMS_OFF);
    ToggleEngine(carbus[4], VEHICLE_PARAMS_OFF);
	return 1;
}
public RconLog(string[])
{
    new entry[256];
	format(entry, sizeof(entry), "%s\r\n",string);
	new File:hFile;
	hFile = fopen("Logs/badrcon.txt", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
	return 1;
}
//T-----------------------------------------------------------------------------------------------------------------------------------------------------------
     //------------------------------------------------------------------------------public GiveWeaponForDMID(playerid)
/*strtok(const stringstrtok[], &index)
{
    new length = strlen(stringstrtok);
    while ((index < length) && (stringstrtok[index] <= ' ')) { index++; }

    new offset = index, result[20];
    while ((index < length) && (stringstrtok[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
    {
        result[index - offset] = stringstrtok[index];
        index++;
    }
    result[index - offset] = EOS;
    return result;
    }
 */
//
public ECounting(playerid)
{
        Count = 1;
		GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 3 ~r~-", 3000, 3); //VERDE
        SetTimer("ECounting2",1000,false);
        return 1;
}
public ECounting2(playerid)
{
        Count = 1;
		GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 2 ~r~-", 3000, 3); //VERDE
        SetTimer("ECounting1",1000,false);
        return 1;
}
public ECounting1(playerid)
{
        Count = 1;
		GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-~b~ 1 ~r~-", 3000, 3); //VERDE
        SetTimer("ECountingGO",1000,false);
        return 1;
}
public ECountingGO(playerid)
{
        Count = 0;
        GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~r~-]-~b~START~r~-]-",3000, 3);
    for(new i; i<MAX_PLAYERS; i++)
    {
    			if (PlayerInfo[playerid][pInEvent] >= 1)
			{
        TogglePlayerControllable(i,1);
        }
    }
        return 1;
}
//
public Counting(playerid)
{
        Count = 1;
		GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 3 ~g~-", 3000, 3); //VERDE
        SetTimer("Counting2",1000,false);
        return 1;
}
public Counting2(playerid)
{
        Count = 1;
        GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 2 ~g~-",3000, 3);
        SetTimer("Counting1",1000,false);
        return 1;
}
public Counting1(playerid)
{
        Count = 1;
        GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-~y~ 1 ~g~-", 3000, 3);
        SetTimer("CountingGO",1000,false);
        return 1;
}
public CountingGO(playerid)
{
        Count = 0;
        GameTextForAll("~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~n~~g~-]-~y~START~g~-]-",3000, 3);
        return 1;
}
public HornA(playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
}

public HornB(playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
}

public STime(playerid)
{
}
public OnPlayerDeath(playerid, killerid, reason)
{
			      if(turfattackers <= 1 && PlayerInfo[playerid][pVturf] >= 1)
{
new string[256];
	format(string, sizeof(string), "[Turf Attack] %s умря", PlayerName(playerid));
    SendClientMessageToAll(COLOR_BL1, string);
    //
    new gangb[32];
	                	if(PlayerInfo[playerid][pMember] == TEAM_GROVE) { gangb = "Grove Street Families"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_BALLAS) { gangb = "Rolling Heights Ballas"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_VAGOS) { gangb = "Los Santos Vagos"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_VIP) { gangb = "VIP"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_TRIADS) { gangb = "Varrios Los Aztecas"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_BOYZ) { gangb = "Boyz N The Hood"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_CRIPZ) { gangb = "Vinewood Cripz"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_GPD) { gangb = "GPD"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_SoA) { gangb = "Sons of Anarchy"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_ZETAS) { gangb = "Black Mafia"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_AsianBoyz) { gangb = "Asian Boyz"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_RIFA) { gangb = "San Fierro Rifa"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_LatinKing) { gangb = "Latin King"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_NZ) { gangb = "Da Nang Boys"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_Thugs) { gangb = "Thugs Life"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_YAKUZA) { gangb = "Yakuza"; }
                	else if(PlayerInfo[playerid][pMember] == TEAM_DPK) { gangb = "Dark Porfessional Killers"; }
    format(string, sizeof(string), "[Turf Attack] %s не успя да превземе територията",gangb);
SendClientMessageToAll(COLOR_ORANGE, string);
for (new v = 0; v < MAX_TURFS; v++)
	{
GangZoneStopFlashForAll(v);
}
startturf = 0;
    //
    
new Float:x, Float:y, Float:z;
    for (new i = 0; i < MAX_TURFS; i++)
	{
         for (new c = 0; c < MAX_TEAMS; c++) TurfInfo[i][c][MIT] = 0;
         for (new b = 0; b < 500; b++)
		 {
PlayerInfo[playerid][pVturf] = 0;
StartWar3( i, gTeam[b], gTeam[b] );
turfattackers -= 1;
}
}
}
//
//
			      if(turfattackers >= 1 && PlayerInfo[playerid][pVturf] >= 1)
{
new string[256];
	format(string, sizeof(string), "[Turf Attack] %s умря", PlayerName(playerid));
    SendClientMessageToAll(COLOR_BL1, string);
    //
PlayerInfo[playerid][pVturf] = 0;
turfattackers -= 1;
KillTimer(connect_timer[playerid]);
}
//
//
//
PlayerInfo[playerid][pBizInfor] = 0;
PlayerInfo[playerid][pHouseInfor] = 0;
PlayerInfo[playerid][pDMKills2] = 0;
if(PlayerInfo[playerid][pDMKills2] > DmonInfo[0][Kills])
{
GivePlayerCash(playerid,10000);
PlayerInfo[playerid][Exp] += 4;
new string2[256];
new dmkils2 = PlayerInfo[playerid][pDMKills2];
new name[MAX_PLAYER_NAME];
    GetPlayerName(killerid, name, sizeof(name));
format(string2, sizeof(string2), "DM Top: %s направи рекорд с убииства на DMON - %d убииства",PlayerName(killerid),dmkils2);
    SendClientMessageToAll(COLOR_YELLOW, string2);
    format(DmonInfo[0][Kills], 24, "%s", dmkils2);
    strmid(DmonInfo[0][Rekord], (name), 0, strlen((name)), 128);
    SaveDMonTop();
}
new string[256];
if(PlayerInfo[playerid][pInDerby] == 1)
{

derbypl -= 1;
PlayerInfo[playerid][pInDerby] = 0;
if(derbypl == 9 && startderby == 1 || derbypl == 10 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши играта на 10-то място", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
return 1;
}
if(derbypl == 8 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши играта на 9-то място", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
return 1;
}
if(derbypl == 7 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши играта на 8-мо място", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
return 1;
}
if(derbypl == 6 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши играта на 7-мо място", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
return 1;
}
if(derbypl == 5 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши играта на 6-то място", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
return 1;
}
if(derbypl == 4 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши играта на 5-то място", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
return 1;
}
if(derbypl == 3 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши играта на 4-то място", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
return 1;
}
if(derbypl == 2 && sabrani == 0 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши на 3-то място,играчите бяха под 10 затова той не печели награда", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
return 1;
}
if(derbypl == 1 && sabrani == 0 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши на 2-ро място,играчите бяха под 10 затова той не печели награда", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
	        for(new i; i<MAX_PLAYERS; i++)
			{
			if(PlayerInfo[i][pInDerby] == 1)
			{
			SetPlayerHealth(i,0);
			}
			}
return 1;
}
if(derbypl == 0 && sabrani == 0 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши на 1-во място,играчите бяха под 10 затова той не печели награда", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
return 1;
}
if(derbypl == 2 && sabrani == 1 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши на 3-то място,затова той печели 2 EP", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
PlayerInfo[playerid][Exp] += 2;
return 1;
}
if(derbypl == 1 && sabrani == 1 && startderby == 1)
{
new string[256];
format(string, sizeof(string), "%s завърши на 2-ро място,затова той печели 3 EP", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
PlayerInfo[playerid][Exp] += 3;
	        for(new i; i<MAX_PLAYERS; i++)
			{
			if(PlayerInfo[i][pInDerby] == 1)
			{
			SetPlayerHealth(i,0);
			}
			}
return 1;
}
if(derbypl == 0 && sabrani == 1 && startderby == 1)
{

format(string, sizeof(string), "%s завърши на 1-во място,затова той печели 4 EP", PlayerName(playerid));
SendClientMessageToAll(COLOR_BL1, string);
PlayerInfo[playerid][Exp] += 4;
return 1;
}
}

if(PlayerInfo[playerid][pFlakche1] == 1)
{
vzetflag1 = 0;
}
if(PlayerInfo[playerid][pFlakche2] == 1)
{
vzetflag2 = 0;
}
PlayerInfo[playerid][pFlakche1] = 0;
PlayerInfo[playerid][pFlakche2] = 0;
pTazer[playerid] = 0;
						if(PlayerInfo[killerid][pDMF] >= 1)
			{
                  PlayerInfo[killerid][pDMFK] += 1;
			}
			
fly[playerid] = 0;
if(PlayerInfo[playerid][pInEvent] >= 1)
{
PlayerInfo[playerid][pInEvent] = 0;
PlayerInfo[playerid][pCBC] = 0;
SendClientMessage(playerid, COLOR_WHITE , "Твоят CB Chanel автоматично се смени,защото ти умря.");
}
PlayerInfo[playerid][pInEvent] = 0;
PlayerInfo[playerid][pDeaths] += 1;
PlayerInfo[killerid][pKills] += 1;
PlayerInfo[killerid][pTick] = 0;
PlayerInfo[playerid][pStunt] = 0;

						if(PlayerInfo[killerid][pDuelMoney] == 1 || PlayerInfo[playerid][pDuelMoney] == 1 || PlayerInfo[killerid][pDuelMoney] == 1 && PlayerInfo[playerid][pDuelMoney] == 1)
			{
                      GivePlayerCash(killerid, PlayerInfo[killerid][pDuel]);
                      GivePlayerCash(playerid, -PlayerInfo[playerid][pDuel]);
                      format(string, sizeof(string), "Ти спечели дуела срещу %s.", PlayerName(playerid));
			          SendClientMessage(killerid, COLOR_YELLOW, string);
			          format(string, sizeof(string), "Ти загуби дуела срещу %s.", PlayerName(killerid));
			          SendClientMessage(playerid, COLOR_YELLOW, string);
                      PlayerInfo[playerid][pDuel] = 0;
                      PlayerInfo[killerid][pDuel] = 0;
                      PlayerInfo[killerid][pDuelMoney] = 0;
                      PlayerInfo[playerid][pDuelMoney] = 0;
                      PlayerInfo[killerid][pCou5] = 1*6;
                      SpawnPlayer(playerid);
                     PlayerInfo[killerid][pDuelMoney] = 0;
                      PlayerInfo[playerid][pDuelMoney] = 0;
			}








			    if(PlayerInfo[playerid][pRober] == 1 && PlayerInfo[killerid][pRober] == 1)
			    {
                format(string, sizeof(string), "ROB:Обира е прекратен,защото този които се опитваше да ограби банкомат умря");
				SendClientMessageToAll(COLOR_ORANGE, string);
				                format(string, sizeof(string), "ROB:Вече може да се стартира нов обир на банкомат");
				SendClientMessageToAll(COLOR_ORANGE, string);
				robmoney = 0;
				PlayerInfo[playerid][pRober] = 0;
				TextDrawHideForPlayer(playerid, rob[playerid]);
			    }
			    			    if(PlayerInfo[playerid][pCMN1] == 1 && PlayerInfo[killerid][pCMN1] == 0)
			    {
                format(string, sizeof(string), "CMN1:%s беше убит от %s,затова %s печели +1 CMN1 Kills",PlayerName(playerid),PlayerName(killerid),PlayerName(killerid));
				SendClientMessageToAll(COLOR_ORANGE, string);
				PlayerInfo[playerid][pCMN1] = 0;
				PlayerInfo[playerid][pCMN1T] = 0;
				PlayerInfo[playerid][pCMN1T2] = 0;
				PlayerInfo[playerid][pCMN1T3] = 0;
				PlayerInfo[killerid][pCMN1Kill] += 1;
			    }
			    
			    			    if(PlayerInfo[playerid][pRober] == 1 && PlayerInfo[killerid][pRober] == 0)
			    {
	   GivePlayerCash(killerid,5000);
			    format(string, sizeof(string), "ROB:Браво ти уби този които се опитваше да ограби банкомат,затова ти получи $5000");
				SendClientMessage(killerid, COLOR_ORANGE, string);
                format(string, sizeof(string), "ROB:Обира е прекратен,защото този които се опитваше да ограби банкомат беше убит");
				SendClientMessageToAll(COLOR_ORANGE, string);
				                format(string, sizeof(string), "ROB:Вече може да се стартира нов обир на банкомат");
				SendClientMessageToAll(COLOR_ORANGE, string);
							    format(string, sizeof(string), "ROB:Ти беше убит, затова ти не получи пари");
				SendClientMessage(playerid, COLOR_ORANGE, string);
PlayerInfo[playerid][pRob1] = 0;
PlayerInfo[playerid][pRober] = 0;
robmoney = 0;
				TextDrawHideForPlayer(playerid, rob[playerid]);
			    }




			    			    if(PlayerInfo[playerid][pRoberN2] == 1 && PlayerInfo[killerid][pRoberN2] == 1)
			    {

                format(string, sizeof(string), "ROB:Член на обира беше убит");
				SendClientMessageToAll(COLOR_ORANGE, string);
				PlayerInfo[playerid][pRoberN2] = 0;
				TextDrawHideForPlayer(playerid, robn[playerid]);
			    }

			    			    if(PlayerInfo[playerid][pRoberN2] == 1 && PlayerInfo[killerid][pRoberN2] == 0)
			    {

	   GivePlayerCash(killerid,1000);
			    format(string, sizeof(string), "ROB:Браво ти уби участник в обира ,затова ти получи $1000");
				SendClientMessage(killerid, COLOR_ORANGE, string);
							    format(string, sizeof(string), "ROB:Ти беше убит, затова ти не получи пари");
				SendClientMessage(killerid, COLOR_ORANGE, string);
				PlayerInfo[playerid][pRoberN2] = 0;
				TextDrawHideForPlayer(playerid, robn[playerid]);
			    }











			    
			    
			    
			    			    if(PlayerInfo[playerid][pRobN] == 1 && PlayerInfo[killerid][pRoberN] == 1)
			    {
			    			    	        for(new i; i<MAX_PLAYERS; i++)
			{

								PlayerInfo[i][pRoberN2] = 0;
								TextDrawHideForPlayer(playerid, robn[i]);
							}
                format(string, sizeof(string), "ROB:Обира е прекратен,защото лидера на обира умря");
				SendClientMessageToAll(COLOR_ORANGE, string);
				                format(string, sizeof(string), "ROB:Вече може да се стартира нов обир");
				SendClientMessageToAll(COLOR_ORANGE, string);
				PlayerInfo[playerid][pRoberN] = 0;
				TextDrawHideForPlayer(playerid, robn[playerid]);
				robmoneyn = 0;
			    }

			    			    if(PlayerInfo[playerid][pRobN] == 1 && PlayerInfo[killerid][pRoberN] == 0)
			    {
			    	        for(new i; i<MAX_PLAYERS; i++)
			{

								PlayerInfo[i][pRoberN2] = 0;
							}
	   GivePlayerCash(killerid,5000);
			    format(string, sizeof(string), "ROB:Браво ти уби лидера на обира,затова ти получи $5000");
				SendClientMessage(killerid, COLOR_ORANGE, string);
                format(string, sizeof(string), "ROB:Обира е прекратен,защото лидера на обира беше убит");
				SendClientMessageToAll(COLOR_ORANGE, string);
				                format(string, sizeof(string), "ROB:Вече може да се стартира нов обир");
				SendClientMessageToAll(COLOR_ORANGE, string);
							    format(string, sizeof(string), "ROB:Ти беше убит, затова ти не получи пари");
				SendClientMessage(killerid, COLOR_ORANGE, string);
				PlayerInfo[playerid][pRoberN] = 0;
				TextDrawHideForPlayer(playerid, robn[playerid]);
				robmoneyn = 0;
			    }
			    
			    
			    
			    
			    
			    			    if(PlayerInfo[playerid][pRobB] == 1 && PlayerInfo[killerid][pRoberB] == 1)
			    {

                format(string, sizeof(string), "ROB:Обира е прекратен,защото този които се опитваше да ограби банката умря");
				SendClientMessageToAll(COLOR_ORANGE, string);
				                format(string, sizeof(string), "ROB:Вече може да се стартира нов обир на банка");
				SendClientMessageToAll(COLOR_ORANGE, string);
TextDrawHideForPlayer(playerid, robb[playerid]);
PlayerInfo[playerid][pRobB] = 0;
robmoneyb = 0;
			    }

			    			    if(PlayerInfo[playerid][pRobB] == 1 && PlayerInfo[killerid][pRoberB] == 0)
			    {
	   GivePlayerCash(killerid,5000);

			    format(string, sizeof(string), "ROB:Браво ти уби този които се опитваше да ограби банката,затова ти получи $5000");
				SendClientMessage(killerid, COLOR_ORANGE, string);
                format(string, sizeof(string), "ROB:Обира е прекратен,защото този които се опитваше да ограби банката беше убит");
				SendClientMessageToAll(COLOR_ORANGE, string);
				                format(string, sizeof(string), "ROB:Вече може да се стартира нов обир на банка");
				SendClientMessageToAll(COLOR_ORANGE, string);
							    format(string, sizeof(string), "ROB:Ти беше убит, затова ти не получи пари");
				SendClientMessage(killerid, COLOR_ORANGE, string);
				SendClientMessageToAll(COLOR_ORANGE, string);
TextDrawHideForPlayer(playerid, robb[playerid]);
PlayerInfo[playerid][pRobB] = 0;
			    }
			    
			    
			    
			    
			    
			    
			    
			PlayerInfo[playerid][pEnter] = 0;
			PlayerInfo[playerid][pFight] = 0;
			PlayerInfo[playerid][pNameO] = 0;
			PlayerInfo[playerid][pGD] = 0;
 PlayerInfo[playerid][pWK] = 0;
         PlayerInfo[playerid][pInEvent] = 0;
				Delete3DTextLabel(Text3D:PlayerLabel);
                VIPLabel[playerid] = 0;
                if(PlayerInfo[playerid][pHitman] == 1 && killerid != INVALID_PLAYER_ID)
                {
                    if(killerid != INVALID_PLAYER_ID)
    {

                GivePlayerCash(killerid, PlayerInfo[playerid][pHM]);
                                format(string, sizeof(string), "HITMAN:%s беше убит от %s",PlayerName(playerid),PlayerName(killerid));
				SendClientMessageToAll(COLOR_RED, string);
                PlayerInfo[playerid][pHitman] = 0;
                PlayerInfo[playerid][pHM] = 0;
                }
                }
    if(GetPVarInt(playerid, "Headshotted") == 1)
    {
    }
PlayerInfo[playerid][pTowT] = 0;
Delete3DTextLabel(Text3D:PlayerLabel);
				    	if(PlayerInfo[playerid][pKufar] == 1 && PlayerInfo[killerid][pKufar] == 0)
						{
							format(string, sizeof(string), "Moneybox: Ти взе куфара");
							SendClientMessage(killerid, COLOR_GREEN, string);
							format(string, sizeof(string), "Moneybox: %s взе куфара от %s ",PlayerName(killerid), PlayerName(playerid));
							SendClientMessageToAll(COLOR_GREEN, string);
							PlayerInfo[playerid][pKufar] = 0;
							PlayerInfo[killerid][pKufar] = 1;
							return 1;
						}
										    	if(PlayerInfo[killerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pWIK] == 1 && PlayerInfo[killerid][pRank] <= 5)
						{
						GivePlayerCash(killerid, 3500);
						 GivePlayerCash(playerid, -3500);
							format(string, sizeof(string), "Ти получи 2 EP и $3500 защото уби човек с дрога");
							SendClientMessage(killerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[playerid][pWantedLevel] = 0;
							PlayerInfo[playerid][pZvezda1] = 0;

							PlayerInfo[playerid][pZvezda1] = 0;

							format(string, sizeof(string), "Ти загуби $3500");
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Ти си арестуван за 2 минути");
							SendClientMessage(playerid, COLOR_RED, string);
							SetPlayerInterior(playerid, 6);
							PlayerInfo[playerid][pJail] = 1;
							WantedPoints[playerid] = 0;
							PlayerInfo[playerid][pWantedLevel] = 0;
							PlayerInfo[playerid][pZvezda1] = 0;
							PlayerInfo[killerid][pPP] += 1;
							format(string, sizeof(string), "Ти получи 1 точка трябват ти 50 за да станеш помощник лидер");
							SendClientMessage(killerid, COLOR_RED, string);
							
       			        format(string, sizeof(string), "%s е арестуван от %s", PlayerName(playerid), PlayerName(killerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
						
							SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
							PlayerInfo[playerid][pJailTime] = 2*60;
							SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CUFFED);
						    TogglePlayerControllable(playerid, 1);
						    SetPlayerAttachedObject(playerid, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
							return 1;
						}
						
										    	if(PlayerInfo[playerid][pInEvent] == 1 && PlayerInfo[killerid][pInEvent] == 1)
						{
							format(string, sizeof(string), "[EVENT]Ти уби %s",playerid);
							SendClientMessage(killerid, COLOR_YELLOW, string);
							format(string, sizeof(string), "[EVENT]%s уби %s",killerid, playerid);
							SendClientMessageToAll(COLOR_BL1, string);
							PlayerInfo[playerid][pKufar] = 0;
							PlayerInfo[killerid][pKufar] = 1;
							return 1;
						}



				    	if(PlayerInfo[killerid][pDP] >= 24 && PlayerInfo[killerid][pDmon] == 1)
						{
							format(string, sizeof(string), "Ти получи 1 EP, защото събра 25 убийства в DMON");
							SendClientMessage(killerid, COLOR_YELLOW, string);
							PlayerInfo[killerid][pDP] = 0;
							return 1;
						}

										    	if(PlayerInfo[killerid][pDMFK] >= 4)
						{
							format(string, sizeof(string), "Deathmatch: %s Спечели мисията Deathmatch",killerid);
							SendClientMessageToAll(COLOR_RED, string);
						    GivePlayerCash(killerid, 50000);
						    PlayerInfo[killerid][Exp]+= 5;
						    PlayerInfo[killerid][pDea] += 1;
          format(string, sizeof(string), "Които успее убие %s до 5 минути ще спечели +1 CMN1 Kill",PlayerName(playerid));
          SendClientMessageToAll(COLOR_ORANGE, string);
          PlayerInfo[playerid][pCMN1] = 1;
		  PlayerInfo[playerid][pCMN1T] = 1*1;
		  PlayerInfo[playerid][pCMN1T3] = 5*60;
						    										    	if(PlayerInfo[playerid][pInDMF] == 1)
						{
		SetPlayerHealth(playerid, 0);
								    PlayerInfo[playerid][pInDMF]= 0;
						}
						    Race = 1;
						    		    	if(PlayerInfo[playerid][pInDMF] == 1)
	{
	    SetPlayerHealth(playerid, 0);
	}
							return 1;
						}

						
						
						
						
												    		    	if(PlayerInfo[playerid][pWIK] == 1)
	{
																			    		    	if(PlayerInfo[playerid][pHeroin] >= 1)
	{
							format(string, sizeof(string), "Ти загуби 1г хероин");
							SendClientMessage(playerid, COLOR_YELLOW, string);
														PlayerInfo[killerid][pHeroin] += 1;
																					PlayerInfo[playerid][pHeroin] -= 1;
	}
																				    		    	if(PlayerInfo[playerid][pCok] >= 1)
	{
							PlayerInfo[playerid][pCoc] -=1;

							PlayerInfo[killerid][pCoc] += 1;
							format(string, sizeof(string), "Ти загуби 1г кокаин");
							SendClientMessage(playerid, COLOR_YELLOW, string);
	}
 }
						
						
						
						
						
						
						
						
						
						
						

						
										    	if(PlayerInfo[killerid][pPP] >= 49 && PlayerInfo[killerid][pMember] == TEAM_GPD && PlayerInfo[killerid][pRank] <= 5)
						{
							format(string, sizeof(string), "Ти стана помошник лидер на Gold Play Police Department");
							SendClientMessage(killerid, COLOR_RED, string);
							PlayerInfo[killerid][pRank] = 6;
							PlayerInfo[killerid][pMember] = TEAM_GPD;
							PlayerInfo[killerid][pPP] = 0;
							return 1;
						}
										    	if(PlayerInfo[playerid][pMember] == TEAM_GPD && OnDuty[playerid]>= 1 && PlayerInfo[killerid][pInEvent] == 0)
						{
	                           WantedPoints[killerid] += 1;
	                           	    
							format(string, sizeof(string), "Ти си заподозрян");
							SendClientMessage(killerid, COLOR_RED, string);
							PlayerInfo[killerid][pZvezda1] += 1;
							PlayerInfo[killerid][pWantedLevel] += 1;
												if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
							return 1;
						}
				    	if(PlayerInfo[killerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pWantedLevel] >= 1 && PlayerInfo[killerid][pInEvent] == 0 && OnDuty[killerid]>= 1)
						{
							
							PlayerInfo[playerid][pWantedLevel] = 0;
							PlayerInfo[playerid][pZvezda1] = 0;
							PlayerInfo[playerid][pZvezda1] = 0;
							PlayerInfo[playerid][pJail] = 1;
							WantedPoints[playerid] = 0;
							PlayerInfo[playerid][pWantedLevel] = 0;
							PlayerInfo[playerid][pZvezda1] = 0;
							PlayerInfo[killerid][pPP] += 1;
							SpawnPlayer(playerid);
																	    	if(PlayerInfo[killerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pWantedLevel] == 2 && PlayerInfo[killerid][pInEvent] == 0 && OnDuty[killerid]>= 1)
						{
						//1
						GivePlayerCash(killerid, 2000);
						 GivePlayerCash(playerid, -2000);
							format(string, sizeof(string), "{FF0000}[POLICE]{1959BA}Ти получи 2 EP, $2000 и 1 точка защото залови заподозрян с прърво ниво на издирване");
							SendClientMessage(killerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Ти беше заловен от полицай %s защото си извършил престъпление!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Сега ще си в затвора за 2 минути и губиш $2000!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							PlayerInfo[playerid][pJailTime] = 2*60;
							//1
							}
																							    	if(PlayerInfo[killerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pWantedLevel] == 1 && PlayerInfo[killerid][pInEvent] == 0 && OnDuty[killerid]>= 1)
						{
						//1
						GivePlayerCash(killerid, 1000);
						 GivePlayerCash(playerid, -1000);
							format(string, sizeof(string), "{FF0000}[POLICE]{1959BA}Ти получи 1 EP, $1000 и 1 точка защото залови заподозрян с прърво ниво на издирване");
							SendClientMessage(killerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Ти беше заловен от полицай %s защото си извършил престъпление!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Сега ще си в затвора за 1 минута и губиш $1000!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							PlayerInfo[playerid][pJailTime] = 1*60;
							//1
							}
																							    	if(PlayerInfo[killerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pWantedLevel] == 3 && PlayerInfo[killerid][pInEvent] == 0 && OnDuty[killerid]>= 1)
						{
						//1
						GivePlayerCash(killerid, 3000);
						 GivePlayerCash(playerid, -3000);
							format(string, sizeof(string), "{FF0000}[POLICE]{1959BA}Ти получи 3 EP, $3000 и 1 точка защото залови заподозрян с прърво ниво на издирване");
							SendClientMessage(killerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Ти беше заловен от полицай %s защото си извършил престъпление!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Сега ще си в затвора за 3 минути и губиш $3000!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							PlayerInfo[playerid][pJailTime] = 3*60;
							//1
							}
																														    	if(PlayerInfo[killerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pWantedLevel] == 4 && PlayerInfo[killerid][pInEvent] == 0 && OnDuty[killerid]>= 1)
						{
						//1
						GivePlayerCash(killerid, 4000);
						 GivePlayerCash(playerid, -4000);
							format(string, sizeof(string), "{FF0000}[POLICE]{1959BA}Ти получи 4 EP, $4000 и 1 точка защото залови заподозрян с прърво ниво на издирване");
							SendClientMessage(killerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Ти беше заловен от полицай %s защото си извършил престъпление!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Сега ще си в затвора за 4 минути и губиш $4000!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							PlayerInfo[playerid][pJailTime] = 4*60;
							//1
							}
																														    	if(PlayerInfo[killerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pWantedLevel] == 5 && PlayerInfo[killerid][pInEvent] == 0 && OnDuty[killerid]>= 1)
						{
						//1
						GivePlayerCash(killerid, 5000);
						 GivePlayerCash(playerid, -5000);
							format(string, sizeof(string), "{FF0000}[POLICE]{1959BA}Ти получи 5 EP, $5000 и 1 точка защото залови заподозрян с прърво ниво на издирване");
							SendClientMessage(killerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Ти беше заловен от полицай %s защото си извършил престъпление!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Сега ще си в затвора за 5 минути и губиш $5000!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							PlayerInfo[playerid][pJailTime] = 5*60;
							//1
							}
																														    	if(PlayerInfo[killerid][pMember] == TEAM_GPD && PlayerInfo[playerid][pWantedLevel] >= 6 && PlayerInfo[killerid][pInEvent] == 0 && OnDuty[killerid]>= 1)
						{
						//1
						GivePlayerCash(killerid, 6000);
						 GivePlayerCash(playerid, -6000);
							format(string, sizeof(string), "{FF0000}[POLICE]{1959BA}Ти получи 6 EP, $6000 и 1 точка защото залови заподозрян с прърво ниво на издирване");
							SendClientMessage(killerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Ти беше заловен от полицай %s защото си извършил престъпление!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							format(string, sizeof(string), "{FF0000}[WASTED]{1959BA}Сега ще си в затвора за 6 минути и губиш $6000!",PlayerName(killerid));
							SendClientMessage(playerid, COLOR_RED, string);
							PlayerInfo[playerid][pJailTime] = 6*60;
							//1
							}
							return 1;
						}
				    	if(PlayerInfo[playerid][pMember] == TEAM_GPD && PlayerInfo[killerid][pMember] == TEAM_ZETAS && PlayerInfo[killerid][pInEvent] == 0  && Func[killerid]>= 1)
						{
						GivePlayerCash(killerid, 5000);
						 GivePlayerCash(playerid, -5000);
							format(string, sizeof(string), "Ти получи 2 EP и $5000 защото отвлече полицай");
							SendClientMessage(killerid, COLOR_LIGHTBLUE, string);
							PlayerInfo[playerid][pWantedLevel] = 0;
							PlayerInfo[playerid][pZvezda1] = 0;
							format(string, sizeof(string), "Ти загуби $5000");
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Ти си отвлечен и ще те пуснат след 15 минути");
							SendClientMessage(playerid, COLOR_RED, string);
							SetPlayerInterior(playerid, 6);
							PlayerInfo[playerid][pJail] = 1;
							SetPlayerPos(playerid, 264.6288,77.5742,1001.0391);
							PlayerInfo[playerid][pJailTime] = 15*60;
							SetPlayerSpecialAction (playerid, SPECIAL_ACTION_CUFFED);
						    TogglePlayerControllable(playerid, 1);
						    SetPlayerAttachedObject(playerid, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
							return 1;
						}
PlayerInfo[playerid][pInEvent] = 0;
			if(PlayerInfo[playerid][pDonateRank] == 0)
			{
                  GivePlayerCash(playerid, -100);
			}
			if(PlayerInfo[killerid][pDmon] == 1)
			{
                  PlayerInfo[killerid][pDP] += 1;
                  PlayerInfo[playerid][pDMKills2] += 1;
                  GivePlayerArmour(killerid,20);
			}
			
			if(PlayerInfo[killerid][pDonateRank] == 1)
			{
                  GivePlayerCash(killerid, 250);
			}
			if(PlayerInfo[killerid][pDonateRank] == 2)
			{
                  GivePlayerCash(killerid, 250);
			}
			if(PlayerInfo[killerid][pDonateRank] == 3)
			{
                  GivePlayerCash(killerid, 250);
			}
			if(PlayerInfo[killerid][pDonateRank] == 4)
			{
                  GivePlayerCash(killerid, 250);
			}
			if(PlayerInfo[killerid][pDonateRank] == 5)
			{
                  GivePlayerCash(killerid, 250);
			}
			if(PlayerInfo[killerid][pDonateRank] >= 6)
			{
                  GivePlayerCash(killerid, 500);
			}
						if(PlayerInfo[killerid][pDonateRank] == 7)
			{
                  GivePlayerCash(killerid, 600);
			}

        SendDeathMessage(killerid, playerid, reason);
	    IsInBus[playerid] = 0;
	    PlayerInfo[playerid][pInEvent] = 0;
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
	    
return 1;
}
// ------------------------ Functions ------------------------
stock Elevator_Initialize()
{
	// Initializes the elevator.

	Obj_Elevator 			= CreateObject(18755, 1786.678100, -1303.459472, GROUND_Z_COORD + ELEVATOR_OFFSET, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[0] 	= CreateObject(18757, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);
	Obj_ElevatorDoors[1] 	= CreateObject(18756, X_DOOR_CLOSED, -1303.459472, GROUND_Z_COORD, 0.000000, 0.000000, 270.000000);

	Label_Elevator          = Create3DTextLabel("{CCCCCC}Използвай: '{FFFFFF}~k~~CONVERSATION_YES~{CCCCCC}' за да използваш асансиора", 0xCCCCCCAA, 1784.9822, -1302.0426, 13.6491, 4.0, 0, 1);

	new string[128],
		Float:z;

	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    Obj_FloorDoors[i][0] 	= CreateObject(18757, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000);
		Obj_FloorDoors[i][1] 	= CreateObject(18756, X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(i), 0.000000, 0.000000, 270.000000);

		format(string, sizeof(string), "{CCCCCC}[%s]\n{CCCCCC}Използвай: '{FFFFFF}~k~~CONVERSATION_YES~{CCCCCC}' за да извикаш асансиора", FloorNames[i]);

		if(i == 0)
		    z = 13.4713;
		else
		    z = 13.4713 + 8.7396 + ((i-1) * 5.45155);

		Label_Floors[i]         = Create3DTextLabel(string, 0xCCCCCCAA, 1783.9799, -1300.7660, z, 10.5, 0, 1);
		// Label_Elevator, Text3D:Label_Floors[21];
	}

	// Open ground floor doors:
	Floor_OpenDoors(0);
	Elevator_OpenDoors();

	return 1;
}

stock Elevator_Destroy()
{
	// Destroys the elevator.

	DestroyObject(Obj_Elevator);
	DestroyObject(Obj_ElevatorDoors[0]);
	DestroyObject(Obj_ElevatorDoors[1]);
	Delete3DTextLabel(Label_Elevator);

	for(new i; i < sizeof(Obj_FloorDoors); i ++)
	{
	    DestroyObject(Obj_FloorDoors[i][0]);
		DestroyObject(Obj_FloorDoors[i][1]);
		Delete3DTextLabel(Label_Floors[i]);
	}

	return 1;
}

stock Elevator_OpenDoors()
{
	// Opens the elevator's doors.

	new Float:x, Float:y, Float:z;

	GetObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveObject(Obj_ElevatorDoors[0], X_DOOR_L_OPENED, y, z, DOORS_SPEED);
	MoveObject(Obj_ElevatorDoors[1], X_DOOR_R_OPENED, y, z, DOORS_SPEED);

	return 1;
}

stock Elevator_CloseDoors()
{
    // Closes the elevator's doors.

    if(ElevatorState == ELEVATOR_STATE_MOVING)
	    return 0;

    new Float:x, Float:y, Float:z;

	GetObjectPos(Obj_ElevatorDoors[0], x, y, z);
	MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, y, z, DOORS_SPEED);
	MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, y, z, DOORS_SPEED);

	return 1;
}

stock Floor_OpenDoors(floorid)
{
    // Opens the doors at the specified floor.

    MoveObject(Obj_FloorDoors[floorid][0], X_DOOR_L_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveObject(Obj_FloorDoors[floorid][1], X_DOOR_R_OPENED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);


	return 1;
}

stock Floor_CloseDoors(floorid)
{
    // Closes the doors at the specified floor.

    MoveObject(Obj_FloorDoors[floorid][0], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);
	MoveObject(Obj_FloorDoors[floorid][1], X_DOOR_CLOSED, -1303.171142, GetDoorsZCoordForFloor(floorid), DOORS_SPEED);


	return 1;
}

stock Elevator_MoveToFloor(floorid)
{
	// Moves the elevator to specified floor (doors are meant to be already closed).

	ElevatorState = ELEVATOR_STATE_MOVING;
	ElevatorFloor = floorid;

	// Move the elevator slowly, to give time to clients to sync the object surfing. Then, boost it up:
	MoveObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), 0.25);
    MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.25);
    MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), 0.25);
    Delete3DTextLabel(Label_Elevator);

	ElevatorBoostTimer = SetTimerEx("Elevator_Boost", 2000, 0, "i", floorid);

	return 1;
}

public Elevator_Boost(floorid)
{
	// Increases the elevator's speed until it reaches 'floorid'
	StopObject(Obj_Elevator);
	StopObject(Obj_ElevatorDoors[0]);
	StopObject(Obj_ElevatorDoors[1]);

	MoveObject(Obj_Elevator, 1786.678100, -1303.459472, GetElevatorZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveObject(Obj_ElevatorDoors[0], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);
    MoveObject(Obj_ElevatorDoors[1], X_DOOR_CLOSED, -1303.459472, GetDoorsZCoordForFloor(floorid), ELEVATOR_SPEED);

	return 1;
}

public Elevator_TurnToIdle()
{
	ElevatorState = ELEVATOR_STATE_IDLE;
	ReadNextFloorInQueue();

	return 1;
}

stock RemoveFirstQueueFloor()
{
	// Removes the data in ElevatorQueue[0], and reorders the queue accordingly.

	for(new i; i < sizeof(ElevatorQueue) - 1; i ++)
	    ElevatorQueue[i] = ElevatorQueue[i + 1];

	ElevatorQueue[sizeof(ElevatorQueue) - 1] = INVALID_FLOOR;

	return 1;
}

stock AddFloorToQueue(floorid)
{
 	// Adds 'floorid' at the end of the queue.

	// Scan for the first empty space:
	new slot = -1;
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(ElevatorQueue[i] == INVALID_FLOOR)
	    {
	        slot = i;
	        break;
	    }
	}

	if(slot != -1)
	{
	    ElevatorQueue[slot] = floorid;

     	// If needed, move the elevator.
	    if(ElevatorState == ELEVATOR_STATE_IDLE)
	        ReadNextFloorInQueue();

	    return 1;
	}

	return 0;
}

stock ResetElevatorQueue()
{
	// Resets the queue.

	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    ElevatorQueue[i] 	= INVALID_FLOOR;
	    FloorRequestedBy[i] = INVALID_PLAYER_ID;
	}

	return 1;
}

stock IsFloorInQueue(floorid)
{
	// Checks if the specified floor is currently part of the queue.

	for(new i; i < sizeof(ElevatorQueue); i ++)
	    if(ElevatorQueue[i] == floorid)
	        return 1;

	return 0;
}

stock ReadNextFloorInQueue()
{
	// Reads the next floor in the queue, closes doors, and goes to it.

	if(ElevatorState != ELEVATOR_STATE_IDLE || ElevatorQueue[0] == INVALID_FLOOR)
	    return 0;

	Elevator_CloseDoors();
	Floor_CloseDoors(ElevatorFloor);

	return 1;
}

stock DidPlayerRequestElevator(playerid)
{
	for(new i; i < sizeof(FloorRequestedBy); i ++)
	    if(FloorRequestedBy[i] == playerid)
	        return 1;

	return 0;
}

stock ShowElevatorDialog(playerid)
{
	new string[512];
	for(new i; i < sizeof(ElevatorQueue); i ++)
	{
	    if(FloorRequestedBy[i] != INVALID_PLAYER_ID)
	        strcat(string, "{FF0000}");

	    strcat(string, FloorNames[i]);
	    strcat(string, "\n");
	}

	ShowPlayerDialog(playerid, DIALOG_ID, DIALOG_STYLE_LIST, "Elevator", string, "Accept", "Cancel");

	return 1;
}

stock CallElevator(playerid, floorid)
{
	// Calls the elevator (also used with the elevator dialog).

	if(FloorRequestedBy[floorid] != INVALID_PLAYER_ID || IsFloorInQueue(floorid))
	    return 0;

	FloorRequestedBy[floorid] = playerid;
	AddFloorToQueue(floorid);

	return 1;
}

stock Float:GetElevatorZCoordForFloor(floorid)
    return (GROUND_Z_COORD + FloorZOffsets[floorid] + ELEVATOR_OFFSET); // A small offset for the elevator object itself.

stock Float:GetDoorsZCoordForFloor(floorid)
	return (GROUND_Z_COORD + FloorZOffsets[floorid]);
	public SPS_Remove_Messages_Limit(playerid)
{
	if(GetPVarInt(playerid, "SPS Spam Warnings") >= 2)
	{
	    new pName[MAX_PLAYER_NAME];
		GetPlayerName(playerid, pName, sizeof(pName));
		

		SetTimerEx("SPS_Unmute_Player", (PLAYER_MUTE_TIME_MINUTES * 60000), 0, "i", playerid);
		SetPVarInt(playerid, "SPS Muted", 1);

		CallRemoteFunction("OnPlayerGetMuted", "i", playerid);
	}
	SetPVarInt(playerid, "SPS Messages Sent", 0);
	SetPVarInt(playerid, "SPS Spam Warnings", 0);
	return 1;
}
public SPS_Unmute_Player(playerid)
{
	SetPVarInt(playerid, "SPS Muted", 0);
	return 1;
	}

public CheckHeadShot()
{
    new
        index;
    for(new playerid; playerid < maxPlayers; playerid++)
    {
        if(IsPlayerConnected(playerid))
        {
        index = GetPlayerAnimationIndex(playerid);
        if(index == 1173 || index == 1175 || index == 1177 || index == 1178)
        {
            }
        }
    }
    return 1;
}
forward ShowIntro(playerid);
public ShowIntro(playerid)
{
        SetPVarInt(playerid, "Intro", GetPVarInt(playerid, "Intro") + 1);
        new iteration = GetPVarInt(playerid, "Intro");
        switch(iteration)
        {
                case 1:
                {
                        for(new i; i < 11; i++) SendClientMessage(playerid, -1, "");
                        TextDrawShowForPlayer(playerid, Intro[0]);
                        TextDrawHideForPlayer(playerid, Txt1);
                        TextDrawShowForPlayer(playerid, Txt1);
                }
                case 2: TextDrawShowForPlayer(playerid, Intro[1]);
                case 3: TextDrawShowForPlayer(playerid, Intro[2]);
                case 4:
                {
                    TextDrawHideForPlayer(playerid, Intro[2]);
                    TextDrawShowForPlayer(playerid, Intro[3]);
                }
                case 5:
                {
                    TextDrawHideForPlayer(playerid, Intro[3]);
                    TextDrawShowForPlayer(playerid, Intro[4]);
                }
                case 6:
                {
                    TextDrawHideForPlayer(playerid, Intro[4]);
                    TextDrawShowForPlayer(playerid, Intro[5]);
                }
                case 7:
                {
                    TextDrawHideForPlayer(playerid, Intro[5]);
                    TextDrawShowForPlayer(playerid, Intro[6]);
                }
                case 8:
                {
                    TextDrawHideForPlayer(playerid, Intro[6]);
                    TextDrawShowForPlayer(playerid, Intro[7]);
                }
                case 9:
                {
                    TextDrawHideForPlayer(playerid, Intro[7]);
                    TextDrawShowForPlayer(playerid, Intro[8]);
                }
                case 10: TextDrawShowForPlayer(playerid, Intro[9]);
                case 11: TextDrawShowForPlayer(playerid, Intro[10]);
                case 12: TextDrawShowForPlayer(playerid, Intro[11]);
        }
        if(GetPVarInt(playerid, "Intro") < 10) SetTimerEx("ShowIntro", 300, 0, "d", playerid);
        else if(9 < GetPVarInt(playerid, "Intro") < 13) SetTimerEx("ShowIntro", 2000, 0, "d", playerid);
        else
        {
        



        
        		    	if(PlayerInfo[playerid][pReg2] == 0)
	{
			new rules[2230];
			strins(rules,"{00FF00}Моля, прочетете условията и правилата на сървъра!\n\n",strlen(rules));
            strins(rules,"{FFFFFF}1.Всякакъв флууд(повтаряне) е забранено и дразнещно!\n",strlen(rules));
            strins(rules,"{009900}2.Всякакъв вид писане на неценцензурирани думи се наказва за неупределен период от време (по преценка на админа)!\n",strlen(rules));
            strins(rules,"{FF0000}3.Използването на всякакви хакове е строго забранено и наказуемо!\n",strlen(rules));
            strins(rules,"{FFFFFF}- Ако има хакери докладвайте с /report а не да пишете в чата!\n",strlen(rules));
            strins(rules,"{009900}4.Всякакви моднати скинове/оръжия/превозни средства са забранени!\n",strlen(rules));
            strins(rules,"{FF0000}5.Използването на имена като или близки до тези на админи се наказва!\n",strlen(rules));
            strins(rules,"{FFFFFF}6.Даването на всякакви IP-та на сървъри в сървъра и карането на хора да влизат в тях е забранено!\n",strlen(rules));
            strins(rules,"{009900}7.Забранено е използването на PEDSTATS и CHEAT ENGINE!\n",strlen(rules));
            strins(rules,"{FF0000}- Също така са забранени всякакви бъгове като бърз скин, SAWNOFF, noreload и т.н.\n",strlen(rules));
            strins(rules,"{FFFFFF}8.Забранено е да лъжете наказва се с заглушаване в чата.\n",strlen(rules));
            strins(rules,"{009900}9.Забранено е биенето на играчи, които участват в Street Race!\n",strlen(rules));
            strins(rules,"{FF0000}- Наказва се по преценка на админа\n\n",strlen(rules));
            strins(rules,"{00FF00}За да видите всички правила на сървъра напишете {FF0000}/rules\n\n",strlen(rules));
            strins(rules,"{646600}Ние можем по всяко едно време да забраним достъпа ви до една или друга наша услуга дори и тя да бъде платена.\n",strlen(rules));
            strins(rules,"{646600}Ние можем да спрем сайта и сървъра по всяко едно време поради технически или други причини.\n",strlen(rules));
            strins(rules,"{646600}Ние сме с пълното си право да блокираме достъпа ви до сайта и сървъра на всеки един играч, ако за нас той не спазва правилата.\n",strlen(rules));
            strins(rules,"{646600}Ако не влизате повече от месец, вашият акаунт ще бъде блокиран от сървъра!\n\n",strlen(rules));
            strins(rules,"{00FF00}Съгласявате ли се да спазвате правилата и условията на сървъра?\n",strlen(rules));
            ShowPlayerDialog(playerid,12345,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПРАВИЛА{336600} И {FF0000}УСЛОВИЯ",rules,"ДА","НЕ");
	}
        new string[MAX_PLAYER_NAME];
                for(new i; i < sizeof(Intro); i++) TextDrawHideForPlayer(playerid, Intro[i]);
                	format(string, sizeof(string), "%s.ini", PlayerName(playerid));
                	
	if(!dini_Exists(string))
	{
		gPlayerAccount[playerid] = 0;
     			PlayerInfo[playerid][pReg2] = 1;
                InterpolateCameraPos(playerid, 2064.7498,670.0284,112.3908, 2052.8394,3023.9309,112.3908, 180000);
			new rules[2230];
			strins(rules,"{00FF00}Моля, прочетете условията и правилата на сървъра!\n\n",strlen(rules));
            strins(rules,"{FFFFFF}1.Всякакъв флууд(повтаряне) е забранено и дразнещно!\n",strlen(rules));
            strins(rules,"{009900}2.Всякакъв вид писане на неценцензурирани думи се наказва за неупределен период от време (по преценка на админа)!\n",strlen(rules));
            strins(rules,"{FF0000}3.Използването на всякакви хакове е строго забранено и наказуемо!\n",strlen(rules));
            strins(rules,"{FFFFFF}- Ако има хакери докладвайте с /report а не да пишете в чата!\n",strlen(rules));
            strins(rules,"{009900}4.Всякакви моднати скинове/оръжия/превозни средства са забранени!\n",strlen(rules));
            strins(rules,"{FF0000}5.Използването на имена като или близки до тези на админи се наказва!\n",strlen(rules));
            strins(rules,"{FFFFFF}6.Даването на всякакви IP-та на сървъри в сървъра и карането на хора да влизат в тях е забранено!\n",strlen(rules));
            strins(rules,"{009900}7.Забранено е използването на PEDSTATS и CHEAT ENGINE!\n",strlen(rules));
            strins(rules,"{FF0000}- Също така са забранени всякакви бъгове като бърз скин, SAWNOFF, noreload и т.н.\n",strlen(rules));
            strins(rules,"{FFFFFF}8.Забранено е да лъжете наказва се с заглушаване в чата.\n",strlen(rules));
            strins(rules,"{009900}9.Забранено е биенето на играчи, които участват в Street Race!\n",strlen(rules));
            strins(rules,"{FF0000}- Наказва се по преценка на админа\n\n",strlen(rules));
            strins(rules,"{00FF00}За да видите всички правила на сървъра напишете {FF0000}/rules\n\n",strlen(rules));
            strins(rules,"{646600}Ние можем по всяко едно време да забраним достъпа ви до една или друга наша услуга дори и тя да бъде платена.\n",strlen(rules));
            strins(rules,"{646600}Ние можем да спрем сайта и сървъра по всяко едно време поради технически или други причини.\n",strlen(rules));
            strins(rules,"{646600}Ние сме с пълното си право да блокираме достъпа ви до сайта и сървъра на всеки един играч, ако за нас той не спазва правилата.\n",strlen(rules));
            strins(rules,"{646600}Ако не влизате повече от месец, вашият акаунт ще бъде блокиран от сървъра!\n\n",strlen(rules));
            strins(rules,"{00FF00}Съгласявате ли се да спазвате правилата и условията на сървъра?\n",strlen(rules));
            ShowPlayerDialog(playerid,12345,DIALOG_STYLE_MSGBOX,"{FFFFFF}ПРАВИЛА{336600} И {FF0000}УСЛОВИЯ",rules,"ДА","НЕ");
		return 1;
	}
	else
	{
	    gPlayerAccount[playerid] = 1;
		new loginstring[256];
        InterpolateCameraPos(playerid, 2064.7498,670.0284,112.3908, 2052.8394,3023.9309,112.3908, 180000);
		format(loginstring,sizeof(loginstring),"{FFFFFF}Добре дошъл {2C6700}%s\n{FFFFFF}Името е регистрирано Моля, въведи твоята парола", PlayerName(playerid));
		ShowPlayerDialog(playerid,12347,DIALOG_STYLE_PASSWORD,"Влизане:",loginstring,"Влез","Излез");
		TextDrawHideForPlayer(playerid, ClockData[playerid]);
		TextDrawShowForPlayer(playerid, ClockData[playerid]);
		#if defined FOR_EACH
    Itter_Add(HSVictim, playerid);
#endif
}
		}
        return 1;
}











public timer_fuel_lower()
{
    for(new i=0;i<MAX_PLAYERS;i++) { //loop for all players
new vid = GetPlayerVehicleID(i);
new playerid;
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481)
	       			{
	       			fuel[vid] = fuel[vid] = 100;
	       			}
        if (isrefuelling[i]) continue; //stop when a player is already refuelling
        if (GetPlayerVehicleSeat(i) == 0) { //if the player is a driver (it should only lower the fuel when theres an driver!)
            fuel[vid] = fuel[vid] -1; //lowering fuel value
            if (fuel[vid]<1) //if fuel is empty
            {
                fuel[vid] = 0; //setting fuel to 0 (else the timer will set it to -1 -2 -3 etc before removing player)
                RemovePlayerFromVehicle(i); //remove player out of vehicle
            }
        }
        new string[125];format(string,sizeof string,"~r~Fuel: %iL",fuel[vid]); //preparing string with next fuel value
        TextDrawSetString(td_fuel[i],string); //updating textdraw
    }
    return 1;
}

public timer_refuel(playerid)
{
    new vid = GetPlayerVehicleID(playerid);
    fuel[vid] = fuel[vid] = 100; //restoring fuel to 100
    isrefuelling[playerid] = 0;//resetting anti-spam thingy :3
    TextDrawSetString(td_fuel[playerid],"~r~Fuel:100"); //small update on textdraw
    TogglePlayerControllable(playerid,1); //unfreeze player
}



























//
//
//
//
//
















public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
    EDITOR_OBJECT[objectid][OBJ_X] = x;
    EDITOR_OBJECT[objectid][OBJ_Y] = y;
    EDITOR_OBJECT[objectid][OBJ_Z] = z;
    EDITOR_OBJECT[objectid][OBJ_RX] = rx;
    EDITOR_OBJECT[objectid][OBJ_RY] = ry;
    EDITOR_OBJECT[objectid][OBJ_RZ] = rz;
    SetDynamicObjectPos(objectid,x,y,z);
	SetDynamicObjectRot(objectid,rx,ry,rz);
	new EDITOR_QUERY[256];
	format(EDITOR_QUERY, sizeof(EDITOR_QUERY), "UPDATE `OBJECTS` SET `X`='%f', `Y`='%f', `Z`='%f', `RX`='%f', `RY`='%f', `RZ`='%f' WHERE `ID`=%d",
	EDITOR_OBJECT[objectid][OBJ_X],
	EDITOR_OBJECT[objectid][OBJ_Y],
	EDITOR_OBJECT[objectid][OBJ_Z],
	EDITOR_OBJECT[objectid][OBJ_RX],
	EDITOR_OBJECT[objectid][OBJ_RY],
	EDITOR_OBJECT[objectid][OBJ_RZ],
	EDITOR_OBJECT[objectid][OBJ_DB_ID]);
	db_free_result(db_query(EDITOR_DATABASE, EDITOR_QUERY));
	return 1;
}
public OnPlayerSelectDynamicObject(playerid, objectid, modelid, Float:x, Float:y, Float:z)
{
	if(EDITOR_OBJECT[objectid][OBJ_MODEL] != 0)
	{
		EDIT_OBJECT_ID[playerid] = objectid;
	    ShowPlayerDialog(playerid,10001,DIALOG_STYLE_LIST,"{A80000}Edit Object","Position\nVirtual World\nInterior ID\nStream Distance\nDelete Object","Next","Close");
    } else return SendClientMessage(playerid,DEF_COL_RED,"It seems you didn't selected a object that belows to this filterscript");
    return 1;
}








public OnPlayerSelectedMenuRow(playerid, row)
{
	new Menu:Current = GetPlayerMenu(playerid);
    if(Current == TuningMenu)
	{
    	switch(row)
		{
 			case 0:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Paintjobs, playerid);
				}
	        case 1:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Colors, playerid);
				}
	        case 2:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Exhausts, playerid);
				}
	        case 3:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Frontbumper, playerid);
				}
	        case 4:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Rearbumper, playerid);
				}
	        case 5:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Roof, playerid);
				}
	        case 6:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Spoilers, playerid);
				}
	        case 7:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Sideskirts, playerid);
				}
	        case 8:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Wheels, playerid);
				}
	        case 9:
				if(IsPlayerConnected(playerid))
				{
					ShowMenuForPlayer(Others, playerid);
				}
		}
	}

	if(Current == Paintjobs)
	{
		switch(row)
		{
		    case 0:
		        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
		        {
					new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,0);
					SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
					ShowMenuForPlayer(TuningMenu, playerid);
				}
				else
				{
	   				SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,1);
					SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
                    ShowMenuForPlayer(TuningMenu, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
	      		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,2);
					SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
					ShowMenuForPlayer(TuningMenu, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,3);
					SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
					ShowMenuForPlayer(TuningMenu, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}

			case 4:
		    	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || // Broadway
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
			    {
	                new car = GetPlayerVehicleID(playerid);
					ChangeVehiclePaintjob(car,4);
					SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added paintjob to car");
					ShowMenuForPlayer(TuningMenu, playerid);
				}
				else
				{
	            	SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] Paintjob is only for Wheel Arch Angrls and Loco Low Co types of cars");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
				case 5:
				{
		    		ShowMenuForPlayer(TuningMenu, playerid);
				}

		}
	}

	if(Current == Colors)
	{
		switch(row)
		{
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            ChangeVehicleColor(car,0,0);
		            ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,1,1);
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,3,3);
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,79,79);
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 4:
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,86,86);
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,6,6);
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	            case 6:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,126,126);
			        ShowMenuForPlayer(Colors, playerid);
				}
				else
				{
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 7:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,66,66);
			        ShowMenuForPlayer(Colors, playerid);
				}
			case 8:ShowMenuForPlayer(Colors1, playerid);
		}
	}

	if(Current == Colors1)
	{
		switch(row){
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            ChangeVehicleColor(car,24,24);
		            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
		            ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	         case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,123,123);
	          		SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,53,53);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,93,93);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 4:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,83,83);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,60,60);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
	            case 6:
	      		if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,126,126);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 7:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColor(car,110,110);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully repainted to car");
			        ShowMenuForPlayer(Colors1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 8:ShowMenuForPlayer(TuningMenu, playerid);
		}
	}


	if(Current == Exhausts)
	{
		switch(row)
		{
		    case 0:
		    {
		        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
		            {
		            	AddVehicleComponent(car,1034);
		            	SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Elegy");
		            	ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					    AddVehicleComponent(car,1046);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Flash");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					    AddVehicleComponent(car,1065);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Jetser");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					    AddVehicleComponent(car,1064);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Stratum");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					    AddVehicleComponent(car,1028);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Sultan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					    AddVehicleComponent(car,1089);
				 	    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Exhaust component on Uranus");
					    ShowMenuForPlayer(Exhausts, playerid);
	    			}
					}
	  			 	else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
				}
			case 1:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562)
			        {
			            AddVehicleComponent(car,1037);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Elegy");
			            ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)
					{
					    AddVehicleComponent(car,1045);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Flash");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)
					{
					    AddVehicleComponent(car,1066);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow exaust component on Jester");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)
					{
					    AddVehicleComponent(car,1059);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Stratum");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
					    AddVehicleComponent(car,1029);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Sultan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
					{
					    AddVehicleComponent(car,1092);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Exhaust component on Uranus");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 2:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
			        {
			            AddVehicleComponent(car,1044);
		             	SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Brodway");
			            ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
					{
					    AddVehicleComponent(car,1126);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Remington");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
					{
					    AddVehicleComponent(car,1129);
	                    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Savana");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
					{
					    AddVehicleComponent(car,1104);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Blade");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
					{
					    AddVehicleComponent(car,1113);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Slamvan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
					{
					    AddVehicleComponent(car,1136);
					   	SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer Exhaust component on Tornado");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 3:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
			        {
			            AddVehicleComponent(car,1043);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Brodway");
			            ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
					{
					    AddVehicleComponent(car,1127);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Remingon");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
					{
					    AddVehicleComponent(car,1132);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Savana");
					    ShowMenuForPlayer(Exhausts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
					{
					    AddVehicleComponent(car,1105);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Blade");
					    ShowMenuForPlayer(Exhausts, playerid);
					}

					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
					{
					    AddVehicleComponent(car,1114);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Slamvan");
					    ShowMenuForPlayer(Exhausts, playerid);
					}

					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
					{
					    AddVehicleComponent(car,1135);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin Exhaust component on Tornado");
					    ShowMenuForPlayer(Exhausts, playerid);
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
	}
	if(Current == Frontbumper)
	{
		switch(row)
		{
		    case 0:
		        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
				{
		            new car = GetPlayerVehicleID(playerid);
		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1171);
	              		SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Elegy");
		            	ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1153);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Flash");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
					{
					    AddVehicleComponent(car,1160);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Jester");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1155);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Stratum");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1169);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Sultan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
					{
					    AddVehicleComponent(car,1166);
				 	    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien front bumper component on Uraus");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 1:

				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {

			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
			        {
			            AddVehicleComponent(car,1172);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow front bumper component on Elegy");
			            ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1152);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Flash");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
					{
					    AddVehicleComponent(car,1173);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Jester");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1157);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Stratum");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1170);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Sultan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
					{
					    AddVehicleComponent(car,1165);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow front bumper component on Uranus");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 2:

	      		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
				{
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
			        {
			            AddVehicleComponent(car,1174);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Brodway");
			            ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
					{
					    AddVehicleComponent(car,1179);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Remington");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
					{
					    AddVehicleComponent(car,1189);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Savana");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
					{
					    AddVehicleComponent(car,1182);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Blade");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
					{
					    AddVehicleComponent(car,1115);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Slamvan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
					{
					    AddVehicleComponent(car,1191);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer front bumper component on Tornado");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 3:

			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
	            GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
			        {
			            AddVehicleComponent(car,1175);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Brodway");
			            ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
					{
					    AddVehicleComponent(car,1185);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Remington");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
					{
					    AddVehicleComponent(car,1188);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Savana");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
					{
					    AddVehicleComponent(car,1181);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Blade");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}

				    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
					{
					    AddVehicleComponent(car,1116);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Slamvan");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
					{
					    AddVehicleComponent(car,1190);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin front bumper component on Tornado");
					    ShowMenuForPlayer(Frontbumper, playerid);
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
	}
	if(Current == Rearbumper)
	{
		switch(row)
		{
		    case 0:
		        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1149);
	              		SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Elegy");
		            	ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1150);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Flash");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
					{
					    AddVehicleComponent(car,1159);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Jester");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1154);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Stratum");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1141);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Sultan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
					{
					    AddVehicleComponent(car,1168);
				 	    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien rear bumper component on Uranus");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 1:

				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
			        {
			            AddVehicleComponent(car,1148);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Elegy");
			            ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1151);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Flash");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
					{
					    AddVehicleComponent(car,1161);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Jester");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1156);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Stratum");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1140);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Sultan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
					{
					    AddVehicleComponent(car,1167);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch  X-Flow rear bumper component on Uranus");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 2:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
			        {
			            AddVehicleComponent(car,1176);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Brodway");
			            ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
					{
					    AddVehicleComponent(car,1180);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Remington");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
					{
					    AddVehicleComponent(car,1187);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Savana");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
					{
					    AddVehicleComponent(car,1184);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Blade");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
					{
					    AddVehicleComponent(car,1109);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Slamvan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
					{
					    AddVehicleComponent(car,1192);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chromer rear bumper component on Tornado");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 3:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
			        {
			            AddVehicleComponent(car,1177);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Brodway");
			            ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)// Remington
					{
					    AddVehicleComponent(car,1178);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Remington");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)// Savanna
					{
					    AddVehicleComponent(car,1186);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Savana");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
					{
					    AddVehicleComponent(car,1183);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Blade");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}

					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
					{
					    AddVehicleComponent(car,1110);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Slamvan");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}

					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
					{
					    AddVehicleComponent(car,1193);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Slamin rear bumper component on Tornado");
					    ShowMenuForPlayer(Rearbumper, playerid);
					}

					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:ShowMenuForPlayer(TuningMenu, playerid);
		}
	}



	if(Current == Roof)
	{
		switch(row)
		{
		    case 0:
		        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1035);
	              		SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Elegy");
		            	ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1054);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Flash");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
					{
					    AddVehicleComponent(car,1067);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Jester");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1055);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Stratum");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1032);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Sultan");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
					{
					    AddVehicleComponent(car,1088);
				 	    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien roof vent component on Uranus");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 1:

				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
			        {
			            AddVehicleComponent(car,1035);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Elegy");
			            ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1053);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Flash");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
					{
					    AddVehicleComponent(car,1068);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Jester");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1061);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Stratum");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1033);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Sultan");
					    ShowMenuForPlayer(Roof, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
					{
					    AddVehicleComponent(car,1091);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow roof vent component on Uranus");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 2:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) // Savana
			        {
			            AddVehicleComponent(car,1130);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Hardtop Roof component on Brodway");
			            ShowMenuForPlayer(Roof, playerid);
					}
	   				else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
					{
					    AddVehicleComponent(car,1128);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Hardtop Roof component on Blade");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types Savana and Blade");
					ShowMenuForPlayer(Roof, playerid);
					}
			case 3:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) // Savana
			        {
			            AddVehicleComponent(car,1131);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Softtop Roof component on Brodway");
			            ShowMenuForPlayer(Roof, playerid);
					}
	   				else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
					{
					    AddVehicleComponent(car,1103);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Softtop Roof component on Blade");
					    ShowMenuForPlayer(Roof, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types Savana and Blade");
					ShowMenuForPlayer(Roof, playerid);
					}

			case 4:
			{
				ShowMenuForPlayer(TuningMenu, playerid);
			}
		}
	}


	if(Current == Spoilers)
	{
		switch(row)
		{
		    case 0:
		        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1147);
	              		SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Elegy");
		            	ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1049);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Flash");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
					{
					    AddVehicleComponent(car,1162);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Jester");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1158);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Stratum");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1138);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Sultan");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
					{
					    AddVehicleComponent(car,1164);
				 	    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Spoilers component on Uranus");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 1:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
			        {
			            AddVehicleComponent(car,1146);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Elegy");
			            ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1150);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Flash");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
					{
					    AddVehicleComponent(car,1158);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Jester");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1060);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Stratum");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1139);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Sultan");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
					{
					    AddVehicleComponent(car,1163);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Spoilers component on Uranus");
					    ShowMenuForPlayer(Spoilers, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to X-Flow Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	        	case 2:
				{
	            	ShowMenuForPlayer(TuningMenu, playerid);
	            }
		}
	}


	if(Current == Sideskirts)
	{
		switch(row)
		{
		    case 0:
		        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {

		            new car = GetPlayerVehicleID(playerid);
		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
		            {
		            	AddVehicleComponent(car,1036);
		            	AddVehicleComponent(car,1040);
	              		SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Elegy");
		            	ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1047);
					    AddVehicleComponent(car,1051);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Sideskirts vent component on Flash");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jester
					{
					    AddVehicleComponent(car,1069);
					    AddVehicleComponent(car,1071);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Jester");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1056);
					    AddVehicleComponent(car,1062);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Stratum");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1026);
					    AddVehicleComponent(car,1027);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts bumper component on Sultan");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) // Uranus
					{
					    AddVehicleComponent(car,1090);
					    AddVehicleComponent(car,1094);
				 	    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch Alien Side Skirts component on Uranus");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
				}
				else
				{
					SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
				}

			case 1:

				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {


			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) // Elegy
			        {
			            AddVehicleComponent(car,1039);
			            AddVehicleComponent(car,1041);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Elegy");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) // Flash
					{
					    AddVehicleComponent(car,1048);
					    AddVehicleComponent(car,1052);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Flash");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) // Jetser
					{
					    AddVehicleComponent(car,1070);
					    AddVehicleComponent(car,1072);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Jester");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) // Stratum
					{
					    AddVehicleComponent(car,1057);
					    AddVehicleComponent(car,1063);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Stratum");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) // Sultan
					{
					    AddVehicleComponent(car,1031);
					    AddVehicleComponent(car,1030);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Sultan");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  // Uranus
					{
					    AddVehicleComponent(car,1093);
					    AddVehicleComponent(car,1095);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wheel Arch X-Flow Side Skirts component on Uranus");
					    ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Wheel Arch Angels Car types");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 2:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
	               GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
	               GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
		 	       GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
	               {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) // Brodway
			        {
	       		        AddVehicleComponent(car,1042);
	       		        AddVehicleComponent(car,1099);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Brodway");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
	   				else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) // Savana
					{
					    AddVehicleComponent(car,1102);
					    AddVehicleComponent(car,1133);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Savana");
	    		        ShowMenuForPlayer(Sideskirts, playerid);
	                }
	                else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) // Tornado
					{
					    AddVehicleComponent(car,1134);
					    AddVehicleComponent(car,1137);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Tornado");
	    		        ShowMenuForPlayer(Sideskirts, playerid);
	                }
	                else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) // Blade
					{
					    AddVehicleComponent(car,1108);
					    AddVehicleComponent(car,1107);
					    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Strip Side Skirts component on Blade");
	                    ShowMenuForPlayer(Sideskirts, playerid);
	                }
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car types Brodway, Savana Tornado and Blade");
					ShowMenuForPlayer(TuningMenu, playerid);
					}
			case 3:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) // Remington
			        {
			            AddVehicleComponent(car,1122);
			            AddVehicleComponent(car,1101);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Flames Side Skirts component on Remington");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			case 4:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) // Remington
			        {
			            AddVehicleComponent(car,1106);
			            AddVehicleComponent(car,1124);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Arches Side Skirts component on Remington");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
				}
				else
				{
				   	SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Remington ");
					ShowMenuForPlayer(TuningMenu, playerid);
				}

			case 5:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
			        {
			            AddVehicleComponent(car,1118);
			            AddVehicleComponent(car,1120);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Trim Side Skirts component on Slamvan");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Slamvan ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

	  case 6:
			    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

			    {
			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) // Slamvan
			        {
			            AddVehicleComponent(car,1119);
			            AddVehicleComponent(car,1121);
			            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Loco Low-Co Chrome Wheelcovers component on Slamvan");
			            ShowMenuForPlayer(Sideskirts, playerid);
					}
					}
					else
					{
				    SendClientMessage(playerid,COLOR_YELLOW,"[WARNING] You can only add this component to Loco Low-Co Car type Slamvan ");
					ShowMenuForPlayer(TuningMenu, playerid);
					}

			   case 7:ShowMenuForPlayer(TuningMenu, playerid);
		}
	}

	if(Current == Wheels) {
		switch(row){
		    case 0:
	         	if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponent(car,1025);
		            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Offroad Wheels ");
		            ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1074);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Mega Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 2:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponent(car,1076);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Wires Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 3:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1078);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Twist Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(Wheels, playerid);
				}
			case 4:
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1081);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Grove Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			case 5:
			{
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponent(car,1082);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Import Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			}
	   		case 6:
	   		{
   				new car = GetPlayerVehicleID(playerid);
      			AddVehicleComponent(car,1085);
				SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Atomic Wheels");
				ShowMenuForPlayer(Wheels, playerid);
			}
			case 7:
			{
				new car = GetPlayerVehicleID(playerid);
				AddVehicleComponent(car,1096);
				SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Ahab Wheels");
				ShowMenuForPlayer(Wheels, playerid);
			}
			case 8:
			{
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1097);
	          		SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Virtual Wheels");
			        ShowMenuForPlayer(Wheels, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			}
	 		case 9:
	 		{
		       	new car = GetPlayerVehicleID(playerid);
		       	AddVehicleComponent(car,1098);
				SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Access Wheels");
				ShowMenuForPlayer(Wheels, playerid);
			}
	        case 10:
			{
			    ShowMenuForPlayer(Wheels1, playerid);
			}
			case 11:
			{

			    ShowMenuForPlayer(TuningMenu, playerid);
			}

		}
	}



	if(Current == Wheels1)
	{
		switch(row)
		{
		    case 0:
		    {
				if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponent(car,1084);
		            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Trance Wheels ");
		            ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			}
			case 1:
		    {
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1073);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Shadow Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			}
			case 2:
		    {
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponent(car,1075);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Rimshine Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			}
			case 3:
		    {
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1077);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Classic Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(Wheels, playerid);
				}
			}
			case 4:
		    {
				if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1079);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Cutter Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			}
			case 5:
		    {
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
	                AddVehicleComponent(car,1080);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Switch Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			}
	   		case 6:
		    {
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1083);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Dollar Wheels");
			        ShowMenuForPlayer(Wheels1, playerid);
				}
				else
				{
				    SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			}
	        case 7:
		    {
				{

				    ShowMenuForPlayer(TuningMenu, playerid);
				}
			}
		}
	}

 	if(Current == Nitro)
 	{
		switch(row)
		{
		    case 0:
	         if(GetPlayerMoney(playerid) >= 0)
		        {
		            new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponent(car,1008);
		            SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added 2x Nitro to car ");
		            ShowMenuForPlayer(Others, playerid);
				}
				else
				{
	                SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(TuningMenu, playerid);
			    }
			case 1:
			    if(GetPlayerMoney(playerid) >= 0)
			    {
			        new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponent(car,1009);
			        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added 5x Nitro to car");
			        ShowMenuForPlayer(Others, playerid);
				}
				else
				{
	       			SendClientMessage(playerid,COLOR_RED,"Not enough money!");
				    ShowMenuForPlayer(Others, playerid);
				}
			case 2:
			{
				new car = GetPlayerVehicleID(playerid);
				AddVehicleComponent(car,1010);
			    SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added 10x Nitro to car");
			    ShowMenuForPlayer(Others, playerid);
			}
			case 3:
			{
				ShowMenuForPlayer(Others, playerid);
			}
	 	}
	}
	if(Current == Others)
	{
	    switch(row)
	    {
			case 0:
			{
			    new car = GetPlayerVehicleID(playerid);
			    AddVehicleComponent(car,1087);
       			SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Hydraulics to car ");
		        ShowMenuForPlayer(TuningMenu, playerid);
			}
			case 1:
			{
			    new car = GetPlayerVehicleID(playerid);
		        AddVehicleComponent(car,1086);
		        SendClientMessage(playerid,COLOR_DBLUE,"[SUCESS] You have succesfully added Stereo Bass bost system ");
		        ShowMenuForPlayer(TuningMenu, playerid);
			}
			case 2:
			{
			    ShowMenuForPlayer(Nitro, playerid);
			}
			case 3:
			{
			    ShowMenuForPlayer(TuningMenu, playerid);
			}
		}
	}
 	return 0;
}
public OnPlayerExitedMenu(playerid)
{
	TogglePlayerControllable(playerid, true);
	SetCameraBehindPlayer(playerid);
	HideMenuForPlayer(TuningMenu, playerid);
	if(PlayerToPoint(2.0, playerid, 2405.4531, 1022.8162, 10.4792))
	{
		SendClientMessage(playerid, COLOR_RED, "Use /tune to tune again!");
		/*SetVehiclePos(GetPlayerVehicleID(playerid), 2396.3389,1034.8353,10.4401);
		SetVehicleZAngle(GetPlayerVehicleID(playerid), 132.4049);*/
	}
	TuneArea[playerid] = 1;
	return 1;
}


public CheckTune(playerid)
{
	if(PlayerToPoint(2.0, playerid, 2401.9023,1037.2167,11.0112))
	{
		if(Tuning[playerid] == 0)
		{
			if(IsPlayerInAnyVehicle(playerid))
			{
				Tuning[playerid] = 1;
				GameTextForPlayer(playerid, "/tune ~n~", 4000, 3);
			}
		}
	}

	else if(!PlayerToPoint(7.0, playerid, 2401.9023,1037.2167,11.0112))
	{
	    TuneArea[playerid] = 0;
	    if(Tuning[playerid] == 1)
	    {
	    	Tuning[playerid] = 0;
		}
	}
}
public OpenGate(playerid)
{
    if(PlayerToPoint(5.0, playerid, 2397.1311,1037.2156,10.8203))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
		   	MoveObject(Gate, 2397.620605, 1026.128540, 12.343708, 2.000);
	   		print("[StreetTuner] Gate opening.");
		   	//DestroyObject(Gate);
		   	TuneArea[playerid] = 1;
		}
	}
	else
	{
	    //if(TuneArea[playerid] == 1) return TuneArea[playerid] = 0;
	    TuneArea[playerid] = 0;
		MoveObject(Gate, 2397.526123, 1037.085571, 12.318287, 2.000);
	}
}
    stock ReturnName(playerid)
    {
            static name[24];
            GetPlayerName(playerid, name, 24);
            return name;
    }

public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	ShowPlayerDialog(playerid, DIALOG_SELECT, DIALOG_STYLE_MSGBOX,"Objects", \
	"Избери опция","Едитни","Унищожи");
	SetPVarInt(playerid, "SelectedObject", objectid);
	SetPVarInt(playerid, "ModelID", modelid);
    return 1;
}








public IsPlayerInTurf(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    if((X <= max_x && X >= min_x) && (Y <= max_y && Y >= min_y)) return 1;
    return 0;
}





FlashZoneForPlayer( playerid )
{
    for (new i = 0; i < MAX_TURFS; i++)
	{
         if (turfs[ i ][ TurfWarStarted ] == 1)
         {
			 if (GetPlayerTeam(playerid) == turfs[ i ][ TurfAttacker ])   GangZoneFlashForPlayer( playerid, i, COLOR_FLASH );
			 else if (GetPlayerTeam(playerid) == turfs[ i ][ TurfOwner ]) GangZoneFlashForPlayer( playerid, i, COLOR_FLASH );
			 else                                                         GangZoneFlashForPlayer( playerid, i, COLOR_FLASH2 );
		 }
	}
}




//==============================================================================
public CheckPlayers()
{
    new Float:x, Float:y, Float:z;
    for (new i = 0; i < MAX_TURFS; i++)
	{
         for (new c = 0; c < MAX_TEAMS; c++) TurfInfo[i][c][MIT] = 0;
         for (new b = 0; b < 500; b++)
		 {
                  GetPlayerPos(b, x, y, z);
			      if (IsPlayerInTurf(b, turfs[i][zMinX], turfs[i][zMinY], turfs[i][zMaxX], turfs[i][zMaxY]))
			      {
                           TurfInfo[i][gTeam[b]][MIT]++;

                                   TimerStarted[i] = 1;
                                   StartWar( i, gTeam[b] );

			  }
	     }
	}
}
//==============================================================================
public StartWar( turf, attacker )
{
    new Float:x, Float:y, Float:z;
    for (new i = 0; i < MAX_TURFS; i++)
	{
         for (new c = 0; c < MAX_TEAMS; c++) TurfInfo[i][c][MIT] = 0;
         for (new b = 0; b < 500; b++)
		 {
                  GetPlayerPos(b, x, y, z);
			      if (IsPlayerInTurf(b, turfs[i][zMinX], turfs[i][zMinY], turfs[i][zMaxX], turfs[i][zMaxY]))
			      {
                           TurfInfo[i][gTeam[b]][MIT]++;
                                   TimerStarted[i] = 1;

                                    SetTimerEx("StartWar2", 120000, 0, "ii", i, gTeam[b]);
            GangZoneFlashForAll(turf, TeamInfo[attacker][TeamColor]);
                              turfs[turf][TurfAttacker] = 1;
			  }
	     }
	}
}

public StartWar3( turf, attacker ,defender)
{
    new string[256];
    new Float:x, Float:y, Float:z;
    			   	         	  if (turfattackers == 0)
					          {
            GangZoneShowForAll(turf, turfs[turf][TurfColor] );
            turfs[turf][TurfAttacker] = -1;
startturf = 0;
 for (new i = 0; i < MAX_PLAYERS; i++)
	{
PlayerInfo[i][pO2] = 0;
}
}
}

public StartWar2( turf, attacker ,defender)
{
    new string[256];
    new Float:x, Float:y, Float:z;
    			   	         	  if (turfattackers >= 1)
					          {
			turfs[turf][TurfOwner] = attacker;
	        turfs[turf][TurfColor] = TeamInfo[attacker][TeamColor];
            GangZoneShowForAll(turf, turfs[turf][TurfColor] );
            turfs[turf][TurfAttacker] = -1;
            TeamInfo[attacker][TurfWarsWon] += 1;
startturf = 0;
		        new gangb[32];
	                	if(attacker == TEAM_GROVE) { gangb = "Grove Street Families"; }
                	else if(attacker == TEAM_BALLAS) { gangb = "Rolling Heights Ballas"; }
                	else if(attacker == TEAM_VAGOS) { gangb = "Los Santos Vagos"; }
                	else if(attacker == TEAM_VIP) { gangb = "VIP"; }
                	else if(attacker == TEAM_TRIADS) { gangb = "Varrios Los Aztecas"; }
                	else if(attacker == TEAM_BOYZ) { gangb = "Boyz N The Hood"; }
                	else if(attacker == TEAM_CRIPZ) { gangb = "Vinewood Cripz"; }
                	else if(attacker == TEAM_GPD) { gangb = "GPD"; }
                	else if(attacker == TEAM_SoA) { gangb = "Sons of Anarchy"; }
                	else if(attacker == TEAM_ZETAS) { gangb = "Black Mafia"; }
                	else if(attacker == TEAM_AsianBoyz) { gangb = "Asian Boyz"; }
                	else if(attacker == TEAM_RIFA) { gangb = "San Fierro Rifa"; }
                	else if(attacker == TEAM_LatinKing) { gangb = "Latin King"; }
                	else if(attacker == TEAM_NZ) { gangb = "Da Nang Boys"; }
                	else if(attacker == TEAM_Thugs) { gangb = "Thugs Life"; }
                	else if(attacker == TEAM_YAKUZA) { gangb = "Yakuza"; }
                	else if(attacker == TEAM_DPK) { gangb = "Dark Porfessional Killers"; }
format(string, sizeof(string), "[Turf Attack] %s успя да превземе територията",gangb);
SendClientMessageToAll(COLOR_ORANGE, string);
for (new v = 0; v < MAX_TURFS; v++)
	{
GangZoneStopFlashForAll(v);
}
 for (new i = 0; i < MAX_PLAYERS; i++)
	{
PlayerInfo[i][pO2] = 0;
}
}
}



























Float:GetXYInFrontOfPlayer(playerid, &Float:q, &Float:w, Float:distance)
{
new Float:a;
GetPlayerPos(playerid, q, w, a);
    if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
else GetPlayerFacingAngle(playerid, a);
q += (distance * floatsin(-a, degrees));
w += (distance * floatcos(-a, degrees));
return a;
}

Float:GetXYBehindPlayer(playerid, &Float:q, &Float:w, Float:distance)
{
new Float:a;
GetPlayerPos(playerid, q, w, a);
if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) GetVehicleZAngle(GetPlayerVehicleID(playerid), a);
else GetPlayerFacingAngle(playerid, a);
q += (distance * -floatsin(-a, degrees));
w += (distance * -floatcos(-a, degrees));
return a;
}



public FlyTimer()
{
new Float:x, Float:y, Float:z, Float:angle;
    new keys, updown, leftright;
for(new playerid=0;playerid<MAX_PLAYERS;playerid++) {
    if(IsPlayerConnected(playerid)) {
        if(fly[playerid] == 1) {
        GetPlayerKeys(playerid,keys,updown,leftright);
            if(updown == KEY_UP) {
                if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerPos(playerid, x, y, z);
GetXYInFrontOfPlayer(playerid, x, y, 5.0);
SetPlayerPos(playerid, x, y, z);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
new playercar = GetPlayerVehicleID(playerid);
GetVehiclePos(playercar, x, y, z);
GetXYInFrontOfPlayer(playerid, x, y, 5.0);
SetVehiclePos(playercar, x, y, z);
}
}
else if(updown == KEY_DOWN) {
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerPos(playerid, x, y, z);
GetXYBehindPlayer(playerid, x, y, 5.0);
SetPlayerPos(playerid, x, y, z);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
    new playercar = GetPlayerVehicleID(playerid);
    GetVehiclePos(playercar, x, y, z);
    GetXYBehindPlayer(playerid, x, y, 5.0);
    SetVehiclePos(playercar, x, y, z);
}
}
if(leftright == KEY_LEFT) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerFacingAngle(playerid, angle);
SetPlayerFacingAngle(playerid, angle+10);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
    new playercar = GetPlayerVehicleID(playerid);
    GetVehicleZAngle(playercar, angle);
    SetVehicleZAngle(playercar, angle+10);
}
}
else if(leftright == KEY_RIGHT) {
if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerFacingAngle(playerid, angle);
SetPlayerFacingAngle(playerid, angle-10);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
    new playercar = GetPlayerVehicleID(playerid);
    GetVehicleZAngle(playercar, angle);
SetVehicleZAngle(playercar, angle-10);
}
}
if(keys == KEY_JUMP) {
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerPos(playerid, x, y, z);
SetPlayerPos(playerid, x, y, z+5);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
new playercar = GetPlayerVehicleID(playerid);
GetVehiclePos(playercar, x, y, z);
SetVehiclePos(playercar, x, y, z+5);
}
}
else if(keys == KEY_SPRINT) {
    if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
GetPlayerPos(playerid, x, y, z);
SetPlayerPos(playerid, x, y, z-5);
SetCameraBehindPlayer(playerid);
}
else if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
new playercar = GetPlayerVehicleID(playerid);
GetVehiclePos(playercar, x, y, z);
SetVehiclePos(playercar, x, y, z-5);
}
}
}
}
}
}





GetNumberOfPages()
{
	if((gTotalItems >= SELECTION_ITEMS) && (gTotalItems % SELECTION_ITEMS) == 0)
	{
		return (gTotalItems / SELECTION_ITEMS);
	}
	else return (gTotalItems / SELECTION_ITEMS) + 1;
}

//------------------------------------------------

PlayerText:CreateCurrentPageTextDraw(playerid, Float:Xpos, Float:Ypos)
{
	new PlayerText:txtInit;
   	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, "0/0");
   	PlayerTextDrawUseBox(playerid, txtInit, 0);
	PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
	PlayerTextDrawFont(playerid, txtInit, 1);
	PlayerTextDrawSetShadow(playerid, txtInit, 0);
    PlayerTextDrawSetOutline(playerid, txtInit, 1);
    PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
    PlayerTextDrawShow(playerid, txtInit);
    return txtInit;
}

//------------------------------------------------
// Creates a button textdraw and returns the textdraw ID.

PlayerText:CreatePlayerDialogButton(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height, button_text[])
{
 	new PlayerText:txtInit;
   	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, button_text);
   	PlayerTextDrawUseBox(playerid, txtInit, 1);
   	PlayerTextDrawBoxColor(playerid, txtInit, 0x000000FF);
   	PlayerTextDrawBackgroundColor(playerid, txtInit, 0x000000FF);
	PlayerTextDrawLetterSize(playerid, txtInit, 0.4, 1.1);
	PlayerTextDrawFont(playerid, txtInit, 1);
	PlayerTextDrawSetShadow(playerid, txtInit, 0); // no shadow
    PlayerTextDrawSetOutline(playerid, txtInit, 0);
    PlayerTextDrawColor(playerid, txtInit, 0x4A5A6BFF);
    PlayerTextDrawSetSelectable(playerid, txtInit, 1);
    PlayerTextDrawAlignment(playerid, txtInit, 2);
    PlayerTextDrawTextSize(playerid, txtInit, Height, Width); // The width and height are reversed for centering.. something the game does <g>
    PlayerTextDrawShow(playerid, txtInit);
    return txtInit;
}

//------------------------------------------------

PlayerText:CreatePlayerHeaderTextDraw(playerid, Float:Xpos, Float:Ypos, header_text[])
{
	new PlayerText:txtInit;
   	txtInit = CreatePlayerTextDraw(playerid, Xpos, Ypos, header_text);
   	PlayerTextDrawUseBox(playerid, txtInit, 0);
	PlayerTextDrawLetterSize(playerid, txtInit, 1.25, 3.0);
	PlayerTextDrawFont(playerid, txtInit, 0);
	PlayerTextDrawSetShadow(playerid, txtInit, 0);
    PlayerTextDrawSetOutline(playerid, txtInit, 1);
    PlayerTextDrawColor(playerid, txtInit, 0xACCBF1FF);
    PlayerTextDrawShow(playerid, txtInit);
    return txtInit;
}

//------------------------------------------------

PlayerText:CreatePlayerBackgroundTextDraw(playerid, Float:Xpos, Float:Ypos, Float:Width, Float:Height)
{
	new PlayerText:txtBackground = CreatePlayerTextDraw(playerid, Xpos, Ypos,
	"                                            ~n~"); // enough space for everyone
    PlayerTextDrawUseBox(playerid, txtBackground, 1);
    PlayerTextDrawBoxColor(playerid, txtBackground, 0x4A5A6BBB);
	PlayerTextDrawLetterSize(playerid, txtBackground, 5.0, 5.0);
	PlayerTextDrawFont(playerid, txtBackground, 0);
	PlayerTextDrawSetShadow(playerid, txtBackground, 0);
    PlayerTextDrawSetOutline(playerid, txtBackground, 0);
    PlayerTextDrawColor(playerid, txtBackground,0x000000FF);
    PlayerTextDrawTextSize(playerid, txtBackground, Width, Height);
   	PlayerTextDrawBackgroundColor(playerid, txtBackground, 0x4A5A6BBB);
    PlayerTextDrawShow(playerid, txtBackground);
    return txtBackground;
}

//------------------------------------------------
// Creates a model preview sprite

PlayerText:CreateModelPreviewTextDraw(playerid, modelindex, Float:Xpos, Float:Ypos, Float:width, Float:height)
{
    new PlayerText:txtPlayerSprite = CreatePlayerTextDraw(playerid, Xpos, Ypos, ""); // it has to be set with SetText later
    PlayerTextDrawFont(playerid, txtPlayerSprite, TEXT_DRAW_FONT_MODEL_PREVIEW);
    PlayerTextDrawColor(playerid, txtPlayerSprite, 0xFFFFFFFF);
    PlayerTextDrawBackgroundColor(playerid, txtPlayerSprite, 0x88888899);
    PlayerTextDrawTextSize(playerid, txtPlayerSprite, width, height); // Text size is the Width:Height
    PlayerTextDrawSetPreviewModel(playerid, txtPlayerSprite, modelindex);
    PlayerTextDrawSetSelectable(playerid, txtPlayerSprite, 1);
    PlayerTextDrawShow(playerid,txtPlayerSprite);
    return txtPlayerSprite;
}

//------------------------------------------------

DestroyPlayerModelPreviews(playerid)
{
	new x=0;
	while(x != SELECTION_ITEMS) {
	    if(gSelectionItems[playerid][x] != PlayerText:INVALID_TEXT_DRAW) {
			PlayerTextDrawDestroy(playerid, gSelectionItems[playerid][x]);
			gSelectionItems[playerid][x] = PlayerText:INVALID_TEXT_DRAW;
		}
		x++;
	}
}

//------------------------------------------------

ShowPlayerModelPreviews(playerid)
{
    new x=0;
	new Float:BaseX = DIALOG_BASE_X;
	new Float:BaseY = DIALOG_BASE_Y - (SPRITE_DIM_Y * 0.33); // down a bit
	new linetracker = 0;

	new itemat = GetPVarInt(playerid, "skinc_page") * SELECTION_ITEMS;

	// Destroy any previous ones created
	DestroyPlayerModelPreviews(playerid);

	while(x != SELECTION_ITEMS && itemat < gTotalItems) {
	    if(linetracker == 0) {
	        BaseX = DIALOG_BASE_X + 25.0; // in a bit from the box
	        BaseY += SPRITE_DIM_Y + 1.0; // move on the Y for the next line
		}
  		gSelectionItems[playerid][x] = CreateModelPreviewTextDraw(playerid, gItemList[itemat], BaseX, BaseY, SPRITE_DIM_X, SPRITE_DIM_Y);
  		gSelectionItemsTag[playerid][x] = gItemList[itemat];
		BaseX += SPRITE_DIM_X + 1.0; // move on the X for the next sprite
		linetracker++;
		if(linetracker == ITEMS_PER_LINE) linetracker = 0;
		itemat++;
		x++;
	}
}

//------------------------------------------------

UpdatePageTextDraw(playerid)
{
	new PageText[64+1];
	format(PageText, 64, "%d/%d", GetPVarInt(playerid,"skinc_page") + 1, GetNumberOfPages());
	PlayerTextDrawSetString(playerid, gCurrentPageTextDrawId[playerid], PageText);
}

//------------------------------------------------

CreateSelectionMenu(playerid)
{
    gBackgroundTextDrawId[playerid] = CreatePlayerBackgroundTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y + 20.0, DIALOG_WIDTH, DIALOG_HEIGHT);
    gHeaderTextDrawId[playerid] = CreatePlayerHeaderTextDraw(playerid, DIALOG_BASE_X, DIALOG_BASE_Y, HEADER_TEXT);
    gCurrentPageTextDrawId[playerid] = CreateCurrentPageTextDraw(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y + 15.0);
    gNextButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 30.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, NEXT_TEXT);
    gPrevButtonTextDrawId[playerid] = CreatePlayerDialogButton(playerid, DIALOG_WIDTH - 90.0, DIALOG_BASE_Y+DIALOG_HEIGHT+100.0, 50.0, 16.0, PREV_TEXT);

    ShowPlayerModelPreviews(playerid);
    UpdatePageTextDraw(playerid);
}

//------------------------------------------------

DestroySelectionMenu(playerid)
{
	DestroyPlayerModelPreviews(playerid);

	PlayerTextDrawDestroy(playerid, gHeaderTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gBackgroundTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gCurrentPageTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gNextButtonTextDrawId[playerid]);
	PlayerTextDrawDestroy(playerid, gPrevButtonTextDrawId[playerid]);

	gHeaderTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gBackgroundTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gCurrentPageTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gNextButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
    gPrevButtonTextDrawId[playerid] = PlayerText:INVALID_TEXT_DRAW;
}

//------------------------------------------------

HandlePlayerItemSelection(playerid, selecteditem)
{
	// In this case we change the player's skin
  	if(gSelectionItemsTag[playerid][selecteditem] >= 0 && gSelectionItemsTag[playerid][selecteditem] < 300) {
        PlayerInfo[playerid][pSkin] = gSelectionItemsTag[playerid][selecteditem];
        		        if(PlayerInfo[playerid][aDuty] == 1)
		        {
					SetPlayerSkin(playerid,PlayerInfo[playerid][pSkin]);
					SendClientMessage(playerid, COLOR_RED, "SERVER: Ти смени твоя ADMIN ON-DUTY скин!");
				}
		return;
	}
}

//------------------------------------------------


//-------------------------------------------
// Even though only Player* textdraws are used in this script,
// OnPlayerClickTextDraw is still required to handle ESC

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
   	if(GetPVarInt(playerid, "skinc_active") == 0) return 0;

	// Handle: They cancelled (with ESC)
	if(clickedid == Text:INVALID_TEXT_DRAW) {
        DestroySelectionMenu(playerid);
        SetPVarInt(playerid, "skinc_active", 0);
        PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
        return 1;
	}

	return 0;
}

//------------------------------------------------

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(GetPVarInt(playerid, "skinc_active") == 0) return 0;

	new curpage = GetPVarInt(playerid, "skinc_page");

	// Handle: next button
	if(playertextid == gNextButtonTextDrawId[playerid]) {
	    if(curpage < (GetNumberOfPages() - 1)) {
	        SetPVarInt(playerid, "skinc_page", curpage + 1);
	        ShowPlayerModelPreviews(playerid);
         	UpdatePageTextDraw(playerid);
         	PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
		} else {
		    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		}
		return 1;
	}

	// Handle: previous button
	if(playertextid == gPrevButtonTextDrawId[playerid]) {
	    if(curpage > 0) {
	    	SetPVarInt(playerid, "skinc_page", curpage - 1);
	    	ShowPlayerModelPreviews(playerid);
	    	UpdatePageTextDraw(playerid);
	    	PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
		} else {
		    PlayerPlaySound(playerid, 1085, 0.0, 0.0, 0.0);
		}
		return 1;
	}

	// Search in the array of textdraws used for the items
	new x=0;
	while(x != SELECTION_ITEMS) {
	    if(playertextid == gSelectionItems[playerid][x]) {
	        HandlePlayerItemSelection(playerid, x);
	        PlayerPlaySound(playerid, 1083, 0.0, 0.0, 0.0);
	        DestroySelectionMenu(playerid);
	        CancelSelectTextDraw(playerid);
        	SetPVarInt(playerid, "skinc_active", 0);
        	return 1;
		}
		x++;
	}

	return 0;
}


stock IsPlayerIgnoringPlayer(playerid, lookupid)
{
    if(pIgnoringPlayer[playerid][lookupid] == true) return true;
    return false;
}



stock ResetVariables()
{
    for(new i = 0; i < MAX_PLAYERS; i ++)
    {
        if(pIgnoringPlayer[i][i] == true) pIgnoringPlayer[i][i] = false;
        if(pIgnoringPlayer[i][i] == true) pIgnoringPlayer[i][i] = false;
    }
}

stock ResetPlayerVariables(playerid)
{
    for(new i = 0; i < MAX_PLAYERS; i ++)
    {
        if(pIgnoringPlayer[playerid][i] == true) pIgnoringPlayer[playerid][i] = false;
        if(pIgnoringPlayer[i][playerid] == true) pIgnoringPlayer[i][playerid] = false;
    }
}



forward destroy(playerid);
public destroy(playerid)
{
if(CreatedRamp[playerid]==true) {
                return DestroyObject(Ramp[playerid]), CreatedRamp[playerid] = false;
}else return 0;
}






public OnPlayerUpdate(playerid) {
			        			    if(PlayerInfo[playerid][pWantedLevel] >= 7)
	{
PlayerInfo[playerid][pWantedLevel] = 6;
	}
		    if(PlayerInfo[playerid][pWantedLevel] >= 1 && PlayerInfo[playerid][aDuty] == 0)
 {
 Delete3DTextLabel(Text3D:PlayerLabel);
     format(dstring,sizeof(dstring),"SUSPECTED - %d", PlayerInfo[playerid][pWantedLevel]);
     PlayerLabel = Create3DTextLabel(dstring, 0x003366FF, 0.0, 0.0, 35.0, 15.0, 0, 1);
     Attach3DTextLabelToPlayer(PlayerLabel, playerid, 0.0, 0.0, 0.40);
                }
if(PlayerInfo[playerid][pRober] >= 1)
{
new string[256];
format(string, sizeof(string), "~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~w~STOLEN CASH:~n~~g~$%d",robmoney);
GameTextForPlayer(playerid, string, 2000, 3);
}
if(PlayerInfo[playerid][pRoberN] >= 1)
{
new string[256];
format(string, sizeof(string), "~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~w~STOLEN CASH:~n~~g~$%d",robmoneyn);
GameTextForPlayer(playerid, string, 2000, 3);
}
if(PlayerInfo[playerid][pRoberN2] >= 1)
{
new string[256];
format(string, sizeof(string), "~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~w~STOLEN CASH:~n~~g~$%d",robmoneyn);
GameTextForPlayer(playerid, string, 2000, 3);
}
if(PlayerInfo[playerid][pRoberB] >= 1)
{
new string[256];
format(string, sizeof(string), "~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~w~STOLEN CASH:~n~~g~$%d",robmoneyb);
GameTextForPlayer(playerid, string, 2000, 3);
}
if(gmxtime == 1)
{
TextDrawShowForPlayer(playerid, restime2[playerid]);
}
if(gmxtime == 0)
{
TextDrawHideForPlayer(playerid, restime2[playerid]);
}
new vid = GetPlayerVehicleID(playerid);
if(IsPlayerInVehicle(playerid, carufo))
	{
			vid = GetPlayerVehicleID(playerid);
			RepairVehicle(vid);
			fuel[vid] = fuel[vid] = 100;
			TextDrawHideForPlayer(playerid,td_fuel[playerid]);
	}
if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481)
	       			{
	       			fuel[vid] = fuel[vid] = 100;
	       			TextDrawHideForPlayer(playerid,td_fuel[playerid]);
	       			}
	       			if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 510)
	       			{
	       			fuel[vid] = fuel[vid] = 100;
	       			TextDrawHideForPlayer(playerid,td_fuel[playerid]);
	       			}
new string[256];
    format(string,sizeof(string), "{003399}[ Бензиностанция ]\n{FF0000}%d/500 литра\n{7FFFD4}{6E2500}1 литър {FFFFFF}= {006600}1 долар\n{FF3300}Напиши {FFFF00}/refuel {FF3300}за да заредиш", F1);
    Update3DTextLabelText(mylabelb1, 0xFFFFFFFF, string);
        format(string,sizeof(string), "{003399}[ Бензиностанция ]\n{FF0000}%d/500 литра\n{7FFFD4}{6E2500}1 литър {FFFFFF}= {006600}1 долар\n{FF3300}Напиши {FFFF00}/refuel {FF3300}за да заредиш", F2);
    Update3DTextLabelText(mylabelb2, 0xFFFFFFFF, string);
        format(string,sizeof(string), "{003399}[ Бензиностанция ]\n{FF0000}%d/500 литра\n{7FFFD4}{6E2500}1 литър {FFFFFF}= {006600}1 долар\n{FF3300}Напиши {FFFF00}/refuel {FF3300}за да заредиш", F3);
    Update3DTextLabelText(mylabelb3, 0xFFFFFFFF, string);
        format(string,sizeof(string), "{003399}[ Бензиностанция ]\n{FF0000}%d/500 литра\n{7FFFD4}{6E2500}1 литър {FFFFFF}= {006600}1 долар\n{FF3300}Напиши {FFFF00}/refuel {FF3300}за да заредиш", F4);
    Update3DTextLabelText(mylabelb4, 0xFFFFFFFF, string);
    
    	    format(string,sizeof(string), "{00FF00}Етаж 1\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner1]);
    Update3DTextLabelText(mylabel1, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 2\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner2]);
    Update3DTextLabelText(mylabel2, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 3\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner3]);
    Update3DTextLabelText(mylabel3, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 4\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner4]);
    Update3DTextLabelText(mylabel4, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 5\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner5]);
    Update3DTextLabelText(mylabel5, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 6\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner6]);
    Update3DTextLabelText(mylabel6, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 7\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner7]);
    Update3DTextLabelText(mylabel7, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 8\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner8]);
    Update3DTextLabelText(mylabel8, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 9\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner9]);
    Update3DTextLabelText(mylabel9, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 10\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner10]);
    Update3DTextLabelText(mylabel10, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 11\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner11]);
    Update3DTextLabelText(mylabel11, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 12\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner12]);
    Update3DTextLabelText(mylabel12, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 13\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner13]);
    Update3DTextLabelText(mylabel13, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 14\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner14]);
    Update3DTextLabelText(mylabel14, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 15\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner15]);
    Update3DTextLabelText(mylabel15, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 16\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner16]);
    Update3DTextLabelText(mylabel16, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 17\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner17]);
    Update3DTextLabelText(mylabel17, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 18\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner18]);
    Update3DTextLabelText(mylabel18, 0xFFFFFFFF, string);
    format(string,sizeof(string), "{00FF00}Етаж 19\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner19]);
    Update3DTextLabelText(mylabel19, 0xFFFFFFFF, string);
        format(string,sizeof(string), "{00FF00}Етаж 20\n{00FF00}Притежател: {FF0000}%s", OfInfo[0][OfficeOwner20]);
    Update3DTextLabelText(mylabel20, 0xFFFFFFFF, string);

if(IsPlayerInWater( playerid ) && PlayerInfo[playerid][pInDerby] == 1)
{
SetPlayerHealth(playerid,0);
}

	
        static  Float:RL_HP,
                        Float:RL_Armour;
        GetPlayerHealth(playerid,RL_HP);
        GetPlayerArmour(playerid,RL_Armour);
        if(RL_HP != RL_phealth[playerid] || RL_Armour != RL_parmour[playerid])
        {
                if(RL_UpdatedHealth[playerid])
                        RL_UpdatedHealth[playerid]=false;
                else
                {
                        new
                                        Float:RL_PlayerPos[3],
                                        Float:RL_Distance,
                                        Float:RL_CameraPos[3],
                                        Float:RL_CameraVectors[3],
                                        RL_Tick
                                        ;
                        RL_Tick = (GetTickCount()-1000);
                        GetPlayerPos(playerid, RL_PlayerPos[0], RL_PlayerPos[1], RL_PlayerPos[2]);
                        foreach(Player,i)
                        {
                                if(RL_Shooting[i] || RL_Tick < RL_Released[i])
                                {
                                        if(i != playerid)
                                        {
                                                if(IsPlayerInRangeOfPoint(i,200.0,RL_PlayerPos[0], RL_PlayerPos[1], RL_PlayerPos[2]))
                                                {
                                                        GetPlayerCameraWeaponVector(i, RL_CameraVectors[0], RL_CameraVectors[1], RL_CameraVectors[2]);

                                                        GetPlayerCameraPos(i, RL_CameraPos[0], RL_CameraPos[1], RL_CameraPos[2]);
                                                        GetDistanceFromPointToLine(RL_Distance, RL_CameraVectors[0], RL_CameraVectors[1], RL_CameraVectors[2], RL_CameraPos[0], RL_CameraPos[1], RL_CameraPos[2], RL_PlayerPos[0], RL_PlayerPos[1], RL_PlayerPos[2]);
                                                        if(RL_Distance < 2.5)
                                                        {
                                                                        CallLocalFunction("OnPlayerShootPlayer","iiff",i,playerid,(RL_phealth[playerid]-RL_HP),(RL_parmour[playerid]-RL_Armour));
                                                                        break;
                                                        }
                                                }
                                        }
                                }
                        }
                }
        }











        if(IsPlayerInAnyVehicle(playerid))
        {
        new vehicleid = GetPlayerVehicleID(playerid);
    if(vehicleid != 509 || vehicleid != 462)
    {
        new Float:VehHealth;
        new TrueVehHealth;
        new VehHealthString[15];

        GetVehicleHealth(GetPlayerVehicleID(playerid),VehHealth);
        TrueVehHealth = floatround(floatround(VehHealth - 250)/ 7.5);


        format(VehHealthString, 15, "~g~Health: %d",floatround(TrueVehHealth));
        TextDrawSetString(VehHealthBar[playerid],VehHealthString);

        if (TrueVehHealth == -33)
                        {
                        TextDrawSetString(VehHealthBar[playerid],"~g~Health: 0");
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                else if (TrueVehHealth < 1)
                        {
                        TextDrawSetString(VehHealthBar[playerid],"~g~Health: 0");
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                else if (TrueVehHealth < 10)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                        else if (TrueVehHealth < 20)
                        {
                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                else if (TrueVehHealth < 30)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                else if (TrueVehHealth < 40)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                else if (TrueVehHealth < 50)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                else if (TrueVehHealth < 60)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                else if (TrueVehHealth < 70)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                        else if (TrueVehHealth < 80)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                else if (TrueVehHealth < 90)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                        }
                else if (TrueVehHealth < 100)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }
                else if (TrueVehHealth == 100)
                        {
                                TextDrawShowForPlayer(playerid,VehHealthBar[playerid]);
                }

        }
        else
        {
        TextDrawHideForPlayer(playerid,VehHealthBar[playerid]);
        }
        }
        else
        {
        TextDrawHideForPlayer(playerid,VehHealthBar[playerid]);
        }





new vehicleid,Float:speed_x,Float:speed_y,Float:speed_z,Float:final_speed,speed_string[256],final_speed_int;
vehicleid = GetPlayerVehicleID(playerid);
if(vehicleid != 0)
{
if(Mph[playerid] == 0)
{
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+ (speed_z*speed_z))*136.666667;
final_speed_int = GetVehicleKmh(vehicleid);
format(speed_string,256,"~w~Speed: %ikm/h",final_speed_int);
TextDrawSetString(SPEEDOS[playerid], speed_string);
}
if(Mph[playerid] == 1)
{
GetVehicleVelocity(vehicleid,speed_x,speed_y,speed_z);
final_speed = floatsqroot(((speed_x*speed_x)+(speed_y*speed_y))+ (speed_z*speed_z))*136.666667;
final_speed_int = GetVehicleMph(vehicleid);
format(speed_string,256,"~w~Speed: %im/s",final_speed_int);
TextDrawSetString(SPEEDOS[playerid], speed_string);
}
}
else
{
TextDrawSetString(SPEEDOS[playerid], " ");
}





	if(!IsPlayerConnected(playerid)) return 0;

    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        for(new i = 0; i < sizeof(SpikeInfo); i++)
  	    {
  	        if(IsPlayerInRangeOfPoint(playerid, 3.0, SpikeInfo[i][sX], SpikeInfo[i][sY], SpikeInfo[i][sZ]))
            {
  	            if(SpikeInfo[i][sCreated] == 1)
  	            {
  	                new panels, doors, lights, tires;
  	                new carid = GetPlayerVehicleID(playerid);
		            GetVehicleDamageStatus(carid, panels, doors, lights, tires);
		            tires = encode_tires(1, 1, 1, 1);
		            UpdateVehicleDamageStatus(carid, panels, doors, lights, tires);
  	                return 0;
  	            }
  	        }
  	    }
  	}





        if (GetPVarInt(playerid, "laser")) {
                RemovePlayerAttachedObject(playerid, 0);
                if ((IsPlayerInAnyVehicle(playerid)) || (IsPlayerInWater(playerid))) return 1;
                switch (GetPlayerWeapon(playerid)) {
                        case 30: {
                                if (IsPlayerAiming(playerid)) {
                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK standing aiming
                                                0.628249, -0.027766, 0.078052, -6.621746, 352.552642, 355.084289);
                                        } else {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK crouched aiming
                                                0.628249, -0.027766, 0.078052, -1.621746, 356.202667, 355.084289);
                                        }
                                } else {
                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK standing not aiming
                                                0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
                                        } else {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // AK crouched not aiming
                                                0.663249, -0.02976, 0.080051, -11.131746, 358.302734, 353.384216);
                        }       }       }
                        case 31: {
                                if (IsPlayerAiming(playerid)) {
                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing aiming
                                                0.528249, -0.020266, 0.068052, -6.621746, 352.552642, 355.084289);
                                        } else {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched aiming
                                                0.528249, -0.020266, 0.068052, -1.621746, 356.202667, 355.084289);
                                        }
                                } else {
                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 standing not aiming
                                                0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
                                        } else {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // M4 crouched not aiming
                                                0.503249, -0.02376, 0.065051, -11.131746, 357.302734, 354.484222);
                        }       }       }
                        case 29: {
                                if (IsPlayerAiming(playerid)) {
                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing aiming
                                                0.298249, -0.02776, 0.158052, -11.631746, 359.302673, 357.584259);
                                        } else {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched aiming
                                                0.298249, -0.02776, 0.158052, 8.368253, 358.302673, 352.584259);
                                        }
                                } else {
                                        if (GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_DUCK) {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 standing not aiming
                                                0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
                                        } else {
                                                SetPlayerAttachedObject(playerid, 0, GetPVarInt(playerid, "color"), 6, // MP5 crouched not aiming
                                                0.293249, -0.027759, 0.195051, -12.131746, 354.302734, 352.484222);
        }       }       }       }       }
        return 1;
}



stock CreateStrip(Float:x,Float:y,Float:z,Float:Angle)
{
    for(new i = 0; i < sizeof(SpikeInfo); i++)
  	{
  	    if(SpikeInfo[i][sCreated] == 0)
  	    {
            SpikeInfo[i][sCreated]=1;
            SpikeInfo[i][sX]=x;
            SpikeInfo[i][sY]=y;
            SpikeInfo[i][sZ]=z-0.7;
            SpikeInfo[i][sObject] = CreateObject(2892, x, y, z-0.9, 0, 0, Angle-90);
	        return 1;
  	    }
  	}
  	return 0;
}

stock DeleteAllStrip()
{
    for(new i = 0; i < sizeof(SpikeInfo); i++)
  	{
  	    if(SpikeInfo[i][sCreated] == 1)
  	    {
  	        SpikeInfo[i][sCreated]=0;
            SpikeInfo[i][sX]=0.0;
            SpikeInfo[i][sY]=0.0;
            SpikeInfo[i][sZ]=0.0;
            DestroyObject(SpikeInfo[i][sObject]);
  	    }
	}
    return 0;
}

stock DeleteClosestStrip(playerid)
{
    for(new i = 0; i < sizeof(SpikeInfo); i++)
  	{
  	    if(IsPlayerInRangeOfPoint(playerid, 2.0, SpikeInfo[i][sX], SpikeInfo[i][sY], SpikeInfo[i][sZ]))
        {
  	        if(SpikeInfo[i][sCreated] == 1)
            {
                SpikeInfo[i][sCreated]=0;
                SpikeInfo[i][sX]=0.0;
                SpikeInfo[i][sY]=0.0;
                SpikeInfo[i][sZ]=0.0;
                DestroyObject(SpikeInfo[i][sObject]);
                return 1;
  	        }
  	    }
  	}
    return 0;
}

encode_tires(tires1, tires2, tires3, tires4) {

	return tires1 | (tires2 << 1) | (tires3 << 2) | (tires4 << 3);

}



public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
        new Float:oldX, Float:oldY, Float:oldZ,
                Float:oldRotX, Float:oldRotY, Float:oldRotZ;
        GetObjectPos(graffity, oldX, oldY, oldZ);
        GetObjectRot(graffity, oldRotX, oldRotY, oldRotZ);
        if(!playerobject)
        {
            if(!IsValidObject(graffity)) return;
            MoveObject(graffity, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
        }
        if(response == EDIT_RESPONSE_FINAL)
        {
        SendClientMessage(playerid,-1,"Acum foloseste acest spray pentru a finaliza tatuaju !");
                GivePlayerWeapon(playerid, 41, 5000);

        }
}
    
 forward Object(playerid);

public Object(playerid)
{
    ShowPlayerDialog(playerid, 1997, DIALOG_STYLE_INPUT, "Graffity System", "Scrie in aceasta casuta cu ce nume vrei sa fie tatuaju.", "Ok", "");
    return 1;
}


forward Draggingt(playerid, ID);
public Draggingt(playerid, ID)
{
	new Float:dX, Float:dY, Float:dZ;
	GetPlayerPos(playerid, dX, dY, dZ);
	SetPlayerPos(ID, dX+1, dY, dZ);
}



stock AdjustVector(& Float: vX, & Float: vY, & Float: vZ, Float: oX, Float: oY, const Float: oZ) { // Credits Nero_3D
        static
                Float: Angle;
        Angle = -atan2(vX, vY);
        if(45.0 < Angle) {
                oX ^= oY;
                oY ^= oX;
                oX ^= oY;
                if(90.0 < Angle) {
                        oX *= -1;
                        if(135.0 < Angle) {
                                oX *= -1;
                                oX ^= oY;
                                oY ^= oX;
                                oX ^= oY;
                                oX *= -1;
                        }
                }
        } else if(Angle < 0.0) {
                oY *= -1;
                if(Angle < -45.0) {
                        oX *= -1;
                        oX ^= oY;
                        oY ^= oX;
                        oX ^= oY;
                        oX *= -1;
                        if(Angle < -90.0) {
                                oX *= -1;
                                if(Angle < -135.0) {
                                        oX ^= oY;
                                        oY ^= oX;
                                        oX ^= oY;
                                }
                        }
                }
        }
        vX += oX,
        vY += oY;
        vZ += oZ;
        return false;
}
/*--------------------------------------------------------------------------------------------------
        Function:
                GetPlayerCameraWeaponVector
        Params:
                playerid - Player to get the weapon vector of
                & Float: vX - x Vector variable
                & Float: vY - y Vector variable
                & Float: vZ - z Vector variable
        Return:
                If the player is connected
        Notes:
                Gets the weapon vector of the player

native GetPlayerCameraWeaponVector(playerid, & Float: vX, & Float: vY, & Float: vZ);
--------------------------------------------------------------------------------------------------*/
stock GetPlayerCameraWeaponVector(playerid, & Float: vX, & Float: vY, & Float: vZ) { // Credits Nero_3D
        static
                weapon;
        if(21 < (weapon = GetPlayerWeapon(playerid)) < 39) {
                GetPlayerCameraFrontVector(playerid, vX, vY, vZ);
                switch(weapon) {
                        case WEAPON_SNIPER, WEAPON_ROCKETLAUNCHER, WEAPON_HEATSEEKER: {}
                        case WEAPON_RIFLE: {
                                AdjustVector(vX, vY, vZ, 0.016204, 0.009899, 0.047177);
                        }
                        case WEAPON_AK47, WEAPON_M4: {
                                AdjustVector(vX, vY, vZ, 0.026461, 0.013070, 0.069079);
                        }
                        default: {
                                AdjustVector(vX, vY, vZ, 0.043949, 0.015922, 0.103412);
                        }
                }
                return true;
        }
        else
                GetPlayerCameraFrontVector(playerid, vX, vY, vZ);
        return false;
}
stock crossp(Float:v1x, Float:v1y, Float:v1z, Float:v2x, Float:v2y, Float:v2z, &Float:output)
{
        new
                Float:c1 = (v1y * v2z) - (v1z * v2y),
                Float:c2 = (v1z * v2x) - (v1x * v2z),
                Float:c3 = (v1x * v2y) - (v1y * v2x);
        output = floatsqroot ((c1 * c1) + (c2 * c2) + (c3 * c3));
        return 0;
}
stock GetDistanceFromPointToLine(&Float:distance, Float:line_vector_x, Float:line_vector_y, Float:line_vector_z, Float:line_x, Float:line_y, Float:line_z, Float:point_x, Float:point_y, Float:point_z)
{
        //A line is defined by a point (which is on the line (line_x/y/z)) and a vector which defines the direction (line_vector_x/y/z).
        static Float:output;
        crossp(line_vector_x, line_vector_y, line_vector_z, point_x - line_x, point_y - line_y, point_z - line_z, output);//Cross product of 2 vectors.
        distance = output / floatsqroot ((line_vector_x * line_vector_x) + (line_vector_y * line_vector_y) + (line_vector_z * line_vector_z));
        return 0;
}







stock SetPlayerHealthEx(playerid, Float:health)
{
//      RL_phealth[playerid]=health;
        RL_UpdatedHealth[playerid]=true;
        return SetPlayerHealth(playerid, health);
}

#define SetPlayerHealth SetPlayerHealthEx

// SetPlayerArmour
stock SetPlayerArmourEx(playerid, Float:armour)
{
//      RL_parmour[playerid]=armour;
        RL_UpdatedHealth[playerid]=true;
        return SetPlayerArmour(playerid, armour);
}

#define SetPlayerArmour SetPlayerArmourEx

#if defined _ALS_OnPlayerUpdate
        #undef OnPlayerUpdate
#else
        #define _ALS_OnPlayerUpdate
#endif

#define OnPlayerUpdate RL_OnPlayerUpdate
forward RL_OnPlayerUpdate(playerid);




#if defined _ALS_OnPlayerKeyStateChange
        #undef OnPlayerKeyStateChange
#else
        #define _ALS_OnPlayerKeyStateChange
#endif
#define OnPlayerKeyStateChange RL_OnPlayerKeyStateChange
forward RL_OnPlayerKeyStateChange(playerid,newkeys,oldkeys);


#if defined _ALS_OnPlayerStateChange
        #undef OnPlayerStateChange
#else
        #define _ALS_OnPlayerStateChange
#endif
#define OnPlayerStateChange RL_OnPlayerStateChange

forward RL_OnPlayerStateChange(playerid,newstate, oldstate);



#if defined _ALS_OnPlayerConnect
        #undef OnPlayerConnect
#else
        #define _ALS_OnPlayerConnect
#endif
#define OnPlayerConnect RL_OnPlayerConnect

forward RL_OnPlayerConnect(playerid);



        #if defined _ALS_OnGameModeInit
                #undef OnGameModeInit
        #else
                #define _ALS_OnGameModeInit
        #endif
        #define OnGameModeInit RL_OnGameModeInit
        forward RL_OnGameModeInit();
        
        
        
        
        
public OnPlayerShootPlayer(Shooter,Target,Float:HealthLost,Float:ArmourLost)
{
    if(gTeam[Shooter] == TEAM_GPD)
    {
        if(GetPlayerWeapon(Shooter) == 23)
        {
            TogglePlayerControllable(Target, false);
            ApplyAnimation(Target,"CRACK","crckdeth2",4.1,1,1,1,1,1);
            pTazed[Target] = 1;
            SetTimerEx("Tazed", 10000, 0, "d", Target);
        }
    }
    return 1;
}


public Tazed(playerid)
{
      pTazed[playerid] = 0;
      TogglePlayerControllable(playerid, true);
      ClearAnimations(playerid);
      return 1;
}




forward dragFunction(playerid, dragID); //really can't explain this, it's just something you have to do in this mysterious scripting language
public dragFunction(playerid, dragID)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z); //Will set the position of playerid into x, y and z
	SetPlayerPos(dragID, x+3, y, z); //Will set the position of the id being dragged to exact same as playerid but +3 instead meaning they won't collide
	return 1; //functions must return a value
}


GetVehicleInfrontID (vehid)
{
    new Float: temp = 7.0;
        new j = 0;
        for (new i = 1; i <= MAX_VEHICLES; i++)
        {
            new Float: a, Float: x1, Float: y1, Float: z1, Float: x2, Float: y2, Float: z2;
        GetVehiclePos (vehid, x1, y1, z1);
        GetVehicleZAngle (vehid, a);
                if (i != vehid)
                {
                        if (GetVehiclePos (i, x2, y2, z2))
                        {
                                new Float: distance = floatsqroot (floatpower ((x1 - x2), 2) + floatpower ((y1 - y2), 2) + floatpower ((z1 - z2), 2));
                                GetVehicleZAngle (vehid, a);

                                if (distance < 300.0)
                                {
                                x1 = x1 + (distance * floatsin(-a, degrees));
                                        y1 = y1 + (distance * floatcos(-a, degrees));

                                        distance = floatsqroot ((floatpower ((x1 - x2), 2)) + (floatpower ((y1 - y2), 2)));

                                        if (temp > distance)
                                        {
                                                temp = distance;
                                                j = i;
                                        }
                                }
                        }
                }
        }
        if (temp < 7.0) return j;
        return -1;
}


public UpdateSpeed (vehid)
{
    new id = GetVehicleInfrontID (vehid);
        if (id < 0)
        {
                TextDrawSetString (SpeedAndModel [vehid], "~b~N/A ~n~~r~N/A");
        }
        else
        {
                new str[32], Float: velocityX, Float: velocityY, Float: velocityZ;
                GetVehicleVelocity (id, velocityX, velocityY, velocityZ);
        new speed = floatround (floatsqroot (floatpower (velocityX, 2) + floatpower (velocityY, 2) + floatpower (velocityZ, 2)) * 136.666667, floatround_round);
                format (str, sizeof (str), "~b~%s ~n~~r~%d", VehicleModel [GetVehicleModel (id) - 400], speed);
                TextDrawSetString (SpeedAndModel [vehid], str);
        }

        for (new i = 0; i < MAX_PLAYERS; i++)
        {
                if (IsPlayerInVehicle (i, vehid))
            {
                    TextDrawShowForPlayer (i, SpeedAndModel [vehid]);
                }
        }
        return 1;
}


public OnVehicleDeath (vehicleid)
{
        
    DestroyObject (VehRadarID [vehicleid]);
    VehRadarID [vehicleid] = -1;
    KillTimer (CheckingSpeed [vehicleid]);
        CheckingSpeed [vehicleid] = -1;
        for (new i = 0; i < MAX_PLAYERS; i++)
        {
                if (IsPlayerInVehicle (i, vehicleid))
                {
                        TextDrawHideForPlayer (i, RadarHud);
                        TextDrawHideForPlayer (i, SpeedAndModel [vehicleid]);
                }
        }
}



stock CrearFotoMulta(Float:fx,Float:fy,Float:fz,Float:frx,Float:fry,Float:frz,Float:fradio,maxskorost)
{
    new r, string[128];
	for(r=0; r < MAXIMO_DECAMARAS; r++)
	if(!RadarInfo[r][rCreado]) break;
	CreateObject(18880,fx,fy,fz-1,frx,fry,frz);
	RadarInfo[r][rCreado] = 1;
	RadarInfo[r][rX] = fx;
	RadarInfo[r][rY] = fy;
	RadarInfo[r][rZ] = fz;
	RadarInfo[r][rRX] = frx;
	RadarInfo[r][rRY] = fry;
	RadarInfo[r][rRZ] = frz;
	RadarInfo[r][rRadio] = fradio;
	RadarInfo[r][rVelMax] = maxskorost;
	return 1;
}

forward FotoMultaON();
public FotoMultaON()
{
	for(new i; i< MAXIMO_DECAMARAS; i++){
	    if(RadarInfo[i][rCreado]){
			for(new d,e=GetMaxPlayers(); d<e; d++){
				if(IsPlayerConnected(d) && IsPlayerInRangeOfPoint(d,RadarInfo[i][rRadio],RadarInfo[i][rX],RadarInfo[i][rY],RadarInfo[i][rZ]) && IsPlayerInAnyVehicle(d)){
					if(SacarVelocidad(d) > RadarInfo[i][rVelMax] && !LimiteSuperado[d]){
					    LimitedeVelocidadpa(d, RadarInfo[i][rVelMax], SacarVelocidad(d));
					    LimiteSuperado[d] = 1;
					}
					else if(SacarVelocidad(d) < RadarInfo[i][rVelMax] && LimiteSuperado[d]){
					    LimiteSuperado[d] = 0;
					}
				}
			}
		}
	}
	return 1;
}
forward LimitedeVelocidadpa(playerid, velmax, velactual);
public LimitedeVelocidadpa(playerid, velmax, velactual)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	new string[256];
		TextDrawShowForPlayer(playerid, Foto);
		SetTimerEx("TiempoFoto", 6000, false, "i", playerid);
		SetTimerEx("QuitarCamara", 100, false, "i", playerid);
		SendClientMessage(playerid, -1, "Вие сте издирван + 1 Wanted Level");
		PlayerInfo[playerid][pWantedLevel] += 1;
  format(string, sizeof(string), "%s се издирва [Превишена скорост]", PlayerName(playerid));
						SendFactionMessage(TEAM_GPD, COLOR_LIGHTBLUE, string);
												if(PlayerInfo[playerid][pWantedLevel] == 1)
					{
SetPlayerWantedLevel(playerid,1);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 2)
					{
SetPlayerWantedLevel(playerid,2);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 3)
					{
SetPlayerWantedLevel(playerid,3);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 4)
					{
SetPlayerWantedLevel(playerid,4);
					}
										if(PlayerInfo[playerid][pWantedLevel] == 5)
					{
SetPlayerWantedLevel(playerid,5);
					}
										if(PlayerInfo[playerid][pWantedLevel] >= 6)
					{
SetPlayerWantedLevel(playerid,6);
					}
	}
	return 1;
}

forward TiempoFoto(playerid);
public TiempoFoto(playerid)
{
    LimiteSuperado[playerid] = 0;
    return 1;
}
forward QuitarCamara(playerid);
public QuitarCamara(playerid)
{
    TextDrawHideForPlayer(playerid,Foto);
    return 1;
}

stock SacarVelocidad(playerid)
{
	new Float:vX, Float:vY, Float:vZ, Float:Velocidad;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), vX, vY, vZ);
	Velocidad = floatmul(floatsqroot(floatadd(floatadd(floatpower(vX, 2), floatpower(vY, 2)),  floatpower(vZ, 2))), 100.0);
	return floatround(floatdiv(Velocidad, 0.75), floatround_floor);
}
//


stock n_AddStaticVehicle(modelID, Float: spawn_X, Float: spawn_Y, Float: spawn_Z, Float: z_Angle, color1, color2)
{
        if(color1 < -1 || color2 < -1)
        {
                color1 = random(255);
                color2 = random(255);
        }
        modelID = AddStaticVehicle(modelID, spawn_X, spawn_Y, spawn_Z, z_Angle, color1, color2);

        new
                colorStr[24]
        ;
        format(colorStr, sizeof(colorStr), "%d-%d", color1, color2);
        setproperty(_, "", PROPERTY_OFFSET(modelID), colorStr);

        return modelID;
}

stock n_AddStaticVehicleEx(modelID, Float: spawn_X, Float: spawn_Y, Float: spawn_Z, Float: z_Angle, color1, color2, respawn_Delay, sirena = 0)
{
        if(color1 < -1 || color2 < -1)
        {
                color1 = random(255);
                color2 = random(255);
        }
        modelID = AddStaticVehicleEx(modelID, spawn_X, spawn_Y, spawn_Z, z_Angle, color1, color2, respawn_Delay, sirena);

        new
                colorStr[24]
        ;
        format(colorStr, sizeof(colorStr), "%d-%d", color1, color2);
        setproperty(_, "", PROPERTY_OFFSET(modelID), colorStr);

        return modelID;
}

stock n_CreateVehicle(modelID, Float: spawn_X, Float: spawn_Y, Float: spawn_Z, Float: z_Angle, color1, color2, respawn_Delay, sirena = 0)
{
        if(color1 < -1 || color2 < -1)
        {
                color1 = random(255);
                color2 = random(255);
        }
        modelID = CreateVehicle(modelID, spawn_X, spawn_Y, spawn_Z, z_Angle, color1, color2, respawn_Delay, sirena);

        new
                colorStr[24]
        ;
        format(colorStr, sizeof(colorStr), "%d-%d", color1, color2);
        setproperty(_, "", PROPERTY_OFFSET(modelID), colorStr);

        return modelID;
}

stock n_DestroyVehicle(vehicleID)
{
        deleteproperty(_, "", PROPERTY_OFFSET(vehicleID));

        return DestroyVehicle(vehicleID);
}

stock n_ChangeVehicleColor(vehicleID, color1, color2)
{
        new
                colorStr[24]
        ;
        format(colorStr, sizeof(colorStr), "%d-%d", color1, color2);
        setproperty(_, "", PROPERTY_OFFSET(vehicleID), colorStr);

        return ChangeVehicleColor(vehicleID, color1, color2);
}


stock GetVehicleColor(vehicleID, &color1, &color2)
{
        vehicleID = PROPERTY_OFFSET(vehicleID);

        if(existproperty(_, "", vehicleID))
        {
                new
                        colorStr[24],
                        strPos
                ;
                getproperty(_, "", vehicleID, colorStr);
                strunpack(colorStr, colorStr);

                if((strPos = strfind(colorStr, "-")) != -1)
                {
                        color1 = strval(colorStr);
                        color2 = strval(colorStr[strPos + 1]);
                        return 1;
                }
        }
        return 0;
}

#if defined _ALS_CreateVehicle
    #undef CreateVehicle
#else
    #define _ALS_CreateVehicle
#endif

#if defined _ALS_AddStaticVehicle
    #undef AddStaticVehicle
#else
    #define _ALS_AddStaticVehicle
#endif

#if defined _ALS_AddStaticVehicleEx
    #undef AddStaticVehicleEx
#else
    #define _ALS_AddStaticVehicleEx
#endif

#if defined _ALS_DestroyVehicle
    #undef DestroyVehicle
#else
    #define _ALS_DestroyVehicle
#endif

#define AddStaticVehicle n_AddStaticVehicle
#define AddStaticVehicleEx n_AddStaticVehicleEx
#define CreateVehicle n_CreateVehicle
#define DestroyVehicle n_DestroyVehicle
#define ChangeVehicleColor n_ChangeVehicleColor

#if defined _ALS_OnVehicleRespray
        #undef OnVehicleRespray
#else
        #define _ALS_OnVehicleRespray
#endif

#define OnVehicleRespray n_OnVehicleRespray

forward n_OnVehicleRespray(playerid, vehicleid, color1, color2);
//

forward gmxtimer();
public gmxtimer()
{
new string2[256];
    format(string2, sizeof(string2), "Сървъра се рестартира");
    SendClientMessageToAll(COLOR_WHITE, string2);
       	SaveAccounts();
	SendRconCommand("gmx");
}
forward gmxtimer2();
public gmxtimer2()
{
SetTimer("gmxtimer2", 1000, false);
if(gmxtime == 1)
{
rtimer -= 1;
}
if(gmxtime == 0)
{
}

}
public DelayedKick(playerid)
{
    Kick(playerid);
    return 1;
}
public DelayedKick2(playerid)
{
    Kick(playerid);
    SendClientMessageToAll(COLOR_GRAD1,"Kick: е изхвърлен от сървъра");
    return 1;
}
public DelayedBan(playerid)
{
    Ban(playerid);
    Kick(playerid);
    return 1;
}
public houselevel(h)
{
for(new h; h<MAX_HOUSES; h++){
	new house[64];
	new NextHouseID = ReturnNextUnusedHouseID();
if(HouseInfo[h][Bus] == 1)
{
     	if(HouseInfo[h][hLevel] == 1 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "24/7");
     	dini_Set(house, "Name", "24/7");
     	dini_IntSet(house, "bPay", 2500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 2 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Casino");
      dini_Set(house, "Name", "Casino");
     	dini_IntSet(house, "bPay", 3500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 3 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Ammonation");
     	dini_Set(house, "Name", "Ammonation");
     	dini_IntSet(house, "bPay", 4500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 4 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Horserace");
     	dini_Set(house, "Name", "Horserace");
     	dini_IntSet(house, "bPay", 5000);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 5 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Hotel");
dini_Set(house, "Name", "Hotel");
     	dini_IntSet(house, "bPay", 5500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 6 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Sex Shop");
     	dini_Set(house, "Name", "Sex Shop");
     	dini_IntSet(house, "bPay", 6200);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 7 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Clothes");
     	dini_Set(house, "Name", "Clothes");
     	dini_IntSet(house, "bPay", 6500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 8 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Bar");
     	dini_Set(house, "Name", "Bar");
     	dini_IntSet(house, "bPay", 7500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 9 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Burger Shot");
     	dini_Set(house, "Name", "Burger Shot");
     	dini_IntSet(house, "bPay", 8500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 10 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Gym");
     	dini_Set(house, "Name", "Gym");
     	dini_IntSet(house, "bPay", 8900);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 11 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "DM Biz");
     	dini_Set(house, "Name", "DM Biz");
     	dini_IntSet(house, "bPay", 9500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 12 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Car School");
     	dini_Set(house, "Name", "Car School");
     	dini_IntSet(house, "bPay", 12500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 13 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "None");
     	dini_Set(house, "Name", "None");
     	dini_IntSet(house, "bPay", 500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 14 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Advert");
     	dini_Set(house, "Name", "Advert");
     	dini_IntSet(house, "bPay", 13500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	     	if(HouseInfo[h][hLevel] == 15 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Drug Factory");
     	dini_Set(house, "Name", "Drug Factory");
     	dini_IntSet(house, "bPay", 14500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 16 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Barber");
     	dini_Set(house, "Name", "Barber");
     	dini_IntSet(house, "bPay", 14500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 17 && HouseInfo[h][Bus] == 1)
     	{
     	format(HouseInfo[h][hName], 24, "Tatoo");
     	dini_Set(house, "Name", "Tatoo");
     	dini_IntSet(house, "bPay", 14500);
     	dini_IntSet(house, "Bus", 1);
     	}
     		if(HouseInfo[h][hLevel] == 18 && HouseInfo[h][Bus] == 1)
     	{
     	dini_Set(house, "Name", "Strip Club");
     	dini_IntSet(house, "bPay", 14500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseInfo[h][hLevel] == 19 && HouseInfo[h][Bus] == 1)
     	{
     	dini_Set(house, "Name", "Special 1");
     	dini_IntSet(house, "bPay", 14415500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	}
     	}
     	KillTimer(ktimer);
}
forward settime(playerid);
public settime(playerid)
{
        new year,month,day,hours,minutes,seconds;
        new string[256];
	getdate(year, month, day), gettime(hours, minutes, seconds);
	format(string, sizeof string, "~y~%d.~y~%s%d.~y~%s%d~w~ --- ~g~%s%d:~g~%s%d:~g~%s%d", day, ((month < 10) ? ("0") : ("")), month, (year < 10) ? ("0") : (""), year, (hours < 10) ? ("0") : (""), hours, (minutes < 10) ? ("0") : (""), minutes, (seconds < 10) ? ("0") : (""), seconds);
	TextDrawSetString(ClockData[playerid], string);
}
stock LoadPlayerBiz(houseid)
{
    new house[64]; format(house, sizeof(house), "/Houses/%d.ini", houseid);
    if(dini_Exists(house)){
        format(HouseInfo[houseid][hName], MAX_PLAYER_NAME, "%s", dini_Get(house, "Name"));
        format(HouseInfo[houseid][hOwner], MAX_PLAYER_NAME, "%s", dini_Get(house, "hOwner"));
        HouseInfo[houseid][hSellable]  	  =  dini_Int(house, "For_Sell");
		HouseInfo[houseid][hSell]  	 	  =  dini_Int(house, "Sell_Price");
       	HouseInfo[houseid][hRent]  	 	  =  dini_Int(house, "Rent_Price");
       	HouseInfo[houseid][hLevel] 		  =  dini_Int(house, "House_Level");
       	HouseInfo[houseid][hExitX]  	  =  dini_Float(house, "Exit_Coord:X");
       	HouseInfo[houseid][hExitY]  	  =  dini_Float(house, "Exit_Coord:Y");
        HouseInfo[houseid][hExitZ]  	  =  dini_Float(house, "Exit_Coord:Z");
       	HouseInfo[houseid][hVirtualWorld] =  dini_Int(house, "VirtualWorld");
       	HouseInfo[houseid][hLocked] 	  =  dini_Int(house, "Status");
       	HouseInfo[houseid][Earnings] 	  =  dini_Int(house, "Earnings");
       	HouseInfo[houseid][Bus] 	  =  dini_Int(house, "Bus");
       	HouseInfo[houseid][bPay] 	  =  dini_Int(house, "bPay");
HouseInfo[houseid][Fee] 	  =  dini_Int(house, "Fee");

       	if(HouseInfo[houseid][Bus] == 1)
		   {
		    HouseInfo[houseid][hPickup] = CreatePickup(1272, 0, HouseInfo[houseid][hExitX], HouseInfo[houseid][hExitY], HouseInfo[houseid][hExitZ]); // not bought
		}
	}


	return true;
}
stock LoadPlayerHouse(houseid)
{
    new house[64]; format(house, sizeof(house), "/Houses/%d.ini", houseid);
    if(dini_Exists(house)){
        format(HouseInfo[houseid][hName], MAX_PLAYER_NAME, "%s", dini_Get(house, "Name"));
        format(HouseInfo[houseid][hOwner], MAX_PLAYER_NAME, "%s", dini_Get(house, "hOwner"));
        HouseInfo[houseid][hSellable]  	  =  dini_Int(house, "For_Sell");
		HouseInfo[houseid][hSell]  	 	  =  dini_Int(house, "Sell_Price");
       	HouseInfo[houseid][hRent]  	 	  =  dini_Int(house, "Rent_Price");
       	HouseInfo[houseid][hLevel] 		  =  dini_Int(house, "House_Level");
       	HouseInfo[houseid][hExitX]  	  =  dini_Float(house, "Exit_Coord:X");
       	HouseInfo[houseid][hExitY]  	  =  dini_Float(house, "Exit_Coord:Y");
        HouseInfo[houseid][hExitZ]  	  =  dini_Float(house, "Exit_Coord:Z");
       	HouseInfo[houseid][hVirtualWorld] =  dini_Int(house, "VirtualWorld");
       	HouseInfo[houseid][hLocked] 	  =  dini_Int(house, "Status");
       	HouseInfo[houseid][Earnings] 	  =  dini_Int(house, "Earnings");
       	HouseInfo[houseid][Bus] 	  =  dini_Int(house, "Bus");
       	HouseInfo[houseid][bPay] 	  =  dini_Int(house, "bPay");
HouseInfo[houseid][Fee] 	  =  dini_Int(house, "Fee");
HouseInfo[houseid][hVecModel] = dini_Int(house, "HV_Model");
HouseInfo[houseid][hVecX] = dini_Float(house, "HV_PosX");
HouseInfo[houseid][hVecY] = dini_Float(house, "HV_PosZ");
HouseInfo[houseid][hVecZ] = dini_Float(house, "HV_PosZ");
HouseInfo[houseid][hVecA] = dini_Float(house, "HV_PosA");
HouseInfo[houseid][Heal] 	  =  dini_Int(house, "Heal");
HouseInfo[houseid][Armour] 	  =  dini_Int(house, "Armour");
       	if(HouseInfo[houseid][Bus] == 0)
		   {
		    HouseInfo[houseid][hPickup] = CreatePickup(1273, 0, HouseInfo[houseid][hExitX], HouseInfo[houseid][hExitY], HouseInfo[houseid][hExitZ]); // not bought
		}
	}
	return true;
}
stock CreatePlayerHouser(playerid, sellprice, HouseLvl)
{
    if((ReturnNextUnusedHouseID()-1) >= MAX_HOUSES) return SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Вие направихте твърде много къщи в близост.");
	new house[64], Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X, Y, Z);
	new NextHouseID = ReturnNextUnusedHouseID();
	new World = ReturnNextUnusedVirtualWorld();
SendClientMessage(playerid, COLOR_WHITE, ".:: бизнеса е направен.");
	format(house, sizeof(house), "/Houses/%d.ini", NextHouseID);
LoadPlayerBiz(NextHouseID);
	if(!dini_Exists(house)){
		dini_Create(house);
		dini_IntSet(house, "For_Sell", 1);
		dini_IntSet(house, "Sell_Price", sellprice);
		dini_IntSet(house, "Rent_Price", 1000);
		dini_IntSet(house, "House_Level", HouseLvl);
 		dini_FloatSet(house,"Exit_Coord:X", X);
  		dini_FloatSet(house,"Exit_Coord:Y", Y);
    	dini_FloatSet(house,"Exit_Coord:Z", Z);
     	dini_IntSet(house, "VirtualWorld", NextHouseID);
     	dini_IntSet(house, "Bus", 1);
     	dini_IntSet(house, "Fee", 500);
     	dini_IntSet(house, "bPay", 2500);
     	dini_IntSet(house, "Status",0);
     	dini_Set(house, "hOwner", "None");
     	     	if(HouseLvl == 1)
     	{
     	dini_Set(house, "Name", "24/7");
     	dini_IntSet(house, "bPay", 2500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 2)
     	{
      dini_Set(house, "Name", "Casino");
     	dini_IntSet(house, "bPay", 3500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 3)
     	{
     	dini_Set(house, "Name", "Ammonation");
     	dini_IntSet(house, "bPay", 4500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 4)
     	{
     	dini_Set(house, "Name", "Horserace");
     	dini_IntSet(house, "bPay", 5000);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 5)
     	{

dini_Set(house, "Name", "Hotel");
     	dini_IntSet(house, "bPay", 5500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 6)
     	{

     	dini_Set(house, "Name", "Sex Shop");
     	dini_IntSet(house, "bPay", 6200);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 7)
     	{

     	dini_Set(house, "Name", "Clothes");
     	dini_IntSet(house, "bPay", 6500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 8)
     	{

     	dini_Set(house, "Name", "Bar");
     	dini_IntSet(house, "bPay", 7500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 9)
     	{

     	dini_Set(house, "Name", "Burger Shot");
     	dini_IntSet(house, "bPay", 8500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 10)
     	{

     	dini_Set(house, "Name", "Gym");
     	dini_IntSet(house, "bPay", 8900);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 11)
     	{

     	dini_Set(house, "Name", "DM Biz");
     	dini_IntSet(house, "bPay", 9500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 12)
     	{

     	dini_Set(house, "Name", "Car School");
     	dini_IntSet(house, "bPay", 12500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 13)
     	{

     	dini_Set(house, "Name", "None");
     	dini_IntSet(house, "bPay", 500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 14)
     	{

     	dini_Set(house, "Name", "Advert");
     	dini_IntSet(house, "bPay", 13500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	     	if(HouseLvl == 15)
     	{

     	dini_Set(house, "Name", "Drug Factory");
     	dini_IntSet(house, "bPay", 14500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 16)
     	{

     	dini_Set(house, "Name", "Barber");
     	dini_IntSet(house, "bPay", 14500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 17)
     	{

     	dini_Set(house, "Name", "Tatoo");
     	dini_IntSet(house, "bPay", 14500);
     	dini_IntSet(house, "Bus", 1);
     	}
     		if(HouseLvl == 18)
     	{

     	dini_Set(house, "Name", "Strip Club");
     	dini_IntSet(house, "bPay", 14500);
     	dini_IntSet(house, "Bus", 1);
     	}
     	if(HouseLvl == 19)
     	{

     	dini_Set(house, "Name", "Special 1");
     	dini_IntSet(house, "bPay", 14415500);
     	dini_IntSet(house, "Bus", 1);
     	}
	}
	return true;
}

stock CreatePlayerHouse(playerid, sellprice, HouseLvl)
{
    if((ReturnNextUnusedHouseID()-1) >= MAX_HOUSES) return SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Вие направихте твърде много къщи в близост.");
	new house[64], Float:X, Float:Y, Float:Z; GetPlayerPos(playerid, X, Y, Z);
	new NextHouseID = ReturnNextUnusedHouseID();
	new World = ReturnNextUnusedVirtualWorld();

	format(house, sizeof(house), "/Houses/%d.ini", NextHouseID);
LoadPlayerHouse(NextHouseID);
	if(!dini_Exists(house)){
		dini_Create(house);
		dini_Set(house, "Name", "None");
		dini_IntSet(house, "For_Sell", 1);
		dini_IntSet(house, "Sell_Price", sellprice);
		dini_IntSet(house, "Rent_Price", 1000);
		dini_IntSet(house, "House_Level", HouseLvl);
 		dini_FloatSet(house,"Exit_Coord:X", X);
  		dini_FloatSet(house,"Exit_Coord:Y", Y);
    	dini_FloatSet(house,"Exit_Coord:Z", Z);
     	dini_IntSet(house, "VirtualWorld", NextHouseID);
     	dini_IntSet(house, "Bus", 0);
     	dini_IntSet(house, "bPay", 0);
     	dini_IntSet(house, "Fee", 0);
     	
       	SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Kъщата е направена.");
	}
	return true;
}

public SavePlayerHouse(houseid)
{
    new house[64]; format(house, sizeof(house), "/Houses/%d.ini", houseid);
    if(dini_Exists(house)){
        dini_Set(house, "Name", HouseInfo[houseid][hName]);
        dini_Set(house, "hOwner", HouseInfo[houseid][hOwner]);
        dini_IntSet(house, "For_Sell", HouseInfo[houseid][hSellable]);
		dini_IntSet(house, "Sell_Price", HouseInfo[houseid][hSell]);
       	dini_IntSet(house, "Rent_Price", HouseInfo[houseid][hRent]);
	 	dini_IntSet(house, "House_Level", HouseInfo[houseid][hLevel]);
       	dini_FloatSet(house, "Exit_Coord:X", HouseInfo[houseid][hExitX]);
       	dini_FloatSet(house, "Exit_Coord:Y", HouseInfo[houseid][hExitY]);
        dini_FloatSet(house, "Exit_Coord:Z", HouseInfo[houseid][hExitZ]);
       	dini_IntSet(house, "VirtualWorld", HouseInfo[houseid][hVirtualWorld]);
	  	dini_IntSet(house, "Status", HouseInfo[houseid][hLocked]);
	  	dini_IntSet(house, "Earnings", HouseInfo[houseid][Earnings]);
	  	dini_IntSet(house, "Bus", HouseInfo[houseid][Bus]);
	  	dini_IntSet(house, "bPay", HouseInfo[houseid][bPay]);
	  	dini_IntSet(house, "Fee", HouseInfo[houseid][Fee]);
	  	dini_IntSet(house, "HV_Model", HouseInfo[houseid][hVecModel]);
        dini_FloatSet(house, "HV_PosX", HouseInfo[houseid][hVecX]);
        dini_FloatSet(house, "HV_PosZ", HouseInfo[houseid][hVecY]);
        dini_Float(house, "HV_PosZ", HouseInfo[houseid][hVecZ]);
        dini_Float(house, "HV_PosA", HouseInfo[houseid][hVecA]);
dini_IntSet(house, "Heal", HouseInfo[houseid][Heal]);
dini_IntSet(house, "Armour", HouseInfo[houseid][Armour]);
	}
	return true;
}
//
//
stock ReturnNextUnusedHouseID()
{
    new house[64];
	for(new h; h<MAX_HOUSES; h++){
		format(house, sizeof(house), "/Houses/%d.ini", h);
		if(!dini_Exists(house)) return h; }
	return true;
}

stock ReturnNextUnusedVirtualWorld()
{
    new house[64]; // Please do not make more then 255 houses because that is the Maximum Virtual Worlds. Or use as many as you want in 0.3
	format(house, sizeof(house), "/Houses/%d.ini", ReturnNextUnusedHouseID()-1);
	return dini_Int(house, "VirtualWorld")+1;
}

public ReadPlayerHouseData(playerid)
{
	new string[256], house[64];
for(new h; h<MAX_HOUSES; h++){
if(HouseInfo[h][Bus] == 0)
	    {
			if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 1) {
	  			if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 3 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 2) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 3) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 4) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 4 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 5) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 6) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 7) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 2 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 8) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 9) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 5 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 10) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 11) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 7 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 12) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 9 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
	}
				if(HouseInfo[h][hSellable] == 1 && HouseInfo[h][hLevel] == 13) {
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~House For Sale~n~~w~Description:~p~ 10 ROOMS~n~~w~Price:~g~ $%d~n~~w~Level: ~b~%d ~n~~w~RQ: ~y~/info", HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
				}
			}  if(HouseInfo[h][hSellable] == 0){
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~w~Owner:~g~ %s~n~~w~Level: ~b~ %d~n~", HouseInfo[h][hName], HouseInfo[h][hLevel], HouseInfo[h][hRent]);
					GameTextForPlayer(playerid,string, 1500, 3);
					}
					//
				}
				//
				if(HouseInfo[h][Bus] == 1)
	    {
	for(new h; h<MAX_HOUSES; h++){
			if(HouseInfo[h][hSellable] == 1){
	  			if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~y~Bussines For Sale~n~~r~%s~n~~w~PRICE:~g~ $%d~n~ ~w~Level: ~b~%d ~n~~w~PAYOUT: ~g~$%d", HouseInfo[h][hName], HouseInfo[h][hSell], HouseInfo[h][hLevel], HouseInfo[h][bPay]);
					GameTextForPlayer(playerid,string, 1500, 3);
				}
			} else if(HouseInfo[h][hSellable] == 0){
				if(PlayerToPoint(PTP_RADIUS, playerid, HouseInfo[h][hExitX], HouseInfo[h][hExitY], HouseInfo[h][hExitZ])) {
					format(string, sizeof(string), "~r~%s~n~~w~Level: ~b~%d ~w~~n~ENTER FEE: ~g~$%d ~n~~w~PAYOUT: ~g~$%d", HouseInfo[h][hName], HouseInfo[h][hLevel], HouseInfo[h][Fee], HouseInfo[h][bPay]);
					GameTextForPlayer(playerid,string, 1500, 3);
     }
					//
				} } }
//
}
}

stock DestroyPlayerHouse(playerid, houseid)
{
	new house[64];
    format(house, sizeof(house), "/Houses/%d.ini", houseid);
    if(dini_Exists(house)){
		dini_Remove(house);
		DestroyPickup(HouseInfo[houseid][hPickup]);
		SendClientMessage(playerid, COLOR_WHITE, ".:: [HOUSE]: Тази къща е унищожена.");
	} else return SendClientMessage(playerid, COLOR_WHITE, ".:: [ERROR]: Тази къща не същестлува.");
	return false;
}
stock ChangeVehPlate( vehicleid )
{
    new string[8], string2[4];

    format(string2,sizeof(string2),"%03i", vehicleid );
    format(string,sizeof(string),"LV-%s", string2 );

    SetVehicleNumberPlate( vehicleid, string );

    return 1;
}
stock IsValidVehicleModel(vehiclemodel)
{
    if(vehiclemodel >= 400 && vehiclemodel <= 611)
        return true;
    return false;
}
public IsPlayerRangeOfArea(playerid, Float:minx, Float:miny, Float:maxx, Float:maxy)
{
IsPlayerRangeOfArea(playerid, -2135.883, 136.4459, -2000.689, 353.4189);
SendClientMessage(playerid, COLOR_RED, "WARNING: You are in Workers Zone");
return 1;
}

stock GetVehicleMph( vehicleid )
{
	// Function: GetVehicleSpeed( vehicleid )

	new
	    Float:x,
	    Float:y,
	    Float:z,
		vel;

	GetVehicleVelocity( vehicleid, x, y, z );

vel = floatround( floatsqroot( x*x + y*y + z*z ) * 180 / MPH_KMH ); // MPH

	return vel;
}
stock GetVehicleKmh( vehicleid )
{
	// Function: GetVehicleSpeed( vehicleid )

	new
	    Float:x,
	    Float:y,
	    Float:z,
		vel;

	GetVehicleVelocity( vehicleid, x, y, z );

	vel = floatround( floatsqroot( x*x + y*y + z*z ) * 180 );			// KM/H

	return vel;
}
